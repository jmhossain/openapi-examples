openapi: 3.0.3
info:
  title: BrowserCat API
  description: >-
    Providing purr-fect headless browser access via utility endpoints and direct
    websocket connections.
  version: 1.0.0
  termsOfService: https://www.browsercat.com/terms-of-service
  contact:
    name: BrowserCat Support
    email: support@browsercat.com
    url: https://www.browsercat.com/contact
servers:
  - url: https://api.browsercat.com
tags:
  - description: API key management
    name: API Keys
  - description: Account billing & payments
    name: Billing
  - description: Account usage & metrics
    name: Usage
  - description: OpenAPI utilities
    name: OpenAPI
  - description: Server status
    name: Server
  - description: Direct browser access
    name: Browsers
paths:
  /health:
    get:
      tags:
        - Server
      summary: Show server health
      operationId: Server_checkHealthStatus
      security: []
      description: Lightweight endpoint to check server health.
      responses:
        '200':
          description: Server Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCheckHealthStatusResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCheckHealthStatus404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCheckHealthStatus500Response'
  /metrics:
    get:
      tags:
        - Server
      summary: Show server metrics
      operationId: Server_showMetrics
      security: []
      description: >-
        Returns server metrics in Prometheus format. Use this endpoint to
        monitor server health.
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerShowMetricsResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerShowMetrics500Response'
  /openapi:
    get:
      tags:
        - OpenAPI
      summary: Open OpenAPI docs
      operationId: OpenApi_exploreFunctionality
      security: []
      description: >-
        Open OpenAPI docs explorer. Easily explore functionality, request
        formats, and response types.
      responses:
        '200':
          description: OpenAPI HTML
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/OpenApiExploreFunctionalityResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiExploreFunctionality500Response'
  /openapi.json:
    get:
      tags:
        - OpenAPI
      summary: Retrieve API spec as JSON
      operationId: OpenApi_getSpecJson
      security: []
      description: >-
        Retrieve API spec in JSON format. Use this format to generate types,
        clients, and mocks in your language of choice.
      responses:
        '200':
          description: OpenAPI JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiGetSpecJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiGetSpecJson500Response'
  /openapi.yaml:
    get:
      tags:
        - OpenAPI
      summary: Retrieve API spec as YAML
      operationId: OpenApi_getYamlSpec
      security: []
      description: >-
        Retrieve API spec in YAML format. Use this format to generate types,
        clients, and mocks in your language of choice.
      responses:
        '200':
          description: OpenAPI YAML
          content:
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/OpenApiGetYamlSpecResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenApiGetYamlSpec500Response'
  /connect:
    get:
      tags:
        - Browsers
      summary: Connect to a browser
      operationId: Browsers_establishConnection
      description: >-
        Create a websocket connection to a headless browser. Currently only
        supports Playwright.
      parameters:
        - schema:
            type: string
            enum:
              - ams
              - iad
              - atl
              - bog
              - bos
              - otp
              - maa
              - ord
              - dfw
              - den
              - eze
              - fra
              - gdl
              - hkg
              - jnb
              - lhr
              - lax
              - mad
              - mia
              - yul
              - bom
              - cdg
              - phx
              - qro
              - gig
              - sjc
              - scl
              - gru
              - sea
              - ewr
              - sin
              - arn
              - syd
              - nrt
              - yyz
              - waw
          required: false
          name: region
          in: query
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowsersEstablishConnectionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowsersEstablishConnection401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowsersEstablishConnection403Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowsersEstablishConnection500Response'
  /auth/keys:
    get:
      tags:
        - API Keys
      summary: List API keys
      operationId: ApiKeys_listAll
      description: List all API keys.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPublicList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysListAllResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysListAll401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysListAll403Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysListAll500Response'
    post:
      tags:
        - API Keys
      summary: Create an API key
      operationId: ApiKeys_createApiKey
      description: Create a new API key.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyPost'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeySecret'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysCreateApiKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysCreateApiKey401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysCreateApiKey403Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysCreateApiKey500Response'
  /auth/keys/{keyId}:
    get:
      tags:
        - API Keys
      summary: Retrieve an API key
      operationId: ApiKeys_getKey
      description: Retrieve an API key.
      parameters:
        - schema:
            $ref: '#/components/schemas/KeyId'
          required: true
          name: keyId
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPublic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysGetKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysGetKey401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysGetKey403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysGetKey404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysGetKey500Response'
    put:
      tags:
        - API Keys
      summary: Update an API key
      operationId: ApiKeys_updateApiKey
      description: Update an API key.
      parameters:
        - schema:
            $ref: '#/components/schemas/KeyId'
          required: true
          name: keyId
          in: path
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyPut'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPublic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateApiKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateApiKey401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateApiKey403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateApiKey404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateApiKey500Response'
    patch:
      tags:
        - API Keys
      summary: Patch an API key
      operationId: ApiKeys_updateKey
      description: Patch an API key.
      parameters:
        - schema:
            $ref: '#/components/schemas/KeyId'
          required: true
          name: keyId
          in: path
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyPatch'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPublic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateKey401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateKey403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateKey404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysUpdateKey500Response'
    delete:
      tags:
        - API Keys
      summary: Revoke an API key
      operationId: ApiKeys_revokeKey
      description: Revoke an API key.
      parameters:
        - schema:
            $ref: '#/components/schemas/KeyId'
          required: true
          name: keyId
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyPublic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysRevokeKeyResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysRevokeKey401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysRevokeKey403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysRevokeKey404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysRevokeKey500Response'
  /usage/buckets:
    get:
      tags:
        - Usage
      summary: List aggregate account usage
      operationId: Usage_listAggregateAccountUsage
      description: List account usage within a time range.
      parameters:
        - schema:
            description: Limit the number of results
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          required: false
          name: limit
          in: query
        - schema:
            description: Offset the returned results by this many
            type:
              - integer
              - 'null'
            minimum: 0
            default: 0
          required: false
          name: offset
          in: query
        - schema:
            description: Only return results after this date (inclusive)
            type: string
            format: date-time
          required: false
          name: afterDate
          in: query
        - schema:
            description: Only return results before this date (exclusive)
            type: string
            format: date-time
          required: false
          name: beforeDate
          in: query
        - schema:
            type: string
            enum:
              - minute
              - hour
              - day
              - week
          required: false
          name: unit
          in: query
        - schema:
            anyOf:
              - type: string
                minLength: 0
                maxLength: 128
              - type: string
                enum:
                  - 'null'
          required: false
          name: userId
          in: query
        - schema:
            anyOf:
              - type: string
                pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
              - type: string
                enum:
                  - 'null'
          required: false
          name: keyId
          in: query
        - schema:
            type: string
            enum:
              - api
              - ws
          required: false
          name: method
          in: query
        - schema:
            type: string
          required: false
          name: endpoint
          in: query
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageBucketList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListAggregateAccountUsageResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListAggregateAccountUsage401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListAggregateAccountUsage403Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListAggregateAccountUsage500Response'
  /usage/sessions:
    get:
      tags:
        - Usage
      summary: List sessions within range
      operationId: Usage_getSessionRange
      description: List all sessions within a time range.
      parameters:
        - schema:
            description: Limit the number of results
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          required: false
          name: limit
          in: query
        - schema:
            description: Offset the returned results by this many
            type:
              - integer
              - 'null'
            minimum: 0
            default: 0
          required: false
          name: offset
          in: query
        - schema:
            description: Only return results after this date (inclusive)
            type: string
            format: date-time
          required: false
          name: afterDate
          in: query
        - schema:
            description: Only return results before this date (exclusive)
            type: string
            format: date-time
          required: false
          name: beforeDate
          in: query
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageSessionPublicList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetSessionRangeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetSessionRange401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetSessionRange403Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetSessionRange500Response'
  /usage/sessions/{sessionId}:
    get:
      tags:
        - Usage
      summary: Retrieve data for a request
      operationId: Usage_getRequestData
      description: Retrieve data for a particular request.
      parameters:
        - schema:
            $ref: '#/components/schemas/UsageSessionId'
          required: true
          name: sessionId
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageSessionPublic'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetRequestDataResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetRequestData401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetRequestData403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetRequestData404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetRequestData500Response'
  /usage/sessions/{sessionId}/events:
    get:
      tags:
        - Usage
      summary: List events for a request
      operationId: Usage_listRequestEvents
      description: List all events within a particular request.
      parameters:
        - schema:
            $ref: '#/components/schemas/UsageSessionId'
          required: true
          name: sessionId
          in: path
        - schema:
            description: Limit the number of results
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          required: false
          name: limit
          in: query
        - schema:
            description: Offset the returned results by this many
            type:
              - integer
              - 'null'
            minimum: 0
            default: 0
          required: false
          name: offset
          in: query
        - schema:
            description: Only return results after this date (inclusive)
            type: string
            format: date-time
          required: false
          name: afterDate
          in: query
        - schema:
            description: Only return results before this date (exclusive)
            type: string
            format: date-time
          required: false
          name: beforeDate
          in: query
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageEventList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListRequestEventsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListRequestEvents401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListRequestEvents403Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageListRequestEvents500Response'
  /usage/sessions/{sessionId}/events/{eventId}:
    get:
      tags:
        - Usage
      summary: Retrieve data for an event
      operationId: Usage_getEventData
      description: Retrieve a particular event for a request.
      parameters:
        - schema:
            $ref: '#/components/schemas/UsageSessionId'
          required: true
          name: sessionId
          in: path
        - schema:
            $ref: '#/components/schemas/UsageEventId'
          required: true
          name: eventId
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageEvent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetEventDataResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetEventData401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetEventData403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetEventData404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageGetEventData500Response'
  /billing/subscriptions:
    get:
      tags:
        - Billing
      summary: List subscriptions within range
      operationId: Billing_listSubscriptionsWithinRange
      description: List all current and previous subscriptions within a given time range.
      parameters:
        - schema:
            description: Limit the number of results
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          required: false
          name: limit
          in: query
        - schema:
            description: Offset the returned results by this many
            type:
              - integer
              - 'null'
            minimum: 0
            default: 0
          required: false
          name: offset
          in: query
        - schema:
            description: Only return results after this date (inclusive)
            type: string
            format: date-time
          required: false
          name: afterDate
          in: query
        - schema:
            description: Only return results before this date (exclusive)
            type: string
            format: date-time
          required: false
          name: beforeDate
          in: query
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BillingListSubscriptionsWithinRangeResponse
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BillingListSubscriptionsWithinRange401Response
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BillingListSubscriptionsWithinRange403Response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BillingListSubscriptionsWithinRange500Response
  /billing/subscriptions/current:
    get:
      tags:
        - Billing
      summary: Get active subscription
      operationId: Billing_getActiveSubscription
      description: Get the primary, active subscription.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetActiveSubscriptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetActiveSubscription401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetActiveSubscription403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetActiveSubscription404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetActiveSubscription500Response'
  /billing/subscriptions/{subId}:
    get:
      tags:
        - Billing
      summary: Get specific subscription
      operationId: Billing_getSpecificSubscription
      description: Get specific subscription details.
      parameters:
        - schema:
            $ref: '#/components/schemas/SubId'
          required: true
          name: subId
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificSubscriptionResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificSubscription401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificSubscription403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificSubscription404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificSubscription500Response'
  /billing/invoices:
    get:
      tags:
        - Billing
      summary: List invoices within range
      operationId: Billing_listInvoicesRange
      description: >-
        List all invoices (including failed and refunds) within a given time
        range.
      parameters:
        - schema:
            description: Limit the number of results
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          required: false
          name: limit
          in: query
        - schema:
            description: Offset the returned results by this many
            type:
              - integer
              - 'null'
            minimum: 0
            default: 0
          required: false
          name: offset
          in: query
        - schema:
            description: Only return results after this date (inclusive)
            type: string
            format: date-time
          required: false
          name: afterDate
          in: query
        - schema:
            description: Only return results before this date (exclusive)
            type: string
            format: date-time
          required: false
          name: beforeDate
          in: query
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingListInvoicesRangeResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingListInvoicesRange401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingListInvoicesRange403Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingListInvoicesRange500Response'
  /billing/invoices/{invId}:
    get:
      tags:
        - Billing
      summary: Get specific invoice
      operationId: Billing_getSpecificInvoice
      description: Get specific invoice info.
      parameters:
        - schema:
            $ref: '#/components/schemas/InvId'
          required: true
          name: invId
          in: path
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificInvoiceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificInvoice401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificInvoice403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificInvoice404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetSpecificInvoice500Response'
  /billing/invoices/{invId}.pdf:
    get:
      tags:
        - Billing
      summary: Get PDF receipt for specific invoice
      operationId: Billing_getInvoicePdf
      description: Get specific invoice PDF.
      parameters:
        - schema:
            $ref: '#/components/schemas/InvId'
          required: true
          name: invId
          in: path
      responses:
        '200':
          description: Success
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/BillingGetInvoicePdfResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetInvoicePdf400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetInvoicePdf401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetInvoicePdf403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetInvoicePdf404Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingGetInvoicePdf500Response'
components:
  parameters: {}
  securitySchemes:
    jwtCookie:
      description: 'JWT in cookies. Set cookie "__SESSION": "{jwt}".'
      type: apiKey
      in: cookie
      name: __SESSION
    jwtHeader:
      description: 'JWT in header. Set header "Authorization": "Bearer {jwt}".'
      type: http
      scheme: bearer
      bearerFormat: JWT
    keyHeader:
      description: 'API key auth. Set header "Api-Key": "{key}".'
      type: apiKey
      in: header
      name: Api-Key
  schemas:
    BadRequestError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    NotFoundError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UnauthorizedError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ForbiddenError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    PaymentRequiredError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 402
        error:
          type: string
          enum:
            - Payment Required
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    TooManyRequestsError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 429
        error:
          type: string
          enum:
            - Too Many Requests
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    InternalServerErrorError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ServiceUnavailableError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 503
        error:
          type: string
          enum:
            - Service Unavailable
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ProxyAuthenticationRequiredError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 407
        error:
          type: string
          enum:
            - Proxy Authentication Required
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BadGatewayError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 502
        error:
          type: string
          enum:
            - Bad Gateway
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    GatewayTimeoutError:
      type: object
      properties:
        status:
          type: number
          enum:
            - 504
        error:
          type: string
          enum:
            - Gateway Timeout
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    KeyId:
      description: Key ID
      type: string
    KeyPublic:
      type: object
      properties:
        keyId:
          $ref: '#/components/schemas/KeyId'
        name:
          type: string
          minLength: 0
          maxLength: 128
        role:
          type: string
          enum:
            - member
            - admin
        lastFour:
          type: string
          minLength: 4
          maxLength: 4
        expiredAt:
          type: string
          format: date-time
      required:
        - keyId
        - name
        - role
        - lastFour
        - expiredAt
    KeyPublicList:
      type: array
      items:
        $ref: '#/components/schemas/KeyPublic'
    KeySecret:
      type: object
      properties:
        keyId:
          $ref: '#/components/schemas/KeyId'
        name:
          type: string
          minLength: 0
          maxLength: 128
        role:
          type: string
          enum:
            - member
            - admin
        lastFour:
          type: string
          minLength: 4
          maxLength: 4
        expiredAt:
          type: string
          format: date-time
        secret:
          type: string
      required:
        - keyId
        - name
        - role
        - lastFour
        - expiredAt
        - secret
    KeyPost:
      type: object
      properties:
        name:
          type: string
          minLength: 0
          maxLength: 128
        role:
          type: string
          enum:
            - member
            - admin
        expiredAt:
          type: string
          format: date-time
      required:
        - name
    KeyPut:
      type: object
      properties:
        name:
          type: string
          minLength: 0
          maxLength: 128
        role:
          type: string
          enum:
            - member
            - admin
        expiredAt:
          type: string
          format: date-time
      required:
        - name
        - role
        - expiredAt
    KeyPatch:
      type: object
      properties:
        name:
          type: string
          minLength: 0
          maxLength: 128
        role:
          type: string
          enum:
            - member
            - admin
        expiredAt:
          type: string
          format: date-time
    UsageBucket:
      type: object
      properties:
        usageBucketId:
          type: string
          pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
        keyId:
          type:
            - string
            - 'null'
          pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
        clerkOrgId:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 128
        clerkUserId:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 128
        bucket:
          type: string
          format: date-time
        method:
          type: string
          enum:
            - api
            - ws
        endpoint:
          type: string
        credits:
          type: integer
        countSuccess:
          type: integer
        countFailure:
          type: integer
        durationSuccess:
          type: integer
        durationFailure:
          type: integer
        durationMin:
          type: integer
        durationMax:
          type: integer
        durationMean:
          type: integer
        durationStd:
          type: integer
      required:
        - usageBucketId
        - keyId
        - clerkOrgId
        - clerkUserId
        - bucket
        - method
        - endpoint
        - credits
        - countSuccess
        - countFailure
        - durationSuccess
        - durationFailure
        - durationMin
        - durationMax
        - durationMean
        - durationStd
    UsageBucketList:
      type: array
      items:
        $ref: '#/components/schemas/UsageBucket'
    UsageSessionId:
      description: UsageSession ID
      type: string
    UsageSessionPublic:
      type: object
      properties:
        usageSessionId:
          type: string
          pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
        clerkOrgId:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 128
        clerkUserId:
          type:
            - string
            - 'null'
          minLength: 0
          maxLength: 128
        keyId:
          type:
            - string
            - 'null'
          pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
        method:
          type: string
          enum:
            - api
            - ws
        endpoint:
          type: string
        status:
          type: string
          enum:
            - pending
            - success
            - failure
        machineId:
          type: string
          maxLength: 64
        machineRegion:
          type: string
          maxLength: 64
        browserType:
          type: string
          enum:
            - chromium
            - firefox
            - webkit
            - chrome
            - chrome-beta
            - msedge
            - msedge-beta
            - msedge-dev
        browserVersion:
          type: string
          maxLength: 64
        agentType:
          type: string
          enum:
            - playwright
            - puppeteer
            - selenium
        agentVersion:
          type: string
          maxLength: 64
        startedAt:
          type: string
          format: date-time
        endedAt:
          type:
            - string
            - 'null'
          format: date-time
        sessionId:
          $ref: '#/components/schemas/UsageSessionId'
      required:
        - usageSessionId
        - clerkOrgId
        - clerkUserId
        - keyId
        - method
        - endpoint
        - status
        - machineId
        - machineRegion
        - browserType
        - browserVersion
        - agentType
        - agentVersion
        - startedAt
        - endedAt
        - sessionId
    UsageSessionPublicList:
      type: array
      items:
        $ref: '#/components/schemas/UsageSessionPublic'
    UsageEventId:
      description: UsageEvent ID
      type: string
    UsageEvent:
      type: object
      properties:
        usageEventId:
          type: string
          pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
        usageSessionId:
          type: string
          pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
        type:
          type: string
          maxLength: 64
        status:
          type: string
          enum:
            - pending
            - success
            - failure
        data: {}
        sentAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        sessionId:
          $ref: '#/components/schemas/UsageSessionId'
        eventId:
          $ref: '#/components/schemas/UsageEventId'
      required:
        - usageEventId
        - usageSessionId
        - type
        - status
        - sentAt
        - createdAt
        - sessionId
        - eventId
    UsageEventList:
      type: array
      items:
        $ref: '#/components/schemas/UsageEvent'
    SubId:
      description: Subscription ID
      type: string
    Subscription:
      type: object
      properties:
        subId:
          $ref: '#/components/schemas/SubId'
        tier:
          type: string
          enum:
            - hobby
            - business
            - enterprise
        status:
          type: string
          enum:
            - incomplete
            - incomplete_expired
            - active
            - trialing
            - past_due
            - unpaid
            - canceled
            - paused
        currency:
          type: string
          minLength: 3
          maxLength: 3
        periodUnit:
          type: string
          enum:
            - day
            - week
            - month
            - year
        periodCount:
          type: integer
          minimum: 1
        periodStartsAt:
          type: string
          format: date-time
        periodEndsAt:
          type: string
          format: date-time
        anchoredAt:
          type: string
          format: date-time
        canceledAt:
          type:
            - string
            - 'null'
          format: date-time
        resumedAt:
          type:
            - string
            - 'null'
          format: date-time
        pausedAt:
          type:
            - string
            - 'null'
          format: date-time
        stripeSubId:
          type: string
        stripeCusId:
          type:
            - string
            - 'null'
      required:
        - subId
        - tier
        - status
        - currency
        - periodUnit
        - periodCount
        - periodStartsAt
        - periodEndsAt
        - anchoredAt
        - canceledAt
        - resumedAt
        - pausedAt
        - stripeSubId
        - stripeCusId
    SubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    InvId:
      description: Invoice ID
      type: string
    Invoice:
      type: object
      properties:
        invId:
          $ref: '#/components/schemas/InvId'
        subId:
          type:
            - string
            - 'null'
          pattern: ^[\da-f]{8}(?:-[\da-f]{4}){3}-[\da-f]{12}$
        status:
          type: string
          enum:
            - draft
            - open
            - void
            - paid
            - uncollectible
        error:
          type:
            - string
            - 'null'
        currency:
          type: string
          minLength: 3
          maxLength: 3
        amountDue:
          type: integer
          minimum: 0
        amountPaid:
          type: integer
          minimum: 0
        total:
          type: integer
          minimum: 0
        totalDiscount:
          type: integer
          minimum: 0
        totalTax:
          type: integer
          minimum: 0
        billedAt:
          type: string
          format: date-time
        stripeInvId:
          type: string
        stripeSubId:
          type:
            - string
            - 'null'
        stripeCusId:
          type:
            - string
            - 'null'
      required:
        - invId
        - subId
        - status
        - error
        - currency
        - amountDue
        - amountPaid
        - total
        - totalDiscount
        - totalTax
        - billedAt
        - stripeInvId
        - stripeSubId
        - stripeCusId
    InvoiceList:
      type: array
      items:
        $ref: '#/components/schemas/Invoice'
    ServerCheckHealthStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - healthy
            - degraded
            - unhealthy
        uptime:
          description: Server uptime in seconds
          type: number
      required:
        - status
        - uptime
    ServerCheckHealthStatus404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ServerCheckHealthStatus500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ServerShowMetricsResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ServerShowMetrics500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    OpenApiExploreFunctionalityResponse:
      description: OpenAPI HTML
      type: string
    OpenApiExploreFunctionality500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    OpenApiGetSpecJsonResponse:
      description: OpenAPI JSON
      type: object
      properties:
        openapi:
          type: string
      required:
        - openapi
      additionalProperties: true
    OpenApiGetSpecJson500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    OpenApiGetYamlSpecResponse:
      description: OpenAPI YAML
      type: object
      properties:
        openapi:
          type: string
      required:
        - openapi
      additionalProperties: true
    OpenApiGetYamlSpec500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BrowsersEstablishConnectionResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    BrowsersEstablishConnection401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BrowsersEstablishConnection403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BrowsersEstablishConnection500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysListAllResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    ApiKeysListAll401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysListAll403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysListAll500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysCreateApiKeyResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    ApiKeysCreateApiKey401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysCreateApiKey403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysCreateApiKey500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysRevokeKeyResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    ApiKeysRevokeKey401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysRevokeKey403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysRevokeKey404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysRevokeKey500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysGetKeyResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    ApiKeysGetKey401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysGetKey403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysGetKey404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysGetKey500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateKeyResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    ApiKeysUpdateKey401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateKey403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateKey404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateKey500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateApiKeyResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    ApiKeysUpdateApiKey401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateApiKey403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateApiKey404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    ApiKeysUpdateApiKey500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageListAggregateAccountUsageResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    UsageListAggregateAccountUsage401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageListAggregateAccountUsage403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageListAggregateAccountUsage500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetSessionRangeResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    UsageGetSessionRange401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetSessionRange403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetSessionRange500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetRequestDataResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    UsageGetRequestData401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetRequestData403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetRequestData404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetRequestData500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageListRequestEventsResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    UsageListRequestEvents401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageListRequestEvents403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageListRequestEvents500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetEventDataResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    UsageGetEventData401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetEventData403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetEventData404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    UsageGetEventData500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingListSubscriptionsWithinRangeResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    BillingListSubscriptionsWithinRange401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingListSubscriptionsWithinRange403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingListSubscriptionsWithinRange500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetActiveSubscriptionResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    BillingGetActiveSubscription401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetActiveSubscription403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetActiveSubscription404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetActiveSubscription500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificSubscriptionResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    BillingGetSpecificSubscription401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificSubscription403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificSubscription404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificSubscription500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingListInvoicesRangeResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    BillingListInvoicesRange401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingListInvoicesRange403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingListInvoicesRange500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificInvoiceResponse:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    BillingGetSpecificInvoice401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificInvoice403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificInvoice404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetSpecificInvoice500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetInvoicePdfResponse:
      description: Invoice PDF
      type: string
      format: binary
    BillingGetInvoicePdf400Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 400
        error:
          type: string
          enum:
            - Bad Request
        message:
          description: Suggestions for debugging the issue
          type: string
        invalid:
          description: Where the validation error occurred
          type: string
          enum:
            - body
            - path
            - query
        fields:
          description: Validation errors, when available
          type: array
          items:
            type: object
            properties:
              code:
                type: string
              expected:
                type: string
              received:
                type: string
              validation:
                type: string
              path:
                type: array
                items:
                  anyOf:
                    - type: string
                    - type: number
              message:
                type: string
            required:
              - code
              - path
      required:
        - status
        - error
        - message
    BillingGetInvoicePdf401Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 401
        error:
          type: string
          enum:
            - Unauthorized
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetInvoicePdf403Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 403
        error:
          type: string
          enum:
            - Forbidden
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetInvoicePdf404Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 404
        error:
          type: string
          enum:
            - Not Found
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
    BillingGetInvoicePdf500Response:
      type: object
      properties:
        status:
          type: number
          enum:
            - 500
        error:
          type: string
          enum:
            - Internal Server Error
        message:
          description: Suggestions for debugging the issue
          type: string
      required:
        - status
        - error
        - message
security:
  - jwtCookie: []
  - keyHeader: []
externalDocs:
  description: BrowserCat Docs
  url: https://www.browsercat.com/docs
webhooks: {}
