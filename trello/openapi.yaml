openapi: 3.0.0
info:
  title: Trello
  description: |-
    This document describes the REST API of Trello as published by Trello.com.
     - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>
     - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
  version: '1.0'
  contact:
    name: Trello
    url: https://trello.com/home
  license:
    name: 'Trello : Terms of Service'
    url: https://trello.com/legal
  termsOfService: https://trello.com/legal
  x-apisguru-categories:
    - collaboration
  x-logo:
    url: >-
      https://d2k1ftgv7pobq7.cloudfront.net/meta/p/res/images/c13d1cd96a2cff30f0460a5e1860c5ea/header-logo-blue.svg
  x-origin:
    - version: '3.0'
      format: openapi
      url: >-
        https://raw.githubusercontent.com/APIs-guru/unofficial_openapi_specs/master/trello.com/1.0/swagger.yaml
  x-providerName: trello.com
  x-unofficialSpec: true
servers:
  - url: https://trello.com/1
tags:
  - description: https://trello.com/docs/api/board/index.html
    name: board
  - description: https://trello.com/docs/api/member/index.html
    name: member
  - description: https://trello.com/docs/api/card/index.html
    name: card
  - description: https://trello.com/docs/api/organization/index.html
    name: organization
  - description: https://trello.com/docs/api/action/index.html
    name: action
  - description: https://trello.com/docs/api/notification/index.html
    name: notification
  - description: https://trello.com/docs/api/list/index.html
    name: list
  - description: https://trello.com/docs/api/checklist/index.html
    name: checklist
  - description: https://trello.com/docs/api/token/index.html
    name: token
  - description: https://trello.com/docs/api/webhook/index.html
    name: webhook
  - description: https://trello.com/docs/api/label/index.html
    name: label
  - description: https://trello.com/docs/api/session/index.html
    name: session
  - description: https://trello.com/docs/api/search/index.html
    name: search
  - description: https://trello.com/docs/api/batch/index.html
    name: batch
  - description: https://trello.com/docs/api/type/index.html
    name: type
paths:
  /actions/{idAction}:
    delete:
      tags:
        - action
      summary: deleteActionsByIdAction()
      operationId: Action_removeByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - action
      summary: getActionsByIdAction()
      operationId: Action_getById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - action
      summary: updateActionsByIdAction()
      operationId: Action_updateByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Actions" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/board:
    get:
      tags:
        - action
      summary: getActionsBoardByIdAction()
      operationId: Action_getBoardByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/board/{field}:
    get:
      tags:
        - action
      summary: getActionsBoardByIdActionByField()
      operationId: Action_getBoardByIdActionByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/card:
    get:
      tags:
        - action
      summary: getActionsCardByIdAction()
      operationId: Action_getCardByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/card/{field}:
    get:
      tags:
        - action
      summary: getActionsCardByIdActionByField()
      operationId: Action_getCardByIdActionByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/display:
    get:
      tags:
        - action
      summary: getActionsDisplayByIdAction()
      operationId: Action_getDisplayByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/entities:
    get:
      tags:
        - action
      summary: getActionsEntitiesByIdAction()
      operationId: Action_getEntitiesByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/list:
    get:
      tags:
        - action
      summary: getActionsListByIdAction()
      operationId: Action_getListByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/list/{field}:
    get:
      tags:
        - action
      summary: getActionsListByIdActionByField()
      operationId: Action_getListByIdActionByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/member:
    get:
      tags:
        - action
      summary: getActionsMemberByIdAction()
      operationId: Action_getMemberByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/member/{field}:
    get:
      tags:
        - action
      summary: getActionsMemberByIdActionByField()
      operationId: Action_getMemberByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/memberCreator:
    get:
      tags:
        - action
      summary: getActionsMemberCreatorByIdAction()
      operationId: Action_getMemberCreatorByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/memberCreator/{field}:
    get:
      tags:
        - action
      summary: getActionsMemberCreatorByIdActionByField()
      operationId: Action_getMemberByIdActionByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/organization:
    get:
      tags:
        - action
      summary: getActionsOrganizationByIdAction()
      operationId: Action_getOrganizationByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/organization/{field}:
    get:
      tags:
        - action
      summary: getActionsOrganizationByIdActionByField()
      operationId: Action_getOrgByIdActionByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/text:
    put:
      tags:
        - action
      summary: updateActionsTextByIdAction()
      operationId: Action_updateTextByIdAction
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Actions Text" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions_text'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /actions/{idAction}/{field}:
    get:
      tags:
        - action
      summary: getActionsByIdActionByField()
      operationId: Action_getByIdActionField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /batch:
    get:
      tags:
        - batch
      summary: getBatch()
      operationId: Batch_getData
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: list of API v1 GET routes, not including the version prefix
          in: query
          name: urls
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards:
    post:
      tags:
        - board
      summary: addBoards()
      operationId: Board_createBoard
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Boards" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}:
    get:
      tags:
        - board
      summary: getBoardsByIdBoard()
      operationId: Board_getById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: actions_since
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: action_member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: action_member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: action_memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: action_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: card_attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: card_attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all or none'
          in: query
          name: card_checklists
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: card_stickers
          required: false
          schema:
            type: string
        - description: 'One of: mine or none'
          in: query
          name: boardStars
          required: false
          schema:
            default: none
            type: string
        - description: 'One of: all or none'
          in: query
          name: labels
          required: false
          schema:
            default: none
            type: string
        - description: 'all or a comma-separated list of: color, idBoard, name or uses'
          in: query
          name: label_fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 0 to 1000
          in: query
          name: labels_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: lists
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: memberships_member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberships_member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: 'One of: admins, all, none, normal or owners'
          in: query
          name: members
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, initials, fullName, username and confirmed
            type: string
        - description: 'One of: admins, all, none, normal or owners'
          in: query
          name: membersInvited
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: membersInvited_fields
          required: false
          schema:
            default: avatarHash, initials, fullName and username
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: 'all or a comma-separated list of: idBoard, idCard, name or pos'
          in: query
          name: checklist_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: organization_memberships
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: myPrefs
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: >-
              name, desc, descData, closed, idOrganization, pinned, url,
              shortUrl, prefs and labelNames
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - board
      summary: updateBoardsByIdBoard()
      operationId: Board_updateById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/actions:
    get:
      tags:
        - board
      summary: getBoardsActionsByIdBoard()
      operationId: Board_listActionsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: '0'
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/boardStars:
    get:
      tags:
        - board
      summary: getBoardsBoardStarsByIdBoard()
      operationId: Board_getBoardStarsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: 'One of: mine or none'
          in: query
          name: filter
          required: false
          schema:
            default: mine
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/calendarKey/generate:
    post:
      tags:
        - board
      summary: addBoardsCalendarKeyGenerateByIdBoard()
      operationId: Board_generateCalendarKeyById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/cards:
    get:
      tags:
        - board
      summary: getBoardsCardsByIdBoard()
      operationId: Board_getCardsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: a number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/cards/{filter}:
    get:
      tags:
        - board
      summary: getBoardsCardsByIdBoardByFilter()
      operationId: Board_filterCardsByIdBoard
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/cards/{idCard}:
    get:
      tags:
        - board
      summary: getBoardsCardsByIdBoardByIdCard()
      operationId: Board_getCardsByIdBoardByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: idCard
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: action_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, initials, fullName and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'all or a comma-separated list of: idCheckItem or state'
          in: query
          name: checkItemState_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: labels
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: 'all or a comma-separated list of: idBoard, idCard, name or pos'
          in: query
          name: checklist_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/checklists:
    get:
      tags:
        - board
      summary: getBoardsChecklistsByIdBoard()
      operationId: Board_getChecklistsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all or none'
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            type: string
        - description: 'all or a comma-separated list of: name, nameData, pos, state or type'
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        - description: 'One of: all or none'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: 'all or a comma-separated list of: idBoard, idCard, name or pos'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - board
      summary: addBoardsChecklistsByIdBoard()
      operationId: Board_addChecklists
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Checklists" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_checklists'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/closed:
    put:
      tags:
        - board
      summary: updateBoardsClosedByIdBoard()
      operationId: Board_updateClosedById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Closed" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_closed'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/deltas:
    get:
      tags:
        - board
      summary: getBoardsDeltasByIdBoard()
      operationId: Board_getDeltasByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: A valid tag for subscribing
          in: query
          name: tags
          required: true
          schema:
            type: string
        - description: a number from -1 to Infinity
          in: query
          name: ixLastUpdate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/desc:
    put:
      tags:
        - board
      summary: updateBoardsDescByIdBoard()
      operationId: Board_updateDescriptionByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Desc" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_desc'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/emailKey/generate:
    post:
      tags:
        - board
      summary: addBoardsEmailKeyGenerateByIdBoard()
      operationId: Board_generateEmailKey
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/idOrganization:
    put:
      tags:
        - board
      summary: updateBoardsIdOrganizationByIdBoard()
      operationId: Board_updateOrganizationByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Id Organization" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_idOrganization'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labelNames/blue:
    put:
      tags:
        - board
      summary: updateBoardsLabelNamesBlueByIdBoard()
      operationId: Board_updateLabelNamesBlueById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Label Names Blue" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_blue'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labelNames/green:
    put:
      tags:
        - board
      summary: updateBoardsLabelNamesGreenByIdBoard()
      operationId: Board_updateLabelNamesGreenByIdBoardPut
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Label Names Green" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_green'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labelNames/orange:
    put:
      tags:
        - board
      summary: updateBoardsLabelNamesOrangeByIdBoard()
      operationId: Board_updateLabelNamesOrangeByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Label Names Orange" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_orange'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labelNames/purple:
    put:
      tags:
        - board
      summary: updateBoardsLabelNamesPurpleByIdBoard()
      operationId: Board_updateLabelNamesPurpleByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Label Names Purple" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_purple'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labelNames/red:
    put:
      tags:
        - board
      summary: updateBoardsLabelNamesRedByIdBoard()
      operationId: Board_updateLabelNamesRed
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Label Names Red" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_red'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labelNames/yellow:
    put:
      tags:
        - board
      summary: updateBoardsLabelNamesYellowByIdBoard()
      operationId: Board_updateLabelNamesYellowByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Label Names Yellow" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labelNames_yellow'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labels:
    get:
      tags:
        - board
      summary: getBoardsLabelsByIdBoard()
      operationId: Board_listLabelsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: 'all or a comma-separated list of: color, idBoard, name or uses'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - board
      summary: addBoardsLabelsByIdBoard()
      operationId: Board_addLabelsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Labels" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_labels'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/labels/{idLabel}:
    get:
      tags:
        - board
      summary: getBoardsLabelsByIdBoardByIdLabel()
      operationId: Board_getLabelsByIdBoardByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: 'all or a comma-separated list of: color, idBoard, name or uses'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/lists:
    get:
      tags:
        - board
      summary: getBoardsListsByIdBoard()
      operationId: Board_getListsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: filter
          required: false
          schema:
            default: open
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - board
      summary: addBoardsListsByIdBoard()
      operationId: Board_createListsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Lists" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_lists'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/lists/{filter}:
    get:
      tags:
        - board
      summary: getBoardsListsByIdBoardByFilter()
      operationId: Board_getListsByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/markAsViewed:
    post:
      tags:
        - board
      summary: addBoardsMarkAsViewedByIdBoard()
      operationId: Board_markAsViewedByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/members:
    get:
      tags:
        - board
      summary: getBoardsMembersByIdBoard()
      operationId: Board_getMembersByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: 'One of: admins, all, none, normal or owners'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: true or false ; works for premium organizations only.
          in: query
          name: activity
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - board
      summary: updateBoardsMembersByIdBoard()
      operationId: Board_updateMembersByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/boards_members'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/members/{filter}:
    get:
      tags:
        - board
      summary: getBoardsMembersByIdBoardByFilter()
      operationId: Board_getMembersByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/members/{idMember}:
    delete:
      tags:
        - board
      summary: deleteBoardsMembersByIdBoardByIdMember()
      operationId: Board_removeMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - board
      summary: updateBoardsMembersByIdBoardByIdMember()
      operationId: Board_updateMembersByIdBoardByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/boards_members'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/members/{idMember}/cards:
    get:
      tags:
        - board
      summary: getBoardsMembersCardsByIdBoardByIdMember()
      operationId: Board_getMembersCardsByIdBoardByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: name, desc, closed, idOrganization, pinned, url and prefs
            type: string
        - description: ' true or false'
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/membersInvited:
    get:
      tags:
        - board
      summary: getBoardsMembersInvitedByIdBoard()
      operationId: Board_getMembersInvitedByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/membersInvited/{field}:
    get:
      tags:
        - board
      summary: getBoardsMembersInvitedByIdBoardByField()
      operationId: Board_getMembersInvitedByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/memberships:
    get:
      tags:
        - board
      summary: getBoardsMembershipsByIdBoard()
      operationId: Board_getMembershipsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/memberships/{idMembership}:
    get:
      tags:
        - board
      summary: getBoardsMembershipsByIdBoardByIdMembership()
      operationId: Board_getMembershipsByIdBoardByIdMembership
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: idMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - board
      summary: updateBoardsMembershipsByIdBoardByIdMembership()
      operationId: Board_updateMembershipsByIdBoardByIdMembership
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: idMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Memberships" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_memberships'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs:
    get:
      tags:
        - board
      summary: getBoardsMyPrefsByIdBoard()
      operationId: Board_getMyPrefsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs/emailPosition:
    put:
      tags:
        - board
      summary: updateBoardsMyPrefsEmailPositionByIdBoard()
      operationId: Board_updateMyPrefsEmailPositionByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "My Prefs Email Position" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_emailPosition'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs/idEmailList:
    put:
      tags:
        - board
      summary: updateBoardsMyPrefsIdEmailListByIdBoard()
      operationId: Board_updateMyPrefsEmailListByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "My Prefs Id Email List" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_idEmailList'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs/showListGuide:
    put:
      tags:
        - board
      summary: updateBoardsMyPrefsShowListGuideByIdBoard()
      operationId: Board_updateMyPrefsShowListGuideByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "My Prefs Show List Guide" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showListGuide'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs/showSidebar:
    put:
      tags:
        - board
      summary: updateBoardsMyPrefsShowSidebarByIdBoard()
      operationId: Board_updateMyPrefsShowSidebar
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "My Prefs Show Sidebar" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebar'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs/showSidebarActivity:
    put:
      tags:
        - board
      summary: updateBoardsMyPrefsShowSidebarActivityByIdBoard()
      operationId: Board_updateMyPrefsShowSidebarActivityByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "My Prefs Show Sidebar Activity" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebarActivity'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs/showSidebarBoardActions:
    put:
      tags:
        - board
      summary: updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard()
      operationId: Board_updateMyPrefsShowSidebarActionsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "My Prefs Show Sidebar Board Actions" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebarBoardActions'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/myPrefs/showSidebarMembers:
    put:
      tags:
        - board
      summary: updateBoardsMyPrefsShowSidebarMembersByIdBoard()
      operationId: Board_updatePrefsShowSidebarMembersById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "My Prefs Show Sidebar Members" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/myPrefs_showSidebarMembers'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/name:
    put:
      tags:
        - board
      summary: updateBoardsNameByIdBoard()
      operationId: Board_updateNameById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/organization:
    get:
      tags:
        - board
      summary: getBoardsOrganizationByIdBoard()
      operationId: Board_getOrganizationById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/organization/{field}:
    get:
      tags:
        - board
      summary: getBoardsOrganizationByIdBoardByField()
      operationId: Board_getOrganizationByIdBoardByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/powerUps:
    post:
      tags:
        - board
      summary: addBoardsPowerUpsByIdBoard()
      operationId: Board_addPowerUpsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Power Ups" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_powerUps'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/powerUps/{powerUp}:
    delete:
      tags:
        - board
      summary: deleteBoardsPowerUpsByIdBoardByPowerUp()
      operationId: Board_removePowerUp
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: powerUp
          in: path
          name: powerUp
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/background:
    put:
      tags:
        - board
      summary: updateBoardsPrefsBackgroundByIdBoard()
      operationId: Board_updatePrefsBackgroundByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Background" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_background'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/calendarFeedEnabled:
    put:
      tags:
        - board
      summary: updateBoardsPrefsCalendarFeedEnabledByIdBoard()
      operationId: Board_updatePrefsCalendarFeedEnabledById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Calendar Feed Enabled" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_calendarFeedEnabled'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/cardAging:
    put:
      tags:
        - board
      summary: updateBoardsPrefsCardAgingByIdBoard()
      operationId: Board_updatePrefsCardAgingByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Card Aging" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_cardAging'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/cardCovers:
    put:
      tags:
        - board
      summary: updateBoardsPrefsCardCoversByIdBoard()
      operationId: Board_updatePrefsCardCoversByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Card Covers" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_cardCovers'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/comments:
    put:
      tags:
        - board
      summary: updateBoardsPrefsCommentsByIdBoard()
      operationId: Board_updatePrefsCommentsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Comments" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_comments'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/invitations:
    put:
      tags:
        - board
      summary: updateBoardsPrefsInvitationsByIdBoard()
      operationId: Board_updatePrefsInvitationsByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Invitations" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_invitations'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/permissionLevel:
    put:
      tags:
        - board
      summary: updateBoardsPrefsPermissionLevelByIdBoard()
      operationId: Board_updatePrefsPermissionLevelById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/prefs_permissionLevel'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/selfJoin:
    put:
      tags:
        - board
      summary: updateBoardsPrefsSelfJoinByIdBoard()
      operationId: Board_updatePrefsSelfJoinByIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Self Join" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_selfJoin'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/prefs/voting:
    put:
      tags:
        - board
      summary: updateBoardsPrefsVotingByIdBoard()
      operationId: Board_updateVotingPrefsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Voting" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_voting'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/subscribed:
    put:
      tags:
        - board
      summary: updateBoardsSubscribedByIdBoard()
      operationId: Board_updateSubscribedById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Boards Subscribed" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/boards_subscribed'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /boards/{idBoard}/{field}:
    get:
      tags:
        - board
      summary: getBoardsByIdBoardByField()
      operationId: Board_getByIdField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: board_id
          in: path
          name: idBoard
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards:
    post:
      tags:
        - card
      summary: addCards()
      operationId: Card_createAndUpdate
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Cards" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}:
    delete:
      tags:
        - card
      summary: deleteCardsByIdCard()
      operationId: Card_removeByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - card
      summary: getCardsByIdCard()
      operationId: Card_getById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: action_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: membersVoted
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberVoted_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'all or a comma-separated list of: idCheckItem or state'
          in: query
          name: checkItemState_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: 'all or a comma-separated list of: idBoard, idCard, name or pos'
          in: query
          name: checklist_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: >-
              name, desc, descData, closed, idOrganization, pinned, url and
              prefs
            type: string
        - description: ' true or false'
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: image, imageScaled, imageUrl,
            left, rotate, top or zIndex
          in: query
          name: sticker_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: >-
              badges, checkItemStates, closed, dateLastActivity, desc, descData,
              due, email, idBoard, idChecklists, idLabels, idList, idMembers,
              idShort, idAttachmentCover, manualCoverAttachment, labels, name,
              pos, shortUrl and url
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - card
      summary: updateCardsByIdCard()
      operationId: Card_updateByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/actions:
    get:
      tags:
        - card
      summary: getCardsActionsByIdCard()
      operationId: Card_listCardActionsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: filter
          required: false
          schema:
            default: commentCard and updateCard:idList
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: '0'
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/actions/comments:
    post:
      tags:
        - card
      summary: addCardsActionsCommentsByIdCard()
      operationId: Card_addActionsCommentsByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Actions Comments" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actions_comments'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/actions/{idAction}/comments:
    delete:
      tags:
        - card
      summary: deleteCardsActionsCommentsByIdCardByIdAction()
      operationId: Card_removeActionCommentByIdCardByIdAction
      security:
        - api_key: []
        - api_token: []
      description: >-
        This can only be done by the original author of the comment, or someone
        with higher permissions than the original author.
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - card
      summary: updateCardsActionsCommentsByIdCardByIdAction()
      operationId: Card_updateActionCommentByIdCardByIdAction
      security:
        - api_key: []
        - api_token: []
      description: This can only be done by the original author of the comment.
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idAction
          in: path
          name: idAction
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Actions Comments" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_actions_comments'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/attachments:
    get:
      tags:
        - card
      summary: getCardsAttachmentsByIdCard()
      operationId: Card_getAttachmentsByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: filter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - card
      summary: addCardsAttachmentsByIdCard()
      operationId: Card_addAttachmentsByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Attachments" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_attachments'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/attachments/{idAttachment}:
    delete:
      tags:
        - card
      summary: deleteCardsAttachmentsByIdCardByIdAttachment()
      operationId: Card_deleteAttachmentsByIdCardByIdAttachment
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idAttachment
          in: path
          name: idAttachment
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - card
      summary: getCardsAttachmentsByIdCardByIdAttachment()
      operationId: Card_getAttachmentsByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idAttachment
          in: path
          name: idAttachment
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/board:
    get:
      tags:
        - card
      summary: getCardsBoardByIdCard()
      operationId: Card_getBoardById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/board/{field}:
    get:
      tags:
        - card
      summary: getCardsBoardByIdCardByField()
      operationId: Card_getBoardByIdCardByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checkItemStates:
    get:
      tags:
        - card
      summary: getCardsCheckItemStatesByIdCard()
      operationId: Card_getCheckItemStatesById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: 'all or a comma-separated list of: idCheckItem or state'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklist/{idChecklistCurrent}/checkItem/{idCheckItem}:
    put:
      tags:
        - card
      summary: updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem()
      operationId: Card_updateChecklistCheckItem
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklistCurrent
          in: path
          name: idChecklistCurrent
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          Attributes of "Cards Checklist Id Checklist Current Check Item" to be
          updated.
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/cards_checklist_idChecklistCurrent_checkItem
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklist/{idChecklist}/checkItem:
    post:
      tags:
        - card
      summary: addCardsChecklistCheckItemByIdCardByIdChecklist()
      operationId: Card_addChecklistCheckItem
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Checklist Check Item" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}:
    delete:
      tags:
        - card
      summary: deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem()
      operationId: Card_removeChecklistCheckItem
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/convertToCard:
    post:
      tags:
        - card
      summary: >-
        addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem()
      operationId: Card_convertCheckItemToCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/name:
    put:
      tags:
        - card
      summary: updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem()
      operationId: Card_updateChecklistCheckItemNameById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Checklist Check Item Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/pos:
    put:
      tags:
        - card
      summary: updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem()
      operationId: Card_updateCheckItemPosById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Checklist Check Item Pos" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem_pos'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklist/{idChecklist}/checkItem/{idCheckItem}/state:
    put:
      tags:
        - card
      summary: updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem()
      operationId: Card_updateChecklistCheckItemState
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Checklist Check Item State" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklist_checkItem_state'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklists:
    get:
      tags:
        - card
      summary: getCardsChecklistsByIdCard()
      operationId: Card_getChecklistsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all or none'
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            type: string
        - description: 'all or a comma-separated list of: name, nameData, pos, state or type'
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        - description: 'One of: all or none'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: 'all or a comma-separated list of: idBoard, idCard, name or pos'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - card
      summary: addCardsChecklistsByIdCard()
      operationId: Card_addChecklists
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Checklists" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_checklists'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/checklists/{idChecklist}:
    delete:
      tags:
        - card
      summary: deleteCardsChecklistsByIdCardByIdChecklist()
      operationId: Card_deleteChecklistByIdCardByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/closed:
    put:
      tags:
        - card
      summary: updateCardsClosedByIdCard()
      operationId: Card_updateClosedById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Closed" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_closed'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/desc:
    put:
      tags:
        - card
      summary: updateCardsDescByIdCard()
      operationId: Card_updateDescriptionByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Desc" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_desc'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/due:
    put:
      tags:
        - card
      summary: updateCardsDueByIdCard()
      operationId: Card_updateDueById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Due" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_due'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/idAttachmentCover:
    put:
      tags:
        - card
      summary: updateCardsIdAttachmentCoverByIdCard()
      operationId: Card_updateAttachmentCoverByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Id Attachment Cover" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idAttachmentCover'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/idBoard:
    put:
      tags:
        - card
      summary: updateCardsIdBoardByIdCard()
      operationId: Card_updateBoardByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Id Board" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idBoard'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/idLabels:
    post:
      tags:
        - card
      summary: addCardsIdLabelsByIdCard()
      operationId: Card_addIdLabelsToCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Id Labels" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idLabels'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/idLabels/{idLabel}:
    delete:
      tags:
        - card
      summary: deleteCardsIdLabelsByIdCardByIdLabel()
      operationId: Card_removeLabelByIdCardByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/idList:
    put:
      tags:
        - card
      summary: updateCardsIdListByIdCard()
      operationId: Card_updateIdListByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Id List" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idList'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/idMembers:
    post:
      tags:
        - card
      summary: addCardsIdMembersByIdCard()
      operationId: Card_addMembers
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Id Members" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idMembers'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - card
      summary: updateCardsIdMembersByIdCard()
      operationId: Card_updateIdMembers
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Id Members" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_idMembers'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/idMembers/{idMember}:
    delete:
      tags:
        - card
      summary: deleteCardsIdMembersByIdCardByIdMember()
      operationId: Card_removeMemberByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/labels:
    post:
      tags:
        - card
      summary: addCardsLabelsByIdCard()
      operationId: Card_addLabels
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Labels" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_labels'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - card
      summary: updateCardsLabelsByIdCard()
      operationId: Card_updateLabels
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Labels" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_labels'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/labels/{color}:
    delete:
      tags:
        - card
      summary: deleteCardsLabelsByIdCardByColor()
      operationId: Card_removeLabelsByIdCardByColor
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: color
          in: path
          name: color
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/list:
    get:
      tags:
        - card
      summary: getCardsListByIdCard()
      operationId: Card_getListById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/list/{field}:
    get:
      tags:
        - card
      summary: getCardsListByIdCardByField()
      operationId: Card_getCardsListByIdCardByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/markAssociatedNotificationsRead:
    post:
      tags:
        - card
      summary: addCardsMarkAssociatedNotificationsReadByIdCard()
      operationId: Card_markAssociatedNotificationsRead
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/members:
    get:
      tags:
        - card
      summary: getCardsMembersByIdCard()
      operationId: Card_listMembersByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/membersVoted:
    get:
      tags:
        - card
      summary: getCardsMembersVotedByIdCard()
      operationId: Card_getMembersVotedByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - card
      summary: addCardsMembersVotedByIdCard()
      operationId: Card_addMembersVoted
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Members Voted" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_membersVoted'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/membersVoted/{idMember}:
    delete:
      tags:
        - card
      summary: deleteCardsMembersVotedByIdCardByIdMember()
      operationId: Card_removeMembersVotedByIdCardByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/name:
    put:
      tags:
        - card
      summary: updateCardsNameByIdCard()
      operationId: Card_updateNameById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/pos:
    put:
      tags:
        - card
      summary: updateCardsPosByIdCard()
      operationId: Card_updatePosByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Pos" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_pos'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/stickers:
    get:
      tags:
        - card
      summary: getCardsStickersByIdCard()
      operationId: Card_getStickersByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: image, imageScaled, imageUrl,
            left, rotate, top or zIndex
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - card
      summary: addCardsStickersByIdCard()
      operationId: Card_addStickersByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Stickers" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_stickers'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/stickers/{idSticker}:
    delete:
      tags:
        - card
      summary: deleteCardsStickersByIdCardByIdSticker()
      operationId: Card_removeStickerByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idSticker
          in: path
          name: idSticker
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - card
      summary: getCardsStickersByIdCardByIdSticker()
      operationId: Card_getStickerByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idSticker
          in: path
          name: idSticker
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: image, imageScaled, imageUrl,
            left, rotate, top or zIndex
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - card
      summary: updateCardsStickersByIdCardByIdSticker()
      operationId: Card_updateStickersByIdCardByIdSticker
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: idSticker
          in: path
          name: idSticker
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Stickers" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_stickers'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/subscribed:
    put:
      tags:
        - card
      summary: updateCardsSubscribedByIdCard()
      operationId: Card_updateSubscribedByIdCard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Cards Subscribed" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cards_subscribed'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /cards/{idCard}/{field}:
    get:
      tags:
        - card
      summary: getCardsByIdCardByField()
      operationId: Card_getByIdField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: card id or shortlink
          in: path
          name: idCard
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists:
    post:
      tags:
        - checklist
      summary: addChecklists()
      operationId: Checklist_create
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Checklists" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}:
    delete:
      tags:
        - checklist
      summary: deleteChecklistsByIdChecklist()
      operationId: Checklist_removeById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - checklist
      summary: getChecklistsByIdChecklist()
      operationId: Checklist_getById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all or none'
          in: query
          name: checkItems
          required: false
          schema:
            default: all
            type: string
        - description: 'all or a comma-separated list of: name, nameData, pos, state or type'
          in: query
          name: checkItem_fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
        - description: 'all or a comma-separated list of: idBoard, idCard, name or pos'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - checklist
      summary: updateChecklistsByIdChecklist()
      operationId: Checklist_updateByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Checklists" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/board:
    get:
      tags:
        - checklist
      summary: getChecklistsBoardByIdChecklist()
      operationId: Checklist_getBoardByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/board/{field}:
    get:
      tags:
        - checklist
      summary: getChecklistsBoardByIdChecklistByField()
      operationId: Checklist_getBoardByIdChecklistByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/cards:
    get:
      tags:
        - checklist
      summary: getChecklistsCardsByIdChecklist()
      operationId: Checklist_listCardsByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: a number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: filter
          required: false
          schema:
            default: open
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/cards/{filter}:
    get:
      tags:
        - checklist
      summary: getChecklistsCardsByIdChecklistByFilter()
      operationId: Checklist_getCardsByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/checkItems:
    get:
      tags:
        - checklist
      summary: getChecklistsCheckItemsByIdChecklist()
      operationId: Checklist_getCheckItemsByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: 'all or a comma-separated list of: name, nameData, pos, state or type'
          in: query
          name: fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - checklist
      summary: addChecklistsCheckItemsByIdChecklist()
      operationId: Checklist_addCheckItemsByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Checklists Check Items" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_checkItems'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/checkItems/{idCheckItem}:
    delete:
      tags:
        - checklist
      summary: deleteChecklistsCheckItemsByIdChecklistByIdCheckItem()
      operationId: Checklist_removeByIdCheckItem
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - checklist
      summary: getChecklistsCheckItemsByIdChecklistByIdCheckItem()
      operationId: Checklist_getCheckItemsByIdChecklistByIdCheckItem
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: idCheckItem
          in: path
          name: idCheckItem
          required: true
          schema:
            type: string
        - description: 'all or a comma-separated list of: name, nameData, pos, state or type'
          in: query
          name: fields
          required: false
          schema:
            default: name, nameData, pos and state
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/idCard:
    put:
      tags:
        - checklist
      summary: updateChecklistsIdCardByIdChecklist()
      operationId: Checklist_updateIdCardByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Checklists Id Card" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_idCard'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/name:
    put:
      tags:
        - checklist
      summary: updateChecklistsNameByIdChecklist()
      operationId: Checklist_updateNameByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Checklists Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/pos:
    put:
      tags:
        - checklist
      summary: updateChecklistsPosByIdChecklist()
      operationId: Checklist_updatePosByIdChecklist
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Checklists Pos" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/checklists_pos'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /checklists/{idChecklist}/{field}:
    get:
      tags:
        - checklist
      summary: getChecklistsByIdChecklistByField()
      operationId: Checklist_getByIdField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idChecklist
          in: path
          name: idChecklist
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /labels:
    post:
      tags:
        - label
      summary: addLabels()
      operationId: Label_createLabels
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Labels" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /labels/{idLabel}:
    delete:
      tags:
        - label
      summary: deleteLabelsByIdLabel()
      operationId: Label_removeByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - label
      summary: getLabelsByIdLabel()
      operationId: Label_getByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: 'all or a comma-separated list of: color, idBoard, name or uses'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - label
      summary: updateLabelsByIdLabel()
      operationId: Label_updateByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Labels" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /labels/{idLabel}/board:
    get:
      tags:
        - label
      summary: getLabelsBoardByIdLabel()
      operationId: Label_getBoardByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /labels/{idLabel}/board/{field}:
    get:
      tags:
        - label
      summary: getLabelsBoardByIdLabelByField()
      operationId: Label_getBoardByIdLabelByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /labels/{idLabel}/color:
    put:
      tags:
        - label
      summary: updateLabelsColorByIdLabel()
      operationId: Label_updateColorByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Labels Color" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels_color'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /labels/{idLabel}/name:
    put:
      tags:
        - label
      summary: updateLabelsNameByIdLabel()
      operationId: Label_updateNameByIdLabel
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idLabel
          in: path
          name: idLabel
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Labels Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/labels_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists:
    post:
      tags:
        - list
      summary: addLists()
      operationId: List_createList
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Lists" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}:
    get:
      tags:
        - list
      summary: getListsByIdList()
      operationId: List_getByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: >-
              name, desc, descData, closed, idOrganization, pinned, url and
              prefs
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: fields
          required: false
          schema:
            default: name, closed, idBoard and pos
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - list
      summary: updateListsByIdList()
      operationId: List_updateByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/actions:
    get:
      tags:
        - list
      summary: getListsActionsByIdList()
      operationId: List_getActionsByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: '0'
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/archiveAllCards:
    post:
      tags:
        - list
      summary: addListsArchiveAllCardsByIdList()
      operationId: List_archiveAllCardsByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/board:
    get:
      tags:
        - list
      summary: getListsBoardByIdList()
      operationId: List_idBoardGet
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/board/{field}:
    get:
      tags:
        - list
      summary: getListsBoardByIdListByField()
      operationId: List_getBoardByIdListByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/cards:
    get:
      tags:
        - list
      summary: getListsCardsByIdList()
      operationId: List_getCardsByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: a number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: filter
          required: false
          schema:
            default: open
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - list
      summary: addListsCardsByIdList()
      operationId: List_createCardsByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists Cards" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_cards'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/cards/{filter}:
    get:
      tags:
        - list
      summary: getListsCardsByIdListByFilter()
      operationId: List_getCardsByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/closed:
    put:
      tags:
        - list
      summary: updateListsClosedByIdList()
      operationId: List_updateClosedByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists Closed" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_closed'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/idBoard:
    put:
      tags:
        - list
      summary: updateListsIdBoardByIdList()
      operationId: List_updateIdBoardByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists Id Board" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_idBoard'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/moveAllCards:
    post:
      tags:
        - list
      summary: addListsMoveAllCardsByIdList()
      operationId: List_moveAllCardsByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists Move All Cards" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_moveAllCards'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/name:
    put:
      tags:
        - list
      summary: updateListsNameByIdList()
      operationId: List_updateNameByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/pos:
    put:
      tags:
        - list
      summary: updateListsPosByIdList()
      operationId: List_updatePosByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists Pos" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_pos'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/subscribed:
    put:
      tags:
        - list
      summary: updateListsSubscribedByIdList()
      operationId: List_updateSubscribedByIdList
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Lists Subscribed" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/lists_subscribed'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /lists/{idList}/{field}:
    get:
      tags:
        - list
      summary: getListsByIdListByField()
      operationId: List_getByIdListByField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idList
          in: path
          name: idList
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}:
    get:
      tags:
        - member
      summary: getMembersByIdMember()
      operationId: Member_getById
      security:
        - api_key: []
        - api_token: []
      description: >-
        If you specify 'me' as the username, this call will respond as if you
        had supplied the username associated with the supplied token
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: A date, null or lastView
          in: query
          name: action_since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: action_before
          required: false
          schema:
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: cards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: card_members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: card_member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: card_attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: card_attachment_fields
          required: false
          schema:
            default: url and previews
            type: string
        - description: ' true or false'
          in: query
          name: card_stickers
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned
          in: query
          name: boards
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: name, closed, idOrganization and pinned
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: board_actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: board_actions_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: board_actions_display
          required: false
          schema:
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: board_actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: board_actions_since
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: board_actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: board_action_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: board_lists
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: board_memberships
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: board_organization
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: board_organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: >-
            all or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned
          in: query
          name: boardsInvited
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: boardsInvited_fields
          required: false
          schema:
            default: name, closed, idOrganization and pinned
            type: string
        - description: ' true or false'
          in: query
          name: boardStars
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: savedSearches
          required: false
          schema:
            type: string
        - description: 'One of: all, members, none or public'
          in: query
          name: organizations
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: organization_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: organization_paid_account
          required: false
          schema:
            type: string
        - description: 'One of: all, members, none or public'
          in: query
          name: organizationsInvited
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: organizationsInvited_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: addAdminToBoard,
            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,
            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,
            changeCard, closeBoard, commentCard, createdCard,
            declinedInvitationToBoard, declinedInvitationToOrganization,
            invitedToBoard, invitedToOrganization, makeAdminOfBoard,
            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,
            removedFromBoard, removedFromCard, removedFromOrganization,
            removedMemberFromCard, unconfirmedInvitedToBoard,
            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard
          in: query
          name: notifications
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: notifications_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: notifications_display
          required: false
          schema:
            type: string
        - description: a number from 1 to 1000
          in: query
          name: notifications_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator, type
            or unread
          in: query
          name: notification_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: notification_memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: notification_memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: An id, or null
          in: query
          name: notification_before
          required: false
          schema:
            type: string
        - description: An id, or null
          in: query
          name: notification_since
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: tokens
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: paid_account
          required: false
          schema:
            type: string
        - description: 'One of: all, custom, default, none or premium'
          in: query
          name: boardBackgrounds
          required: false
          schema:
            default: none
            type: string
        - description: 'One of: all or none'
          in: query
          name: customBoardBackgrounds
          required: false
          schema:
            default: none
            type: string
        - description: 'One of: all or none'
          in: query
          name: customStickers
          required: false
          schema:
            default: none
            type: string
        - description: 'One of: all or none'
          in: query
          name: customEmoji
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - member
      summary: updateMembersByIdMember()
      operationId: Member_updateByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/actions:
    get:
      tags:
        - member
      summary: getMembersActionsByIdMember()
      operationId: Member_listActionsByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: '0'
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/avatar:
    post:
      tags:
        - member
      summary: addMembersAvatarByIdMember()
      operationId: Member_uploadAvatarById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Avatar" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_avatar'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/avatarSource:
    put:
      tags:
        - member
      summary: updateMembersAvatarSourceByIdMember()
      operationId: Member_updateAvatarSource
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Avatar Source" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_avatarSource'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/bio:
    put:
      tags:
        - member
      summary: updateMembersBioByIdMember()
      operationId: Member_updateBioById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Bio" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_bio'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardBackgrounds:
    get:
      tags:
        - member
      summary: getMembersBoardBackgroundsByIdMember()
      operationId: Member_getBoardBackgroundsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: 'One of: all, custom, default, none or premium'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - member
      summary: addMembersBoardBackgroundsByIdMember()
      operationId: Member_addBoardBackgrounds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Board Backgrounds" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardBackgrounds'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardBackgrounds/{idBoardBackground}:
    delete:
      tags:
        - member
      summary: deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground()
      operationId: Member_deleteBoardBackground
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - member
      summary: getMembersBoardBackgroundsByIdMemberByIdBoardBackground()
      operationId: Member_getBoardBackgroundByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: brightness, fullSizeUrl, scaled or
            tile
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - member
      summary: updateMembersBoardBackgroundsByIdMemberByIdBoardBackground()
      operationId: Member_updateBoardBackgroundsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Board Backgrounds" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardBackgrounds'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardStars:
    get:
      tags:
        - member
      summary: getMembersBoardStarsByIdMember()
      operationId: Member_getBoardStarsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - member
      summary: addMembersBoardStarsByIdMember()
      operationId: Member_addBoardStarsByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Board Stars" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardStars/{idBoardStar}:
    delete:
      tags:
        - member
      summary: deleteMembersBoardStarsByIdMemberByIdBoardStar()
      operationId: Member_removeBoardStarByIdMemberByIdBoardStar
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - member
      summary: getMembersBoardStarsByIdMemberByIdBoardStar()
      operationId: Member_getBoardStarByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - member
      summary: updateMembersBoardStarsByIdMemberByIdBoardStar()
      operationId: Member_updateBoardStar
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Board Stars" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardStars/{idBoardStar}/idBoard:
    put:
      tags:
        - member
      summary: updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar()
      operationId: Member_updateBoardStarsIdBoard
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Board Stars Id Board" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars_idBoard'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardStars/{idBoardStar}/pos:
    put:
      tags:
        - member
      summary: updateMembersBoardStarsPosByIdMemberByIdBoardStar()
      operationId: Member_updateBoardStarPosByIdMemberByIdBoardStar
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardStar
          in: path
          name: idBoardStar
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Board Stars Pos" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_boardStars_pos'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boards:
    get:
      tags:
        - member
      summary: getMembersBoardsByIdMember()
      operationId: Member_getBoardsByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: actions_since
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: lists
          required: false
          schema:
            default: none
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boards/{filter}:
    get:
      tags:
        - member
      summary: getMembersBoardsByIdMemberByFilter()
      operationId: Member_getBoards
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardsInvited:
    get:
      tags:
        - member
      summary: getMembersBoardsInvitedByIdMember()
      operationId: Member_getInvitedBoards
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/boardsInvited/{field}:
    get:
      tags:
        - member
      summary: getMembersBoardsInvitedByIdMemberByField()
      operationId: Member_getBoardsInvitedByIdMemberByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/cards:
    get:
      tags:
        - member
      summary: getMembersCardsByIdMember()
      operationId: Member_getCardsByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: stickers
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: a number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/cards/{filter}:
    get:
      tags:
        - member
      summary: getMembersCardsByIdMemberByFilter()
      operationId: Member_getCardsByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/customBoardBackgrounds:
    get:
      tags:
        - member
      summary: getMembersCustomBoardBackgroundsByIdMember()
      operationId: Member_getCustomBoardBackgroundsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - member
      summary: addMembersCustomBoardBackgroundsByIdMember()
      operationId: Member_addCustomBoardBackgrounds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Custom Board Backgrounds" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customBoardBackgrounds'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/customBoardBackgrounds/{idBoardBackground}:
    delete:
      tags:
        - member
      summary: deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
      operationId: Member_removeCustomBoardBackgroundById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - member
      summary: getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
      operationId: Member_getCustomBoardBackgroundByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: brightness, fullSizeUrl, scaled or
            tile
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - member
      summary: updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground()
      operationId: Member_updateCustomBoardBackgrounds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idBoardBackground
          in: path
          name: idBoardBackground
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Custom Board Backgrounds" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customBoardBackgrounds'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/customEmoji:
    get:
      tags:
        - member
      summary: getMembersCustomEmojiByIdMember()
      operationId: Member_listCustomEmojiByIdMember
      security:
        - api_key: []
        - api_token: []
      description: This gets the list of all of the user’s uploaded emoji
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - member
      summary: addMembersCustomEmojiByIdMember()
      operationId: Member_addCustomEmojiByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Custom Emoji" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customEmoji'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/customEmoji/{idCustomEmoji}:
    get:
      tags:
        - member
      summary: getMembersCustomEmojiByIdMemberByIdCustomEmoji()
      operationId: Member_getCustomEmojiByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idCustomEmoji
          in: path
          name: idCustomEmoji
          required: true
          schema:
            type: string
        - description: 'all or a comma-separated list of: name or url'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/customStickers:
    get:
      tags:
        - member
      summary: getMembersCustomStickersByIdMember()
      operationId: Member_getCustomStickersByIdMember
      security:
        - api_key: []
        - api_token: []
      description: This gets a list of all of the user’s uploaded stickers
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - member
      summary: addMembersCustomStickersByIdMember()
      operationId: Member_addCustomStickers
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Custom Stickers" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_customStickers'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/customStickers/{idCustomSticker}:
    delete:
      tags:
        - member
      summary: deleteMembersCustomStickersByIdMemberByIdCustomSticker()
      operationId: Member_removeCustomStickerByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idCustomSticker
          in: path
          name: idCustomSticker
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - member
      summary: getMembersCustomStickersByIdMemberByIdCustomSticker()
      operationId: Member_getCustomStickerByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idCustomSticker
          in: path
          name: idCustomSticker
          required: true
          schema:
            type: string
        - description: 'all or a comma-separated list of: scaled or url'
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/deltas:
    get:
      tags:
        - member
      summary: getMembersDeltasByIdMember()
      operationId: Member_getDeltasByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: A valid tag for subscribing
          in: query
          name: tags
          required: true
          schema:
            type: string
        - description: a number from -1 to Infinity
          in: query
          name: ixLastUpdate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/fullName:
    put:
      tags:
        - member
      summary: updateMembersFullNameByIdMember()
      operationId: Member_updateFullName
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Full Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_fullName'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/initials:
    put:
      tags:
        - member
      summary: updateMembersInitialsByIdMember()
      operationId: Member_updateInitialsByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Initials" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_initials'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/notifications:
    get:
      tags:
        - member
      summary: getMembersNotificationsByIdMember()
      operationId: Member_getNotificationsByIdMember
      security:
        - api_key: []
        - api_token: []
      description: >-
        You can only read the notifications for the member associated with the
        supplied token
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAdminToBoard,
            addAdminToOrganization, addedAttachmentToCard, addedMemberToCard,
            addedToBoard, addedToCard, addedToOrganization, cardDueSoon,
            changeCard, closeBoard, commentCard, createdCard,
            declinedInvitationToBoard, declinedInvitationToOrganization,
            invitedToBoard, invitedToOrganization, makeAdminOfBoard,
            makeAdminOfOrganization, memberJoinedTrello, mentionedOnCard,
            removedFromBoard, removedFromCard, removedFromOrganization,
            removedMemberFromCard, unconfirmedInvitedToBoard,
            unconfirmedInvitedToOrganization or updateCheckItemStateOnCard
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all, read or unread'
          in: query
          name: read_filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator, type
            or unread
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 1 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            type: string
        - description: a number from 0 to 100
          in: query
          name: page
          required: false
          schema:
            default: '0'
            type: string
        - description: An id, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: An id, or null
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/notifications/{filter}:
    get:
      tags:
        - member
      summary: getMembersNotificationsByIdMemberByFilter()
      operationId: Member_getNotificationsByIdMemberByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/oneTimeMessagesDismissed:
    post:
      tags:
        - member
      summary: addMembersOneTimeMessagesDismissedByIdMember()
      operationId: Member_addOneTimeMessagesDismissedByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members One Time Messages Dismissed" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_oneTimeMessagesDismissed'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/organizations:
    get:
      tags:
        - member
      summary: getMembersOrganizationsByIdMember()
      operationId: Member_listOrganizationsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: 'One of: all, members, none or public'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: paid_account
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/organizations/{filter}:
    get:
      tags:
        - member
      summary: getMembersOrganizationsByIdMemberByFilter()
      operationId: Member_getOrganizations
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/organizationsInvited:
    get:
      tags:
        - member
      summary: getMembersOrganizationsInvitedByIdMember()
      operationId: Member_listInvitedOrganizationsById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/organizationsInvited/{field}:
    get:
      tags:
        - member
      summary: getMembersOrganizationsInvitedByIdMemberByField()
      operationId: Member_listOrganizationsInvitedByIdMemberByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/prefs/colorBlind:
    put:
      tags:
        - member
      summary: updateMembersPrefsColorBlindByIdMember()
      operationId: Member_updatePrefsColorBlindByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Color Blind" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_colorBlind'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/prefs/locale:
    put:
      tags:
        - member
      summary: updateMembersPrefsLocaleByIdMember()
      operationId: Member_updatePrefsLocaleByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Locale" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_locale'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/prefs/minutesBetweenSummaries:
    put:
      tags:
        - member
      summary: updateMembersPrefsMinutesBetweenSummariesByIdMember()
      operationId: Member_updatePrefsMinutesBetweenSummariesById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Minutes Between Summaries" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_minutesBetweenSummaries'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/savedSearches:
    get:
      tags:
        - member
      summary: getMembersSavedSearchesByIdMember()
      operationId: Member_getSavedSearchesByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - member
      summary: addMembersSavedSearchesByIdMember()
      operationId: Member_createSavedSearch
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Saved Searches" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/savedSearches/{idSavedSearch}:
    delete:
      tags:
        - member
      summary: deleteMembersSavedSearchesByIdMemberByIdSavedSearch()
      operationId: Member_removeSavedSearchByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - member
      summary: getMembersSavedSearchesByIdMemberByIdSavedSearch()
      operationId: Member_getSavedSearchByIds
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - member
      summary: updateMembersSavedSearchesByIdMemberByIdSavedSearch()
      operationId: Member_updateSavedSearchesByIdMemberByIdSavedSearch
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Saved Searches" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/savedSearches/{idSavedSearch}/name:
    put:
      tags:
        - member
      summary: updateMembersSavedSearchesNameByIdMemberByIdSavedSearch()
      operationId: Member_updateSavedSearchesNameByIdMemberByIdSavedSearch
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Saved Searches Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/savedSearches/{idSavedSearch}/pos:
    put:
      tags:
        - member
      summary: updateMembersSavedSearchesPosByIdMemberByIdSavedSearch()
      operationId: Member_updateSavedSearchesPosByIdMemberByIdSavedSearch
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Saved Searches Pos" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches_pos'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/savedSearches/{idSavedSearch}/query:
    put:
      tags:
        - member
      summary: updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch()
      operationId: Member_updateSavedSearchQueryByIdMemberByIdSavedSearch
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: idSavedSearch
          in: path
          name: idSavedSearch
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Saved Searches Query" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_savedSearches_query'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/tokens:
    get:
      tags:
        - member
      summary: getMembersTokensByIdMember()
      operationId: Member_getTokensByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/username:
    put:
      tags:
        - member
      summary: updateMembersUsernameByIdMember()
      operationId: Member_updateUsernameById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Members Username" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/members_username'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /members/{idMember}/{field}:
    get:
      tags:
        - member
      summary: getMembersByIdMemberByField()
      operationId: Member_getByField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idMember or username
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/all/read:
    post:
      tags:
        - notification
      summary: addNotificationsAllRead()
      operationId: Notification_markAllAsRead
      security:
        - api_key: []
        - api_token: []
      parameters: []
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}:
    get:
      tags:
        - notification
      summary: getNotificationsByIdNotification()
      operationId: Notification_getById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator, type
            or unread
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: name
            type: string
        - description: ' true or false'
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: card
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: name
            type: string
        - description: ' true or false'
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: organization_fields
          required: false
          schema:
            default: displayName
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - notification
      summary: updateNotificationsByIdNotification()
      operationId: Notification_updateByIdNotification
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Notifications" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notifications'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/board:
    get:
      tags:
        - notification
      summary: getNotificationsBoardByIdNotification()
      operationId: Notification_getBoardById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/board/{field}:
    get:
      tags:
        - notification
      summary: getNotificationsBoardByIdNotificationByField()
      operationId: Notification_getBoardByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/card:
    get:
      tags:
        - notification
      summary: getNotificationsCardByIdNotification()
      operationId: Notification_getCardById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/card/{field}:
    get:
      tags:
        - notification
      summary: getNotificationsCardByIdNotificationByField()
      operationId: Notification_getCardByIdNotificationByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/display:
    get:
      tags:
        - notification
      summary: getNotificationsDisplayByIdNotification()
      operationId: Notification_getDisplayByIdNotification
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/entities:
    get:
      tags:
        - notification
      summary: getNotificationsEntitiesByIdNotification()
      operationId: Notification_getEntitiesByIdNotification
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/list:
    get:
      tags:
        - notification
      summary: getNotificationsListByIdNotification()
      operationId: Notification_getListByIdNotification
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/list/{field}:
    get:
      tags:
        - notification
      summary: getNotificationsListByIdNotificationByField()
      operationId: Notification_getListByIdNotificationByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/member:
    get:
      tags:
        - notification
      summary: getNotificationsMemberByIdNotification()
      operationId: Notification_getMemberByNotification
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/member/{field}:
    get:
      tags:
        - notification
      summary: getNotificationsMemberByIdNotificationByField()
      operationId: Notification_getMemberByIdField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/memberCreator:
    get:
      tags:
        - notification
      summary: getNotificationsMemberCreatorByIdNotification()
      operationId: Notification_getMemberCreatorById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/memberCreator/{field}:
    get:
      tags:
        - notification
      summary: getNotificationsMemberCreatorByIdNotificationByField()
      operationId: Notification_getMemberByIdNotificationByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/organization:
    get:
      tags:
        - notification
      summary: getNotificationsOrganizationByIdNotification()
      operationId: Notification_getOrganizationByIdNotification
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/organization/{field}:
    get:
      tags:
        - notification
      summary: getNotificationsOrganizationByIdNotificationByField()
      operationId: Notification_getOrganizationByIdNotificationByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/unread:
    put:
      tags:
        - notification
      summary: updateNotificationsUnreadByIdNotification()
      operationId: Notification_updateUnreadByIdNotification
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Notifications Unread" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/notifications_unread'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /notifications/{idNotification}/{field}:
    get:
      tags:
        - notification
      summary: getNotificationsByIdNotificationByField()
      operationId: Notification_getByIdField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idNotification
          in: path
          name: idNotification
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations:
    post:
      tags:
        - organization
      summary: addOrganizations()
      operationId: Organization_create
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Organizations" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}:
    delete:
      tags:
        - organization
      summary: deleteOrganizationsByIdOrg()
      operationId: Organization_removeByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - organization
      summary: getOrganizationsByIdOrg()
      operationId: Organization_getByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_display
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: memberships_member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberships_member_fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: 'One of: admins, all, none, normal or owners'
          in: query
          name: members
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials, username and confirmed
            type: string
        - description: true or false ; works for premium organizations only.
          in: query
          name: member_activity
          required: false
          schema:
            type: string
        - description: 'One of: admins, all, none, normal or owners'
          in: query
          name: membersInvited
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: membersInvited_fields
          required: false
          schema:
            default: avatarHash, initials, fullName and username
            type: string
        - description: >-
            all or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned
          in: query
          name: boards
          required: false
          schema:
            default: none
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: board_actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: board_actions_entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: board_actions_display
          required: false
          schema:
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: board_actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: board_actions_since
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: board_actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: board_action_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: board_lists
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: paid_account
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: fields
          required: false
          schema:
            default: >-
              name, displayName, desc, descData, url, website, logoHash,
              products and powerUps
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - organization
      summary: updateOrganizationsByIdOrg()
      operationId: Organization_updateByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/actions:
    get:
      tags:
        - organization
      summary: getOrganizationsActionsByIdOrg()
      operationId: Organization_getActionsByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: entities
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: display
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 0 to 1000
          in: query
          name: limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: since
          required: false
          schema:
            type: string
        - description: A date, or null
          in: query
          name: before
          required: false
          schema:
            type: string
        - description: Page * limit must be less than 1000
          in: query
          name: page
          required: false
          schema:
            default: '0'
            type: string
        - description: Only return actions related to these model ids
          in: query
          name: idModels
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: memberCreator
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: memberCreator_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/boards:
    get:
      tags:
        - organization
      summary: getOrganizationsBoardsByIdOrg()
      operationId: Organization_getBoardsByOrgId
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, members, open,
            organization, pinned, public, starred or unpinned
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: actions_entities
          required: false
          schema:
            type: string
        - description: a number from 0 to 1000
          in: query
          name: actions_limit
          required: false
          schema:
            default: '50'
            type: string
        - description: 'One of: count, list or minimal'
          in: query
          name: actions_format
          required: false
          schema:
            default: list
            type: string
        - description: A date, null or lastView
          in: query
          name: actions_since
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: data, date, idMemberCreator or
            type
          in: query
          name: action_fields
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: memberships
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: organization
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: 'One of: all, closed, none or open'
          in: query
          name: lists
          required: false
          schema:
            default: none
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/boards/{filter}:
    get:
      tags:
        - organization
      summary: getOrganizationsBoardsByIdOrgByFilter()
      operationId: Organization_getBoardsByIdOrgByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/deltas:
    get:
      tags:
        - organization
      summary: getOrganizationsDeltasByIdOrg()
      operationId: Organization_getOrganizationDeltas
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: A valid tag for subscribing
          in: query
          name: tags
          required: true
          schema:
            type: string
        - description: a number from -1 to Infinity
          in: query
          name: ixLastUpdate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/desc:
    put:
      tags:
        - organization
      summary: updateOrganizationsDescByIdOrg()
      operationId: Organization_updateDescriptionByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations Desc" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_desc'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/displayName:
    put:
      tags:
        - organization
      summary: updateOrganizationsDisplayNameByIdOrg()
      operationId: Organization_updateDisplayNameByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations Display Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_displayName'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/logo:
    delete:
      tags:
        - organization
      summary: deleteOrganizationsLogoByIdOrg()
      operationId: Organization_removeLogoByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - organization
      summary: addOrganizationsLogoByIdOrg()
      operationId: Organization_uploadLogoByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations Logo" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_logo'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/members:
    get:
      tags:
        - organization
      summary: getOrganizationsMembersByIdOrg()
      operationId: Organization_getMembersByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: 'One of: admins, all, none, normal or owners'
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: fields
          required: false
          schema:
            default: fullName and username
            type: string
        - description: true or false ; works for premium organizations only.
          in: query
          name: activity
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - organization
      summary: updateOrganizationsMembersByIdOrg()
      operationId: Organization_updateMembersByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/organizations_members'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/members/{filter}:
    get:
      tags:
        - organization
      summary: getOrganizationsMembersByIdOrgByFilter()
      operationId: Organization_listMembersByIdOrgByFilter
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: filter
          in: path
          name: filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/members/{idMember}:
    delete:
      tags:
        - organization
      summary: deleteOrganizationsMembersByIdOrgByIdMember()
      operationId: Organization_removeMemberByIdOrgByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - organization
      summary: updateOrganizationsMembersByIdOrgByIdMember()
      operationId: Organization_updateMembersByIdOrgByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/organizations_members'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/members/{idMember}/all:
    delete:
      tags:
        - organization
      summary: deleteOrganizationsMembersAllByIdOrgByIdMember()
      operationId: Organization_removeMemberAll
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/members/{idMember}/cards:
    get:
      tags:
        - organization
      summary: getOrganizationsMembersCardsByIdOrgByIdMember()
      operationId: Organization_listMembersCardsByIdOrgByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: addAttachmentToCard,
            addChecklistToCard, addMemberToBoard, addMemberToCard,
            addMemberToOrganization, addToOrganizationBoard, commentCard,
            convertToCardFromCheckItem, copyBoard, copyCard, copyCommentCard,
            createBoard, createCard, createList, createOrganization,
            deleteAttachmentFromCard, deleteBoardInvitation, deleteCard,
            deleteOrganizationInvitation, disablePowerUp, emailCard,
            enablePowerUp, makeAdminOfBoard, makeNormalMemberOfBoard,
            makeNormalMemberOfOrganization, makeObserverOfBoard,
            memberJoinedTrello, moveCardFromBoard, moveCardToBoard,
            moveListFromBoard, moveListToBoard, removeChecklistFromCard,
            removeFromOrganizationBoard, removeMemberFromCard,
            unconfirmedBoardInvitation, unconfirmedOrganizationInvitation,
            updateBoard, updateCard, updateCard:closed, updateCard:desc,
            updateCard:idList, updateCard:name, updateCheckItemStateOnCard,
            updateChecklist, updateList, updateList:closed, updateList:name,
            updateMember or updateOrganization
          in: query
          name: actions
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: bytes, date, edgeColor, idMember,
            isUpload, mimeType, name, previews or url
          in: query
          name: attachment_fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: members
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials and username
            type: string
        - description: ' true or false'
          in: query
          name: checkItemStates
          required: false
          schema:
            type: string
        - description: 'One of: all or none'
          in: query
          name: checklists
          required: false
          schema:
            default: none
            type: string
        - description: ' true or false'
          in: query
          name: board
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: name, desc, closed, idOrganization, pinned, url and prefs
            type: string
        - description: ' true or false'
          in: query
          name: list
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: closed, idBoard, name, pos or
            subscribed
          in: query
          name: list_fields
          required: false
          schema:
            default: all
            type: string
        - description: 'One of: all, closed, none, open or visible'
          in: query
          name: filter
          required: false
          schema:
            default: visible
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/members/{idMember}/deactivated:
    put:
      tags:
        - organization
      summary: updateOrganizationsMembersDeactivatedByIdOrgByIdMember()
      operationId: Organization_updateMembersDeactivatedByIdOrgByIdMember
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: idMember
          in: path
          name: idMember
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations Members Deactivated" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_members_deactivated'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/membersInvited:
    get:
      tags:
        - organization
      summary: getOrganizationsMembersInvitedByIdOrg()
      operationId: Organization_getMembersInvitedByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/membersInvited/{field}:
    get:
      tags:
        - organization
      summary: getOrganizationsMembersInvitedByIdOrgByField()
      operationId: Organization_getMembersInvitedByIdOrgByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/memberships:
    get:
      tags:
        - organization
      summary: getOrganizationsMembershipsByIdOrg()
      operationId: Organization_listMembershipsByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: active, admin, deactivated, me or
            normal
          in: query
          name: filter
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/memberships/{idMembership}:
    get:
      tags:
        - organization
      summary: getOrganizationsMembershipsByIdOrgByIdMembership()
      operationId: Organization_getMembershipsByIdOrgByIdMembership
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: idMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: member
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: fullName and username
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - organization
      summary: updateOrganizationsMembershipsByIdOrgByIdMembership()
      operationId: Organization_updateMembershipByIdOrgByIdMembership
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: idMembership
          in: path
          name: idMembership
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations Memberships" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_memberships'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/name:
    put:
      tags:
        - organization
      summary: updateOrganizationsNameByIdOrg()
      operationId: Organization_updateNameByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations Name" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_name'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/associatedDomain:
    delete:
      tags:
        - organization
      summary: deleteOrganizationsPrefsAssociatedDomainByIdOrg()
      operationId: Organization_deletePrefsAssociatedDomainByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsAssociatedDomainByIdOrg()
      operationId: Organization_updatePrefsAssociatedDomainByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Associated Domain" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_associatedDomain'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/org:
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg()
      operationId: Organization_updatePrefsBoardVisibilityRestrictByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/prefs_boardVisibilityRestrict'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/private:
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg()
      operationId: Organization_updatePrefsVisibilityByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/prefs_boardVisibilityRestrict'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/boardVisibilityRestrict/public:
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg()
      operationId: Organization_updatePrefsBoardVisibilityRestrictPublicByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/prefs_boardVisibilityRestrict'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/externalMembersDisabled:
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsExternalMembersDisabledByIdOrg()
      operationId: Organization_updatePrefsExternalMembersDisabledByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs External Members Disabled" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_externalMembersDisabled'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/googleAppsVersion:
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsGoogleAppsVersionByIdOrg()
      operationId: Organization_updatePrefsGoogleAppsVersionByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Google Apps Version" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_googleAppsVersion'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/orgInviteRestrict:
    delete:
      tags:
        - organization
      summary: deleteOrganizationsPrefsOrgInviteRestrictByIdOrg()
      operationId: Organization_removeInviteRestrictByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: An email address with optional expansion tokens
          in: query
          name: value
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsOrgInviteRestrictByIdOrg()
      operationId: Organization_updatePrefsOrgInviteRestrictByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Prefs Org Invite Restrict" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prefs_orgInviteRestrict'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/prefs/permissionLevel:
    put:
      tags:
        - organization
      summary: updateOrganizationsPrefsPermissionLevelByIdOrg()
      operationId: Organization_updatePrefsPermissionLevelByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/prefs_permissionLevel'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/website:
    put:
      tags:
        - organization
      summary: updateOrganizationsWebsiteByIdOrg()
      operationId: Organization_updateWebsiteByIdOrg
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Organizations Website" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organizations_website'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /organizations/{idOrg}/{field}:
    get:
      tags:
        - organization
      summary: getOrganizationsByIdOrgByField()
      operationId: Organization_getByIdAndField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idOrg or name
          in: path
          name: idOrg
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /search:
    get:
      tags:
        - search
      summary: getSearch()
      operationId: Search_getResults
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: a string with a length from 1 to 16384
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: A comma-separated list of objectIds, 24-character hex strings
          in: query
          name: idBoards
          required: false
          schema:
            default: mine
            type: string
        - description: A comma-separated list of objectIds, 24-character hex strings
          in: query
          name: idOrganizations
          required: true
          schema:
            type: string
        - description: A comma-separated list of objectIds, 24-character hex strings
          in: query
          name: idCards
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: actions, boards, cards, members or
            organizations
          in: query
          name: modelTypes
          required: false
          schema:
            default: all
            type: string
        - description: >-
            all or a comma-separated list of: closed, dateLastActivity,
            dateLastView, desc, descData, idOrganization, invitations, invited,
            labelNames, memberships, name, pinned, powerUps, prefs, shortLink,
            shortUrl, starred, subscribed or url
          in: query
          name: board_fields
          required: false
          schema:
            default: name and idOrganization
            type: string
        - description: a number from 1 to 1000
          in: query
          name: boards_limit
          required: false
          schema:
            default: '10'
            type: string
        - description: >-
            all or a comma-separated list of: badges, checkItemStates, closed,
            dateLastActivity, desc, descData, due, email, idAttachmentCover,
            idBoard, idChecklists, idLabels, idList, idMembers, idMembersVoted,
            idShort, labels, manualCoverAttachment, name, pos, shortLink,
            shortUrl, subscribed or url
          in: query
          name: card_fields
          required: false
          schema:
            default: all
            type: string
        - description: a number from 1 to 1000
          in: query
          name: cards_limit
          required: false
          schema:
            default: '10'
            type: string
        - description: a number from 0 to 100
          in: query
          name: cards_page
          required: false
          schema:
            default: '0'
            type: string
        - description: ' true or false'
          in: query
          name: card_board
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: card_list
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: card_members
          required: false
          schema:
            type: string
        - description: ' true or false'
          in: query
          name: card_stickers
          required: false
          schema:
            type: string
        - description: A boolean value or &quot;cover&quot; for only card cover attachments
          in: query
          name: card_attachments
          required: false
          schema:
            type: string
        - description: >-
            all or a comma-separated list of: billableMemberCount, desc,
            descData, displayName, idBoards, invitations, invited, logoHash,
            memberships, name, powerUps, prefs, premiumFeatures, products, url
            or website
          in: query
          name: organization_fields
          required: false
          schema:
            default: name and displayName
            type: string
        - description: a number from 1 to 1000
          in: query
          name: organizations_limit
          required: false
          schema:
            default: '10'
            type: string
        - description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          in: query
          name: member_fields
          required: false
          schema:
            default: avatarHash, fullName, initials, username and confirmed
            type: string
        - description: a number from 1 to 1000
          in: query
          name: members_limit
          required: false
          schema:
            default: '10'
            type: string
        - description: ' true or false'
          in: query
          name: partial
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /search/members:
    get:
      tags:
        - search
      summary: getSearchMembers()
      operationId: Search_findMembers
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: a string with a length from 1 to 16384
          in: query
          name: query
          required: true
          schema:
            type: string
        - description: a number from 1 to 20
          in: query
          name: limit
          required: false
          schema:
            default: '8'
            type: string
        - description: An id, or null
          in: query
          name: idBoard
          required: false
          schema:
            type: string
        - description: An id, or null
          in: query
          name: idOrganization
          required: false
          schema:
            type: string
        - description: A boolean
          in: query
          name: onlyOrgMembers
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /sessions:
    post:
      tags:
        - session
      summary: addSessions()
      operationId: Session_createAndUpdate
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Sessions" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessions'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /sessions/socket:
    get:
      tags:
        - session
      summary: getSessionsSocket()
      operationId: Session_getSocketSessions
      security:
        - api_key: []
        - api_token: []
      description: >-
        This is the route for WebSocket requests.  See the socket API reference
        for a description of WebSocket usage.
      parameters: []
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /sessions/{idSession}:
    put:
      tags:
        - session
      summary: updateSessionsByIdSession()
      operationId: Session_updateStatusByIdSession
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idSession
          in: path
          name: idSession
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Sessions" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessions'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /sessions/{idSession}/status:
    put:
      tags:
        - session
      summary: updateSessionsStatusByIdSession()
      operationId: Session_updateStatusByIdSession
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idSession
          in: path
          name: idSession
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Sessions Status" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sessions_status'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /tokens/{token}:
    delete:
      tags:
        - token
      summary: deleteTokensByToken()
      operationId: Token_deleteByToken
      security:
        - api_key: []
        - api_token: []
      parameters: []
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - token
      summary: getTokensByToken()
      operationId: Token_getByToken
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: >-
            all or a comma-separated list of: dateCreated, dateExpires,
            idMember, identifier or permissions
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
        - description: ' true or false'
          in: query
          name: webhooks
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /tokens/{token}/member:
    get:
      tags:
        - token
      summary: getTokensMemberByToken()
      operationId: Token_getMemberByToken
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: >-
            all or a comma-separated list of: avatarHash, avatarSource, bio,
            bioData, confirmed, email, fullName, gravatarHash, idBoards,
            idBoardsPinned, idOrganizations, idPremOrgsAdmin, initials,
            loginTypes, memberType, oneTimeMessagesDismissed, prefs,
            premiumFeatures, products, status, status, trophies,
            uploadedAvatarHash, url or username
          in: query
          name: fields
          required: false
          schema:
            default: all
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /tokens/{token}/member/{field}:
    get:
      tags:
        - token
      summary: getTokensMemberByTokenByField()
      operationId: Token_getMemberByField
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /tokens/{token}/webhooks:
    get:
      tags:
        - token
      summary: getTokensWebhooksByToken()
      operationId: Token_getWebhooks
      security:
        - api_key: []
        - api_token: []
      parameters: []
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    post:
      tags:
        - token
      summary: addTokensWebhooksByToken()
      operationId: Token_registerWebhook
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Tokens Webhooks" to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokens_webhooks'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - token
      summary: updateTokensWebhooksByToken()
      operationId: Token_updateWebhooksByToken
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        description: Attributes of "Tokens Webhooks" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokens_webhooks'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /tokens/{token}/webhooks/{idWebhook}:
    delete:
      tags:
        - token
      summary: deleteTokensWebhooksByTokenByIdWebhook()
      operationId: Token_removeByTokenByIdWebhook
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - token
      summary: getTokensWebhooksByTokenByIdWebhook()
      operationId: Token_getWebhookById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /tokens/{token}/{field}:
    get:
      tags:
        - token
      summary: getTokensByTokenByField()
      operationId: Token_getByTokenByField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: token
          in: path
          name: token
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /types/{id}:
    get:
      tags:
        - type
      summary: getTypesById()
      operationId: Type_getById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /webhooks:
    put:
      tags:
        - webhook
      summary: updateWebhooks()
      operationId: Webhook_update
      security:
        - api_key: []
        - api_token: []
      parameters: []
      requestBody:
        $ref: '#/components/requestBodies/webhooks'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /webhooks/{idWebhook}:
    delete:
      tags:
        - webhook
      summary: deleteWebhooksByIdWebhook()
      operationId: Webhook_removeById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    get:
      tags:
        - webhook
      summary: getWebhooksByIdWebhook()
      operationId: Webhook_getById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
    put:
      tags:
        - webhook
      summary: updateWebhooksByIdWebhook()
      operationId: Webhook_updateByIdWebhook
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/webhooks'
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /webhooks/{idWebhook}/active:
    put:
      tags:
        - webhook
      summary: updateWebhooksActiveByIdWebhook()
      operationId: Webhook_updateActiveById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Webhooks Active" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_active'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /webhooks/{idWebhook}/callbackURL:
    put:
      tags:
        - webhook
      summary: updateWebhooksCallbackURLByIdWebhook()
      operationId: Webhook_updateCallbackUrlById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Webhooks Callback Url" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_callbackURL'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /webhooks/{idWebhook}/description:
    put:
      tags:
        - webhook
      summary: updateWebhooksDescriptionByIdWebhook()
      operationId: Webhook_updateDescriptionByIdWebhook
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Webhooks Description" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_description'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /webhooks/{idWebhook}/idModel:
    put:
      tags:
        - webhook
      summary: updateWebhooksIdModelByIdWebhook()
      operationId: Webhook_updateModelById
      security:
        - api_key: []
        - api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
      requestBody:
        description: Attributes of "Webhooks Id Model" to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_idModel'
        required: true
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
  /webhooks/{idWebhook}/{field}:
    get:
      tags:
        - webhook
      summary: getWebhooksByIdWebhookByField()
      operationId: Webhook_getByIdField
      security:
        - api_key: []
          api_token: []
      parameters:
        - description: idWebhook
          in: path
          name: idWebhook
          required: true
          schema:
            type: string
        - description: field
          in: path
          name: field
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Server rejection
components:
  requestBodies:
    boards_members:
      description: Attributes of "Boards Members" to be updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/boards_members'
      required: true
    organizations_members:
      description: Attributes of "Organizations Members" to be updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/organizations_members'
      required: true
    prefs_boardVisibilityRestrict:
      description: Attributes of "Prefs Board Visibility Restrict" to be updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/prefs_boardVisibilityRestrict'
      required: true
    prefs_permissionLevel:
      description: Attributes of "Prefs Permission Level" to be updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/prefs_permissionLevel'
      required: true
    webhooks:
      description: Attributes of "Webhooks" to be updated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/webhooks'
      required: true
  schemas:
    actions:
      properties:
        text:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: action
    actions_comments:
      properties:
        text:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    actions_text:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: action
    boards:
      properties:
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        idBoardSource:
          description: The id of the board to copy into the new board
          type: string
        idOrganization:
          description: The id or name of the organization to add the board to.
          type: string
        keepFromSource:
          description: Components of the source board to copy.
          type: string
        labelNames/blue:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/green:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/orange:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/purple:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/red:
          description: a string with a length from 0 to 16384
          type: string
        labelNames/yellow:
          description: a string with a length from 0 to 16384
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        powerUps:
          description: >-
            all or a comma-separated list of: calendar, cardAging, recap or
            voting
          type: string
        prefs/background:
          description: A standard background name, or the id of a custom background
          type: string
        prefs/calendarFeedEnabled:
          description: ' true or false'
          type: string
        prefs/cardAging:
          description: 'One of: pirate or regular'
          type: string
        prefs/cardCovers:
          description: ' true or false'
          type: string
        prefs/comments:
          description: 'One of: disabled, members, observers, org or public'
          type: string
        prefs/invitations:
          description: 'One of: admins or members'
          type: string
        prefs/permissionLevel:
          description: 'One of: org, private or public'
          type: string
        prefs/selfJoin:
          description: ' true or false'
          type: string
        prefs/voting:
          description: 'One of: disabled, members, observers, org or public'
          type: string
        prefs_background:
          description: a string with a length from 0 to 16384
          type: string
        prefs_cardAging:
          description: 'One of: pirate or regular'
          type: string
        prefs_cardCovers:
          description: ' true or false'
          type: string
        prefs_comments:
          description: 'One of: disabled, members, observers, org or public'
          type: string
        prefs_invitations:
          description: 'One of: admins or members'
          type: string
        prefs_permissionLevel:
          description: 'One of: org, private or public'
          type: string
        prefs_selfJoin:
          description: ' true or false'
          type: string
        prefs_voting:
          description: 'One of: disabled, members, observers, org or public'
          type: string
        subscribed:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    boards_checklists:
      properties:
        name:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_closed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    boards_desc:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_idOrganization:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_lists:
      properties:
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: board
    boards_members:
      properties:
        email:
          description: An email address
          type: string
        fullName:
          description: >-
            A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        type:
          description: 'One of: admin, normal or observer'
          type: string
      type: object
      xml:
        name: board
    boards_memberships:
      properties:
        member_fields:
          description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          type: string
        type:
          description: 'One of: admin, normal or observer'
          type: string
      type: object
      xml:
        name: board
    boards_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: board
    boards_powerUps:
      properties:
        value:
          description: 'One of: calendar, cardAging, recap or voting'
          type: string
      type: object
      xml:
        name: board
    boards_subscribed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    cards:
      properties:
        closed:
          description: ' true or false'
          type: string
        desc:
          description: a string with a length from 0 to 16384
          type: string
        due:
          description: A date, or null
          type: string
        fileSource:
          description: A file
          type: string
        idAttachmentCover:
          description: >-
            Id of the image attachment of this card to use as its cover, or null
            for no cover
          type: string
        idBoard:
          description: id of the board the card should be moved to
          type: string
        idCardSource:
          description: The id of the card to copy into a new card.
          type: string
        idLabels:
          description: A comma-separated list of objectIds, 24-character hex strings
          type: string
        idList:
          description: id of the list that the card should be added to
          type: string
        idMembers:
          description: A comma-separated list of objectIds, 24-character hex strings
          type: string
        keepFromSource:
          description: Properties of the card to copy over from the source.
          type: string
        labels:
          description: >-
            all or a comma-separated list of: blue, green, orange, purple, red
            or yellow
          type: string
        name:
          description: >-
            The name of the new card.  It isn&#39;t required if the name is
            being copied from provided by a URL, file or card that is being
            copied.
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        subscribed:
          description: ' true or false'
          type: string
        urlSource:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: card
    cards_actions_comments:
      properties:
        text:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_attachments:
      properties:
        file:
          description: A file
          type: string
        mimeType:
          description: a string with a length from 0 to 256
          type: string
        name:
          description: a string with a length from 0 to 256
          type: string
        url:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem:
      properties:
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: card
    cards_checklist_checkItem_state:
      properties:
        value:
          description: 'One of: complete, false, incomplete or true'
          type: string
      type: object
      xml:
        name: card
    cards_checklist_idChecklistCurrent_checkItem:
      properties:
        idChecklist:
          description: An id, or null
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        state:
          description: 'One of: complete, false, incomplete or true'
          type: string
      type: object
      xml:
        name: card
    cards_checklists:
      properties:
        idChecklistSource:
          description: The id of the source checklist to copy into a new checklist.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        value:
          description: >-
            The id of the checklist to add to the card, or null to create a new
            one.
          type: string
      type: object
      xml:
        name: card
    cards_closed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: card
    cards_desc:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_due:
      properties:
        value:
          description: A date, or null
          type: string
      type: object
      xml:
        name: card
    cards_idAttachmentCover:
      properties:
        value:
          description: >-
            Id of the image attachment of this card to use as its cover, or null
            for no cover
          type: string
      type: object
      xml:
        name: card
    cards_idBoard:
      properties:
        idList:
          description: id of the list that the card should be moved to on the new board
          type: string
        value:
          description: id of the board the card should be moved to
          type: string
      type: object
      xml:
        name: card
    cards_idLabels:
      properties:
        value:
          description: The id of the label to add
          type: string
      type: object
      xml:
        name: card
    cards_idList:
      properties:
        value:
          description: id of the list the card should be moved to
          type: string
      type: object
      xml:
        name: card
    cards_idMembers:
      properties:
        value:
          description: The id of the member to add to the card
          type: string
      type: object
      xml:
        name: card
    cards_labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        value:
          description: >-
            all or a comma-separated list of: blue, green, orange, purple, red
            or yellow
          type: string
      type: object
      xml:
        name: card
    cards_membersVoted:
      properties:
        value:
          description: The id of the member to vote &#39;yes&#39; on the card
          type: string
      type: object
      xml:
        name: card
    cards_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: card
    cards_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: card
    cards_stickers:
      properties:
        image:
          description: a string with a length from 0 to 16384
          type: string
        left:
          description: undefined
          type: string
        rotate:
          description: undefined
          type: string
        top:
          description: undefined
          type: string
        zIndex:
          description: Valid Z values for stickers, must be an integer
          type: string
      type: object
      xml:
        name: card
    cards_subscribed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: card
    checklists:
      properties:
        idBoard:
          description: id of the board that the checklist should be added to
          type: string
        idCard:
          description: id of the card that the checklist should be added to
          type: string
        idChecklistSource:
          description: The id of the source checklist to copy into a new checklist.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: checklist
    checklists_checkItems:
      properties:
        checked:
          description: ' true or false'
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: checklist
    checklists_idCard:
      properties:
        value:
          description: The id of the card that the checklist is on
          type: string
      type: object
      xml:
        name: checklist
    checklists_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: checklist
    checklists_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: checklist
    labelNames_blue:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_green:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_orange:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_purple:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_red:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labelNames_yellow:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: board
    labels:
      properties:
        color:
          description: A valid label color or null
          type: string
        idBoard:
          description: An id
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: label
    labels_color:
      properties:
        value:
          description: A valid label color or null
          type: string
      type: object
      xml:
        name: label
    labels_name:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: label
    lists:
      properties:
        closed:
          description: ' true or false'
          type: string
        idBoard:
          description: id of the board that the list should be added to
          type: string
        idListSource:
          description: The id of the list to copy into a new list.
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        subscribed:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: list
    lists_cards:
      properties:
        desc:
          description: a string with a length from 0 to 16384
          type: string
        due:
          description: A date, or null
          type: string
        idMembers:
          description: A comma-separated list of objectIds, 24-character hex strings
          type: string
        labels:
          description: >-
            all or a comma-separated list of: blue, green, orange, purple, red
            or yellow
          type: string
        name:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: list
    lists_closed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: list
    lists_idBoard:
      properties:
        pos:
          description: position of the list on the new board
          type: string
        value:
          description: id of the board the list should be moved to
          type: string
      type: object
      xml:
        name: list
    lists_moveAllCards:
      properties:
        idBoard:
          description: id of the board that the cards should be moved to
          type: string
      type: object
      xml:
        name: list
    lists_name:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: list
    lists_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: list
    lists_subscribed:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: list
    members:
      properties:
        avatarSource:
          description: 'One of: gravatar, none or upload'
          type: string
        bio:
          description: a string with a length from 0 to 16384
          type: string
        fullName:
          description: >-
            A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        initials:
          description: >-
            A string with a length from 1 to 4.  Cannot begin or end with a
            space
          type: string
        prefs/colorBlind:
          description: ' true or false'
          type: string
        prefs/locale:
          description: a string with a length from 0 to 255
          type: string
        prefs/minutesBetweenSummaries:
          description: '-1 (disabled), 1 or 60'
          type: string
        username:
          description: >-
            A string with a length of at least 3.  Only lowercase letters,
            underscores, and numbers are allowed.  Must be unique.
          type: string
      type: object
      xml:
        name: member
    members_avatar:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: member
    members_avatarSource:
      properties:
        value:
          description: 'One of: gravatar, none or upload'
          type: string
      type: object
      xml:
        name: member
    members_bio:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: member
    members_boardBackgrounds:
      properties:
        brightness:
          description: 'One of: dark, light or unknown'
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: member
    members_boardStars:
      properties:
        idBoard:
          description: The id of the board to star
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: member
    members_boardStars_idBoard:
      properties:
        value:
          description: An id
          type: string
      type: object
      xml:
        name: member
    members_boardStars_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: member
    members_customBoardBackgrounds:
      properties:
        brightness:
          description: 'One of: dark, light or unknown'
          type: string
        file:
          description: A file
          type: string
        tile:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: member
    members_customEmoji:
      properties:
        file:
          description: A file
          type: string
        name:
          description: a string with a length from 2 to 64
          type: string
      type: object
      xml:
        name: member
    members_customStickers:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: member
    members_fullName:
      properties:
        value:
          description: >-
            A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
      type: object
      xml:
        name: member
    members_initials:
      properties:
        value:
          description: >-
            A string with a length from 1 to 4.  Cannot begin or end with a
            space
          type: string
      type: object
      xml:
        name: member
    members_oneTimeMessagesDismissed:
      properties:
        value:
          description: Type of message dismissed
          type: string
      type: object
      xml:
        name: member
    members_savedSearches:
      properties:
        name:
          description: A non-empty string with at least one non-space character
          type: string
        pos:
          description: A position. top , bottom , or a positive number.
          type: string
        query:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_name:
      properties:
        value:
          description: A non-empty string with at least one non-space character
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_pos:
      properties:
        value:
          description: A position. top , bottom , or a positive number.
          type: string
      type: object
      xml:
        name: member
    members_savedSearches_query:
      properties:
        value:
          description: a string with a length from 1 to 16384
          type: string
      type: object
      xml:
        name: member
    members_username:
      properties:
        value:
          description: >-
            A string with a length of at least 3.  Only lowercase letters,
            underscores, and numbers are allowed.  Must be unique.
          type: string
      type: object
      xml:
        name: member
    myPrefs_emailPosition:
      properties:
        value:
          description: 'One of: bottom or top'
          type: string
      type: object
      xml:
        name: board
    myPrefs_idEmailList:
      properties:
        value:
          description: An id
          type: string
      type: object
      xml:
        name: board
    myPrefs_showListGuide:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebar:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarActivity:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarBoardActions:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    myPrefs_showSidebarMembers:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    notifications:
      properties:
        unread:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: notification
    notifications_unread:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: notification
    organizations:
      properties:
        desc:
          description: a string with a length from 0 to 16384
          type: string
        displayName:
          description: >-
            A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        name:
          description: a string with a length from 0 to 16384
          type: string
        prefs/associatedDomain:
          description: The google apps domain to link this org to.
          type: string
        prefs/boardVisibilityRestrict/org:
          description: 'One of: admin, none or org'
          type: string
        prefs/boardVisibilityRestrict/private:
          description: 'One of: admin, none or org'
          type: string
        prefs/boardVisibilityRestrict/public:
          description: 'One of: admin, none or org'
          type: string
        prefs/externalMembersDisabled:
          description: ' true or false'
          type: string
        prefs/googleAppsVersion:
          description: a number from 1 to 2
          type: string
        prefs/orgInviteRestrict:
          description: An email address with optional expansion tokens
          type: string
        prefs/permissionLevel:
          description: 'One of: private or public'
          type: string
        website:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: organization
    organizations_desc:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: organization
    organizations_displayName:
      properties:
        value:
          description: >-
            A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
      type: object
      xml:
        name: organization
    organizations_logo:
      properties:
        file:
          description: A file
          type: string
      type: object
      xml:
        name: organization
    organizations_members:
      properties:
        email:
          description: An email address
          type: string
        fullName:
          description: >-
            A string with a length of at least 1.  Cannot begin or end with a
            space.
          type: string
        type:
          description: 'One of: admin, normal or observer'
          type: string
      type: object
      xml:
        name: organization
    organizations_members_deactivated:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: organization
    organizations_memberships:
      properties:
        member_fields:
          description: >-
            all or a comma-separated list of: avatarHash, bio, bioData,
            confirmed, fullName, idPremOrgsAdmin, initials, memberType,
            products, status, url or username
          type: string
        type:
          description: 'One of: admin, normal or observer'
          type: string
      type: object
      xml:
        name: organization
    organizations_name:
      properties:
        value:
          description: >-
            A string with a length of at least 3.  Only lowercase letters,
            underscores, and numbers are allowed.  Must be unique.
          type: string
      type: object
      xml:
        name: organization
    organizations_website:
      properties:
        value:
          description: A URL starting with http:// or https:// or null
          type: string
      type: object
      xml:
        name: organization
    prefs_associatedDomain:
      properties:
        value:
          description: The google apps domain to link this org to.
          type: string
      type: object
      xml:
        name: organization
    prefs_background:
      properties:
        value:
          description: A standard background name, or the id of a custom background
          type: string
      type: object
      xml:
        name: board
    prefs_boardVisibilityRestrict:
      properties:
        value:
          description: 'One of: admin, none or org'
          type: string
      type: object
      xml:
        name: organization
    prefs_calendarFeedEnabled:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    prefs_cardAging:
      properties:
        value:
          description: 'One of: pirate or regular'
          type: string
      type: object
      xml:
        name: board
    prefs_cardCovers:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    prefs_colorBlind:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: member
    prefs_comments:
      properties:
        value:
          description: 'One of: disabled, members, observers, org or public'
          type: string
      type: object
      xml:
        name: board
    prefs_externalMembersDisabled:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: organization
    prefs_googleAppsVersion:
      properties:
        value:
          description: a number from 1 to 2
          type: string
      type: object
      xml:
        name: organization
    prefs_invitations:
      properties:
        value:
          description: 'One of: admins or members'
          type: string
      type: object
      xml:
        name: board
    prefs_locale:
      properties:
        value:
          description: a string with a length from 0 to 255
          type: string
      type: object
      xml:
        name: member
    prefs_minutesBetweenSummaries:
      properties:
        value:
          description: '-1 (disabled), 1 or 60'
          type: string
      type: object
      xml:
        name: member
    prefs_orgInviteRestrict:
      properties:
        value:
          description: An email address with optional expansion tokens
          type: string
      type: object
      xml:
        name: organization
    prefs_permissionLevel:
      properties:
        value:
          description: 'One of: private or public'
          type: string
      type: object
      xml:
        name: board
    prefs_selfJoin:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: board
    prefs_voting:
      properties:
        value:
          description: 'One of: disabled, members, observers, org or public'
          type: string
      type: object
      xml:
        name: board
    sessions:
      properties:
        idBoard:
          description: >-
            The id of the board you&#39;re viewing.  Boards with no viewers will
            not get updates about members&#39; statuses.
          type: string
        status:
          description: 'One of: active, disconnected or idle'
          type: string
      type: object
      xml:
        name: session
    sessions_status:
      properties:
        value:
          description: 'One of: active, disconnected or idle'
          type: string
      type: object
      xml:
        name: session
    tokens_webhooks:
      properties:
        description:
          description: a string with a length from 0 to 16384
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model to be monitored
          type: string
      type: object
      xml:
        name: token
    webhooks:
      properties:
        description:
          description: a string with a length from 0 to 16384
          type: string
        active:
          description: ' true or false'
          type: string
        callbackURL:
          description: A valid URL that is reachable with a HEAD request
          type: string
        idModel:
          description: id of the model that should be hooked
          type: string
      type: object
      xml:
        name: webhook
    webhooks_active:
      properties:
        value:
          description: ' true or false'
          type: string
      type: object
      xml:
        name: webhook
    webhooks_callbackURL:
      properties:
        value:
          description: A valid URL that is reachable with a HEAD request
          type: string
      type: object
      xml:
        name: webhook
    webhooks_description:
      properties:
        value:
          description: a string with a length from 0 to 16384
          type: string
      type: object
      xml:
        name: webhook
    webhooks_idModel:
      properties:
        value:
          description: id of the model to be monitored
          type: string
      type: object
      xml:
        name: webhook
  securitySchemes:
    api_key:
      in: query
      name: key
      type: apiKey
    api_token:
      in: query
      name: token
      type: apiKey
x-hasEquivalentPaths: true
externalDocs:
  url: https://developers.trello.com
