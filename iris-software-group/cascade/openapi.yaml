openapi: 3.0.1
info:
  title: HR API
  description: <a href='swaggerv2.json'>Download Swagger Json in OAS2 Format.</a>
  version: '2'
  contact:
    name: Iris Software Group
    url: https://help.iris.co.uk/hr/cascade/api/
    email: hrapi@iris.co.uk
servers:
  - url: https://api.iris.co.uk/hr/v2
tags:
  - name: Absences
  - name: AbsenceDays
  - name: Employees
  - name: Jobs
  - name: BankDetails
  - name: Hierarchy
  - name: AbsenceReasons
  - name: Entitlements
  - name: Benefits
  - name: PublicHolidays
paths:
  /employees:
    get:
      tags:
        - Employees
      summary: Gets a list of Employees.
      operationId: Employees_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            text/plain; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeQueryModel'
    post:
      tags:
        - Employees
      summary: Creates a new Employee.
      operationId: Employees_createNewEmployee
      requestBody:
        description: New Employee.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=minimal; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=full; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.metadata=none; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/json; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/xml; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/prs.odatatestxx-odata; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          text/json; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
          application/*+json; version=2:
            schema:
              $ref: '#/components/schemas/CreateEmployeeCommand'
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployeeResponse'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            text/plain; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/EmployeesCreateNewEmployee200Response'
  /employees/{id}:
    get:
      tags:
        - Employees
      summary: Gets a single Employee referenced by ID.
      operationId: Employees_getById
      parameters:
        - description: Employee ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            text/plain; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/EmployeeModel'
    put:
      tags:
        - Employees
      summary: Update an Employee referenced by ID.
      operationId: Employees_updateById
      parameters:
        - description: The ID of Employee to update.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The new state of the Employee.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=minimal; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=full; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.metadata=none; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/json; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/xml; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/prs.odatatestxx-odata; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          text/json; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
          application/*+json; version=2:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeCommand'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /jobs:
    get:
      tags:
        - Jobs
      summary: Gets a list of Jobs.
      operationId: Jobs_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            text/plain; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/JobQueryModel'
    post:
      tags:
        - Jobs
      summary: Creates a new Job.
      operationId: Jobs_createNewJob
      requestBody:
        description: New Job.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=minimal; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=full; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.metadata=none; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/json; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/xml; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/prs.odatatestxx-odata; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          text/json; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
          application/*+json; version=2:
            schema:
              $ref: '#/components/schemas/CreateJobCommand'
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJobResponse'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            text/plain; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/JobsCreateNewJob200Response'
  /jobs/{id}:
    get:
      tags:
        - Jobs
      summary: Gets a single Job referenced by an ID.
      operationId: Jobs_getById
      parameters:
        - description: Job ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetByIdResponse'
            application/json;odata.metadata=minimal;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.metadata=minimal; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.metadata=full;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.metadata=full;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.metadata=full; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.metadata=none;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.metadata=none;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.metadata=none; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.streaming=true; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json;odata.streaming=false; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/json; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/xml; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            application/prs.odatatestxx-odata; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            text/plain; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
            text/json; version=2:
              schema:
                $ref: '#/components/schemas/JobsGetById200Response'
    put:
      tags:
        - Jobs
      summary: Update a Job referenced by an ID.
      operationId: Jobs_updateById
      parameters:
        - description: The ID of the Job to update.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The new state of the Job.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=minimal; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=full; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.metadata=none; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.streaming=true; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json;odata.streaming=false; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/json; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/xml; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/prs.odatatestxx-odata; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          text/json; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
          application/*+json; version=2:
            schema:
              $ref: '#/components/schemas/UpdateJobCommand'
      responses:
        '204':
          description: Success
  /hierarchy:
    get:
      tags:
        - Hierarchy
      summary: Gets a list of Hierarchy Nodes.
      operationId: Hierarchy_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeQueryModel'
  /hierarchy/{id}:
    get:
      tags:
        - Hierarchy
      summary: Gets a single Hierarchy Node by ID.
      operationId: Hierarchy_getNodeById
      parameters:
        - description: Hierarchy Node ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
  /hierarchy/{id}/path:
    get:
      tags:
        - Hierarchy
      summary: >-
        Gets a Hierarchy Path by ID. The path is an array of nodes traversed
        from the root to the node specified.
      operationId: Hierarchy_getPathById
      parameters:
        - description: Hierarchy Node ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/HierarchyNodeModel'
        '404':
          description: Not Found
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /bankdetails:
    get:
      tags:
        - BankDetails
      summary: Gets a list of Bank Details.
      operationId: BankDetails_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsQueryModel'
    post:
      tags:
        - BankDetails
      summary: Creates a Bank Details.
      operationId: BankDetails_createBankDetail
      requestBody:
        description: The value of Bank Details.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=minimal; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=full; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.metadata=none; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/json; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/xml; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/prs.odatatestxx-odata; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          text/json; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
          application/*+json; version=1:
            schema:
              $ref: '#/components/schemas/CreateBankDetailsCommand'
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetailResponse'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsCreateBankDetail200Response'
  /bankdetails/{id}:
    get:
      tags:
        - BankDetails
      summary: Gets a single Bank Details by an ID.
      operationId: BankDetails_getById
      parameters:
        - description: Bank Details ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/BankDetailsModel'
    put:
      tags:
        - BankDetails
      summary: Updates Bank Details.
      operationId: BankDetails_updateBankDetail
      parameters:
        - description: The ID of Bank Details to update.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The value of Bank Details.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=minimal; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=full; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.metadata=none; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/xml; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/prs.odatatestxx-odata; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          text/json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
          application/*+json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateBankDetailsCommand'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /attendance/absencereasons:
    get:
      tags:
        - AbsenceReasons
      summary: Gets a list of Absence Reasons
      operationId: AbsenceReasons_list
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonQueryModel'
  /attendance/absencereasons/{id}:
    get:
      tags:
        - AbsenceReasons
      summary: Gets a single Absence Reason referenced by ID.
      operationId: AbsenceReasons_getById
      parameters:
        - description: Absence Reason ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceReasonModel'
  /attendance/absencereasons/{id}/employees/{employeeId}:
    get:
      tags:
        - AbsenceReasons
      summary: Gets a single Employee Absence Reason referenced by ID.
      operationId: AbsenceReasons_getEmployeeById
      parameters:
        - description: Absence Reason ID.
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: Employee ID.
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/EmployeeAbsenceReasonModel'
  /attendance/entitlements:
    get:
      tags:
        - Entitlements
      summary: Gets a list of Entitlements.
      operationId: Entitlements_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementQueryModel'
  /attendance/entitlements/{id}:
    get:
      tags:
        - Entitlements
      summary: Gets an Entitlement by ID.
      operationId: Entitlements_getById
      parameters:
        - description: Entitlement ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/EntitlementModel'
  /attendance/absences:
    get:
      tags:
        - Absences
      summary: Gets a list of Absences.
      operationId: Absences_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceQueryModel'
    post:
      tags:
        - Absences
      summary: Creates a new Absence.
      operationId: Absences_createNewAbsence
      description: >-
        ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
        request method is currently in beta testing.</b> To gain access to use
        this method, please contact <a
        href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
      requestBody:
        description: New Absence.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=minimal; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=full; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.metadata=none; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/json; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/xml; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/prs.odatatestxx-odata; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          text/json; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
          application/*+json; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceCommand'
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsenceResponse'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsencesCreateNewAbsence200Response'
  /attendance/absences/{id}:
    get:
      tags:
        - Absences
      summary: Gets a single Absence referenced by ID.
      operationId: Absences_getById
      parameters:
        - description: Absence ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceModel'
    put:
      tags:
        - Absences
      summary: Update an Absence referenced by ID.
      operationId: Absences_updateById
      description: >-
        ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
        request method is currently in beta testing.</b> To gain access to use
        this method, please contact <a
        href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
      parameters:
        - description: The ID of the Absence to update.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The new state of the Absence.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=minimal; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=full; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.metadata=none; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/xml; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/prs.odatatestxx-odata; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          text/json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
          application/*+json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceCommand'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Absences
      summary: Delete an Absence referenced by ID.
      operationId: Absences_deleteById
      description: >-
        ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
        request method is currently in beta testing.</b> To gain access to use
        this method, please contact <a
        href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
      parameters:
        - description: The ID of the Absence to delete.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
  /attendance/absencedays:
    get:
      tags:
        - AbsenceDays
      summary: Gets a list of all Absence Days.
      operationId: AbsenceDays_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayQueryModel'
    post:
      tags:
        - AbsenceDays
      summary: Creates an Absence Day.
      operationId: AbsenceDays_createAbsenceDay
      description: >-
        ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
        request method is currently in beta testing.</b> To gain access to use
        this method, please contact <a
        href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
      requestBody:
        description: The values for an Absence Day.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=minimal; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=full; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.metadata=none; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/json; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/xml; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/prs.odatatestxx-odata; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          text/json; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
          application/*+json; version=1:
            schema:
              $ref: '#/components/schemas/CreateAbsenceDayCommand'
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDayResponse'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDaysCreateAbsenceDay200Response'
  /attendance/absencedays/{id}:
    get:
      tags:
        - AbsenceDays
      summary: Gets a single Absence Day based on ID given.
      operationId: AbsenceDays_getById
      parameters:
        - description: Absence Day ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/AbsenceDayModel'
    put:
      tags:
        - AbsenceDays
      summary: Updates an Absence Day.
      operationId: AbsenceDays_updateAbsenceDay
      description: >-
        ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
        request method is currently in beta testing.</b> To gain access to use
        this method, please contact <a
        href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
      parameters:
        - description: The ID of the Absence Day to update.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The value of an Absence Day.
        content:
          application/json;odata.metadata=minimal;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=minimal;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=minimal; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=full;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=full;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=full; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=none;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=none;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.metadata=none; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.streaming=true; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json;odata.streaming=false; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/xml; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/prs.odatatestxx-odata; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          text/json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
          application/*+json; version=1:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDayCommand'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - AbsenceDays
      summary: Deletes an Absence Day.
      operationId: AbsenceDays_deleteById
      description: >-
        ![Beta](https://img.shields.io/badge/Status-Beta-yellow) <b>This API
        request method is currently in beta testing.</b> To gain access to use
        this method, please contact <a
        href='mailto:hrapi@iris.co.uk'>hrapi@iris.co.uk.</a>
      parameters:
        - description: The ID of the Absence Day to delete.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
  /benefits:
    get:
      tags:
        - Benefits
      summary: Gets a list of Benefits.
      operationId: Benefits_getList
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/BenefitQueryModel'
  /benefits/{id}:
    get:
      tags:
        - Benefits
      summary: Gets a single Benefit referenced by ID.
      operationId: Benefits_getById
      parameters:
        - description: Benefit ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/BenefitModel'
  /publicholidays:
    get:
      tags:
        - PublicHolidays
      summary: Gets a set of Public Holidays with locations.
      operationId: PublicHolidays_getLocations
      parameters:
        - description: >-
            Show only the first n items, maximum of 250, see [Paging -
            Top](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)
          name: $top
          in: query
          schema:
            maximum: 250
            minimum: 0
            type: integer
        - description: >-
            Skip the first n items, see [Paging -
            Skip](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)
          name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
        - description: >-
            Filter items by property values, see
            [Filtering](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)
          name: $filter
          in: query
          schema:
            type: string
        - description: >-
            Select properties to be returned, see
            [Select](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)
          name: $select
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - description: >-
            Order items by property values, see
            [Sorting](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)
          name: $orderby
          in: query
          style: form
          explode: false
          schema:
            uniqueItems: true
            type: string
        - description: >-
            Include count of items, see
            [Count](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)
          name: $count
          in: query
          schema:
            minimum: 0
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayQueryModel'
  /publicholidays/{id}:
    get:
      tags:
        - PublicHolidays
      summary: Gets a location based Public Holiday list by ID.
      operationId: PublicHolidays_getLocationListById
      parameters:
        - description: Public Holiday ID.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json;odata.metadata=minimal;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=minimal;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=minimal; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=full;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=full;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=full; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=none;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=none;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.metadata=none; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.streaming=true; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json;odata.streaming=false; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/json; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/xml; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            application/prs.odatatestxx-odata; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            text/plain; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
            text/json; version=1:
              schema:
                $ref: '#/components/schemas/PublicHolidayModel'
components:
  schemas:
    EmployeeQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeModel'
          nullable: true
    EmployeeModel:
      description: An HR Employee.
      type: object
      properties:
        DisplayId:
          description: "The Display ID of the Employee. <br />\r\nIf provided must be unqiue, If null then it will automatically be generated. <br />\r\nCascade Source: [Employee].[DisplayEmployeeId]"
          maxLength: 50
          type: string
          nullable: true
        TitleHonorific:
          description: "The Title of the Employee. E.g. Mr, Mrs, Miss. <br />\r\nCascade Source: [Employee].[Title] translated through the TITLE system list."
          maxLength: 50
          type: string
          nullable: true
        FirstName:
          description: "The First Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Forename]"
          maxLength: 50
          type: string
          nullable: true
        KnownAs:
          description: "The name the Employee is commonly known as. <br />\r\nCascade Source: [Employee].[KnownAs]"
          maxLength: 50
          type: string
          nullable: true
        OtherName:
          description: "Any other name that the Employee has. <br />\r\nCascade Source: [Employee].[OtherName]"
          maxLength: 50
          type: string
          nullable: true
        LastName:
          description: "The Last Name, Surname or Family Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Surname]"
          maxLength: 50
          type: string
          nullable: true
        CostCentre:
          description: "The Cost Centre assigned to the Employee. <br />\r\nCascade Source: [Employee].[CostCentre]"
          maxLength: 50
          type: string
          nullable: true
        WorkingStatus:
          description: "The Status of the Employee E.g. On Holiday, Sick. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [Sysview_Employee_Status].[StatusDescription]"
          type: string
          nullable: true
        IsManager:
          description: "Indicates if the Employee is a Manager. <br />\r\nTrue if any other Employee's active <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\">Job</see> has this Employee as their Line Manager. <br />\r\nAutomaticaly Calculated."
          type: boolean
          nullable: true
        NationalInsuranceNumber:
          description: "The National Insurance Number of the Employee. <br />\r\nCascade Source: [Employee].[NationalInsuranceNo]"
          maxLength: 50
          type: string
          nullable: true
        PayrollId:
          description: "The Payroll ID of the Employee. <br />\r\nCascade Source: [Employee].[PayrollId]"
          maxLength: 50
          type: string
          nullable: true
        TaxCode:
          description: "The Tax Code of the Employee. <br />\r\nCascade Source: [Employee].[TaxCode]"
          maxLength: 5
          type: string
          nullable: true
        IncludeInPayroll:
          description: "Indicates if the Employee should be included in Payroll. <br />\r\nCascade Source: [Employee].[IncludeInPayroll]"
          type: boolean
          nullable: true
        EmploymentStartDate:
          description: "The date the Employee started with their current Employer. <br />\r\nCascade Source: [Employee].[EmployeeStartDate]"
          type: string
          format: date-time
          nullable: true
        EmploymentLeftDate:
          description: "The date the Employee left their current Employer. <br />\r\nCascade Source: [Employee].[EmployementLeftDate]"
          type: string
          format: date-time
          nullable: true
        ContinuousServiceDate:
          description: "The date the Employee's continuous service should be applied from. <br />\r\nCascade Source: [Employee].[ContServiceDate]"
          type: string
          format: date-time
          nullable: true
        DateOfBirth:
          description: "The Date of Birth of the Employee. <br />\r\nCascade Source: [Employee].[DateOfBirth]"
          type: string
          format: date-time
          nullable: true
        LastWorkingDate:
          description: "The date of the last working date of the Employee. <br />\r\nCascade Source: [Employee].[LeaverLastWorkDate]"
          type: string
          format: date-time
          nullable: true
        Gender:
          description: "The Gender of the Employee. <br />\r\nCascade Source: [Employee].[Sex] translated through the GENDER system list."
          type: string
          nullable: true
        Ethnicity:
          description: "The Ethnicity of the Employee. <br />\r\nCascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list."
          maxLength: 50
          type: string
          nullable: true
        Nationality:
          description: "The Nationality of the Employee. <br />\r\nCascade Source: [Employee].[Nationality] translated through the NATIONALITY system list."
          maxLength: 50
          type: string
          nullable: true
        Religion:
          description: "The Religion of the Employee. <br />\r\nCascade Source: [Employee].[Religion] transalated through the RELIGION system list."
          maxLength: 50
          type: string
          nullable: true
        LeaverReason:
          description: "The reason for the Employee to Leave. <br />\r\nCascade Source: [Employee].[LeaverReason]"
          maxLength: 50
          type: string
          nullable: true
        MaritalStatus:
          description: "The marrital status of the Employee. <br />\r\nCascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list."
          maxLength: 50
          type: string
          nullable: true
        Phones:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone">Phone
            Numbers</see> belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Phone'
          nullable: true
        Emails:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email">Email
            Addresses</see> belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Email'
          nullable: true
        Addresses:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address">Addresses</see>
            belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Address'
          nullable: true
        GenderIdentity:
          description: "The Gender Identity of the Employee. <br />\r\nCascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list."
          maxLength: 50
          type: string
          nullable: true
        WindowsUsername:
          description: "The Windows Username of the Employee. <br />\r\nCascade Source: [Employee].[WindowsUsername]"
          maxLength: 50
          type: string
          nullable: true
        Id:
          description: >-
            This ID is generated by the Iris HR platform and does not relate to
            the Cascade Employee ID.
          type: string
          nullable: true
        SourceSystemId:
          description: "Source HR System Id. <br />\r\nCascade Source: [Employee].[EmployeeId] <br />\r\nRead Only"
          type: string
          nullable: true
        CreatedOn:
          description: The date when the Employee was created in the Iris HR platform.
          type: string
          format: date-time
        SourceSystemCreatedOn:
          description: "The date when the Employee was created in the Source HR System. <br />\r\nCascade Source: [Employee].[SYS_EffectiveDate] <br />\r\nRead Only"
          type: string
          format: date-time
          nullable: true
        CreatedBy:
          description: Not used as the Iris HR platform has no concept of users.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date when the Employee was created or last updated.
          type: string
          format: date-time
          nullable: true
        SourceSystemLastModifiedOn:
          description: "The latest date when the Employee or Home Address was created or last updated in the Source HR System. <br />\r\nCascade Source: Latest of [Employee].[SYS_ModifiedDate] and [EmployeeHomeAddress].[SYS_ModifiedDate] <br />\r\nRead Only"
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: Not used as Iris HR platform has no concept of users.
          type: string
          nullable: true
    CreateEmployeeCommand:
      type: object
      properties:
        DisplayId:
          description: "The Display ID of the Employee. <br />\r\nIf provided must be unqiue, If null then it will automatically be generated. <br />\r\nCascade Source: [Employee].[DisplayEmployeeId]"
          maxLength: 50
          type: string
          nullable: true
        TitleHonorific:
          description: "The Title of the Employee. E.g. Mr, Mrs, Miss. <br />\r\nCascade Source: [Employee].[Title] translated through the TITLE system list."
          maxLength: 50
          type: string
          nullable: true
        FirstName:
          description: "The First Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Forename]"
          maxLength: 50
          type: string
          nullable: true
        KnownAs:
          description: "The name the Employee is commonly known as. <br />\r\nCascade Source: [Employee].[KnownAs]"
          maxLength: 50
          type: string
          nullable: true
        OtherName:
          description: "Any other name that the Employee has. <br />\r\nCascade Source: [Employee].[OtherName]"
          maxLength: 50
          type: string
          nullable: true
        LastName:
          description: "The Last Name, Surname or Family Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Surname]"
          maxLength: 50
          type: string
          nullable: true
        CostCentre:
          description: "The Cost Centre assigned to the Employee. <br />\r\nCascade Source: [Employee].[CostCentre]"
          maxLength: 50
          type: string
          nullable: true
        WorkingStatus:
          description: "The Status of the Employee E.g. On Holiday, Sick. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [Sysview_Employee_Status].[StatusDescription]"
          type: string
          nullable: true
        IsManager:
          description: "Indicates if the Employee is a Manager. <br />\r\nTrue if any other Employee's active <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\">Job</see> has this Employee as their Line Manager. <br />\r\nAutomaticaly Calculated."
          type: boolean
          nullable: true
        NationalInsuranceNumber:
          description: "The National Insurance Number of the Employee. <br />\r\nCascade Source: [Employee].[NationalInsuranceNo]"
          maxLength: 50
          type: string
          nullable: true
        PayrollId:
          description: "The Payroll ID of the Employee. <br />\r\nCascade Source: [Employee].[PayrollId]"
          maxLength: 50
          type: string
          nullable: true
        TaxCode:
          description: "The Tax Code of the Employee. <br />\r\nCascade Source: [Employee].[TaxCode]"
          maxLength: 5
          type: string
          nullable: true
        IncludeInPayroll:
          description: "Indicates if the Employee should be included in Payroll. <br />\r\nCascade Source: [Employee].[IncludeInPayroll]"
          type: boolean
          nullable: true
        EmploymentStartDate:
          description: "The date the Employee started with their current Employer. <br />\r\nCascade Source: [Employee].[EmployeeStartDate]"
          type: string
          format: date-time
          nullable: true
        EmploymentLeftDate:
          description: "The date the Employee left their current Employer. <br />\r\nCascade Source: [Employee].[EmployementLeftDate]"
          type: string
          format: date-time
          nullable: true
        ContinuousServiceDate:
          description: "The date the Employee's continuous service should be applied from. <br />\r\nCascade Source: [Employee].[ContServiceDate]"
          type: string
          format: date-time
          nullable: true
        DateOfBirth:
          description: "The Date of Birth of the Employee. <br />\r\nCascade Source: [Employee].[DateOfBirth]"
          type: string
          format: date-time
          nullable: true
        LastWorkingDate:
          description: "The date of the last working date of the Employee. <br />\r\nCascade Source: [Employee].[LeaverLastWorkDate]"
          type: string
          format: date-time
          nullable: true
        Gender:
          description: "The Gender of the Employee. <br />\r\nCascade Source: [Employee].[Sex] translated through the GENDER system list."
          type: string
          nullable: true
        Ethnicity:
          description: "The Ethnicity of the Employee. <br />\r\nCascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list."
          maxLength: 50
          type: string
          nullable: true
        Nationality:
          description: "The Nationality of the Employee. <br />\r\nCascade Source: [Employee].[Nationality] translated through the NATIONALITY system list."
          maxLength: 50
          type: string
          nullable: true
        Religion:
          description: "The Religion of the Employee. <br />\r\nCascade Source: [Employee].[Religion] transalated through the RELIGION system list."
          maxLength: 50
          type: string
          nullable: true
        LeaverReason:
          description: "The reason for the Employee to Leave. <br />\r\nCascade Source: [Employee].[LeaverReason]"
          maxLength: 50
          type: string
          nullable: true
        MaritalStatus:
          description: "The marrital status of the Employee. <br />\r\nCascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list."
          maxLength: 50
          type: string
          nullable: true
        Phones:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone">Phone
            Numbers</see> belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Phone'
          nullable: true
        Emails:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email">Email
            Addresses</see> belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Email'
          nullable: true
        Addresses:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address">Addresses</see>
            belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Address'
          nullable: true
        GenderIdentity:
          description: "The Gender Identity of the Employee. <br />\r\nCascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list."
          maxLength: 50
          type: string
          nullable: true
        WindowsUsername:
          description: "The Windows Username of the Employee. <br />\r\nCascade Source: [Employee].[WindowsUsername]"
          maxLength: 50
          type: string
          nullable: true
    UpdateEmployeeCommand:
      type: object
      properties:
        DisplayId:
          description: "The Display ID of the Employee. <br />\r\nIf provided must be unqiue, If null then it will automatically be generated. <br />\r\nCascade Source: [Employee].[DisplayEmployeeId]"
          maxLength: 50
          type: string
          nullable: true
        TitleHonorific:
          description: "The Title of the Employee. E.g. Mr, Mrs, Miss. <br />\r\nCascade Source: [Employee].[Title] translated through the TITLE system list."
          maxLength: 50
          type: string
          nullable: true
        FirstName:
          description: "The First Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Forename]"
          maxLength: 50
          type: string
          nullable: true
        KnownAs:
          description: "The name the Employee is commonly known as. <br />\r\nCascade Source: [Employee].[KnownAs]"
          maxLength: 50
          type: string
          nullable: true
        OtherName:
          description: "Any other name that the Employee has. <br />\r\nCascade Source: [Employee].[OtherName]"
          maxLength: 50
          type: string
          nullable: true
        LastName:
          description: "The Last Name, Surname or Family Name of the Employee. <br />\r\nRequired. <br />\r\nCascade Source: [Employee].[Surname]"
          maxLength: 50
          type: string
          nullable: true
        CostCentre:
          description: "The Cost Centre assigned to the Employee. <br />\r\nCascade Source: [Employee].[CostCentre]"
          maxLength: 50
          type: string
          nullable: true
        WorkingStatus:
          description: "The Status of the Employee E.g. On Holiday, Sick. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [Sysview_Employee_Status].[StatusDescription]"
          type: string
          nullable: true
        IsManager:
          description: "Indicates if the Employee is a Manager. <br />\r\nTrue if any other Employee's active <see cref=\"T:Iris.Api.Hr.Employee.Domain.Entities.V1.Job\">Job</see> has this Employee as their Line Manager. <br />\r\nAutomaticaly Calculated."
          type: boolean
          nullable: true
        NationalInsuranceNumber:
          description: "The National Insurance Number of the Employee. <br />\r\nCascade Source: [Employee].[NationalInsuranceNo]"
          maxLength: 50
          type: string
          nullable: true
        PayrollId:
          description: "The Payroll ID of the Employee. <br />\r\nCascade Source: [Employee].[PayrollId]"
          maxLength: 50
          type: string
          nullable: true
        TaxCode:
          description: "The Tax Code of the Employee. <br />\r\nCascade Source: [Employee].[TaxCode]"
          maxLength: 5
          type: string
          nullable: true
        IncludeInPayroll:
          description: "Indicates if the Employee should be included in Payroll. <br />\r\nCascade Source: [Employee].[IncludeInPayroll]"
          type: boolean
          nullable: true
        EmploymentStartDate:
          description: "The date the Employee started with their current Employer. <br />\r\nCascade Source: [Employee].[EmployeeStartDate]"
          type: string
          format: date-time
          nullable: true
        EmploymentLeftDate:
          description: "The date the Employee left their current Employer. <br />\r\nCascade Source: [Employee].[EmployementLeftDate]"
          type: string
          format: date-time
          nullable: true
        ContinuousServiceDate:
          description: "The date the Employee's continuous service should be applied from. <br />\r\nCascade Source: [Employee].[ContServiceDate]"
          type: string
          format: date-time
          nullable: true
        DateOfBirth:
          description: "The Date of Birth of the Employee. <br />\r\nCascade Source: [Employee].[DateOfBirth]"
          type: string
          format: date-time
          nullable: true
        LastWorkingDate:
          description: "The date of the last working date of the Employee. <br />\r\nCascade Source: [Employee].[LeaverLastWorkDate]"
          type: string
          format: date-time
          nullable: true
        Gender:
          description: "The Gender of the Employee. <br />\r\nCascade Source: [Employee].[Sex] translated through the GENDER system list."
          type: string
          nullable: true
        Ethnicity:
          description: "The Ethnicity of the Employee. <br />\r\nCascade Source: [Employee].[EthnicOrigin] translated through the ETHNICTORIGIN system list."
          maxLength: 50
          type: string
          nullable: true
        Nationality:
          description: "The Nationality of the Employee. <br />\r\nCascade Source: [Employee].[Nationality] translated through the NATIONALITY system list."
          maxLength: 50
          type: string
          nullable: true
        Religion:
          description: "The Religion of the Employee. <br />\r\nCascade Source: [Employee].[Religion] transalated through the RELIGION system list."
          maxLength: 50
          type: string
          nullable: true
        LeaverReason:
          description: "The reason for the Employee to Leave. <br />\r\nCascade Source: [Employee].[LeaverReason]"
          maxLength: 50
          type: string
          nullable: true
        MaritalStatus:
          description: "The marrital status of the Employee. <br />\r\nCascade Source: [Employee.[MaritalStatus] translated through the MARITALSTATUS system list."
          maxLength: 50
          type: string
          nullable: true
        Phones:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Phone">Phone
            Numbers</see> belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Phone'
          nullable: true
        Emails:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Email">Email
            Addresses</see> belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Email'
          nullable: true
        Addresses:
          description: >-
            The <see
            cref="T:Iris.Api.Hr.Employee.Domain.Entities.V1.Address">Addresses</see>
            belonging to the Employee.
          type: array
          items:
            $ref: '#/components/schemas/Address'
          nullable: true
        GenderIdentity:
          description: "The Gender Identity of the Employee. <br />\r\nCascade Source: [Employee].[GenderIdentity] translated through the GenderIdentity system list."
          maxLength: 50
          type: string
          nullable: true
        WindowsUsername:
          description: "The Windows Username of the Employee. <br />\r\nCascade Source: [Employee].[WindowsUsername]"
          maxLength: 50
          type: string
          nullable: true
        Id:
          description: "The ID of the Employee. <br />\r\nMust exist in the Employee Service."
          type: string
          nullable: true
    Address:
      description: The Address of a property
      type: object
      properties:
        Ownership:
          $ref: '#/components/schemas/Ownership'
        Address1:
          description: "Address Line 1 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address1]"
          maxLength: 50
          type: string
          nullable: true
        Address2:
          description: "Address Line 2 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address2]"
          maxLength: 50
          type: string
          nullable: true
        Address3:
          description: "Address Line 3 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address3]"
          maxLength: 50
          type: string
          nullable: true
        Address4:
          description: "Address Line 4 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address4]"
          maxLength: 50
          type: string
          nullable: true
        Address5:
          description: "Address Line 5 <br />\r\nCascade Source: [EmployeeHomeAddress].[Address5]"
          maxLength: 50
          type: string
          nullable: true
        PostCode:
          description: "Address UK Post Code <br />\r\nCascade Source: [EmployeeHomeAddress].[Postcode]"
          maxLength: 50
          type: string
          nullable: true
    Email:
      description: An Email with Ownership.
      type: object
      properties:
        Ownership:
          $ref: '#/components/schemas/Ownership'
        Value:
          description: "The Email Address. <br />\r\nCascade Source: <br />\r\nOwnership = Organization then [Employee].[WorkEmail], Maximum Length: 320<br />\r\nOwnership = Personal then [EmployeeHomeAddress].[HomeEmail], Maximum Length: 50."
          type: string
          nullable: true
    Phone:
      description: A Phone Number with Ownership and Type properties
      type: object
      properties:
        Ownership:
          $ref: '#/components/schemas/Ownership'
        Type:
          $ref: '#/components/schemas/PhoneType'
        Value:
          description: "The Phone Number value. <br />\r\nCascade Source:  <br />\r\nOwnership = Organization, Type = Landline Then [Employee].[WorkPhone] <br />\r\nOwnership = Organization, Type = Mobile Then [Employee].[WorkMobilePhoneNumber] <br />\r\nOwnership = Personal, Type = Landline Then [EmployeeHomeAddress].[Phone] <br />\r\nOwnership = Personal, Type = Mobile Then [EmployeeHomeAddress].[MobilePhone]"
          maxLength: 50
          type: string
          nullable: true
    PhoneType:
      description: The Type of Phone
      enum:
        - Mobile
        - Landline
      type: string
    Ownership:
      description: The Owner of the entity
      enum:
        - Personal
        - Organization
      type: string
    JobQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/JobModel'
          nullable: true
    JobModel:
      description: An HR Employee's Job.
      type: object
      properties:
        JobTitle:
          description: "The title of the Job. <br />\r\nCascade Source: [EmployeeJobs].[JobTitle]"
          maxLength: 100
          type: string
          nullable: true
        Classification:
          description: "The classification of the Job e.g. Technical, Professional, Managerial. <br />\r\nCascade Source: [EmployeeJobs].[Classification] translated through the JOBCLASSIFICATION system list."
          maxLength: 50
          type: string
          nullable: true
        StartDate:
          description: "The start date of the Job. <br />\r\nRequired. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate]"
          type: string
          format: date-time
        EndDate:
          description: "The end date of the Job. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[SYS_CalculatedEndDate]"
          type: string
          format: date-time
          nullable: true
        WorkingCalendar:
          description: "The name of the working calendar of the Job. <br />\r\nCascade Source: [EmployeeJobs].[CalendarName] which comes from [ValidWorkingCalendar].[CalendarName]"
          maxLength: 50
          type: string
          nullable: true
        LineManagerId:
          description: "The ID of the Employee that is the line manager for this Job. <br />\r\nMust exist in Employees Service. <br />\r\nCascade Source: [EmployeeJobs].[WorksForEmployeeId]"
          type: string
          nullable: true
        HierarchyNodeId:
          description: "The ID of the Employee's Hierarchy node of the Job. <br />\r\nMust exist in Hierarchy Service."
          type: string
          nullable: true
        Active:
          description: "The Job is currently active. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[sys_ActiveJob]"
          type: boolean
        Salary:
          description: "The salary of the Job. <br />\r\nCascade Source: [EmployeeJobs].[BasicPay]"
          type: number
          format: double
          nullable: true
        EmployeeId:
          description: "The ID of the Employee of the Job. <br />\r\nMust exist in Employee Service."
          type: string
          nullable: true
        Contract:
          description: "The contract of the Job e.g. Full Time, Part Time. <br />\r\nCascade Source: [EmployeeJobs].[ContractType] translated through the EMPLOYMENTTYPES system list."
          maxLength: 50
          type: string
          nullable: true
        PayFrequency:
          description: "How often the Job's salary will be paid e.g. Monthly, Weekly. <br />\r\nCascade Source: [EmployeeJobs].[PayFrequency] translated through the PAY FREQ system list."
          maxLength: 50
          type: string
          nullable: true
        PayBasis:
          description: "The unit of measurement the salary is specified against e.g. Yearly, Hourly. <br />\r\nCascade Source: [EmployeeJobs].[PayBasis] translated through the PAY BASIS system list."
          maxLength: 50
          type: string
          nullable: true
        FullTimeEquivalent:
          description: "The full-time equivalent to a full time employee's hours e.g. 1 = Full Time, 0.5 = Half Hours. <br />\r\nCascade Source: [EmployeeJobs].[FTE]."
          type: number
          format: double
          nullable: true
        Position:
          description: "The readonly property of employee position. <br />\r\nCascade Source: [EmployeeJobs].[Postid]."
          maxLength: 200
          type: string
          nullable: true
          readOnly: true
        ChangeReason:
          description: "The reason for the change. <br />\r\nCascade Source: [EmployeeJobs].[Reason]."
          maxLength: 50
          type: string
          nullable: true
        PublicHoliday:
          description: "The readonly property of public holiday. <br />\r\nCascade Soruce: [EmployeeJobs].[HolidayLocation]."
          maxLength: 50
          type: string
          nullable: true
          readOnly: true
        PayGrade:
          description: "The readonly property of pay grade.  <br />\r\nCascade Source: [EmployeeJobs].[PayGrade]."
          maxLength: 50
          type: string
          nullable: true
          readOnly: true
        SpinalPoint:
          description: "The readonly property of pay spinal point. <br />\r\nCascade Source: [EmployeeJobs].[SpinalPoint]."
          type: integer
          format: int32
          nullable: true
          readOnly: true
        NextIncrementDate:
          description: "The next increment date.  <br />\r\nCascade Source: [EmployeeJobs].[IncrementDate]."
          type: string
          format: date-time
          nullable: true
        TimesheetLocation:
          description: "The timesheet location. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetLocation]."
          maxLength: 50
          type: string
          nullable: true
        TimesheetRuleSet:
          description: "The readonly property of time sheet rule set. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetRuleSetID]."
          maxLength: 50
          type: string
          nullable: true
          readOnly: true
        TimesheetLunchDuration:
          description: "The time set lunch duration. <br />\r\nCascade Source: [EmployeeJobs].[LunchDuration]."
          type: string
          nullable: true
        AutoEnrolmentProfile:
          description: "The readonly property of automatic enrolment profiles. <br />\r\nCascade Source: [EmployeeJobs].[AutoEnrolmentProfile]."
          type: string
          nullable: true
          readOnly: true
        ExpenseSubmissionFrequency:
          description: "The expense submission frequency. <br />\r\nCascade Source: [EmployeeJobs].[ExpenseSubmissionFrequency]."
          maxLength: 50
          type: string
          nullable: true
        CostCentre:
          description: "The cost centre. <br />\r\nCascade Source: [EmployeeJobs].[CostCentre]."
          maxLength: 50
          type: string
          nullable: true
        JobFamily:
          description: "The job family. <br />\r\nCascade Source: [EmployeeJobs].[JobFamily]."
          maxLength: 50
          type: string
          nullable: true
        ApprenticeUnder25:
          description: "The flag to indicate if the employee is an apprentice under 25. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeUnder25]."
          type: boolean
          nullable: true
        ApprenticeshipEndDate:
          description: "The end date of the apprenticeship. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeshipEndDate]."
          type: string
          format: date-time
          nullable: true
        ContractEndDate:
          description: "The end date of the contract. <br />\r\nCascade Source: [EmployeeJobs].[ContractEndDate]."
          type: string
          format: date-time
          nullable: true
        ReportsToPost:
          description: "The readonly property of reports to post. <br />\r\nCascade Source: [EmployeeJobs].[ReportsToPost]."
          maxLength: 200
          type: string
          nullable: true
          readOnly: true
        NormalHours:
          description: "Normal hours. <br />\r\nCascade Source: [EmployeeJobs].[NormalHours]."
          type: number
          format: double
          nullable: true
        RealTimeInformationIrregularFrequency:
          description: "The real time information of irregular frequency. <br />\r\nCascade Source: [EmployeeJobs].[RTIIrregularFrequency]."
          maxLength: 50
          type: string
          nullable: true
        NoticePeriod:
          description: "The notice period. <br />\r\nCascade Source: [EmployeeJobs].[NoticePeriod]."
          maxLength: 50
          type: string
          nullable: true
        Id:
          description: >-
            This ID is generated by the Iris Hr platform and does not relate to
            the Cascade ID.
          type: string
          nullable: true
        SourceSystemId:
          description: "Source HR System Id. <br />\r\nCascade Source: [EmployeeJobs].[Ruid] <br />\r\nRead Only"
          type: string
          nullable: true
        CreatedOn:
          description: The date when the Job was created in the Iris Hr platform.
          type: string
          format: date-time
        SourceSystemCreatedOn:
          description: "The date when the Job was created in the Source HR System. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate] <br />\r\nNote: In Cascade this value is also the Start Date of the Job and can changed at any time. <br />\r\nRead Only"
          type: string
          format: date-time
          nullable: true
        CreatedBy:
          description: >-
            Not used as the Iris Hr platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date when the Job was created or last updated.
          type: string
          format: date-time
          nullable: true
        SourceSystemLastModifiedOn:
          description: "The date when the Job was created or last updated in the Source HR System. <br />\r\nCascade Source: [EmployeeJobs].[SYS_ModifiedDate] <br />\r\nRead Only"
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: Not used as Iris Hr platform has no concept of users at the moment.
          type: string
          nullable: true
    CreateJobCommand:
      type: object
      properties:
        JobTitle:
          description: "The title of the Job. <br />\r\nCascade Source: [EmployeeJobs].[JobTitle]"
          maxLength: 100
          type: string
          nullable: true
        Classification:
          description: "The classification of the Job e.g. Technical, Professional, Managerial. <br />\r\nCascade Source: [EmployeeJobs].[Classification] translated through the JOBCLASSIFICATION system list."
          maxLength: 50
          type: string
          nullable: true
        StartDate:
          description: "The start date of the Job. <br />\r\nRequired. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate]"
          type: string
          format: date-time
        EndDate:
          description: "The end date of the Job. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[SYS_CalculatedEndDate]"
          type: string
          format: date-time
          nullable: true
        WorkingCalendar:
          description: "The name of the working calendar of the Job. <br />\r\nCascade Source: [EmployeeJobs].[CalendarName] which comes from [ValidWorkingCalendar].[CalendarName]"
          maxLength: 50
          type: string
          nullable: true
        LineManagerId:
          description: "The ID of the Employee that is the line manager for this Job. <br />\r\nMust exist in Employees Service. <br />\r\nCascade Source: [EmployeeJobs].[WorksForEmployeeId]"
          type: string
          nullable: true
        HierarchyNodeId:
          description: "The ID of the Employee's Hierarchy node of the Job. <br />\r\nMust exist in Hierarchy Service."
          type: string
          nullable: true
        Active:
          description: "The Job is currently active. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[sys_ActiveJob]"
          type: boolean
        Salary:
          description: "The salary of the Job. <br />\r\nCascade Source: [EmployeeJobs].[BasicPay]"
          type: number
          format: double
          nullable: true
        EmployeeId:
          description: "The ID of the Employee of the Job. <br />\r\nMust exist in Employee Service."
          type: string
          nullable: true
        Contract:
          description: "The contract of the Job e.g. Full Time, Part Time. <br />\r\nCascade Source: [EmployeeJobs].[ContractType] translated through the EMPLOYMENTTYPES system list."
          maxLength: 50
          type: string
          nullable: true
        PayFrequency:
          description: "How often the Job's salary will be paid e.g. Monthly, Weekly. <br />\r\nCascade Source: [EmployeeJobs].[PayFrequency] translated through the PAY FREQ system list."
          maxLength: 50
          type: string
          nullable: true
        PayBasis:
          description: "The unit of measurement the salary is specified against e.g. Yearly, Hourly. <br />\r\nCascade Source: [EmployeeJobs].[PayBasis] translated through the PAY BASIS system list."
          maxLength: 50
          type: string
          nullable: true
        FullTimeEquivalent:
          description: "The full-time equivalent to a full time employee's hours e.g. 1 = Full Time, 0.5 = Half Hours. <br />\r\nCascade Source: [EmployeeJobs].[FTE]."
          type: number
          format: double
          nullable: true
        ChangeReason:
          description: "The reason for the change. <br />\r\nCascade Source: [EmployeeJobs].[Reason]."
          maxLength: 50
          type: string
          nullable: true
        NextIncrementDate:
          description: "The next increment date.  <br />\r\nCascade Source: [EmployeeJobs].[IncrementDate]."
          type: string
          format: date-time
          nullable: true
        TimesheetLocation:
          description: "The timesheet location. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetLocation]."
          maxLength: 50
          type: string
          nullable: true
        TimesheetLunchDuration:
          description: "The time set lunch duration. <br />\r\nCascade Source: [EmployeeJobs].[LunchDuration]."
          type: string
          nullable: true
        ExpenseSubmissionFrequency:
          description: "The expense submission frequency. <br />\r\nCascade Source: [EmployeeJobs].[ExpenseSubmissionFrequency]."
          maxLength: 50
          type: string
          nullable: true
        CostCentre:
          description: "The cost centre. <br />\r\nCascade Source: [EmployeeJobs].[CostCentre]."
          maxLength: 50
          type: string
          nullable: true
        JobFamily:
          description: "The job family. <br />\r\nCascade Source: [EmployeeJobs].[JobFamily]."
          maxLength: 50
          type: string
          nullable: true
        ApprenticeUnder25:
          description: "The flag to indicate if the employee is an apprentice under 25. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeUnder25]."
          type: boolean
          nullable: true
        ApprenticeshipEndDate:
          description: "The end date of the apprenticeship. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeshipEndDate]."
          type: string
          format: date-time
          nullable: true
        ContractEndDate:
          description: "The end date of the contract. <br />\r\nCascade Source: [EmployeeJobs].[ContractEndDate]."
          type: string
          format: date-time
          nullable: true
        NormalHours:
          description: "Normal hours. <br />\r\nCascade Source: [EmployeeJobs].[NormalHours]."
          type: number
          format: double
          nullable: true
        RealTimeInformationIrregularFrequency:
          description: "The real time information of irregular frequency. <br />\r\nCascade Source: [EmployeeJobs].[RTIIrregularFrequency]."
          maxLength: 50
          type: string
          nullable: true
        NoticePeriod:
          description: "The notice period. <br />\r\nCascade Source: [EmployeeJobs].[NoticePeriod]."
          maxLength: 50
          type: string
          nullable: true
    UpdateJobCommand:
      type: object
      properties:
        JobTitle:
          description: "The title of the Job. <br />\r\nCascade Source: [EmployeeJobs].[JobTitle]"
          maxLength: 100
          type: string
          nullable: true
        Classification:
          description: "The classification of the Job e.g. Technical, Professional, Managerial. <br />\r\nCascade Source: [EmployeeJobs].[Classification] translated through the JOBCLASSIFICATION system list."
          maxLength: 50
          type: string
          nullable: true
        StartDate:
          description: "The start date of the Job. <br />\r\nRequired. <br />\r\nCascade Source: [EmployeeJobs].[SYS_EffectiveDate]"
          type: string
          format: date-time
        EndDate:
          description: "The end date of the Job. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[SYS_CalculatedEndDate]"
          type: string
          format: date-time
          nullable: true
        WorkingCalendar:
          description: "The name of the working calendar of the Job. <br />\r\nCascade Source: [EmployeeJobs].[CalendarName] which comes from [ValidWorkingCalendar].[CalendarName]"
          maxLength: 50
          type: string
          nullable: true
        LineManagerId:
          description: "The ID of the Employee that is the line manager for this Job. <br />\r\nMust exist in Employees Service. <br />\r\nCascade Source: [EmployeeJobs].[WorksForEmployeeId]"
          type: string
          nullable: true
        HierarchyNodeId:
          description: "The ID of the Employee's Hierarchy node of the Job. <br />\r\nMust exist in Hierarchy Service."
          type: string
          nullable: true
        Active:
          description: "The Job is currently active. <br />\r\nAutomatically Calculated. <br />\r\nCascade Source: [EmployeeJobs].[sys_ActiveJob]"
          type: boolean
        Salary:
          description: "The salary of the Job. <br />\r\nCascade Source: [EmployeeJobs].[BasicPay]"
          type: number
          format: double
          nullable: true
        Contract:
          description: "The contract of the Job e.g. Full Time, Part Time. <br />\r\nCascade Source: [EmployeeJobs].[ContractType] translated through the EMPLOYMENTTYPES system list."
          maxLength: 50
          type: string
          nullable: true
        PayFrequency:
          description: "How often the Job's salary will be paid e.g. Monthly, Weekly. <br />\r\nCascade Source: [EmployeeJobs].[PayFrequency] translated through the PAY FREQ system list."
          maxLength: 50
          type: string
          nullable: true
        PayBasis:
          description: "The unit of measurement the salary is specified against e.g. Yearly, Hourly. <br />\r\nCascade Source: [EmployeeJobs].[PayBasis] translated through the PAY BASIS system list."
          maxLength: 50
          type: string
          nullable: true
        FullTimeEquivalent:
          description: "The full-time equivalent to a full time employee's hours e.g. 1 = Full Time, 0.5 = Half Hours. <br />\r\nCascade Source: [EmployeeJobs].[FTE]."
          type: number
          format: double
          nullable: true
        ChangeReason:
          description: "The reason for the change. <br />\r\nCascade Source: [EmployeeJobs].[Reason]."
          maxLength: 50
          type: string
          nullable: true
        NextIncrementDate:
          description: "The next increment date.  <br />\r\nCascade Source: [EmployeeJobs].[IncrementDate]."
          type: string
          format: date-time
          nullable: true
        TimesheetLocation:
          description: "The timesheet location. <br />\r\nCascade Source: [EmployeeJobs].[TimesheetLocation]."
          maxLength: 50
          type: string
          nullable: true
        TimesheetLunchDuration:
          description: "The time set lunch duration. <br />\r\nCascade Source: [EmployeeJobs].[LunchDuration]."
          type: string
          nullable: true
        ExpenseSubmissionFrequency:
          description: "The expense submission frequency. <br />\r\nCascade Source: [EmployeeJobs].[ExpenseSubmissionFrequency]."
          maxLength: 50
          type: string
          nullable: true
        CostCentre:
          description: "The cost centre. <br />\r\nCascade Source: [EmployeeJobs].[CostCentre]."
          maxLength: 50
          type: string
          nullable: true
        JobFamily:
          description: "The job family. <br />\r\nCascade Source: [EmployeeJobs].[JobFamily]."
          maxLength: 50
          type: string
          nullable: true
        ApprenticeUnder25:
          description: "The flag to indicate if the employee is an apprentice under 25. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeUnder25]."
          type: boolean
          nullable: true
        ApprenticeshipEndDate:
          description: "The end date of the apprenticeship. <br />\r\nCascade Source: [EmployeeJobs].[ApprenticeshipEndDate]."
          type: string
          format: date-time
          nullable: true
        ContractEndDate:
          description: "The end date of the contract. <br />\r\nCascade Source: [EmployeeJobs].[ContractEndDate]."
          type: string
          format: date-time
          nullable: true
        NormalHours:
          description: "Normal hours. <br />\r\nCascade Source: [EmployeeJobs].[NormalHours]."
          type: number
          format: double
          nullable: true
        RealTimeInformationIrregularFrequency:
          description: "The real time information of irregular frequency. <br />\r\nCascade Source: [EmployeeJobs].[RTIIrregularFrequency]."
          maxLength: 50
          type: string
          nullable: true
        NoticePeriod:
          description: "The notice period. <br />\r\nCascade Source: [EmployeeJobs].[NoticePeriod]."
          maxLength: 50
          type: string
          nullable: true
        Id:
          description: "The ID of the Job to update. <br />\r\nMust exist in the Jobs Service."
          type: string
          nullable: true
    ProblemDetails:
      type: object
      properties:
        title:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    HierarchyNodeQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/HierarchyNodeModel'
          nullable: true
    HierarchyNodeModel:
      description: The Hierarchy node.
      type: object
      properties:
        ParentId:
          description: "The Parent ID of this Hierarchy node. <br />\r\nMust exist in the Hierarchy Service."
          type: string
          nullable: true
        Level:
          description: "The Level of the Hierarchy node. <br />\r\nCascade Source: [ValidHierarchyX].[level]"
          type: integer
          format: int32
        Title:
          description: "The Title of this Hierarchy node. <br />\r\nCascade Source: [ValidHierarchyX].[name]"
          type: string
          nullable: true
        Disabled:
          description: "Hierarchy node is disabled. <br />\r\nCascade Source: [ValidHierarchyX].[disabled]"
          type: boolean
        SourceSystemId:
          description: "Source HR System Id. <br />\r\nCascade Source: [ValidHierarchyX].[HierarchyNode] <br />\r\nRead Only"
          type: string
          nullable: true
          readOnly: true
        SourceSystemCreatedOn:
          description: "The date when the Hierarchy node record was created in the Source HR System. <br />\r\nCascade Source: [ValidHierarchyX].[createdon]"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        SourceSystemLastModifiedOn:
          description: "The date when the Hierarchy node record was created or last updated in the Source HR System. <br />\r\nCascade Source: [ValidHierarchyX].[disabledon] if exists else [ValidHierachyX].[createdon]"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        Id:
          description: "This ID of the Hierarchy node. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
          type: string
          nullable: true
        CreatedOn:
          description: >-
            The date time when the Hierarchy node was created in the Iris HR
            platform.
          type: string
          format: date-time
        CreatedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date time when the Hierarchy node was created or last updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
    BankDetailsQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/BankDetailsModel'
          nullable: true
    BankDetailsModel:
      description: An HR Employee's Bank Details.
      type: object
      properties:
        EmployeeId:
          description: "The ID of the HR Employee. <br />\r\nMust exist in the Employee Service."
          type: string
          nullable: true
        BankName:
          description: "Bank Name. <br />\r\nCascade Source: [EmployeeBank].[BankName]"
          maxLength: 50
          type: string
          nullable: true
        BankAddress:
          $ref: '#/components/schemas/BankAddress'
        AccountName:
          description: "Account Name. <br />\r\nCascade Source: [EmployeeBank].[AccountName]"
          maxLength: 50
          type: string
          nullable: true
        AccountNumber:
          description: "Account Number. <br />\r\nCascade Source: [EmployeeBank].[AccountNumber]"
          maxLength: 50
          type: string
          nullable: true
        SortCode:
          description: "Sort Code. <br />\r\nCascade Source: [EmployeeBank].[SortCode]"
          maxLength: 50
          type: string
          nullable: true
        RollNumber:
          description: "Roll Number. <br />\r\nCascade Source: [EmployeeBank].[RollNumber]"
          maxLength: 50
          type: string
          nullable: true
        SourceSystemId:
          description: "The Internal ID for the source HR Product. <br />\r\nCascade Source: [EmployeeBank].[RUID]"
          type: string
          nullable: true
          readOnly: true
        SourceSystemCreatedOn:
          description: "The date when the Bank details record was created in the Source HR System. <br />\r\nCascade Source: [EmployeeBank].[SYS_EffectiveDate]"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        SourceSystemLastModifiedOn:
          description: "The latest date when the Bank details record was created or last updated in the Source HR System. <br />\r\nCascade Source: Latest of [EmployeeBank].[SYS_ModifiedDate]"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        Id:
          description: "The ID of Bank Details. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
          type: string
          nullable: true
        CreatedOn:
          description: >-
            The date time when the Bank Details was created in the Iris HR
            platform.
          type: string
          format: date-time
        CreatedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date time when the Bank Details was created or last updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
    BankAddress:
      description: Bank Address
      type: object
      properties:
        Address1:
          description: "The first line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address1]"
          maxLength: 50
          type: string
          nullable: true
        Address2:
          description: "The second line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address2]"
          maxLength: 50
          type: string
          nullable: true
        Address3:
          description: "The third line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address3]"
          maxLength: 50
          type: string
          nullable: true
        Address4:
          description: "The fourth line of Bank Address <br />\r\nCascade Source: [EmployeeBank].[Address4]"
          maxLength: 50
          type: string
          nullable: true
        PostCode:
          description: "Post Code of the Bank <br />\r\nCascade Source: [EmployeeBank].[Postcode]"
          maxLength: 50
          type: string
          nullable: true
    CreateBankDetailsCommand:
      type: object
      properties:
        EmployeeId:
          description: "The ID of the HR Employee. <br />\r\nMust exist in the Employee Service."
          type: string
          nullable: true
        BankName:
          description: "Bank Name. <br />\r\nCascade Source: [EmployeeBank].[BankName]"
          maxLength: 50
          type: string
          nullable: true
        BankAddress:
          $ref: '#/components/schemas/BankAddress'
        AccountName:
          description: "Account Name. <br />\r\nCascade Source: [EmployeeBank].[AccountName]"
          maxLength: 50
          type: string
          nullable: true
        AccountNumber:
          description: "Account Number. <br />\r\nCascade Source: [EmployeeBank].[AccountNumber]"
          maxLength: 50
          type: string
          nullable: true
        SortCode:
          description: "Sort Code. <br />\r\nCascade Source: [EmployeeBank].[SortCode]"
          maxLength: 50
          type: string
          nullable: true
        RollNumber:
          description: "Roll Number. <br />\r\nCascade Source: [EmployeeBank].[RollNumber]"
          maxLength: 50
          type: string
          nullable: true
    UpdateBankDetailsCommand:
      type: object
      properties:
        BankName:
          description: "Bank Name. <br />\r\nCascade Source: [EmployeeBank].[BankName]"
          maxLength: 50
          type: string
          nullable: true
        BankAddress:
          $ref: '#/components/schemas/BankAddress'
        AccountName:
          description: "Account Name. <br />\r\nCascade Source: [EmployeeBank].[AccountName]"
          maxLength: 50
          type: string
          nullable: true
        AccountNumber:
          description: "Account Number. <br />\r\nCascade Source: [EmployeeBank].[AccountNumber]"
          maxLength: 50
          type: string
          nullable: true
        SortCode:
          description: "Sort Code. <br />\r\nCascade Source: [EmployeeBank].[SortCode]"
          maxLength: 50
          type: string
          nullable: true
        RollNumber:
          description: "Roll Number. <br />\r\nCascade Source: [EmployeeBank].[RollNumber]"
          maxLength: 50
          type: string
          nullable: true
        Id:
          description: "The ID of Bank Details to update. <br />\r\nMust exist in Bank Details Service."
          type: string
          nullable: true
    AbsenceReasonQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/AbsenceReasonModel'
          nullable: true
    AbsenceReasonModel:
      description: An HR Attendance Absence Reason.
      type: object
      properties:
        ParentId:
          description: "The Parent ID of this Absence Reason. <br />\r\nCascade Source: [ValidAttendanceTypes].[Key]."
          type: string
          nullable: true
        Name:
          description: "The Name of this Absence Reason. <br />\r\nCascade Source: <br />\r\n[ValidAttendanceCategory].[Category] when ParentID is null; <br />\r\n[ValidAttendanceTypes].[Type] when ParentID is not null."
          type: string
          nullable: true
        Holiday:
          description: "This Absence Reason represents a Holiday. <br />\r\nCascade Source: [ValidAttendanceCategory].[Holiday]"
          type: boolean
          nullable: true
        Absent:
          description: "This Absence Reason represents an Absence. <br />\r\nCascade Source: [ValidAttendanceCategory].[Absent]"
          type: boolean
          nullable: true
        Sick:
          description: "This Absence Reason represents a Sickness. <br />\r\nCascade Source: [ValidAttendanceCategory].[Sick]"
          type: boolean
          nullable: true
        StatutoryMaternityPayApplicable:
          description: "This Absence Reason has Statutory Maternity Pay. <br />\r\nCascade Source: [ValidAttendanceCategory].[SMPApplicable]"
          type: boolean
          nullable: true
        StudyExam:
          description: "This Absence Reason represents an absence for Study or Exam. <br />\r\nCascade Source: [ValidAttendanceCategory].[Code] = 96 or 97"
          type: boolean
          nullable: true
        FlexiLeave:
          description: "This Absence Reason represents Flexi Leave. <br />\r\nCascade Source: [ValidAttendanceCategory].[Code] = 11"
          type: boolean
          nullable: true
        Id:
          description: "The ID of the Absence Reason. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
          type: string
          nullable: true
        CreatedOn:
          description: >-
            The date time when the Absence Reason was created in the Iris HR
            platform.
          type: string
          format: date-time
        CreatedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date time when the Absence Reason was created or last updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
    EmployeeAbsenceReasonModel:
      type: object
      properties:
        EmployeeId:
          description: "The Parent ID of this Absence Reason. <br />\r\nCascade Source: [ValidAttendanceTypes].[Key]."
          type: string
          nullable: true
        AbsenceReasonId:
          description: "The Name of this Absence Reason. <br />\r\nCascade Source: <br />\r\n[ValidAttendanceCategory].[Category] when ParentID is null; <br />\r\n[ValidAttendanceTypes].[Type] when ParentID is not null."
          type: string
          nullable: true
        ShowInDays:
          description: >-
            The Absence Reason For The Employee should be recorded in Days or
            not.
          type: boolean
        Id:
          description: The ID of the Employee Absence Reason.
          type: string
          nullable: true
        CreatedOn:
          description: >-
            The date time when the Employee Absence Reason was created in the
            Iris HR platform.
          type: string
          format: date-time
        CreatedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: >-
            The date time when the Employee Absence Reason was created or last
            updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
    EntitlementQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementModel'
          nullable: true
    EntitlementModel:
      description: An Employee's Attendance Entitlement.
      type: object
      properties:
        EmployeeId:
          description: "The ID of the HR Employee. <br />\r\nMust exist in the Employee Service."
          type: string
          nullable: true
        AbsenceReasonId:
          description: "The Absence Reason ID. <br />\r\nMust exist in the Absence Reason Service."
          type: string
          nullable: true
        EntitlementYearName:
          description: "The Entitlement Year Name. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[EntitlementYearName]"
          type: string
          nullable: true
        Open:
          description: "The status of Open indicates whether the entitlement is active. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Open]"
          type: boolean
        StartDate:
          description: "The Start Date of this Entitlement. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[StartDate]"
          type: string
          format: date-time
        EndDate:
          description: "The End Date of this Entitlement. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[EndDate]"
          type: string
          format: date-time
        Narrative:
          description: "The optional description of this Entitlement. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Narrative]"
          type: string
          nullable: true
        BaseDays:
          description: "The number of Base Entitlement Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BaseEntitlementDays]"
          type: number
          format: double
        BaseMinutes:
          description: "The number of Base Entitlement Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BaseEntitlement]"
          type: integer
          format: int32
          nullable: true
        CarryDays:
          description: "The number of Carry Days allowed. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryDays]"
          type: number
          format: double
        CarryMinutes:
          description: "The number of Carry Minutes allowed. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Carry]"
          type: integer
          format: int32
          nullable: true
        CarryUseByDate:
          description: "The date when Carry Days should be used by. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryUsebyDays]"
          type: string
          format: date-time
          nullable: true
        CarryLostDays:
          description: "The number of Carry Days lost. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryLostDays]"
          type: number
          format: double
          nullable: true
        CarryLostMinutes:
          description: "The number of Carry Minutes lost. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[CarryLost]"
          type: integer
          format: int32
          nullable: true
        ManualAdjustmentDays:
          description: "The number of Manual Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ManualAdjustmentDays]"
          type: number
          format: double
        ManualAdjustmentMinutes:
          description: "The number of Manual Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ManualAdjustment]"
          type: integer
          format: int32
          nullable: true
        ServiceLengthAdjustmentDays:
          description: "The number of Adjustment Days due to service length. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ServiceLengthAdjustmentDays]"
          type: number
          format: double
        ServiceLengthAdjustmentMinutes:
          description: "The number of Adjustment Minutes due to service length. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[ServiceLengthAdjustment]"
          type: integer
          format: int32
          nullable: true
        NewStarterAdjustmentDays:
          description: "The number of New Starter Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[NewStarterAdjustmentDays]"
          type: number
          format: double
        NewStarterAdjustmentMinutes:
          description: "The number of New Starter Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[NewStarterAdjustment]"
          type: integer
          format: int32
          nullable: true
        LeaverAdjusmentDays:
          description: "[Obsolete] The number of Leaver Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustmentDays]"
          type: number
          format: double
        LeaverAdjusmentMinutes:
          description: "[Obsolete] The number of Leaver Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustment]"
          type: integer
          format: int32
          nullable: true
        LeaverAdjustmentDays:
          description: "The number of Leaver Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustmentDays]"
          type: number
          format: double
          nullable: true
        LeaverAdjustmentMinutes:
          description: "The number of Leaver Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[LeaverAdjustment]"
          type: integer
          format: int32
          nullable: true
        PartTimeAdjustmentDays:
          description: "The number of Part Time Adjustment Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[PTProrataDays]"
          type: number
          format: double
        PartTimeAdjustmentMinutes:
          description: "The number of Part Time Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[PTProrata]"
          type: integer
          format: int32
          nullable: true
        BankHolidayAdjustmentDays:
          description: "The number of Bank Holiday Adjustment Day. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BHProrataDays]"
          type: number
          format: double
        BankHolidayAdjustmentMinutes:
          description: "The number of Bank Holiday Adjustment Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BHProrata]"
          type: integer
          format: int32
          nullable: true
        BuySellDays:
          description: "The number of Buy Sell Days. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BuySellDays]"
          type: number
          format: double
        BuySellMinutes:
          description: "The number of Buy Sell Minutes. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[BuySell]"
          type: integer
          format: int32
          nullable: true
        TotalEntitlementDays:
          description: "The total Entitlement in days. <br />\r\n= BaseDays <br />\r\n    + ServiceLengthAdjustmentDays <br />\r\n    + NewStarterAdjustmentDays <br />\r\n    + ManualAdjustmentDays <br />\r\n    + CarryDays <br />\r\n    + PartTimeAdjustmentDays <br />\r\n    + BankHolidayAdjustmentDays <br />\r\n    + BuySellDays <br />\r\n    - CarryLostDays <br />\r\n    + LeaverAdjustmentDays"
          type: number
          format: double
          nullable: true
        TotalEntitlementMinutes:
          description: "The total Entitlement in minutes. <br />\r\n= BaseMinutes <br />\r\n    + ServiceLengthAdjustmentMinutes <br />\r\n    + NewStarterAdjustmentMinutes <br />\r\n    + ManualAdjustmentMinutes <br />\r\n    + CarryMinutes <br />\r\n    + PartTimeAdjustmentMinutes <br />\r\n    + BankHolidayAdjustmentMinutes <br />\r\n    + BuySellMinutes <br />\r\n    - CarryLostMinutes <br />\r\n    + LeaverAdjustmentMinutes"
          type: integer
          format: int32
          nullable: true
        SourceSystemId:
          description: "The Internal ID of the Source HR Product. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[Key]"
          type: string
          nullable: true
          readOnly: true
        SourceSystemCreatedOn:
          description: "The date when the Entitlement record was created in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[SYS_EffectiveDate]"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        SourceSystemLastModifiedOn:
          description: "The date when the Entitlement record was created or last updated in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendanceEntitlementYear].[SYS_ModifiedDate]"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        Id:
          description: >-
            This ID is generated by the Iris HR platform and does not relate to
            the Cascade Employee Entitlement ID.
          type: string
          nullable: true
        CreatedOn:
          description: The date when the Entitlement was created in the Iris HR platform.
          type: string
          format: date-time
        CreatedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date when the Entitlement was created or last updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
    AbsenceQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/AbsenceModel'
          nullable: true
    AbsenceModel:
      description: An HR Employee's Attendance Absence.
      type: object
      properties:
        EmployeeId:
          description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service. <br />\r\nCannot be updated once Absence created."
          type: string
          nullable: true
        AbsenceReasonId:
          description: "The Absence Reason ID. <br />\r\nMust exist in the Attendance Absence Reasons Service. <br />\r\nCannot be updated once Absence created."
          type: string
          nullable: true
        Narrative:
          description: "The Narrative relating to the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[Narrative]"
          type: string
          nullable: true
        StartDate:
          description: "The Start Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[StartDate]"
          type: string
          format: date-time
          nullable: true
        EndDate:
          description: "The End Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[EndDate]\r\nNull if Opened Ended - Cascade Source: [EmployeeAttendance].[OpenEnded]"
          type: string
          format: date-time
          nullable: true
        SourceSystemId:
          description: "Source HR System Id. <br /> \r\nCascade Source: [EmployeeAttendance].[RUID] <br />"
          type: string
          nullable: true
          readOnly: true
        SourceSystemCreatedOn:
          description: "The date when the Absence was created in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendance].[SYS_EffectiveDate] <br />"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        SourceSystemLastModifiedOn:
          description: "The date when the Absence was created or last updated in the Source HR System. <br />\r\nCascade Source: [EmployeeAttendance].[SYS_ModifiedDate] <br />"
          type: string
          format: date-time
          nullable: true
          readOnly: true
        Id:
          description: >-
            This ID is generated by the Iris HR platform and does not relate to
            the Cascade ID.
          type: string
          nullable: true
        CreatedOn:
          description: The date when the Absence was created in the Iris HR platform.
          type: string
          format: date-time
        CreatedBy:
          description: Not used as the Iris HR platform has no concept of users.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date when the Absence was created or last updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: Not used as the Iris HR platform has no concept of users.
          type: string
          nullable: true
    CreateAbsenceCommand:
      type: object
      properties:
        EmployeeId:
          description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service. <br />\r\nCannot be updated once Absence created."
          type: string
          nullable: true
        AbsenceReasonId:
          description: "The Absence Reason ID. <br />\r\nMust exist in the Attendance Absence Reasons Service. <br />\r\nCannot be updated once Absence created."
          type: string
          nullable: true
        Narrative:
          description: "The Narrative relating to the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[Narrative]"
          type: string
          nullable: true
        StartDate:
          description: "The Start Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[StartDate]"
          type: string
          format: date-time
          nullable: true
        EndDate:
          description: "The End Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[EndDate]\r\nNull if Opened Ended - Cascade Source: [EmployeeAttendance].[OpenEnded]"
          type: string
          format: date-time
          nullable: true
    UpdateAbsenceCommand:
      type: object
      properties:
        Narrative:
          description: "The Narrative relating to the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[Narrative]"
          type: string
          nullable: true
        StartDate:
          description: "The Start Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[StartDate]"
          type: string
          format: date-time
          nullable: true
        EndDate:
          description: "The End Date of the Attendance. <br />\r\nCascade Source: [EmployeeAttendance].[EndDate]\r\nNull if Opened Ended - Cascade Source: [EmployeeAttendance].[OpenEnded]"
          type: string
          format: date-time
          nullable: true
        Id:
          description: "The ID of the Absence. <br />\r\nMust exist in the Attendance Absences Service."
          type: string
          nullable: true
    AbsenceDayQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/AbsenceDayModel'
          nullable: true
    AbsenceDayModel:
      description: An Attendance Absence Day
      type: object
      properties:
        AbsenceId:
          description: "The ID of the parent Absence. <br />\r\nMust exist in the Attendance Absence Service."
          type: string
          nullable: true
        EmployeeId:
          description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service."
          type: string
          nullable: true
        Date:
          description: "The date of the Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[StartDate]"
          type: string
          format: date-time
        DurationDays:
          description: "The duration in days for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[DurationDays]"
          type: number
          format: double
        DurationMinutes:
          description: "The duration in minutes for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Duration]"
          type: integer
          format: int32
          nullable: true
        DayPart:
          $ref: '#/components/schemas/DayPart'
        SourceSystemId:
          description: "Source HR System Id. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Sequence] <br />\r\nRead Only"
          type: string
          nullable: true
          readOnly: true
        Id:
          description: "The ID of the Absence Day. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
          type: string
          nullable: true
        CreatedOn:
          description: >-
            The date time when the Absence Day was created in the Iris HR
            platform.
          type: string
          format: date-time
        CreatedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date time when the Absence Day was created or last updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          type: string
          nullable: true
    DayPart:
      description: The parts of days.
      enum:
        - AM
        - PM
        - AllDay
        - None
      type: string
    CreateAbsenceDayCommand:
      type: object
      properties:
        AbsenceId:
          description: "The ID of the parent Absence. <br />\r\nMust exist in the Attendance Absence Service."
          type: string
          nullable: true
        EmployeeId:
          description: "The ID of the Employee. <br />\r\nMust exist in the Employees Service."
          type: string
          nullable: true
        Date:
          description: "The date of the Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[StartDate]"
          type: string
          format: date-time
        DurationDays:
          description: "The duration in days for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[DurationDays]"
          type: number
          format: double
        DurationMinutes:
          description: "The duration in minutes for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Duration]"
          type: integer
          format: int32
          nullable: true
        DayPart:
          $ref: '#/components/schemas/DayPart'
    UpdateAbsenceDayCommand:
      type: object
      properties:
        Date:
          description: "The date of the Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[StartDate]"
          type: string
          format: date-time
        DurationDays:
          description: "The duration in days for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[DurationDays]"
          type: number
          format: double
        DurationMinutes:
          description: "The duration in minutes for this Absence Day. <br />\r\nCascade Source: [EmployeeAttendanceDates].[Duration]"
          type: integer
          format: int32
          nullable: true
        DayPart:
          $ref: '#/components/schemas/DayPart'
        Id:
          description: "The ID of the Absence Day. <br />\r\nMust exist in the Attendance Absence Day Service."
          type: string
          nullable: true
    BenefitQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/BenefitModel'
          nullable: true
    BenefitModel:
      description: An HR Employee's Benefits.
      type: object
      properties:
        EmployeeId:
          description: "The EmployeeId. <br />\r\nCascade Source: [EmployeeBenefits].[EmployeeId]"
          type: string
          nullable: true
        Type:
          description: "The Type. <br />\r\nCascade Source: [EmployeeBenefits].[Code]"
          maxLength: 500
          type: string
          nullable: true
        Description:
          description: "The Description. <br />\r\nCascade Source: [EmployeeBenefits].[Notes]"
          type: string
          nullable: true
        Value:
          description: "The Value. <br />\r\nCascade Source: [EmployeeBenefits].[Value]"
          type: number
          format: double
          nullable: true
        StartDate:
          description: "The Start Date. <br />\r\nCascade Source: [EmployeeBenefits].[StartDate]"
          type: string
          format: date-time
          nullable: true
        EndDate:
          description: "The End Date. <br />\r\nCascade Source: [EmployeeBenefits].[EndDate]"
          type: string
          format: date-time
          nullable: true
        P11DValue:
          description: "The P11DValue. <br />\r\nCascade Source: [EmployeeBenefits].[P11DValueCurrency]"
          type: number
          format: double
          nullable: true
        Suspended:
          description: "The Suspended value. <br />\r\nCascade Source: [EmployeeBenefits].[Suspended]"
          type: boolean
        Id:
          description: "The ID of the Benefit. <br />\r\nThis field is generated by Iris HR platform and not related to the Cascade ID."
          type: string
          nullable: true
        SourceSystemId:
          description: "Source HR System Id. <br />\r\nCascade Source: [EmployeeBenefits].[Ruid] <br />\r\nRead Only"
          type: string
          nullable: true
        CreatedOn:
          description: The date time when the Benefit was created in the Iris HR platform.
          type: string
          format: date-time
        CreatedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
        LastModifiedOn:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: >-
            Not used as the Iris HR platform has no concept of users at the
            moment.
          type: string
          nullable: true
    PublicHolidayQueryModel:
      type: object
      properties:
        ODataContext:
          type: string
          nullable: true
        ODataCount:
          type: integer
          format: int32
          nullable: true
        ODataNextLink:
          type: string
          nullable: true
        Value:
          type: array
          items:
            $ref: '#/components/schemas/PublicHolidayModel'
          nullable: true
    PublicHolidayModel:
      type: object
      properties:
        Description:
          description: "The description of the Public Holiday. <br />\r\nThis is usually the location of the Public Holiday. <br />\r\nCascade Source: [ValidBankHolidays].[HolidayLocation]"
          type: string
          nullable: true
        Days:
          description: A list of Public Holiday Days.
          type: array
          items:
            $ref: '#/components/schemas/PublicHolidayDay'
          nullable: true
        Id:
          description: >-
            This ID is generated by the Iris Hr platform and does not relate to
            the Cascade ID.
          type: string
          nullable: true
        CreatedOn:
          description: >-
            The date when the Public Holiday was created in the Iris HR
            platform.
          type: string
          format: date-time
        CreatedBy:
          description: Not used as the Iris HR platform has no concept of users.
          type: string
          nullable: true
        LastModifiedOn:
          description: The date when the Public Holiday was created or last updated.
          type: string
          format: date-time
          nullable: true
        LastModifiedBy:
          description: Not used as the Iris HR platform has no concept of users.
          type: string
          nullable: true
    PublicHolidayDay:
      type: object
      properties:
        Description:
          description: "The description of the Public Holiday Day. <br />\r\nCascade Source: [ValidBankHolidays].[Description]"
          type: string
          nullable: true
        Date:
          description: "The date of the Public Holiday Day. <br />\r\nCascade Source: [ValidBankHolidays].[Date]"
          type: string
          format: date-time
        SourceSystemId:
          description: "Source HR System Id. <br />\r\nCascade Source: [ValidBankHolidays].[key] <br />\r\nRead Only"
          type: string
          nullable: true
    EmployeesCreateNewEmployeeResponse:
      type: string
    EmployeesCreateNewEmployee200Response:
      type: string
    JobsCreateNewJobResponse:
      type: string
    JobsCreateNewJob200Response:
      type: string
    JobsGetByIdResponse:
      type: string
    JobsGetById200Response:
      type: string
    BankDetailsCreateBankDetailResponse:
      type: string
    BankDetailsCreateBankDetail200Response:
      type: string
    AbsencesCreateNewAbsenceResponse:
      type: string
    AbsencesCreateNewAbsence200Response:
      type: string
    AbsenceDaysCreateAbsenceDayResponse:
      type: string
    AbsenceDaysCreateAbsenceDay200Response:
      type: string
  securitySchemes:
    Bearer:
      description: This API uses OAuth 2 with the Client Credentials grant flow.
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://api.iris.co.uk/oauth2/v1/token
          scopes: {}
security:
  - Bearer: []
