openapi: 3.0.0
info:
  title: Proliant API
  description: >-
    Our customer - facing API allows clients to view and manage company and
    employee data with features that integrate customers' systems with ours.
    These features include, but are not limited to, adding and updating
    Employees Deductions, Employee Information, and Cost Centers.
  version: v1
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: https://www.readypayonline.com/CompanyAPI
tags:
  - name: LookupValues
  - name: CostCenters
  - name: Accrual
  - name: Payroll
  - name: Employee
  - name: DeductionCode
  - name: EarningCode
  - name: Earnings
  - name: EmployeeDeductionCode
  - name: EmployeeEarningCode
  - name: JobCode
  - name: ShiftCode
  - name: Tax
  - name: Certification
  - name: DailyPay
  - name: Education
  - name: License
  - name: Rate
  - name: Skill
  - name: Training
  - name: Utility
  - name: PayHistory
  - name: Report
  - name: Review
  - name: Company
  - name: EmployeePto
  - name: Onboarding
  - name: TimeImport
  - name: ManualCheck
  - name: Pto
paths:
  /Company/{companyId}/Employee/{employeeId}/Accrual:
    get:
      tags:
        - Accrual
      summary: >-
        Gets all Accrual records associated for the provided company and
        employee
      operationId: Accrual_GetAccruals
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeAccrualViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeAccrualViewModel_
        '404':
          description: NotFound
    post:
      tags:
        - Accrual
      summary: Creates a accrual record for the provided company and employee
      operationId: Accrual_CreateAccrual
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeAccrualViewModel'
      responses:
        '201':
          description: Success! Record has been created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccrualCreateAccrualResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AccrualCreateAccrual201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or accrual not found
  /Company/{companyId}/Employee/{employeeId}/Accrual/{code}:
    get:
      tags:
        - Accrual
      summary: Gets a accrual record for the provided company and employee
      operationId: Accrual_GetEmployeeAccrualByCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeAccrualViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeAccrualViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
    put:
      tags:
        - Accrual
      summary: Updates a accrual record for the provided company and employee
      operationId: Accrual_UpdateAccrual
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The accrual
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeAccrualViewModel'
      responses:
        '200':
          description: Success! Record has been updated!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccrualUpdateAccrualResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AccrualUpdateAccrual200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, Employee, or accrual not found
    delete:
      tags:
        - Accrual
      summary: Deletes a accrual record for the provided company and employee
      operationId: Accrual_DeleteAccrual
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
  /Company/{companyId}/Accrual:
    get:
      tags:
        - Accrual
      summary: Gets all Accrual records associated for the provided company
      operationId: Accrual_GetAccruals
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyAccrualViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyAccrualViewModel_
        '404':
          description: NotFound
    post:
      tags:
        - Accrual
      summary: Creates a accrual record for the provided company
      operationId: Accrual_CreateAccrual
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CompanyAccrualViewModel'
      responses:
        '201':
          description: Success! Record has been created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccrualCreateAccrual201Response1'
            text/json:
              schema:
                $ref: '#/components/schemas/AccrualCreateAccrual201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or accrual not found
  /Company/{companyId}/Accrual/{code}:
    get:
      tags:
        - Accrual
      summary: Gets a accrual record for the provided company
      operationId: Accrual_GetAccrualByCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_CompanyAccrualViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_CompanyAccrualViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
    put:
      tags:
        - Accrual
      summary: Updates a accrual record for the provided company
      operationId: Accrual_UpdateAccrual
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The accrual
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CompanyAccrualViewModel'
      responses:
        '200':
          description: Success! Record has been updated!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccrualUpdateAccrual200Response1'
            text/json:
              schema:
                $ref: '#/components/schemas/AccrualUpdateAccrual200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or accrual code not found
    delete:
      tags:
        - Accrual
      summary: Deletes a accrual record for the provided company
      operationId: Accrual_DeleteAccrual
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
  /Company/{companyId}/Employee/{employeeId}/Certification:
    get:
      tags:
        - Certification
      summary: Gets certifications for an employee in a company
      operationId: Certification_GetEmployeeCertifications
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeCertificationViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeCertificationViewModel_
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    post:
      tags:
        - Certification
      summary: Creates a certification for an employee in a company
      operationId: Certification_CreateEmployeeCertification
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCertificationViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee/{employeeId}/Certification/{certificationId}:
    put:
      tags:
        - Certification
      summary: Updates a certification for an employee in a company
      operationId: Certification_UpdateEmployeeCertification
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The certification id
          name: certificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/EmployeeCertificationViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    delete:
      tags:
        - Certification
      summary: Deletes a certification for an employee in a company
      operationId: Certification_DeleteEmployeeCertification
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The certification id
          name: certificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, id, or certification not found
  /Company:
    get:
      tags:
        - Company
      summary: Gets a lookup list companies available to the current client
      operationId: Company_GetCompanies
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}:
    get:
      tags:
        - Company
      summary: Gets Company information by company Id
      operationId: Company_GetCompany
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_CompanyInformationViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_CompanyInformationViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter1:
    get:
      tags:
        - CostCenters
      summary: Gets all Cost Center 1 records associated for the provided company
      operationId: CostCenters_GetCc1
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - CostCenters
      summary: Creates a Cost Center 1 record for the provided company
      operationId: CostCenters_CreateCc1
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '201':
          description: Success! Cost Center Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc1Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc1201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter1/{cc}:
    get:
      tags:
        - CostCenters
      summary: Gets a Cost Center 1 record for the provided company
      operationId: CostCenters_GetCc1
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or record not found
    put:
      tags:
        - CostCenters
      summary: Updates a Cost Center 1 record for the provided company
      operationId: CostCenters_UpdateCc1
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '200':
          description: Success! Cost center updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc1Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc1200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or cost center not found
    delete:
      tags:
        - CostCenters
      summary: Deletes a Cost Center 1 record for the provided company
      operationId: CostCenters_DeleteCc1
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success! Cost center deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc1Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc1202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter2:
    get:
      tags:
        - CostCenters
      summary: Gets all Cost Center 2 records associated for the provided company
      operationId: CostCenters_GetCc2
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - CostCenters
      summary: Creates a Cost Center 2 record for the provided company
      operationId: CostCenters_CreateCc2
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '201':
          description: Success! Cost Center Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc2Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc2201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter2/{cc}:
    get:
      tags:
        - CostCenters
      summary: Gets a Cost Center 2 record for the provided company
      operationId: CostCenters_GetCc2
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    put:
      tags:
        - CostCenters
      summary: Updates a Cost Center 2 record for the provided company
      operationId: CostCenters_UpdateCc2
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '200':
          description: Success! Cost center updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc2Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc2200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or cost center not found
    delete:
      tags:
        - CostCenters
      summary: Deletes a Cost Center 2 record for the provided company
      operationId: CostCenters_DeleteCc2
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success! Cost center deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc2Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc2202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter3:
    get:
      tags:
        - CostCenters
      summary: Gets all Cost Center 3 records associated for the provided company
      operationId: CostCenters_GetCc3
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - CostCenters
      summary: Creates a Cost Center 3 record for the provided company
      operationId: CostCenters_CreateCc3
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '201':
          description: Success! Cost Center Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc3Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc3201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter3/{cc}:
    get:
      tags:
        - CostCenters
      summary: Gets a Cost Center 3 record for the provided company
      operationId: CostCenters_GetCc3
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    put:
      tags:
        - CostCenters
      summary: Updates a Cost Center 3 record for the provided company
      operationId: CostCenters_UpdateCc3
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '200':
          description: Success! Cost center updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc3Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc3200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    delete:
      tags:
        - CostCenters
      summary: Deletes a Cost Center 3 record for the provided company
      operationId: CostCenters_DeleteCc3
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success! Cost center deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc3Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc3202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter4:
    get:
      tags:
        - CostCenters
      summary: Gets all Cost Center 4 records associated for the provided company
      operationId: CostCenters_GetCc4
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - CostCenters
      summary: Creates a Cost Center 4 record for the provided company
      operationId: CostCenters_CreateCc4
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '201':
          description: Success! Cost Center Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc4Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc4201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter4/{cc}:
    get:
      tags:
        - CostCenters
      summary: Gets a Cost Center 4 record for the provided company
      operationId: CostCenters_GetCc4
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    put:
      tags:
        - CostCenters
      summary: Updates a Cost Center 4 record for the provided company
      operationId: CostCenters_UpdateCc4
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '200':
          description: Success! Cost center updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc4Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc4200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or cost center not found
    delete:
      tags:
        - CostCenters
      summary: Deletes a Cost Center 4 record for the provided company
      operationId: CostCenters_DeleteCc4
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success! Cost center deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc4Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc4202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter5:
    get:
      tags:
        - CostCenters
      summary: Gets all Cost Center 5 records associated for the provided company
      operationId: CostCenters_GetCc5
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CostCenterViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - CostCenters
      summary: Creates a Cost Center 5 record for the provided company
      operationId: CostCenters_CreateCc5
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '201':
          description: Success! Cost Center Record created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc5Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersCreateCc5201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/CostCenter5/{cc}:
    get:
      tags:
        - CostCenters
      summary: Gets a Cost Center 5 record for the provided company
      operationId: CostCenters_GetCc5
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_CostCenterViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    put:
      tags:
        - CostCenters
      summary: Updates a Cost Center 5 record for the provided company
      operationId: CostCenters_UpdateCc5
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/CostCenterViewModel'
      responses:
        '200':
          description: Success! Cost center updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc5Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersUpdateCc5200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or cost center not found
    delete:
      tags:
        - CostCenters
      summary: Deletes a Cost Center 5 record for the provided company
      operationId: CostCenters_DeleteCc5
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The cost center id
          name: cc
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Success!Cost center deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc5Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CostCentersDeleteCc5202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/DailyPay/earnings:
    post:
      tags:
        - DailyPay
      summary: Adds earnings to one or more employee check(s) in the daily pay batch.
      operationId: DailyPay_AddEarnings
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EarningImportViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/DailyPay/calendars:
    get:
      tags:
        - DailyPay
      summary: Gets a list of current active Daily Pay calendars for the company.
      operationId: DailyPay_GetCurrentCalendars
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /Company/{companyId}/DailyPay/calendars/{date}:
    get:
      tags:
        - DailyPay
      summary: >-
        Gets a list of current active Daily Pay calendars for the company by
        date.
      operationId: DailyPay_GetCurrentCalendars
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The date
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /Company/{companyId}/DailyPay/earnings/{calendarId}:
    get:
      tags:
        - DailyPay
      summary: >-
        Gets earnings details by calendar for the designated daily pay batch,
        optionally filtered by a list of employee ids
      operationId: DailyPay_GetEarnings
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The calendar id
          name: calendarId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Optional comma delimited list of employeeIds
          name: employeeIds
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/DeductionCode:
    get:
      tags:
        - DeductionCode
      summary: Gets all deduction code records associated for the provided company
      operationId: DeductionCode_GetDeductionCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_DeductionCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_DeductionCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - DeductionCode
      summary: Creates a deduction code record for the provided company
      operationId: DeductionCode_CreateDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DeductionCodeViewModel'
      responses:
        '201':
          description: Created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeductionCodeCreateDeductionCodeResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DeductionCodeCreateDeductionCode201Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/DeductionCode/{code}:
    get:
      tags:
        - DeductionCode
      summary: Gets a Deduction Code record for the provided company
      operationId: DeductionCode_GetDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_DeductionCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_DeductionCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
    put:
      tags:
        - DeductionCode
      summary: Updates a Deduction Code record for the provided company
      operationId: DeductionCode_UpdateDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The deduction code
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DeductionCodeViewModel'
      responses:
        '200':
          description: Success! List of Deduction code records returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeductionCodeUpdateDeductionCodeResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DeductionCodeUpdateDeductionCode200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
    delete:
      tags:
        - DeductionCode
      summary: Deletes a deduction code record for the provided company
      operationId: DeductionCode_DeleteDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/EarningCode:
    get:
      tags:
        - EarningCode
      summary: Gets all earning code records associated for the provided company
      operationId: EarningCode_GetEarningCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EarningCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EarningCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - EarningCode
      summary: Creates a earning code record for the provided company
      operationId: EarningCode_CreateEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EarningCodeViewModel'
      responses:
        '201':
          description: Created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningCodeCreateEarningCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EarningCodeCreateEarningCode201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or earning code not found
  /Company/{companyId}/EarningCode/{code}:
    get:
      tags:
        - EarningCode
      summary: Gets a earning code record for the provided company
      operationId: EarningCode_GetEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_EarningCodeViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_EarningCodeViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or earning code not found
    put:
      tags:
        - EarningCode
      summary: Updates a earning code record for the provided company
      operationId: EarningCode_UpdateEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The earning code
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EarningCodeViewModel'
      responses:
        '200':
          description: Success! List of earning code records returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningCodeUpdateEarningCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EarningCodeUpdateEarningCode200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or earning code not found
    delete:
      tags:
        - EarningCode
      summary: Deletes a earning code record for the provided company
      operationId: EarningCode_DeleteEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or earning code not found
  /Company/{companyId}/Earnings:
    post:
      tags:
        - Earnings
      summary: Adds earnings to one or more employee check(s) in the regular batch.
      operationId: Earnings_AddEarnings
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EarningImportViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/Earnings/{calendarId}/{batch}:
    get:
      tags:
        - Earnings
      summary: >-
        Gets earnings details by calendar and batch, optionally filtered by a
        list of employee ids
      operationId: Earnings_GetEarnings
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The calendar id
          name: calendarId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: The batch
          name: batch
          in: path
          required: true
          schema:
            type: string
        - description: Optional comma delimited list of employeeIds
          name: employeeIds
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/Earnings/calendars:
    get:
      tags:
        - Earnings
      summary: >-
        Gets a list of calendars for the company using today as the transaction
        date.
      operationId: Earnings_GetCurrentCalendars
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /Company/{companyId}/Earnings/calendars/{date}:
    get:
      tags:
        - Earnings
      summary: Gets a list of calendars for the company by date.
      operationId: Earnings_GetCurrentCalendars
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The transaction date
          name: date
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /Company/{companyId}/Earnings/calendars/search:
    get:
      tags:
        - Earnings
      summary: Gets a list of calendars for the company between the start and end date
      operationId: Earnings_GetAllCalendars
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Start date (defaults to 1980-01-01)
          name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: End date (defaults to 2100-12-31)
          name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_CompanyCalendarViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /Company/{companyId}/Employee/{employeeId}/Education:
    get:
      tags:
        - Education
      summary: Gets Educations for an employee in a company
      operationId: Education_GetEmployeeEducations
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeEducationViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeEducationViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    post:
      tags:
        - Education
      summary: Creates Education for an employee in a company
      operationId: Education_CreateEmployeeEducation
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeEducationViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee/{employeeId}/Education/{educationId}:
    put:
      tags:
        - Education
      summary: Updates Education for an employee in a company
      operationId: Education_UpdateEmployeeEducation
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The Education id
          name: educationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/EmployeeEducationViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    delete:
      tags:
        - Education
      summary: Deletes an education record for an employee in a company
      operationId: Education_DeleteEmployeeEducation
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The education id
          name: educationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee:
    get:
      tags:
        - Employee
      summary: Get employees from a company based on search criteria
      operationId: Employee_GetEmployees
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Cost center 1
          name: searchCriteria.costCenter1
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 2
          name: searchCriteria.costCenter2
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 3
          name: searchCriteria.costCenter3
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 4
          name: searchCriteria.costCenter4
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 5
          name: searchCriteria.costCenter5
          in: query
          required: false
          schema:
            type: string
        - description: The employee name
          name: searchCriteria.name
          in: query
          required: false
          schema:
            type: string
        - description: The employee ID
          name: searchCriteria.id
          in: query
          required: false
          schema:
            type: string
        - description: Social security number
          name: searchCriteria.ssn
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Whether to return a base64 encoded profile image with the search
            results
          name: searchCriteria.inclueProfileImage
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to include the direct deposit collection associated with
            each employee record
          name: searchCriteria.includeDirectDeposits
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to include the emergency contact collection associated with
            each employee record
          name: searchCriteria.includeEmergencyContacts
          in: query
          required: false
          schema:
            type: boolean
        - description: >-
            Whether to include the tax collection associated with each employee
            record
          name: searchCriteria.includeTaxes
          in: query
          required: false
          schema:
            type: boolean
        - name: searchCriteria.pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: searchCriteria.pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Property to sort results by. Valid properties include any from the
            return entity.
          name: searchCriteria.sortByProperty
          in: query
          required: false
          schema:
            type: string
        - name: searchCriteria.sortDirection
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_PagedDataResult_EmployeeSearchResultsViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_PagedDataResult_EmployeeSearchResultsViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    post:
      tags:
        - Employee
      summary: Creates an employee for a company
      operationId: Employee_CreateEmployee
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The employee record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeImportViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeImportViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeImportViewModel'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee/{employeeId}:
    get:
      tags:
        - Employee
      summary: Gets an employee for a company
      operationId: Employee_GetEmployee
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional query string parameter whether to return only active
            records
          name: activeOnly
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeGetRequestViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeGetRequestViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
    put:
      tags:
        - Employee
      summary: Updates an employee for a company
      operationId: Employee_UpdateEmployee
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The employee record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateViewModel'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    delete:
      tags:
        - Employee
      summary: Deletes an employee by company and employee id
      operationId: Employee_DeleteEmployee
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The Employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
  /Company/{companyId}/Employee/{employeeId}/DirectDeposits:
    put:
      tags:
        - Employee
      summary: Updates direct deposits for an employee
      operationId: Employee_UpdateEmployeeDirectDeposits
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Employee direct deposits
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateEmployeeDirectDepositsRequest'
          text/json:
            schema:
              $ref: >-
                #/components/schemas/EmployeeUpdateEmployeeDirectDepositsRequest1
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/EmployeeUpdateEmployeeDirectDepositsRequest2
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
  /Company/{companyId}/Employee/{employeeId}/Information:
    put:
      tags:
        - Employee
      summary: Updates demographics information for an employee
      operationId: Employee_UpdateEmployeeInformation
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Employee demographics information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
  /Company/{companyId}/Employee/{employeeId}/Taxes:
    put:
      tags:
        - Employee
      summary: Updates taxes for an employee
      operationId: Employee_UpdateEmployeeTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Employee taxes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateEmployeeTaxesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateEmployeeTaxesRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateEmployeeTaxesRequest2'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
  /Company/{companyId}/Employee/{employeeId}/EmergencyContacts:
    put:
      tags:
        - Employee
      summary: Updates emergency contacts for an employee
      operationId: Employee_UpdateEmployeeEmerencyContacts
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Employee emergency contacts
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/EmployeeUpdateEmployeeEmerencyContactsRequest
          text/json:
            schema:
              $ref: >-
                #/components/schemas/EmployeeUpdateEmployeeEmerencyContactsRequest1
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/EmployeeUpdateEmployeeEmerencyContactsRequest2
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
  /Company/{companyId}/Employee/{employeeId}/DeductionCode:
    get:
      tags:
        - EmployeeDeductionCode
      summary: Gets all deduction code records associated for the provided company
      operationId: EmployeeDeductionCode_GetDeductionCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeDeductionCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeDeductionCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - EmployeeDeductionCode
      summary: Creates a deduction code record for the provided company
      operationId: EmployeeDeductionCode_CreateDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeDeductionCodeViewModel'
      responses:
        '201':
          description: Created!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionCodeCreateDeductionCodeResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionCodeCreateDeductionCode201Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/Employee/{employeeId}/DeductionCode/{code}/{activeDate}:
    get:
      tags:
        - EmployeeDeductionCode
      summary: Gets a Deduction Code record for the provided company
      operationId: EmployeeDeductionCode_GetDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
        - description: The active date for the deduction code
          name: activeDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeDeductionCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeDeductionCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, Employee, or deduction code not found
    put:
      tags:
        - EmployeeDeductionCode
      summary: Updates a Deduction Code record for the provided company
      operationId: EmployeeDeductionCode_UpdateDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The deduction code
          name: code
          in: path
          required: true
          schema:
            type: string
        - description: The active date for the deduction code
          name: activeDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
      requestBody:
        $ref: '#/components/requestBodies/EmployeeDeductionCodeViewModel'
      responses:
        '200':
          description: Success! List of Deduction code records returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionCodeUpdateDeductionCodeResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionCodeUpdateDeductionCode200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
    delete:
      tags:
        - EmployeeDeductionCode
      summary: Deletes a deduction code record for the provided company
      operationId: EmployeeDeductionCode_DeleteDeductionCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
        - description: The active date for the deduction code
          name: activeDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/Employee/{employeeId}/EarningCode:
    get:
      tags:
        - EmployeeEarningCode
      summary: >-
        Gets all earning code records associated with the employee for the
        provided company
      operationId: EmployeeEarningCode_GetEarningCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeEarningCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeEarningCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee not found
    post:
      tags:
        - EmployeeEarningCode
      summary: Creates a earning code record for the provided company
      operationId: EmployeeEarningCode_CreateEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeEarningCodeViewModel'
      responses:
        '201':
          description: Created!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEarningCodeCreateEarningCodeResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEarningCodeCreateEarningCode201Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, employee, or earning code not found
  /Company/{companyId}/Employee/{employeeId}/EarningCode/{code}/{startDate}:
    get:
      tags:
        - EmployeeEarningCode
      summary: Gets a Earning Code record for the provided company
      operationId: EmployeeEarningCode_GetEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
        - description: The start date for the earning code
          name: startDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeEarningCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EmployeeEarningCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, Employee, or earning code not found
    put:
      tags:
        - EmployeeEarningCode
      summary: Updates a Earning Code record for the employee in the provided company
      operationId: EmployeeEarningCode_UpdateEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The earning code
          name: code
          in: path
          required: true
          schema:
            type: string
        - description: The start date for the earning code
          name: startDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
      requestBody:
        $ref: '#/components/requestBodies/EmployeeEarningCodeViewModel'
      responses:
        '200':
          description: Success! List of Earning code records returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEarningCodeUpdateEarningCodeResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEarningCodeUpdateEarningCode200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, employee or earning code not found
    delete:
      tags:
        - EmployeeEarningCode
      summary: Deletes a earning code record for the employee in the provided company
      operationId: EmployeeEarningCode_DeleteEarningCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
        - description: The start date for the earning code
          name: startDate
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or earning code not found
  /Company/{companyId}/Employee/{employeeId}/Pto:
    get:
      tags:
        - EmployeePto
      summary: Gets all pto requests for an employee in a company
      operationId: EmployeePto_GetEmployeePtos
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
  /Company/{companyId}/Employee/{employeeId}/Pto/{ptoGuid}:
    get:
      tags:
        - EmployeePto
      summary: Gets all pto requests for an employee in a company
      operationId: EmployeePto_GetEmployeePto
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The pto record unique identifier
          name: ptoGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
  /Company/{companyId}/JobCode:
    get:
      tags:
        - JobCode
      summary: Gets all Job code records associated for the provided company
      operationId: JobCode_GetJobCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_JobCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_JobCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - JobCode
      summary: Creates a job code record for the provided company
      operationId: JobCode_CreateJobCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The job code to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCodeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCodeViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobCodeViewModel'
        required: true
      responses:
        '201':
          description: Created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCodeCreateJobCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCodeCreateJobCode201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or job code not found
  /Company/{companyId}/JobCode/{code}:
    get:
      tags:
        - JobCode
      summary: Gets a Job code record for the provided company
      operationId: JobCode_GetJobCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_JobCodeViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_JobCodeViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or job code not found
    put:
      tags:
        - JobCode
      summary: Updates a Job code record for the provided company
      operationId: JobCode_UpdateJobCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The job code
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The job  code to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCodeViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/JobCodeViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobCodeViewModel'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobCodeUpdateJobCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobCodeUpdateJobCode200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or job code not found
    delete:
      tags:
        - JobCode
      summary: Deletes a job code record for the provided company
      operationId: JobCode_DeleteJobCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or job code not found
  /Company/{companyId}/Employee/{employeeId}/License:
    get:
      tags:
        - License
      summary: Gets licenses for an employee in a company
      operationId: License_GetEmployeeLicenses
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeLicenseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeLicenseViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    post:
      tags:
        - License
      summary: Creates license for an employee in a company
      operationId: License_CreateEmployeeLicense
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeLicenseViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee/{employeeId}/License/{licenseId}:
    put:
      tags:
        - License
      summary: Updates license for an employee in a company
      operationId: License_UpdateEmployeeLicense
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The license id
          name: licenseId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/EmployeeLicenseViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    delete:
      tags:
        - License
      summary: Deletes a license for an employee in a company
      operationId: License_DeleteEmployeeLicense
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The license id
          name: licenseId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Success! License deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseDeleteEmployeeLicenseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LicenseDeleteEmployeeLicense202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, employee, or license not found
  /System/Lookup/Genders:
    get:
      tags:
        - LookupValues
      summary: Gets all gender code options
      operationId: LookupValues_GetGenderCodes
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /System/Lookup/MaritalStatuses:
    get:
      tags:
        - LookupValues
      summary: Gets all marital status options
      operationId: LookupValues_GetMaritalStatusCodes
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /System/Lookup/TaxForms:
    get:
      tags:
        - LookupValues
      summary: Gets all tax form options
      operationId: LookupValues_GetTaxFormList
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /System/Lookup/AutoPays:
    get:
      tags:
        - LookupValues
      summary: Gets base auto pay options
      operationId: LookupValues_GetBaseAutoPayList
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /System/Lookup/VisaTypes:
    get:
      tags:
        - LookupValues
      summary: Gets visa type options
      operationId: LookupValues_GetVisaTypes
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /System/Lookup/RatePer:
    get:
      tags:
        - LookupValues
      summary: Gets rate per options
      operationId: LookupValues_GetRatePer
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /System/Lookup/TaxOptions:
    get:
      tags:
        - LookupValues
      summary: Gets list of TaxOption values
      operationId: LookupValues_GetTaxOptions
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /Company/{companyId}/Lookup/PayGrades:
    get:
      tags:
        - LookupValues
      summary: Gets all pay grade options
      operationId: LookupValues_GetCompanyPayGrades
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/PayGroups:
    get:
      tags:
        - LookupValues
      summary: Gets all pay group options
      operationId: LookupValues_GetCompanyPayGroups
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/Positions:
    get:
      tags:
        - LookupValues
      summary: Gets all position options
      operationId: LookupValues_GetCompanyPositions
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/Unions:
    get:
      tags:
        - LookupValues
      summary: Gets all union options
      operationId: LookupValues_GetCompanyUnions
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/EmployeeStatuses:
    get:
      tags:
        - LookupValues
      summary: Gets all employee status options
      operationId: LookupValues_GetCompanyEmployeeStatuses
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/EmployeeTypes:
    get:
      tags:
        - LookupValues
      summary: Gets all employee type options
      operationId: LookupValues_GetCompanyEmployeeTypes
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/BenefitClasses:
    get:
      tags:
        - LookupValues
      summary: Gets all benefit class options
      operationId: LookupValues_GetCompanyBenefitClasses
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/TimeClockGroups:
    get:
      tags:
        - LookupValues
      summary: Gets all time clock group options
      operationId: LookupValues_GetCompanyTimeClockGroups
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/TimeClockPayClasses:
    get:
      tags:
        - LookupValues
      summary: Gets all time clock pay class options
      operationId: LookupValues_GetCompanyTimeClockPayClasses
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/TimeClockSchedulePatterns:
    get:
      tags:
        - LookupValues
      summary: Gets all time clock schedule pattern options
      operationId: LookupValues_GetCompanyTimeClockSchedulePatterns
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/WorkersCompCodes:
    get:
      tags:
        - LookupValues
      summary: Gets all workers comp code options
      operationId: LookupValues_GetCompanyWorkersCompCodes
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/EEOClasses:
    get:
      tags:
        - LookupValues
      summary: Gets all workers comp code options
      operationId: LookupValues_GetCompanyEqualEmploymentOpportunityClasses
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/EarningCodes:
    get:
      tags:
        - LookupValues
      summary: Gets all Earning code records associated for the provided company
      operationId: LookupValues_GetEarningCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/DeductionCodes:
    get:
      tags:
        - LookupValues
      summary: Gets all Deduction code records associated for the provided company
      operationId: LookupValues_GetDeductionCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/PayFrequencies:
    get:
      tags:
        - LookupValues
      summary: Gets all Pay Frequency records associated for the provided company
      operationId: LookupValues_GetPayFrequencies
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/TerminationReasons:
    get:
      tags:
        - LookupValues
      summary: Gets all Termination reasons records associated for the provided company
      operationId: LookupValues_GetTerminationReasons
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
  /Company/{companyId}/Lookup/JobCodes:
    get:
      tags:
        - LookupValues
      summary: Gets all Job code records associated for the provided company
      operationId: LookupValues_GetJobCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/CostCenter1:
    get:
      tags:
        - LookupValues
      summary: Gets all Cost Center 1 records associated for the provided company
      operationId: LookupValues_GetCc1
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/CostCenter2:
    get:
      tags:
        - LookupValues
      summary: Gets all Cost Center 2 records associated for the provided company
      operationId: LookupValues_GetCc2
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/CostCenter3:
    get:
      tags:
        - LookupValues
      summary: Gets all Cost Center 3 records associated for the provided company
      operationId: LookupValues_GetCc3
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/CostCenter4:
    get:
      tags:
        - LookupValues
      summary: Gets all Cost Center 4 records associated for the provided company
      operationId: LookupValues_GetCc4
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/CostCenter5:
    get:
      tags:
        - LookupValues
      summary: Gets all Cost Center 5 records associated for the provided company
      operationId: LookupValues_GetCc5
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/ShiftCodes:
    get:
      tags:
        - LookupValues
      summary: Gets all Shift code records associated for the provided company
      operationId: LookupValues_GetShiftCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Taxes:
    get:
      tags:
        - LookupValues
      summary: Gets all Company Tax records associated for the provided company
      operationId: LookupValues_GetTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Taxes/State/{state}:
    get:
      tags:
        - LookupValues
      summary: >-
        Gets all Company Tax records associated for the provided company and
        state
      operationId: LookupValues_GetStateTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The state
          name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Taxes/Local/{state}:
    get:
      tags:
        - LookupValues
      summary: >-
        Gets all local Company Tax records associated for the provided company
        and state
      operationId: LookupValues_GetLocalTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The state
          name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Taxes/Local:
    get:
      tags:
        - LookupValues
      summary: Gets all Company Tax local records associated for the provided company
      operationId: LookupValues_GetLocalTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Accrual:
    get:
      tags:
        - LookupValues
      summary: Gets all Company accrual records associated for the provided company
      operationId: LookupValues_GetAccruals
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/OnboardingFlow:
    get:
      tags:
        - LookupValues
      summary: >-
        Gets all Company onboarding flow records associated for the provided
        company
      operationId: LookupValues_GetOnboardingFlow
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/HiringManagers:
    get:
      tags:
        - LookupValues
      summary: Gets all Company hiring managers for the provided company
      operationId: LookupValues_GetHiringManagers
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Batches:
    get:
      tags:
        - LookupValues
      summary: Gets all valid batch names for the current calendar period
      operationId: LookupValues_GetCurrentCalendarBatches
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Batches/{calendarId}:
    get:
      tags:
        - LookupValues
      summary: Gets all valid batch names for the specified calendar
      operationId: LookupValues_GetCalendarBatches
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The calendar id
          name: calendarId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeWithScopeViewModel_
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Lookup/RaiseReasons:
    get:
      tags:
        - LookupValues
      summary: Gets all valid rate change reasons
      operationId: LookupValues_GetRaiseReasons
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Ethnicities:
    get:
      tags:
        - LookupValues
      summary: Gets all ethniticy options
      operationId: LookupValues_GetEthniticties
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/Lookup/Rates:
    get:
      tags:
        - LookupValues
      summary: Gets all rates
      operationId: LookupValues_GetRates
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_LookupCodeViewModel_
        '404':
          description: Company not found
  /Company/{companyId}/ManualCheck:
    post:
      tags:
        - ManualCheck
      summary: Adds earnings to one or more employee check(s) in the manual batch.
      operationId: ManualCheck_Calculate
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: >-
          Properties of a check as defined by
          {WebProduct.API.Company.Models.ViewModels.Company.CheckRequestModel}
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckRequestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CheckRequestModel'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '404':
          description: Company or deduction code not found
  /Company/{companyId}/Onboarding:
    post:
      tags:
        - Onboarding
      summary: Creates an employee for a company
      operationId: Onboarding_OnboardEmployee
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The employee record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPostViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPostViewModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeOnboardingPostViewModel'
        required: true
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Onboarding/GetOnboardingSettings:
    get:
      tags:
        - Onboarding
      summary: "Various setting required for onboarding UI that hosted by exteranl system\r\nThese settings provides configured RPO values to external systems which can be mapped to new hire data"
      operationId: Onboarding_GetOnboardingSettings
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_OnboardingSettingsViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_OnboardingSettingsViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /Company/{companyId}/PayHistory:
    get:
      tags:
        - PayHistory
      summary: >-
        Gets all Accrual records associated for the provided company and
        employee
      operationId: PayHistory_SearchPayHistory
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Pay history start date (required)
          name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: Pay history end date (required)
          name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: Cost center 1 filter
          name: cc1
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 2 filter
          name: cc2
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 3 filter
          name: cc3
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 4 filter
          name: cc4
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 5 filter
          name: cc5
          in: query
          required: false
          schema:
            type: string
        - description: Job code filter
          name: jobCode
          in: query
          required: false
          schema:
            type: string
        - description: Shift code filter
          name: shiftCode
          in: query
          required: false
          schema:
            type: string
        - description: Workers comp code filter
          name: wcc
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayHistorySearchResults_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayHistorySearchResults_
        '404':
          description: NotFound
  /Company/{companyId}/PayHistory/Details:
    get:
      tags:
        - PayHistory
      summary: Get pay history for employees including paycheck details
      operationId: PayHistory_GetEmployeePayHistory
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Pay history start date (required)
          name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: Pay history end date (required)
          name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: Comma delimited list of employee ids to filter on
          name: employeeIds
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 1 filter
          name: cc1
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 2 filter
          name: cc2
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 3 filter
          name: cc3
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 4 filter
          name: cc4
          in: query
          required: false
          schema:
            type: string
        - description: Cost center 5 filter
          name: cc5
          in: query
          required: false
          schema:
            type: string
        - description: Job code filter
          name: jobCode
          in: query
          required: false
          schema:
            type: string
        - description: Shift code filter
          name: shiftCode
          in: query
          required: false
          schema:
            type: string
        - description: Workers comp code filter
          name: wcc
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayHistoryDetails_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayHistoryDetails_
        '404':
          description: NotFound
  /Company/{companyId}/Employee/{employeeId}/PayHistory/{transactionId}/PayStub:
    get:
      tags:
        - PayHistory
      summary: Get pay history for employees including paycheck details
      operationId: PayHistory_GetEmployeePayStub
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The transaction id
          name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '404':
          description: NotFound
  /Company/{companyId}/Payroll/{calendarGuid}/start:
    post:
      tags:
        - Payroll
      summary: Starts a scheduled payroll
      operationId: Payroll_StartPayroll
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Payroll/{calendarGuid}/restart/{batch}:
    post:
      tags:
        - Payroll
      summary: Restarts an open payroll
      operationId: Payroll_RestartBatch
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: batch
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Payroll/{calendarGuid}/preprocess:
    get:
      tags:
        - Payroll
      summary: >-
        Pre-calculates the payroll to identify any issues and returns a preview
        of all checks in the payroll
      operationId: Payroll_GetPreprocessResults
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
    post:
      tags:
        - Payroll
      summary: Pre-calculates the payroll to identify any issues
      operationId: Payroll_PreprocessPayroll
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: batch
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_EarningsResponseViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Payroll/{calendarGuid}/approve/{batch}:
    post:
      tags:
        - Payroll
      summary: Approves all batches in the calendar
      operationId: Payroll_ApproveBatches
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: >-
            Specific batch to approve, optional. All batches will be approved if
            excluded
          name: batch
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Payroll/{calendarGuid}/verify:
    get:
      tags:
        - Payroll
      summary: >-
        Gets the payroll verification results that were created from the verify
        POST request
      operationId: Payroll_GetVerifications
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
    post:
      tags:
        - Payroll
      summary: Runs payroll verification tests and returns the results
      operationId: Payroll_VerifyPayroll
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PayrollVerificationViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Payroll/{calendarGuid}/verify/{verificationId}:
    post:
      tags:
        - Payroll
      summary: Approves a verification test
      operationId: Payroll_ApproveVerification
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: The id of the verification test to be
          name: verificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Payroll/{calendarGuid}/verify/all:
    post:
      tags:
        - Payroll
      summary: Approves all verification tests
      operationId: Payroll_ApproveVerifications
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Payroll/{calendarGuid}/submit:
    post:
      tags:
        - Payroll
      summary: Submits an approved payroll
      operationId: Payroll_SubmitPayroll
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The id for the payroll calendar
          name: calendarGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or calendar not found
  /Company/{companyId}/Pto:
    get:
      tags:
        - Pto
      summary: Gets all pto requests within a date range for a company
      operationId: Pto_GetPtos
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: PTO request start Date
          name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: PTO request end Date
          name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Comma delimited list of employee ids for filtering
          name: employeeIds
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_PtoRequestViewModel_
        '400':
          description: Bad Request!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
  /Company/{companyId}/Employee/{employeeId}/Rate:
    get:
      tags:
        - Rate
      summary: Gets rates for an employee in a company
      operationId: Rate_GetEmployeeRate
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeRateViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeRateViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    post:
      tags:
        - Rate
      summary: Creates rate for an employee in a company
      operationId: Rate_CreateEmployeeRate
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeRateViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee/{employeeId}/Rate/{rateId}:
    put:
      tags:
        - Rate
      summary: Updates rate for an employee in a company
      operationId: Rate_UpdateEmployeeRate
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The rate id
          name: rateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/EmployeeRateViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    delete:
      tags:
        - Rate
      summary: Deletes a rate for an employee in a company
      operationId: Rate_DeleteEmployeeRate
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The rate id
          name: rateId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Success! rate deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateDeleteEmployeeRateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RateDeleteEmployeeRate202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, employee or rate not found
  /Company/{companyId}/Report:
    get:
      tags:
        - Report
      summary: Gets a list of reports available for run
      operationId: Report_GetReportList
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_ReportListItem_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_ReportListItem_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Report/{reportId}:
    get:
      tags:
        - Report
      summary: Runs and returns content for the report
      operationId: Report_GetReport
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The report id
          name: reportId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: File output type (e.g. PDF, Excel, Word). Defaults to PDF
          name: options.outputFormat
          in: query
          required: false
          schema:
            type: string
        - description: Comma delimited list of sortby columns
          name: options.sortBy
          in: query
          required: false
          schema:
            type: string
        - description: Run option (e.g. Summary or Detail). Defaults to Detail
          name: options.option
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Start check date. Must be a valid check date. If provided
            EndCheckDate, BeginProcess, and EndProcess is required
          name: options.beginCheckDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: >-
            End check date. Must be a valid check date. If provided
            BeginCheckDate, BeginProcess, and EndProcess is required
          name: options.endCheckDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: The process number associated with the begin check date
          name: options.beginProcess
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: The process number associated with the end check date
          name: options.endProcess
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Begin date for report date range. If provided, EndDate is required
          name: options.beginDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: End date for report date range. If provided, BeginDate is required
          name: options.endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: OK
        '404':
          description: NotFound
  /Company/{companyId}/Report/{reportId}/Parameters:
    get:
      tags:
        - Report
      summary: Gets a collection of valid parameters to pass as report options
      operationId: Report_GetReportParameters
      security:
        - oauth2:
            - Company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: reportId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_ReportProperties_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_ReportProperties_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or report not found
  /Company/{companyId}/Employee/{employeeId}/Review:
    get:
      tags:
        - Review
      summary: Gets Reviews for an employee in a company
      operationId: Review_GetEmployeeReviews
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
  /Company/{companyId}/Employee/{employeeId}/Review/{reviewId}:
    get:
      tags:
        - Review
      summary: Gets Reviews for an employee in a company
      operationId: Review_GetEmployeeReview
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The employee review unique identifier
          name: reviewId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeReviewViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
  /Company/{companyId}/Review:
    get:
      tags:
        - Review
      summary: Gets Reviews for an employee in a company
      operationId: Review_SearchEmployeeReviews
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The effective date range start
          name: searchCriteria.effectiveStartDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: The effective date range end
          name: searchCriteria.effectiveEndDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Limit result set to specified comma delimited list of employee ids
          name: searchCriteria.employeeIds
          in: query
          required: false
          schema:
            type: string
        - name: searchCriteria.pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: searchCriteria.pageNumber
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Property to sort results by. Valid properties include any from the
            return entity.
          name: searchCriteria.sortByProperty
          in: query
          required: false
          schema:
            type: string
        - name: searchCriteria.sortDirection
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeReviewSearchViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeReviewSearchViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
  /Company/{companyId}/ShiftCode:
    get:
      tags:
        - ShiftCode
      summary: Gets all Shift code records associated for the provided company
      operationId: ShiftCode_GetShiftCodes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_ShiftCodeViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_ShiftCodeViewModel_
        '404':
          description: NotFound
    post:
      tags:
        - ShiftCode
      summary: Creates a shift code record for the provided company
      operationId: ShiftCode_CreateECode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ShiftCodeViewModel'
      responses:
        '201':
          description: Success! Record has been created!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeCreateECodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeCreateECode201Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or shift code not found
  /Company/{companyId}/ShiftCode/{code}:
    get:
      tags:
        - ShiftCode
      summary: Gets a shift code record for the provided company
      operationId: ShiftCode_GetCc2
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_ShiftCodeViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_ShiftCodeViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
    put:
      tags:
        - ShiftCode
      summary: Updates a shift code record for the provided company
      operationId: ShiftCode_UpdateShiftCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The shift code
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/ShiftCodeViewModel'
      responses:
        '200':
          description: Success! Record has been updated!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeUpdateShiftCodeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeUpdateShiftCode200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or shift code not found
    delete:
      tags:
        - ShiftCode
      summary: Deletes a shift code record for the provided company
      operationId: ShiftCode_DeleteShiftCode
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The code
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: NotFound
  /Company/{companyId}/Employee/{employeeId}/Skill:
    get:
      tags:
        - Skill
      summary: Gets skills for an employee in a company
      operationId: Skill_GetEmployeeSkills
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeSkillViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeSkillViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    post:
      tags:
        - Skill
      summary: Creates Skill for an employee in a company
      operationId: Skill_CreateEmployeeSkill
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeSkillViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee/{employeeId}/Skill/{skillId}:
    put:
      tags:
        - Skill
      summary: Updates Skill for an employee in a company
      operationId: Skill_UpdateEmployeeSkill
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The Skill id
          name: skillId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/EmployeeSkillViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    delete:
      tags:
        - Skill
      summary: Deletes a skill for an employee in a company
      operationId: Skill_DeleteEmployeeSkill
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The skill id
          name: skillId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Success! Skill deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillDeleteEmployeeSkillResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SkillDeleteEmployeeSkill202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, employee or skill not found
  /Company/{companyId}/Tax:
    get:
      tags:
        - Tax
      summary: Gets all Company Tax records associated for the provided company
      operationId: Tax_GetTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Tax/{code}:
    get:
      tags:
        - Tax
      summary: Gets a Company Tax record for the provided company
      operationId: Tax_GetTax
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The record id
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_TaxViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_TaxViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or tax not found
  /Company/{companyId}/Tax/State/{state}:
    get:
      tags:
        - Tax
      summary: >-
        Gets all Company Tax records associated for the provided company and
        state
      operationId: Tax_GetStateTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The state
          name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Tax/Local/{state}:
    get:
      tags:
        - Tax
      summary: >-
        Gets all local Company Tax records associated for the provided company
        and state
      operationId: Tax_GetLocalTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The state
          name: state
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Tax/Local:
    get:
      tags:
        - Tax
      summary: Gets all Company Tax local records associated for the provided company
      operationId: Tax_GetLocalTaxes
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_List_TaxViewModel_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/TimeImport/{calendarId}:
    get:
      tags:
        - TimeImport
      summary: Gets the result of an existing import by calendar and service provider
      operationId: TimeImport_GetTimeImportResults
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The calendar id
          name: calendarId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
    post:
      tags:
        - TimeImport
      summary: Starts time import(s) for the calendar
      operationId: TimeImport_RunTimeImport
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The calendar id
          name: calendarId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_TimeImportResultViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company not found
  /Company/{companyId}/Employee/{employeeId}/Training:
    get:
      tags:
        - Training
      summary: Gets training for an employee in a company
      operationId: Training_GetEmployeeTrainings
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeTrainingViewModel_
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseDataWrapper_List_EmployeeTrainingViewModel_
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Employee or Company not found
    post:
      tags:
        - Training
      summary: Creates training for an employee in a company
      operationId: Training_CreateEmployeeTraining
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/EmployeeTrainingViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company or employee not found
  /Company/{companyId}/Employee/{employeeId}/Training/{trainingId}:
    put:
      tags:
        - Training
      summary: Updates training for an employee in a company
      operationId: Training_UpdateEmployeeTraining
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The Training id
          name: trainingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/EmployeeTrainingViewModel'
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, employee or training found
    delete:
      tags:
        - Training
      summary: Deletes a training record for an employee in a company
      operationId: Training_DeleteEmployeeTraining
      security:
        - oauth2:
            - Company
      parameters:
        - description: The company id
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: The employee id
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: The training id
          name: trainingId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Success! Training record deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingDeleteEmployeeTrainingResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TrainingDeleteEmployeeTraining202Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '404':
          description: Company, employee or training not found
  /utility/version:
    get:
      tags:
        - Utility
      summary: Gets the current API version
      operationId: Utility_Version
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilityVersionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UtilityVersion200Response'
  /utility/health:
    get:
      tags:
        - Utility
      summary: Gets the API health status
      operationId: Utility_Health
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: API Up status, Database access status, and Current API version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UtilityHealthResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UtilityHealth200Response'
  /utility/allowedPaths:
    get:
      tags:
        - Utility
      summary: Gets a list of allowed paths for the current user.
      operationId: Utility_GetUserApiPaths
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_StringArray_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_StringArray_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
  /utility/clientSecret:
    post:
      tags:
        - Utility
      summary: Creates a new client secret for the API user
      operationId: Utility_ResetClientSecret
      security:
        - oauth2:
            - Company
      responses:
        '200':
          description: Success!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
            text/json:
              schema:
                $ref: '#/components/schemas/ResponseDataWrapper_String_'
components:
  requestBodies:
    EmployeeDeductionCodeViewModel:
      description: The deduction code to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
      required: true
    EmployeeLicenseViewModel:
      description: The license model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeLicenseViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeLicenseViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeLicenseViewModel'
      required: true
    EarningCodeViewModel:
      description: The earning code to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EarningCodeViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EarningCodeViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EarningCodeViewModel'
      required: true
    EarningImportViewModel:
      description: >-
        Contains a list of earnings record to be added to paychecks, in addition
        to import configuration settings
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EarningImportViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EarningImportViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EarningImportViewModel'
      required: true
    EmployeeCertificationViewModel:
      description: The certification model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeCertificationViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeCertificationViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeCertificationViewModel'
      required: true
    EmployeeRateViewModel:
      description: The rate model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeRateViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeRateViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeRateViewModel'
      required: true
    DeductionCodeViewModel:
      description: The deduction code to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeductionCodeViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/DeductionCodeViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/DeductionCodeViewModel'
      required: true
    CostCenterViewModel:
      description: The cost center to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CostCenterViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/CostCenterViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CostCenterViewModel'
      required: true
    EmployeeSkillViewModel:
      description: The Skill model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeSkillViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeSkillViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeSkillViewModel'
      required: true
    EmployeeAccrualViewModel:
      description: The accrual to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeAccrualViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeAccrualViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeAccrualViewModel'
      required: true
    CompanyAccrualViewModel:
      description: The accrual to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyAccrualViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/CompanyAccrualViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/CompanyAccrualViewModel'
      required: true
    EmployeeEducationViewModel:
      description: The Education model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeEducationViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeEducationViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeEducationViewModel'
      required: true
    EmployeeEarningCodeViewModel:
      description: The earning code to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
      required: true
    ShiftCodeViewModel:
      description: The shift code to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShiftCodeViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/ShiftCodeViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/ShiftCodeViewModel'
      required: true
    EmployeeTrainingViewModel:
      description: The Training model
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTrainingViewModel'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeeTrainingViewModel'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/EmployeeTrainingViewModel'
      required: true
  securitySchemes:
    oauth2:
      description: Client Credentials Flow
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://www.readypayonline.com/CompanyAPI/identity/connect/token
          scopes:
            Company: Access to Proliant API endpoints
  schemas:
    EmployeeAccrualViewModel:
      required:
        - code
        - startDate
        - lengthOfService
        - lastAccrueDate
      type: object
      properties:
        code:
          description: The benefit code
          type: string
        startDate:
          description: The start date
          format: date-time
          type: string
        endDate:
          description: The end date
          format: date-time
          type: string
        lengthOfService:
          description: The length of service
          format: date-time
          type: string
        rate:
          description: The rate
          format: double
          type: number
        amount:
          description: The amount
          format: double
          type: number
        hours:
          description: The hours
          format: double
          type: number
        maximum:
          description: The maximum
          format: double
          type: number
        carryOverMaximum:
          description: The maximum
          format: double
          type: number
        overrideRate:
          description: Override rate?
          type: boolean
        overrideHours:
          description: Override hours?
          type: boolean
        overrideAmount:
          description: Override amount?
          type: boolean
        usedHours:
          description: The used hours
          format: double
          type: number
        usedAmount:
          description: The used amount
          format: double
          type: number
        availableHours:
          description: The available hours
          format: double
          type: number
        availableAmount:
          description: The available amount
          format: double
          type: number
        lastAccrueDate:
          description: The last accrue date
          format: date-time
          type: string
        lastChangeDateTime:
          description: The date/time of the last update
          format: date-time
          type: string
        lastChangeUser:
          description: The user who last updated this record
          type: string
        probationHours:
          description: The probation hours
          format: double
          type: number
        probationDollars:
          description: The probation dollars
          format: double
          type: number
        accruedHours:
          description: The accrued hours
          format: double
          type: number
        accruedDollars:
          description: The accrued dollars
          format: double
          type: number
        grantedHours:
          description: The granted hours
          format: double
          type: number
        grantedDollars:
          description: The granted dollars
          format: double
          type: number
    CompanyAccrualViewModel:
      required:
        - code
        - probationDays
        - hoursBased
        - hoursOrDollars
        - divisor
        - decimals
        - applyRulesESTA
        - allowRequests
        - allowNegativeRequests
      type: object
      properties:
        description:
          description: "Arbitrary abbreviation company chooses to identify the benefit. \r\nHowever, if this accrual is to satisfy ESTA laws, then bcode should follow a naming standard so that the accrual \r\nscripts can identify the accrual for ESTA calculations. ''SICKCT'' for Connecticut ESTA PTO, \r\n''SICKNYC'' for New York City ESTA PTO, etc."
          type: string
        code:
          description: The benefit code
          type: string
        probationDays:
          description: >-
            Number of days after HireDate before employee is allowed to use
            accrued time.
          format: int32
          maximum: 32767
          minimum: 0
          type: integer
        frequency:
          description: The frequency code
          type: string
        hoursBased:
          description: Is the accrual hours based?
          type: boolean
        benefitEarningCode:
          description: The benefit earning code
          type: string
        workedEarningCode:
          description: The worked earning code
          type: string
        whenCleared:
          description: When the accrual should be cleared
          type: string
        minimumHours:
          description: The minimum hours
          format: double
          type: number
        maximumAccrueAgainstHours:
          description: The maximum hours to accrue
          format: double
          type: number
        newEmployeeFilter:
          description: The new employee filter name
          type: string
        printOnStub:
          description: Code to be used for printing on the check stub
          type: string
        transferBenefitCode:
          description: The transfer benefit code
          type: string
        hoursOrDollars:
          description: >-
            Determines whether accrual is paid as hours or dollars against a
            rate. True means hours, false means dollars
          type: boolean
        checkStubDesc:
          description: Description to be used on the check stub
          type: string
        divisor:
          description: The divisor
          format: int32
          maximum: 9
          minimum: 0
          type: integer
        lastDate:
          description: The last date in which the accrual can be paid
          format: date-time
          type: string
        decimals:
          description: The number of decimals to be used for precision
          format: int32
          maximum: 9
          minimum: 0
          type: integer
        Id:
          description: The unique identifier for the record
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        lastChangeDateTime:
          description: The date/time of the last update
          format: date-time
          type: string
        lastChangeUser:
          description: The user who last updated this record
          type: string
        employeeOverrideMaxIsAvailable:
          description: Employee override max is available
          type: boolean
        transferExcessBenefitCode:
          description: Transfer Excess Benefit Code
          type: string
        transferExcessMaximum:
          description: Maximum accrual to be transfered
          format: double
          type: number
        whenClearedDays:
          description: The when cleared days
          format: int32
          type: integer
        paidEmployeesOnly:
          description: Applies only to employees with pay
          type: boolean
        calcDollarsWithCurrentPayRate:
          description: Calculate dollars against hours using the current pay rate
          type: boolean
        serviceOption:
          description: The service option
          type: string
        applyRulesESTA:
          description: "Used by scripts to calculate accrual mandated by Earned Sick Time Act laws.         \r\nIf this field is false, it does not necessarily mean that this accrual is not an ESTA accrual, \r\njust that certain scripts are not needed."
          type: boolean
        allowRequests:
          type: boolean
        allowNegativeRequests:
          type: boolean
    EmployeeCertificationViewModel:
      required:
        - code
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        code:
          type: string
        number:
          type: string
        effectiveDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        companyPaid:
          format: double
          type: number
        employeePaid:
          format: double
          type: number
        reimbursed:
          type: boolean
        notes:
          type: string
    LookupCodeViewModel:
      description: Simplified model used for returning lookup lists
      type: object
      properties:
        description:
          description: The description of the lookup item
          type: string
        value:
          description: The value of the lookup item
          type: string
    CompanyInformationViewModel:
      description: The company information view model
      type: object
      properties:
        address1:
          description: Company address line 1
          type: string
        address2:
          description: Company address line 2
          type: string
        adminHold:
          description: Is company on admin hold?
          type: boolean
        aggregateFilings:
          description: Should aggregate filings?
          type: boolean
        aggregateLimits:
          description: Should aggregate limits?
          type: boolean
        allowBackDate:
          description: Should allow back date entries?
          type: boolean
        allowSameDate:
          description: Should allow same date pay?
          type: boolean
        autoPayEmployees:
          description: Should auto pay employees?
          type: boolean
        autoPostRecurring:
          description: Should auto post recurring lines?
          type: boolean
        batchByPaygroup:
          description: Should employees be batched by paygroup?
          type: boolean
        calendarId:
          description: Current calendar id
          type: string
        costCenter1Description:
          description: Value used for cost center 1 labels
          type: string
        costCenter2Description:
          description: Value used for cost center 2 labels
          type: string
        costCenter3Description:
          description: Value used for cost center 3 labels
          type: string
        costCenter4Description:
          description: Value used for cost center 4 labels
          type: string
        costCenter5Description:
          description: Value used for cost center 5 labels
          type: string
        checkCalcSettings:
          description: Check calculation setting string
          type: string
        checkCalcWarnings:
          description: Check calculation warnings
          type: string
        city:
          description: City
          type: string
        co:
          description: Company id
          type: string
        primaryContactName:
          description: Primary contact name
          type: string
        primaryContactEmail:
          description: Primary contact email
          type: string
        primaryContactExtension:
          description: Primary contact extension
          type: string
        primaryContactPhone:
          description: Primary contact phone number
          type: string
        primaryContactTitle:
          description: Primary contact title
          type: string
        secondaryContactName:
          description: Secondary contact name
          type: string
        secondaryContactEmail:
          description: Secondary contact email
          type: string
        secondaryContactExtension:
          description: Secondary contact extension
          type: string
        secondaryContactPhone:
          description: Secondary contact phone number
          type: string
        secondaryContactTitle:
          description: Secondary contact title
          type: string
        otherContact:
          description: Other/Third contact name
          type: string
        otherContactEmail:
          description: Other/Third contact email
          type: string
        otherContactExtension:
          description: Other/third contact extension
          type: string
        otherContactPhone:
          description: Other/thrid contact phone number
          type: string
        otherContactTitle:
          description: Other/third contact title
          type: string
        country:
          description: Country
          type: string
        county:
          description: County
          type: string
        customerServiceRepresentive1:
          description: Primary customer service representative name
          type: string
        customerServiceRepresentive2:
          description: Secondary customer service representative name
          type: string
        customerServiceRepresentiveHold:
          description: Is company on customer service hold?
          type: boolean
        defaultAlwaysBlockDirDepOnVoid:
          description: Should void checks always have direct deposits blocked?
          type: boolean
        defaultBatch:
          description: Default payroll batch
          type: string
        defaultBlockDirDepOnVoid:
          description: Should void checks have direct deposits blocked by default?
          type: boolean
        defaultCostCenter1:
          description: Default cost center 1 value
          type: string
        defaultCostCenter2:
          description: Default cost center 2 value
          type: string
        defaultCostCenter3:
          description: Default cost center 3 value
          type: string
        defaultCostCenter4:
          description: Default cost center 4 value
          type: string
        defaultCostCeter5:
          description: Default cost center 5 value
          type: string
        defaultEmpStatus:
          description: Default employee status
          type: string
        defaultPayFrequency:
          description: Default pay frequency
          type: string
        defaultState:
          description: Default state
          type: string
        defaultTermDate:
          description: Default termination date
          type: string
        deliverAfter:
          description: Deliver after
          type: string
        deliverBy:
          description: Deliver by
          type: string
        deliveryAddress1:
          description: Delivery address line 1
          type: string
        deliveryAddress2:
          description: Delivery address line 2
          type: string
        deliveryCity:
          description: Delivery address city
          type: string
        deliveryMemo:
          description: Delivery address memo
          type: string
        deliveryServiceBureauGroupId:
          description: Delivery service bureau group id
          type: string
        deliveryService:
          description: Delivery service
          type: string
        deliveryState:
          description: Delivery state
          type: string
        deliveryZip:
          description: Delivery zip/postal code
          type: string
        dependentInsuranceAvailable:
          description: Is dependent service available?
          type: boolean
        emailContact:
          description: Company contact email address
          type: string
        employeePrenoteDays:
          description: Employee prenote days
          format: int32
          type: integer
        employerKind:
          description: Employer kind description
          type: string
        employmentType:
          description: Employment type code
          type: string
        endDate:
          description: Company record end date
          format: date-time
          type: string
        fax:
          description: Fax number
          type: string
        fiscalStartDay:
          description: Fiscal start day
          format: int32
          type: integer
        fiscalStartMonth:
          description: Fiscal start month
          format: int32
          type: integer
        fmlaCalculationType:
          description: Family medical leave of absence calculation type
          type: string
        generalLedger1Description:
          description: General Ledger 1 description
          type: string
        generalLedger2Description:
          description: General Ledger 2 description
          type: string
        generalLedger3Description:
          description: General Ledger 3 description
          type: string
        generalLedger4Description:
          description: General Ledger 4 description
          type: string
        generalLedger5Description:
          description: General Ledger 5 description
          type: string
        generalLedger6Description:
          description: General Ledger 6 description
          type: string
        hourlyBatch:
          description: Default hourly batch
          type: string
        inputDay:
          description: Input day
          type: string
        inputNotes:
          description: Input notes
          type: string
        inputTime:
          description: Input time
          type: string
        inputType:
          description: Input type
          type: string
        localQueueDelay:
          description: Local queue delay
          format: int32
          type: integer
        name:
          description: The company name
          type: string
        nextVoucherNumber:
          description: The next voucher number
          type: string
        operationHold:
          description: Is company on operational hold?
          type: boolean
        organizationType:
          description: The company organization type
          type: string
        overtimeCode:
          description: Default overtime code
          type: string
        packoutNotes:
          description: The packout notes
          type: string
        parentCompany:
          description: The parent company ID
          type: string
        payEntryPopOnScreen:
          description: Is pay entry popup on screen?
          type: boolean
        payEntryPopProcessing:
          description: Is pay entry population processing
          type: boolean
        payEntryPopRateFromDept:
          description: Is pay entry populated from department
          type: boolean
        payEntryPopUpdate:
          description: Is pay entry population updating
          type: boolean
        payImportFilename:
          description: The pay import file name
          type: string
        payImportType:
          description: The pay import type
          type: string
        payPeriodEffectiveDateOption:
          description: Is pay period effective date option?
          type: boolean
        payRateDoNotOverride:
          description: Can pay rates be overridden?
          type: boolean
        payRateModifier:
          description: Base pay rate modifier
          format: int32
          type: integer
        payRateSelectCtrl:
          description: Pay rate selection control
          format: int32
          type: integer
        payRateSelectPrecedence:
          description: Pay rate selection prescedence
          type: string
        phone:
          description: Company phone number
          type: string
        recalcDefaultHours:
          description: Default hours for recalculation
          format: double
          type: number
        recalcPayRate:
          description: Is recalc pay rate?
          type: boolean
        recalcSalary:
          description: Is recalc salary?
          type: boolean
        regularCode:
          description: The regular code
          type: string
        remoteQueueDelay:
          description: The remote queue delay
          format: int32
          type: integer
        salaryBatch:
          description: Default salary batch name
          type: string
        salaryCode:
          description: Default salary code
          type: string
        serviceBureauGroupId:
          description: The service bureau group id
          type: string
        scheduledDay:
          description: The scheduled day
          type: string
        seasonal:
          description: Is seasonal?
          type: boolean
        seasonalEndDay:
          description: Seasonal end day
          format: int32
          type: integer
        seasonalEndMonth:
          description: Seasonal end month
          format: int32
          type: integer
        seasonalStartDay:
          description: Seasonal start day
          format: int32
          type: integer
        seasonalStartMonth:
          description: Seasonal start month
          format: int32
          type: integer
        sicCode:
          description: The sic code
          type: string
        startDateField:
          description: The start date field
          type: string
        state:
          description: Address state
          type: string
        status:
          description: Company status
          type: string
        syncLocation:
          description: The sync location
          type: string
        syncManual:
          description: Is manual sync?
          type: boolean
        taxableReimbursementCode:
          description: Code representing taxable reimbursement
          type: string
        taxCloseDate:
          description: Tax close date
          format: date-time
          type: string
        taxHold:
          description: Is tax hold
          type: boolean
        terminated:
          description: Is company terminated
          type: boolean
        terminationWizard:
          description: Does company use the termination wizard
          type: boolean
        testCompany:
          description: Is test company
          type: boolean
        timeclockBatch:
          description: Default batch name to use for timeclock imports
          type: string
        useNewRateOverrideCode:
          description: Is use new rate override code
          type: boolean
        custom1Description:
          description: Label for custom field 1
          type: string
        custom2Description:
          description: Label for custom field 2
          type: string
        custom3Description:
          description: Label for custom field 3
          type: string
        custom4Description:
          description: Label for custom field 4
          type: string
        custom5Description:
          description: Label for custom field 5
          type: string
        custom6Description:
          description: Label for custom field 6
          type: string
        custom7Description:
          description: Label for custom field 7
          type: string
        custom8Description:
          description: Label for custom field 8
          type: string
        customCheck1Description:
          description: Label for custom check box 1
          type: string
        customCheck2Description:
          description: Label for custom check box 2
          type: string
        customCheck3Description:
          description: Label for custom check box 3
          type: string
        customCheck4Description:
          description: Label for custom check box 4
          type: string
        customCheck5Description:
          description: Label for custom check box 5
          type: string
        verifyPayroll:
          description: Does payroll require verification
          type: boolean
        webAddress:
          description: The company web address
          type: string
        zip:
          description: Company address zip/postal code
          type: string
    CostCenterViewModel:
      description: The cost center view model
      required:
        - active
      type: object
      properties:
        active:
          description: Is cost center active?
          type: boolean
        address1:
          description: Cost center address line 1
          type: string
        address2:
          description: Cost center address line 2
          type: string
        code:
          description: Cost center code
          type: string
        city:
          description: Cost center address city
          type: string
        country:
          description: Cost center address country
          type: string
        county:
          description: Cost center address county
          type: string
        name:
          description: Cost center display name
          type: string
        overrideCheckAcctName:
          description: Cost center level override for default checking account
          type: string
        overrideRate:
          description: Cost center level override for default rate value
          format: double
          type: number
        overrideRateCode:
          description: Cost center level override for default rate code
          type: string
        overrideShift:
          description: Cost center level override for default shift code
          type: string
        phone:
          description: Cost center phone number
          type: string
        state:
          description: Cost center address state
          type: string
        supervisor:
          description: Cost center default supervisor
          type: string
        useThisAddrOnChecks:
          description: Use this address on checks
          type: boolean
        wcc:
          description: Workers compensation code
          type: string
        zip:
          description: Cost center address Zip/Postal code
          type: string
    EarningImportViewModel:
      description: The earnings import view model
      required:
        - earnings
      type: object
      properties:
        fullTimecardReload:
          description: >-
            If true, all earnings for each employee provided in the earnings
            list will have their checks reset before importing the new earning
            records.
          type: boolean
        includeCheckDetails:
          description: >-
            If true, details related to processed checks will be returned to the
            client
          type: boolean
        earnings:
          description: List of Earning Records to be applied to employee checks.
          type: array
          items:
            $ref: '#/components/schemas/EarningViewModel'
    EarningViewModel:
      description: The earning view model
      required:
        - employeeId
      type: object
      properties:
        employeeId:
          description: The Id of the employee
          type: string
        comment:
          description: Free text comment field for this earning record.
          type: string
        batch:
          description: >-
            Specific batch name to be used for adding the earning record. If not
            provided, it wil be automatically detected by date.
          type: string
        checkDate:
          description: "Override for logic surrounding determination of calendar to use by Begin Date. \r\nSetting this forces the system to use calendars with the specified check date value."
          format: date-time
          type: string
        hours:
          description: The number of hours worked this shift
          format: double
          type: number
        rate:
          description: "The rate to be paid per hour for this shift, this value is optional \r\nand will be defaulted to the employee's current pay rate if missing."
          format: double
          type: number
        earningCode:
          description: >-
            The earning code to be used for this earning record. The earning
            code must exist at the company level.
          type: string
        deductionCode:
          description: >-
            The deduction code to be used for this earning record. The earning
            code must exist at the company level.
          type: string
        amount:
          description: The flat amount to be paid to the employee for this earning record.
          format: double
          type: number
        rateCode:
          description: >-
            The rate code for this earning record. The rate code, if provided,
            must exist at the company level
          type: string
        costCenter1:
          description: >-
            The Cost Center 1 value to be used for this earning record. The cost
            center, if provided, must exist at the company level.
          type: string
        costCenter2:
          description: >-
            The Cost Center 2 value to be used for this earning record. The cost
            center, if provided, must exist at the company level.
          type: string
        costCenter3:
          description: >-
            The Cost Center 3 value to be used for this earning record. The cost
            center, if provided, must exist at the company level.
          type: string
        costCenter4:
          description: >-
            The Cost Center 4 value to be used for this earning record. The cost
            center, if provided, must exist at the company level.
          type: string
        costCenter5:
          description: >-
            The Cost Center 5 value to be used for this earning record. The cost
            center, if provided, must exist at the company level.
          type: string
        jobCode:
          description: >-
            The job code for this earning record. The job code, if provided,
            must exist at the company level
          type: string
        shiftCode:
          description: >-
            The shift code for this earning record. The shift code, if provided,
            must exist at the company level.
          type: string
        workersCompCode:
          description: The Worker Comp code, if provided, for this earning record.
          type: string
        beginDate:
          description: The date/time for shift start.
          format: date-time
          type: string
        endDate:
          description: The date/time for shift end.
          format: date-time
          type: string
        overrideStateTaxCode:
          description: >-
            State tax code to be used in lieu of the employee's default state
            tax.
          type: string
        overrideLocalTaxCode1:
          description: >-
            Local tax code 1 to be used in lieu of the employee's default local
            tax code 1 tax.
          type: string
        overrideLocalTaxCode2:
          description: >-
            Local tax code 2 to be used in lieu of the employee's default local
            tax code 2 tax.
          type: string
        overrideLocalTaxCode3:
          description: >-
            Local tax code 3 to be used in lieu of the employee's default local
            tax code 3 tax.
          type: string
    CompanyCalendarViewModel:
      description: The company calendar view model
      type: object
      properties:
        co:
          description: The Company Id
          type: string
        checkDate:
          description: The check date.
          format: date-time
          type: string
        periodBegin:
          description: Date when the calendar period begins
          format: date-time
          type: string
        periodEnd:
          description: Date when the calendar period ends
          format: date-time
          type: string
        calendarId:
          description: The Calendar unique identifier
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        status:
          description: Current calendar payroll status
          type: string
        periodBegunUserId:
          description: The id of the user that starts the pay period
          type: string
        scheduledProcessDate:
          description: The scheduled process date
          format: date-time
          type: string
        actualProcessDate:
          description: The actual process date
          format: date-time
          type: string
        payrollNotes:
          description: The payroll notes
          type: string
        sequence:
          description: Priority of this calendar
          format: int32
          type: integer
        eDirDepAuditReportApprovedBy:
          description: User who approved the employee direct deposit audit report
          type: string
        eDirDepAuditReportApprovedDate:
          description: Time stamp for employee direct deposit audit report approval
          format: date-time
          type: string
    EarningsResponseViewModel:
      description: The earnings response view model
      type: object
      properties:
        paychecks:
          description: List of paychecks affected by the request
          type: array
          items:
            $ref: '#/components/schemas/PaycheckResponseModel'
        message:
          description: Status summary message
          type: string
        taxSetup:
          description: Errors to indicate any issues
          type: array
          items:
            $ref: '#/components/schemas/EarningErrorViewModel'
    PaycheckResponseModel:
      description: The paycheck model
      type: object
      properties:
        employeeId:
          description: The employee id
          type: string
        companyId:
          description: The company id
          type: string
        grossPay:
          description: The calculated sum of earning line amounts
          format: double
          type: number
          readOnly: true
        earnings:
          description: Breakdown of earnings
          type: array
          items:
            $ref: '#/components/schemas/LineDetailWithHours'
        totalDeductions:
          description: The calculated sum of deduction line amounts
          format: double
          type: number
          readOnly: true
        deductions:
          description: The breakdown of deductions
          type: array
          items:
            $ref: '#/components/schemas/LineDetail'
        totalTaxes:
          description: The calculated sum of tax line amounts
          format: double
          type: number
          readOnly: true
        taxes:
          description: The breakdown of taxes
          type: array
          items:
            $ref: '#/components/schemas/LineDetail'
        totalEmployerTaxes:
          description: The calculated sum of employer tax line amounts
          format: double
          type: number
          readOnly: true
        employerTaxes:
          description: The breakdown of employer taxes
          type: array
          items:
            $ref: '#/components/schemas/LineDetail'
        netPay:
          description: The net pay.
          format: double
          type: number
          readOnly: true
        checkDate:
          description: The check date
          format: date-time
          type: string
        batch:
          description: The batch
          type: string
    EarningErrorViewModel:
      description: Represents an error
      type: object
      properties:
        employeeId:
          description: The employee id
          type: string
        errors:
          description: The employee id
          type: array
          items:
            type: string
    LineDetailWithHours:
      description: Detail information for each line item
      type: object
      properties:
        description:
          description: The description
          type: string
        code:
          description: The code
          type: string
        amount:
          description: The amount
          format: double
          type: number
        type:
          description: The type
          type: string
        rate:
          description: The rate
          format: double
          type: number
        hours:
          description: The hours
          format: double
          type: number
    LineDetail:
      description: Detail information for each line item
      type: object
      properties:
        description:
          description: The description
          type: string
        code:
          description: The code
          type: string
        amount:
          description: The amount
          format: double
          type: number
        type:
          description: The type
          type: string
    DeductionCodeViewModel:
      description: The deduction code view model
      type: object
      properties:
        description:
          description: The description
          type: string
        code:
          description: The deduction code
          type: string
        shortDescription:
          description: The short description
          type: string
        dedType:
          description: Deduction type
          type: string
        priority:
          description: Priority
          format: int32
          type: integer
        w2Field:
          description: W2 Field
          type: string
        printOnCheckStub:
          description: Character used for printing deduction on check stub
          type: string
        minimum:
          description: Minimum value
          format: double
          type: number
        maximum:
          description: Maximum value
          format: double
          type: number
        annualMaximum:
          description: Annual maximum
          format: double
          type: number
        rate:
          description: Rate
          format: double
          type: number
        autoDrop:
          description: Auto drop from check if insufficient funds?
          type: boolean
        dropPartial:
          description: Allow partial deduction?
          type: boolean
        autoMakeup:
          description: Automatically make up partial deduction fulfillment?
          type: boolean
        frequency:
          description: Deduction charge frequency
          type: string
        calculationCode:
          description: Calculation code
          type: string
        agency:
          description: Agency
          type: string
        taxExempt:
          description: Tax exempt
          type: string
        grossCheck:
          description: Is gross check?
          type: boolean
        disallowOverrideCalcCode:
          description: Disallow  calculation code override
          format: int32
          type: integer
        disallowOverrideRate:
          description: Disallow rate override
          format: int32
          type: integer
        disallowOverrideFrequency:
          description: Disallow frequency override
          format: int32
          type: integer
        disallowOverrideAgency:
          description: Disallow agency override
          format: int32
          type: integer
        disallowOverrideMinimum:
          description: Disallow minimum value override
          format: int32
          type: integer
        disallowOverrideMaximum:
          description: Disallow maximum value override
          format: int32
          type: integer
        disallowOverrideAnnualMaximum:
          description: Disallow annual maximum value override
          format: int32
          type: integer
        enrollmentEffective:
          description: Enrollment effective
          type: string
        employeeACH:
          description: Is employee ACH?
          type: boolean
        active:
          description: Is active?
          type: boolean
        usePeriodDates:
          description: Use period dates?
          type: boolean
    EarningCodeViewModel:
      description: The earning code view model
      required:
        - code
      type: object
      properties:
        description:
          description: Description
          type: string
        code:
          description: Earning code
          type: string
        shortDescription:
          description: Short description
          type: string
        earnType:
          description: Earning type
          type: string
        minimum:
          description: Minimum value
          format: double
          type: number
        maximum:
          description: Maximum value
          format: double
          type: number
        annualMaximum:
          description: Annual maximum value
          format: double
          type: number
        overrideRate:
          description: Override rate value
          format: double
          type: number
        addToRate:
          description: Add to rate
          format: double
          type: number
        rateMultiplier:
          description: Rate multiplier
          format: double
          type: number
        overrideShift:
          description: Override shift
          type: string
        unitDescription:
          description: Unit description
          type: string
        autoDrop:
          description: Auto drop
          type: boolean
        calculationCode:
          description: Calculation code
          type: string
        rateCode:
          description: Rate code
          type: string
        amount:
          description: Amount value
          format: double
          type: number
        frequency:
          description: Earning frequency
          type: string
        units:
          description: Rate units
          format: double
          type: number
        rate:
          description: Rate
          format: double
          type: number
        agency:
          description: Agency
          type: string
        dCode:
          description: Deduction code
          type: string
        reduceAutoPay:
          description: Reduce auto pay
          type: boolean
        taxExempt:
          description: Tax exempt
          type: string
        worked:
          description: Worked
          format: int32
          type: integer
        disallowOverrideCalcCode:
          description: Disallow calculation code override?
          format: int32
          type: integer
        disallowOverrideRate:
          description: Disallow rate override?
          format: int32
          type: integer
        disallowOverrideUnits:
          description: Disallow unit override?
          format: int32
          type: integer
        disallowOverrideAmount:
          description: Disallow amount override?
          format: int32
          type: integer
        disallowOverrideFrequency:
          description: Disallow frequency override?
          format: int32
          type: integer
        disallowOverrideAgency:
          description: Disallow agency override?
          format: int32
          type: integer
        disallowOverrideMinimum:
          description: Disallow override minimum?
          format: int32
          type: integer
        disallowOverrideMaximum:
          description: Disallow override maximum?
          format: int32
          type: integer
        disallowOverrideAnnualMaximum:
          description: Disallow annual maximum override?
          format: int32
          type: integer
        active:
          description: Is active?
          type: boolean
        usePeriodDates:
          description: Use period dates?
          type: boolean
        payrollType:
          description: Payroll type
          type: string
        allowCobra:
          description: Allow cobra?
          type: boolean
        subCategory:
          description: Sub category
          type: string
        jobClassificationCode:
          description: Job classification code
          type: string
        includeInWeightedAvgOT:
          description: Include in weighted average overtime?
          type: boolean
        weightedOTAmount:
          description: Is weighted overtime amount?
          type: boolean
        week1Code:
          description: Week 1 code
          type: boolean
        week2Code:
          description: Week 2 code
          type: boolean
    EmployeeEducationViewModel:
      required:
        - school
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        school:
          type: string
        years:
          type: string
        gpa:
          format: double
          type: number
        graduated:
          type: boolean
        major:
          type: string
        degree:
          type: string
        classes:
          type: string
        awards:
          type: string
        notes:
          type: string
    EmployeeImportViewModel:
      description: The employee import view model
      required:
        - employee
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/EmployeeDemographicsPostViewModel'
        directDeposits:
          description: Direct deposits for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
        emergencyContacts:
          description: Emergency contacts for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactViewModel'
        taxes:
          description: Taxes for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaxViewModel'
        saveEmployee:
          description: >-
            Save employee? If false, employee import will be validated but not
            saved.
          type: boolean
    EmployeeDemographicsPostViewModel:
      description: The employee information view model
      required:
        - taxForm
        - hireDate
        - employeeStatus
        - birthDate
        - city
        - employeeType
        - lastName
        - firstName
        - payFrequency
        - ssn
        - state
        - zipCode
      type: object
      properties:
        title:
          description: Title
          type: string
        co:
          description: The company id
          type: string
        id:
          description: The employee id
          type: string
        taxForm:
          description: Tax form
          type: string
        cellPhone:
          description: The employee's cell phone number
          type: string
        workEmail:
          description: The employee's work email address
          type: string
        homePhone:
          description: The employee's home phone number
          type: string
        personalEmail:
          description: The employee's personal email address
          type: string
        workPhone:
          description: The employee's work phone number
          type: string
        workPhoneExt:
          description: The employee's work phone extension
          type: string
        adjSeniorityDate:
          description: Adjusted senority date
          format: date-time
          type: string
        benefitClass:
          description: Benefit class
          type: string
        healthInsuranceEligibleDate:
          description: Health insurance eligibility date
          format: date-time
          type: string
        rehireDate:
          description: Rehire date
          format: date-time
          type: string
        termDate:
          description: Termination date
          format: date-time
          type: string
        newHireReportDate:
          description: The first working day for the new hire
          format: date-time
          type: string
        termReason:
          description: Termination reason
          type: string
        timeClockGroup:
          description: Time clock group
          type: string
        timeClockPayClass:
          description: Time clock pay class
          type: string
        timeClockSchedulePattern:
          description: Time clock schedule pattern
          type: string
        clockNumber:
          description: Time clock number
          type: string
        flsaOvertimeExempt:
          description: Is Fair labor standards act overtime exempt?
          type: boolean
        jobCode:
          description: Job code
          type: string
        payGrade:
          description: Pay grade
          type: string
        payGroup:
          description: Pay group
          type: string
        tipCode:
          description: Tip code
          type: string
        employee401kDeferral:
          description: The amount allocated to the employee's 401k deferral
          format: double
          type: number
        employer401kMatch:
          description: The 401k amount matched by the employer
          format: double
          type: number
        ownerPercentage:
          description: Percentage ownernership of the company
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        autoPay:
          description: Employee Auto Pay setting (Hours/Salary/NULL)
          type: string
        ethnicity:
          description: Ethnicity
          type: string
        veteranStatus:
          description: Veteran status
          type: string
        maritalStatus:
          description: Marital status
          type: string
        eeoClass:
          description: Equal employment opportunity class
          type: string
        isOfficer:
          description: Is officer
          type: boolean
        positionCode:
          description: Position code
          type: string
        supervisorID:
          description: Supervisor id
          type: string
        supervisorName:
          description: Supervisor name
          type: string
        workersCompCode:
          description: Workers compensation code
          type: string
        cc1:
          description: Cost center 1
          type: string
        cc2:
          description: Cost center 2
          type: string
        cc3:
          description: Cost center 3
          type: string
        cc4:
          description: Cost center 4
          type: string
        cc5:
          description: Cost center 5
          type: string
        hireDate:
          description: The employee's hire date
          format: date-time
          type: string
        employeeStatus:
          description: Current employee status
          type: string
        citizenship:
          description: Employee citizenship status
          type: string
        address1:
          description: Home address line 1
          type: string
        address2:
          description: Home address line 2
          type: string
        birthDate:
          description: Birth date
          format: date-time
          type: string
        city:
          description: Home address city
          type: string
        country:
          description: Home address country
          type: string
        county:
          description: Home address county
          type: string
        defaultHours:
          description: Default hours
          format: double
          type: number
        employeeType:
          description: Employee type
          type: string
        lastName:
          description: Last name
          type: string
        firstName:
          description: First name
          type: string
        middleName:
          description: Middle name
          type: string
        nickName:
          description: Goes-by or Nickname
          type: string
        miscCheck1:
          description: Micellaneous Check 1
          type: boolean
        miscCheck2:
          description: Micellaneous Check 2
          type: boolean
        miscCheck3:
          description: Micellaneous Check 3
          type: boolean
        miscCheck4:
          description: Micellaneous Check 4
          type: boolean
        miscCheck5:
          description: Micellaneous Check 5
          type: boolean
        payFrequency:
          description: Pay frequency
          type: string
        genderCode:
          description: Gender code
          type: string
        ssn:
          description: Social security number
          type: string
        state:
          description: Home address state
          type: string
        unemploymentState:
          description: Unemployment state
          type: string
        workState:
          description: Work state
          type: string
        zipCode:
          description: Home address zip/postal code
          type: string
        employeeMemo:
          description: Employee memo
          type: string
        employeeImage:
          description: The current active employee profile image
          format: byte
          type: string
        employeeImageGuid:
          description: The current active employee profile image id
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        unionCode:
          description: Union code
          type: string
        unionApplicationDate:
          description: Union application date
          format: date-time
          type: string
        unionInitiationFeesCollected:
          description: Has union initiation fees been collected?
          type: boolean
        hasUnionDues:
          description: Has union dues
          type: boolean
        custom1:
          description: Custom field 1
          type: string
        custom2:
          description: Custom field 2
          type: string
        custom3:
          description: Custom field 3
          type: string
        custom4:
          description: Custom field 4
          type: string
        custom5:
          description: Custom field 5
          type: string
        custom6:
          description: Custom field 6
          type: string
        custom7:
          description: Custom field 7
          type: string
        custom8:
          description: Custom field 8
          type: string
    EmployeeDirectDepositViewModel:
      description: The employee direct deposit view model
      required:
        - sequence
        - routingNumber
        - account
        - checking
        - amount
        - nameOnAccount
        - startDate
      type: object
      properties:
        sequence:
          description: Priority for direct deposit application to check
          format: int32
          maximum: 99
          minimum: 1
          type: integer
        routingNumber:
          description: Bank routing number
          type: string
        account:
          description: Bank account number
          type: string
        checking:
          description: Is checking account?
          type: boolean
        amountCode:
          description: Code to be applied to amount for deposit (e.g. Flat, Flat-, %)
          type: string
        amount:
          description: Amount to be deposited for this entry
          format: double
          type: number
        prenoteDate:
          description: Prenote date
          format: date-time
          type: string
        nameOnAccount:
          description: Name on bank account
          type: string
        startDate:
          description: Start date
          format: date-time
          type: string
        endDate:
          description: End date
          format: date-time
          type: string
        excludeSpecial:
          description: Exclude special checks for direct deposit
          type: boolean
    EmergencyContactViewModel:
      description: The emergency contact view model
      type: object
      properties:
        name:
          description: Full name
          type: string
        relationship:
          description: Relationship
          type: string
        homePhone:
          description: Home phone number
          type: string
        workPhone:
          description: Work phone number
          type: string
        cellPhone:
          description: Cell phone number
          type: string
        address1:
          description: Address line 1
          type: string
        address2:
          description: Address line 2
          type: string
        city:
          description: Address city
          type: string
        state:
          description: Address state
          type: string
        zip:
          description: Address zip/postal code
          type: string
        county:
          description: Address county
          type: string
        country:
          description: Adderss country
          type: string
    EmployeeTaxViewModel:
      description: The employee tax view model
      required:
        - taxCode
        - filingStatus
        - startDate
      type: object
      properties:
        description:
          description: The description of the tax
          type: string
        taxCode:
          description: Tax code
          type: string
        filingStatus:
          description: Filing status
          type: string
        exemptions:
          description: Exemptions
          format: double
          type: number
        exemptions2:
          description: Exemptions 2
          format: double
          type: number
        additionalAmount:
          description: Additional amount
          format: double
          type: number
        additionalPercentage:
          description: Additional percentage
          format: double
          type: number
        percentageOfGross:
          description: Percentage of gross
          format: double
          type: number
        overrideTaxCalc:
          description: Override tax calulation
          type: boolean
        taxOption:
          description: The FITW tax option (SI - Single Income/DI - Dual Income)
          type: string
        additionalIncome:
          description: The additional income
          format: double
          type: number
        additionalDeductions:
          description: The additional deductions
          format: double
          type: number
        taxCredits:
          description: The additional income
          format: double
          type: number
        startDate:
          description: Start date
          format: date-time
          type: string
        endDate:
          description: End date (defaults to 2100-12-31)
          format: date-time
          type: string
        flatAmount:
          description: Calculated flat tax amount in dollars
          format: double
          type: number
          readOnly: true
        flatPercentage:
          description: Calculated flat tax amount as a percentage
          format: double
          type: number
          readOnly: true
        taxType:
          description: The tax type
          type: string
        isExempt:
          description: Is the employee exempt from this tax?
          type: boolean
          readOnly: true
    EmployeeSearchCriteriaViewModel:
      type: object
      properties:
        costCenter1:
          description: Cost center 1
          type: string
        costCenter2:
          description: Cost center 2
          type: string
        costCenter3:
          description: Cost center 3
          type: string
        costCenter4:
          description: Cost center 4
          type: string
        costCenter5:
          description: Cost center 5
          type: string
        name:
          description: The employee name
          type: string
        id:
          description: The employee ID
          type: string
        ssn:
          description: Social security number
          type: string
        inclueProfileImage:
          description: >-
            Whether to return a base64 encoded profile image with the search
            results
          type: boolean
        includeDirectDeposits:
          description: >-
            Whether to include the direct deposit collection associated with
            each employee record
          type: boolean
        includeEmergencyContacts:
          description: >-
            Whether to include the emergency contact collection associated with
            each employee record
          type: boolean
        includeTaxes:
          description: >-
            Whether to include the tax collection associated with each employee
            record
          type: boolean
        pageSize:
          format: int32
          type: integer
        pageNumber:
          format: int32
          type: integer
        sortByProperty:
          description: >-
            Property to sort results by. Valid properties include any from the
            return entity.
          type: string
        sortDirection:
          type: string
    EmployeeSearchResultsViewModel:
      required:
        - taxForm
        - hireDate
        - employeeStatus
        - birthDate
        - city
        - employeeType
        - lastName
        - firstName
        - payFrequency
        - ssn
        - state
        - zipCode
      type: object
      properties:
        title:
          description: Title
          type: string
        directDeposits:
          description: List of employee direct deposits
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
        taxes:
          description: List of employee taxes
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaxViewModel'
        emergencyContacts:
          description: List of employee emergency contacts
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactViewModel'
        i9ExpirationDate:
          description: I9 expiration date
          format: date-time
          type: string
        i9FormsReceived:
          description: I9 verification documentation received
          type: string
        i9Verified:
          description: Is I9 verified
          type: boolean
        visaExpirationDate:
          description: Visa expiration date
          format: date-time
          type: string
        visaType:
          description: Visa type
          type: string
        lastChangeDate:
          description: The last change date for the employee record
          format: date-time
          type: string
        overrideSupervisorCostCenter1:
          description: Override Supervisor for Cost Center 1
          type: string
        overrideSupervisorCostCenter2:
          description: Override Supervisor for Cost Center 2
          type: string
        overrideSupervisorCostCenter3:
          description: Override Supervisor for Cost Center 3
          type: string
        overrideSupervisorCostCenter4:
          description: Override Supervisor for Cost Center 4
          type: string
        overrideSupervisorCostCenter5:
          description: Override Supervisor for Cost Center 5
          type: string
        geid:
          description: The global employee identifier
          type: string
        co:
          description: The company id
          type: string
        id:
          description: The employee id
          type: string
        taxForm:
          description: Tax form
          type: string
        cellPhone:
          description: The employee's cell phone number
          type: string
        workEmail:
          description: The employee's work email address
          type: string
        homePhone:
          description: The employee's home phone number
          type: string
        personalEmail:
          description: The employee's personal email address
          type: string
        workPhone:
          description: The employee's work phone number
          type: string
        workPhoneExt:
          description: The employee's work phone extension
          type: string
        adjSeniorityDate:
          description: Adjusted senority date
          format: date-time
          type: string
        benefitClass:
          description: Benefit class
          type: string
        healthInsuranceEligibleDate:
          description: Health insurance eligibility date
          format: date-time
          type: string
        rehireDate:
          description: Rehire date
          format: date-time
          type: string
        termDate:
          description: Termination date
          format: date-time
          type: string
        newHireReportDate:
          description: The first working day for the new hire
          format: date-time
          type: string
        termReason:
          description: Termination reason
          type: string
        timeClockGroup:
          description: Time clock group
          type: string
        timeClockPayClass:
          description: Time clock pay class
          type: string
        timeClockSchedulePattern:
          description: Time clock schedule pattern
          type: string
        clockNumber:
          description: Time clock number
          type: string
        flsaOvertimeExempt:
          description: Is Fair labor standards act overtime exempt?
          type: boolean
        jobCode:
          description: Job code
          type: string
        payGrade:
          description: Pay grade
          type: string
        payGroup:
          description: Pay group
          type: string
        tipCode:
          description: Tip code
          type: string
        employee401kDeferral:
          description: The amount allocated to the employee's 401k deferral
          format: double
          type: number
        employer401kMatch:
          description: The 401k amount matched by the employer
          format: double
          type: number
        ownerPercentage:
          description: Percentage ownernership of the company
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        autoPay:
          description: Employee Auto Pay setting (Hours/Salary/NULL)
          type: string
        ethnicity:
          description: Ethnicity
          type: string
        veteranStatus:
          description: Veteran status
          type: string
        maritalStatus:
          description: Marital status
          type: string
        eeoClass:
          description: Equal employment opportunity class
          type: string
        isOfficer:
          description: Is officer
          type: boolean
        positionCode:
          description: Position code
          type: string
        supervisorID:
          description: Supervisor id
          type: string
        supervisorName:
          description: Supervisor name
          type: string
        workersCompCode:
          description: Workers compensation code
          type: string
        cc1:
          description: Cost center 1
          type: string
        cc2:
          description: Cost center 2
          type: string
        cc3:
          description: Cost center 3
          type: string
        cc4:
          description: Cost center 4
          type: string
        cc5:
          description: Cost center 5
          type: string
        hireDate:
          description: The employee's hire date
          format: date-time
          type: string
        employeeStatus:
          description: Current employee status
          type: string
        citizenship:
          description: Employee citizenship status
          type: string
        address1:
          description: Home address line 1
          type: string
        address2:
          description: Home address line 2
          type: string
        birthDate:
          description: Birth date
          format: date-time
          type: string
        city:
          description: Home address city
          type: string
        country:
          description: Home address country
          type: string
        county:
          description: Home address county
          type: string
        defaultHours:
          description: Default hours
          format: double
          type: number
        employeeType:
          description: Employee type
          type: string
        lastName:
          description: Last name
          type: string
        firstName:
          description: First name
          type: string
        middleName:
          description: Middle name
          type: string
        nickName:
          description: Goes-by or Nickname
          type: string
        miscCheck1:
          description: Micellaneous Check 1
          type: boolean
        miscCheck2:
          description: Micellaneous Check 2
          type: boolean
        miscCheck3:
          description: Micellaneous Check 3
          type: boolean
        miscCheck4:
          description: Micellaneous Check 4
          type: boolean
        miscCheck5:
          description: Micellaneous Check 5
          type: boolean
        payFrequency:
          description: Pay frequency
          type: string
        genderCode:
          description: Gender code
          type: string
        ssn:
          description: Social security number
          type: string
        state:
          description: Home address state
          type: string
        unemploymentState:
          description: Unemployment state
          type: string
        workState:
          description: Work state
          type: string
        zipCode:
          description: Home address zip/postal code
          type: string
        employeeMemo:
          description: Employee memo
          type: string
        employeeImage:
          description: The current active employee profile image
          format: byte
          type: string
        employeeImageGuid:
          description: The current active employee profile image id
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        unionCode:
          description: Union code
          type: string
        unionApplicationDate:
          description: Union application date
          format: date-time
          type: string
        unionInitiationFeesCollected:
          description: Has union initiation fees been collected?
          type: boolean
        hasUnionDues:
          description: Has union dues
          type: boolean
        custom1:
          description: Custom field 1
          type: string
        custom2:
          description: Custom field 2
          type: string
        custom3:
          description: Custom field 3
          type: string
        custom4:
          description: Custom field 4
          type: string
        custom5:
          description: Custom field 5
          type: string
        custom6:
          description: Custom field 6
          type: string
        custom7:
          description: Custom field 7
          type: string
        custom8:
          description: Custom field 8
          type: string
    EmployeeUpdateViewModel:
      description: The employee import view model
      required:
        - employee
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/EmployeeDemographicsPutViewModel'
        directDeposits:
          description: Direct deposits for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
        emergencyContacts:
          description: Emergency contacts for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactViewModel'
        taxes:
          description: Taxes for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaxViewModel'
        saveEmployee:
          description: >-
            Save employee? If false, employee import will be validated but not
            saved.
          type: boolean
    EmployeeDemographicsPutViewModel:
      description: The employee information view model
      required:
        - hireDate
        - employeeStatus
        - birthDate
        - city
        - employeeType
        - lastName
        - firstName
        - payFrequency
        - ssn
        - state
        - zipCode
      type: object
      properties:
        title:
          description: Title
          type: string
        cellPhone:
          description: The employee's cell phone number
          type: string
        workEmail:
          description: The employee's work email address
          type: string
        homePhone:
          description: The employee's home phone number
          type: string
        personalEmail:
          description: The employee's personal email address
          type: string
        workPhone:
          description: The employee's work phone number
          type: string
        workPhoneExt:
          description: The employee's work phone extension
          type: string
        adjSeniorityDate:
          description: Adjusted senority date
          format: date-time
          type: string
        benefitClass:
          description: Benefit class
          type: string
        healthInsuranceEligibleDate:
          description: Health insurance eligibility date
          format: date-time
          type: string
        rehireDate:
          description: Rehire date
          format: date-time
          type: string
        termDate:
          description: Termination date
          format: date-time
          type: string
        newHireReportDate:
          description: The first working day for the new hire
          format: date-time
          type: string
        termReason:
          description: Termination reason
          type: string
        timeClockGroup:
          description: Time clock group
          type: string
        timeClockPayClass:
          description: Time clock pay class
          type: string
        timeClockSchedulePattern:
          description: Time clock schedule pattern
          type: string
        clockNumber:
          description: Time clock number
          type: string
        flsaOvertimeExempt:
          description: Is Fair labor standards act overtime exempt?
          type: boolean
        jobCode:
          description: Job code
          type: string
        payGrade:
          description: Pay grade
          type: string
        payGroup:
          description: Pay group
          type: string
        tipCode:
          description: Tip code
          type: string
        employee401kDeferral:
          description: The amount allocated to the employee's 401k deferral
          format: double
          type: number
        employer401kMatch:
          description: The 401k amount matched by the employer
          format: double
          type: number
        ownerPercentage:
          description: Percentage ownernership of the company
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        autoPay:
          description: Employee Auto Pay setting (Hours/Salary/NULL)
          type: string
        ethnicity:
          description: Ethnicity
          type: string
        veteranStatus:
          description: Veteran status
          type: string
        maritalStatus:
          description: Marital status
          type: string
        eeoClass:
          description: Equal employment opportunity class
          type: string
        isOfficer:
          description: Is officer
          type: boolean
        positionCode:
          description: Position code
          type: string
        supervisorID:
          description: Supervisor id
          type: string
        supervisorName:
          description: Supervisor name
          type: string
        workersCompCode:
          description: Workers compensation code
          type: string
        cc1:
          description: Cost center 1
          type: string
        cc2:
          description: Cost center 2
          type: string
        cc3:
          description: Cost center 3
          type: string
        cc4:
          description: Cost center 4
          type: string
        cc5:
          description: Cost center 5
          type: string
        hireDate:
          description: The employee's hire date
          format: date-time
          type: string
        employeeStatus:
          description: Current employee status
          type: string
        citizenship:
          description: Employee citizenship status
          type: string
        address1:
          description: Home address line 1
          type: string
        address2:
          description: Home address line 2
          type: string
        birthDate:
          description: Birth date
          format: date-time
          type: string
        city:
          description: Home address city
          type: string
        country:
          description: Home address country
          type: string
        county:
          description: Home address county
          type: string
        defaultHours:
          description: Default hours
          format: double
          type: number
        employeeType:
          description: Employee type
          type: string
        lastName:
          description: Last name
          type: string
        firstName:
          description: First name
          type: string
        middleName:
          description: Middle name
          type: string
        nickName:
          description: Goes-by or Nickname
          type: string
        miscCheck1:
          description: Micellaneous Check 1
          type: boolean
        miscCheck2:
          description: Micellaneous Check 2
          type: boolean
        miscCheck3:
          description: Micellaneous Check 3
          type: boolean
        miscCheck4:
          description: Micellaneous Check 4
          type: boolean
        miscCheck5:
          description: Micellaneous Check 5
          type: boolean
        payFrequency:
          description: Pay frequency
          type: string
        genderCode:
          description: Gender code
          type: string
        ssn:
          description: Social security number
          type: string
        state:
          description: Home address state
          type: string
        unemploymentState:
          description: Unemployment state
          type: string
        workState:
          description: Work state
          type: string
        zipCode:
          description: Home address zip/postal code
          type: string
        employeeMemo:
          description: Employee memo
          type: string
        employeeImage:
          description: The current active employee profile image
          format: byte
          type: string
        employeeImageGuid:
          description: The current active employee profile image id
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        unionCode:
          description: Union code
          type: string
        unionApplicationDate:
          description: Union application date
          format: date-time
          type: string
        unionInitiationFeesCollected:
          description: Has union initiation fees been collected?
          type: boolean
        hasUnionDues:
          description: Has union dues
          type: boolean
        custom1:
          description: Custom field 1
          type: string
        custom2:
          description: Custom field 2
          type: string
        custom3:
          description: Custom field 3
          type: string
        custom4:
          description: Custom field 4
          type: string
        custom5:
          description: Custom field 5
          type: string
        custom6:
          description: Custom field 6
          type: string
        custom7:
          description: Custom field 7
          type: string
        custom8:
          description: Custom field 8
          type: string
    EmployeeGetRequestViewModel:
      description: The employee information view model
      required:
        - employee
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/EmployeeDemographicsGetViewModel'
        directDeposits:
          description: Direct deposits for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
        emergencyContacts:
          description: Emergency contacts for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactViewModel'
        taxes:
          description: Taxes for the employee
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaxViewModel'
    EmployeeDemographicsGetViewModel:
      description: The employee demographics information view model
      required:
        - taxForm
        - hireDate
        - employeeStatus
        - birthDate
        - city
        - employeeType
        - lastName
        - firstName
        - payFrequency
        - ssn
        - state
        - zipCode
      type: object
      properties:
        title:
          description: Title
          type: string
        i9ExpirationDate:
          description: I9 expiration date
          format: date-time
          type: string
        i9FormsReceived:
          description: I9 verification documentation received
          type: string
        i9Verified:
          description: Is I9 verified
          type: boolean
        visaExpirationDate:
          description: Visa expiration date
          format: date-time
          type: string
        visaType:
          description: Visa type
          type: string
        lastChangeDate:
          description: The last change date for the employee record
          format: date-time
          type: string
        overrideSupervisorCostCenter1:
          description: Override Supervisor for Cost Center 1
          type: string
        overrideSupervisorCostCenter2:
          description: Override Supervisor for Cost Center 2
          type: string
        overrideSupervisorCostCenter3:
          description: Override Supervisor for Cost Center 3
          type: string
        overrideSupervisorCostCenter4:
          description: Override Supervisor for Cost Center 4
          type: string
        overrideSupervisorCostCenter5:
          description: Override Supervisor for Cost Center 5
          type: string
        geid:
          description: The global employee identifier
          type: string
        co:
          description: The company id
          type: string
        id:
          description: The employee id
          type: string
        taxForm:
          description: Tax form
          type: string
        cellPhone:
          description: The employee's cell phone number
          type: string
        workEmail:
          description: The employee's work email address
          type: string
        homePhone:
          description: The employee's home phone number
          type: string
        personalEmail:
          description: The employee's personal email address
          type: string
        workPhone:
          description: The employee's work phone number
          type: string
        workPhoneExt:
          description: The employee's work phone extension
          type: string
        adjSeniorityDate:
          description: Adjusted senority date
          format: date-time
          type: string
        benefitClass:
          description: Benefit class
          type: string
        healthInsuranceEligibleDate:
          description: Health insurance eligibility date
          format: date-time
          type: string
        rehireDate:
          description: Rehire date
          format: date-time
          type: string
        termDate:
          description: Termination date
          format: date-time
          type: string
        newHireReportDate:
          description: The first working day for the new hire
          format: date-time
          type: string
        termReason:
          description: Termination reason
          type: string
        timeClockGroup:
          description: Time clock group
          type: string
        timeClockPayClass:
          description: Time clock pay class
          type: string
        timeClockSchedulePattern:
          description: Time clock schedule pattern
          type: string
        clockNumber:
          description: Time clock number
          type: string
        flsaOvertimeExempt:
          description: Is Fair labor standards act overtime exempt?
          type: boolean
        jobCode:
          description: Job code
          type: string
        payGrade:
          description: Pay grade
          type: string
        payGroup:
          description: Pay group
          type: string
        tipCode:
          description: Tip code
          type: string
        employee401kDeferral:
          description: The amount allocated to the employee's 401k deferral
          format: double
          type: number
        employer401kMatch:
          description: The 401k amount matched by the employer
          format: double
          type: number
        ownerPercentage:
          description: Percentage ownernership of the company
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        autoPay:
          description: Employee Auto Pay setting (Hours/Salary/NULL)
          type: string
        ethnicity:
          description: Ethnicity
          type: string
        veteranStatus:
          description: Veteran status
          type: string
        maritalStatus:
          description: Marital status
          type: string
        eeoClass:
          description: Equal employment opportunity class
          type: string
        isOfficer:
          description: Is officer
          type: boolean
        positionCode:
          description: Position code
          type: string
        supervisorID:
          description: Supervisor id
          type: string
        supervisorName:
          description: Supervisor name
          type: string
        workersCompCode:
          description: Workers compensation code
          type: string
        cc1:
          description: Cost center 1
          type: string
        cc2:
          description: Cost center 2
          type: string
        cc3:
          description: Cost center 3
          type: string
        cc4:
          description: Cost center 4
          type: string
        cc5:
          description: Cost center 5
          type: string
        hireDate:
          description: The employee's hire date
          format: date-time
          type: string
        employeeStatus:
          description: Current employee status
          type: string
        citizenship:
          description: Employee citizenship status
          type: string
        address1:
          description: Home address line 1
          type: string
        address2:
          description: Home address line 2
          type: string
        birthDate:
          description: Birth date
          format: date-time
          type: string
        city:
          description: Home address city
          type: string
        country:
          description: Home address country
          type: string
        county:
          description: Home address county
          type: string
        defaultHours:
          description: Default hours
          format: double
          type: number
        employeeType:
          description: Employee type
          type: string
        lastName:
          description: Last name
          type: string
        firstName:
          description: First name
          type: string
        middleName:
          description: Middle name
          type: string
        nickName:
          description: Goes-by or Nickname
          type: string
        miscCheck1:
          description: Micellaneous Check 1
          type: boolean
        miscCheck2:
          description: Micellaneous Check 2
          type: boolean
        miscCheck3:
          description: Micellaneous Check 3
          type: boolean
        miscCheck4:
          description: Micellaneous Check 4
          type: boolean
        miscCheck5:
          description: Micellaneous Check 5
          type: boolean
        payFrequency:
          description: Pay frequency
          type: string
        genderCode:
          description: Gender code
          type: string
        ssn:
          description: Social security number
          type: string
        state:
          description: Home address state
          type: string
        unemploymentState:
          description: Unemployment state
          type: string
        workState:
          description: Work state
          type: string
        zipCode:
          description: Home address zip/postal code
          type: string
        employeeMemo:
          description: Employee memo
          type: string
        employeeImage:
          description: The current active employee profile image
          format: byte
          type: string
        employeeImageGuid:
          description: The current active employee profile image id
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        unionCode:
          description: Union code
          type: string
        unionApplicationDate:
          description: Union application date
          format: date-time
          type: string
        unionInitiationFeesCollected:
          description: Has union initiation fees been collected?
          type: boolean
        hasUnionDues:
          description: Has union dues
          type: boolean
        custom1:
          description: Custom field 1
          type: string
        custom2:
          description: Custom field 2
          type: string
        custom3:
          description: Custom field 3
          type: string
        custom4:
          description: Custom field 4
          type: string
        custom5:
          description: Custom field 5
          type: string
        custom6:
          description: Custom field 6
          type: string
        custom7:
          description: Custom field 7
          type: string
        custom8:
          description: Custom field 8
          type: string
    EmployeeDeductionCodeViewModel:
      description: The deduction code view model
      type: object
      properties:
        code:
          description: The deduction code
          type: string
        calculationCode:
          description: Calculation code
          type: string
        tabled:
          description: Is the deduction code tabled?
          type: boolean
        rate:
          description: Rate
          format: double
          type: number
        amount:
          description: The amount
          format: double
          type: number
        startDate:
          description: The start date
          format: date-time
          type: string
        endDate:
          description: The end date
          format: date-time
          type: string
        costCenter1:
          description: The Cost Center 1
          type: string
        costCenter2:
          description: The Cost Center 2
          type: string
        costCenter3:
          description: The Cost Center 3
          type: string
        costCenter4:
          description: The Cost Center 4
          type: string
        costCenter5:
          description: The Cost Center 1
          type: string
        jobCode:
          description: The job code
          type: string
        overrideTaxCode1:
          description: Override tax code 1
          type: string
        overrideTaxCode2:
          description: Override tax code 2
          type: string
        overrideTaxCode3:
          description: Override tax code 3
          type: string
        goal:
          description: The goal
          format: double
          type: number
        paidTowardsGoal:
          description: The amount paid towards the goal
          format: double
          type: number
        frequency:
          description: Deduction charge frequency
          type: string
        lastDate:
          description: The last paid date
          format: date-time
          type: string
        annualMaximum:
          description: Annual maximum
          format: double
          type: number
        minimum:
          description: Minimum value
          format: double
          type: number
        maximum:
          description: Maximum value
          format: double
          type: number
        agency:
          description: Agency
          type: string
        miscellaneousInformation:
          description: Miscellaneous information
          type: string
        arrear:
          description: Arrear
          format: double
          type: number
        thirdPartyBankTransit:
          description: The third party bank account transit number
          type: string
        thirdPartyBankAccount:
          description: The third party bank account number
          type: string
        prenoteDate:
          description: The prenote date
          format: date-time
          type: string
        bankChecking:
          description: Is account checking?
          type: boolean
        priority:
          description: Priority
          format: int32
          type: integer
        thirdPartyId:
          description: The third party identifier
          type: string
        notes:
          description: The notes
          type: string
    EmployeeEarningCodeViewModel:
      type: object
      properties:
        description:
          description: The description
          type: string
        agency:
          description: The agency
          type: string
        amount:
          description: The amount
          format: double
          type: number
        annualMaximum:
          description: The annual maximum
          format: double
          type: number
        calcCode:
          description: The calc code
          type: string
        costCenter1:
          description: The cost center 1
          type: string
        costCenter2:
          description: The cost center 2
          type: string
        costCenter3:
          description: The cost center 3
          type: string
        costCenter4:
          description: The cost center 4
          type: string
        costCenter5:
          description: The cost center 5
          type: string
        code:
          description: The earning code
          type: string
        jobCode:
          description: The job code
          type: string
        endDate:
          description: The end date
          format: date-time
          type: string
        frequency:
          description: The frequency
          type: string
        goal:
          description: The goal
          format: double
          type: number
        lastDate:
          description: The last date
          format: date-time
          type: string
        maximum:
          description: The maximum
          format: double
          type: number
        minimum:
          description: The minimum
          format: double
          type: number
        miscInfo:
          description: The miscellaneous info
          type: string
        otc1:
          description: Otc 1
          type: string
        otc2:
          description: Otc 2
          type: string
        otc3:
          description: Otc 3
          type: string
        paidTowardsGoal:
          description: The amount paid towards goal
          format: double
          type: number
        rate:
          description: The rate
          format: double
          type: number
        rateCode:
          description: The rate code
          type: string
        ratePer:
          description: The rate per
          type: string
        startDate:
          description: The start date
          format: date-time
          type: string
        tabled:
          description: Is this earning tabled?
          type: boolean
        thirdPartyId:
          description: The third party identifier
          type: string
        units:
          description: The unit
          format: double
          type: number
    PtoRequestViewModel:
      required:
        - approvalStatus
        - code
        - endDate
        - isCancelled
        - ptoTypeCode
        - startDate
      type: object
      properties:
        approvalStatus:
          description: "The current approval status\r\n  Pending = 1\r\n  Approved = 2\r\n  Declined = 3"
          enum:
            - Pending
            - Approved
            - Declined
          type: string
        code:
          description: The benefit code
          type: string
        cancelledByEmployeeGuid:
          description: The cancelled by employee guid
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        cancelledDateTime:
          description: The cancelled date/time
          format: date-time
          type: string
        displayCode:
          description: The code to be displayed in the ReadyPay Online user interface
          type: string
        endDate:
          description: The end date
          format: date-time
          type: string
        guidfield:
          description: The record unique identifier (automatically assigned)
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        id:
          description: The employee id
          type: string
        isCancelled:
          description: Is the request cancelled?
          type: boolean
        notes:
          description: The notes
          type: string
        ptoHours:
          description: The total PTO Hours -- Calculated from details
          format: double
          type: number
          readOnly: true
        ptoHoursAdjusted:
          description: The adjusted PTO hours -- Calculated from details
          format: double
          type: number
          readOnly: true
        ptoTypeCode:
          description: The type code
          type: string
        requestDate:
          description: The date on which the PTO request was submitted
          format: date-time
          type: string
        shiftTypeCode:
          description: The shift type code
          type: string
        startDate:
          description: The PTO request start date
          format: date-time
          type: string
        supervisorComments:
          description: The supervisor comments
          type: string
        ptoRequestDetails:
          description: The PTO request details (Day by day breakdown)
          type: array
          items:
            $ref: '#/components/schemas/PtoRequestDetailViewModel'
    PtoRequestDetailViewModel:
      required:
        - ptoDay
      type: object
      properties:
        adjustedByEmployee:
          description: The adjusted by employee GUID
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        adjustedDateTime:
          description: The adjusted date
          format: date-time
          type: string
        calendarId:
          description: The calendar ID which the PTO hours were applied to
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        guidField:
          description: The unique identifier for the pto detail record
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        ptoDay:
          description: The day PTO will be taken on
          format: date-time
          type: string
        ptoHours:
          description: The pto hours for this day
          format: double
          type: number
        ptoHoursAdjusted:
          description: The adjusted PTO hours
          format: double
          type: number
        ptoNotTaken:
          description: Was the PTO day taken?
          type: boolean
    JobCodeViewModel:
      description: The job code view model
      type: object
      properties:
        description:
          description: Description of the job code
          type: string
        code:
          description: The job code
          type: string
        address1:
          description: Address 1
          type: string
        address2:
          description: Address 2
          type: string
        city:
          description: City
          type: string
        state:
          description: State
          type: string
        zip:
          description: Zip
          type: string
        overrideShift:
          description: Shift code to be used instead of the default
          type: string
        overrideRateCode:
          description: Rate code to be used instead of the default
          type: string
        overrideRate:
          description: Rate to be used instead of the default
          format: double
          type: number
        addToRate:
          description: Rate to be added to the default for this job code
          format: double
          type: number
        certifiedJob:
          description: Is job certified
          type: boolean
        rateMultiplier:
          description: Multiplier to be applied to default rate
          format: double
          type: number
        startDate:
          description: Record start date
          format: date-time
          type: string
        endDate:
          description: Record end date
          format: date-time
          type: string
        projectNumber:
          description: Project number associated with this job code
          type: string
    EmployeeLicenseViewModel:
      required:
        - code
      type: object
      properties:
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        code:
          type: string
        state:
          type: string
        number:
          type: string
        issueDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        notes:
          type: string
        examDate:
          format: date-time
          type: string
    LookupCodeWithScopeViewModel:
      type: object
      properties:
        description:
          description: The description of the lookup item
          type: string
        scope:
          description: >-
            The scope of the lookup item (e.g.  s - system, c - company, e -
            employee)
          type: string
        value:
          description: The value of the lookup item
          type: string
    CheckRequestModel:
      type: object
      properties:
        Autopay:
          type: boolean
        BeginDate:
          format: date-time
          type: string
        BlockInsurance:
          type: boolean
        BlockDirectDeposit:
          type: boolean
        BlockAccruals:
          type: boolean
        BlockDistributions:
          type: boolean
        check:
          $ref: '#/components/schemas/CheckOptionRequestModel'
        EndDate:
          format: date-time
          type: string
        EmployeeId:
          type: string
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/EarningViewModel'
        SupplementTaxRate:
          type: boolean
        TaxFrequency:
          type: string
        WeeksWorked:
          format: double
          type: number
    CheckOptionRequestModel:
      type: object
      properties:
        IssuedBy:
          enum:
            - ClientIssued
            - NextPayroll
            - YTDOnly
          type: string
        Number:
          type: string
        StubMemo:
          type: string
        Print:
          type: boolean
        Account:
          type: string
        CheckType:
          enum:
            - GrossToNet
            - NetToGross
          type: string
    EmployeeOnboardingPostViewModel:
      required:
        - FirstName
        - LastName
        - StartDate
        - HireDate
        - WorkState
        - EmpType
        - PayFrequency
        - DefaultHours
      type: object
      properties:
        FirstName:
          description: First Name of new hire
          type: string
        LastName:
          description: Last Name of new hire
          type: string
        MiddleName:
          description: Middle Name of new hire
          type: string
        Suffix:
          description: Suffix
          type: string
        StartDate:
          description: Date on which new hire start his job
          format: date-time
          type: string
        OrientationDate:
          description: Job Orientation Date
          format: date-time
          type: string
        HireDate:
          description: Date on which new hire is hired
          format: date-time
          type: string
        IsPaperWorkAtHome:
          description: "New hire complete his/her paperwork at home \r\nFor Remote employee this will be true"
          type: boolean
        IsRemoteEmployee:
          description: Is new hire working remotely
          type: boolean
        EmailAddress:
          description: New hire's email address
          type: string
        CC1:
          description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 1"
          type: string
        CC2:
          description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 2"
          type: string
        CC3:
          description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 3"
          type: string
        CC4:
          description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 4"
          type: string
        CC5:
          description: "A company can have 1 to 5 CC levels.\r\nMapped CDept 5"
          type: string
        PositionCode:
          description: A company's position code. This could be one of the configured value
          type: string
        WorkState:
          description: State where employee work's
          type: string
        EmpType:
          description: One of the configured Employee Types
          type: string
        PayFrequency:
          description: One of the configured Pay Frequencies
          type: string
        AutoPay:
          description: One of the configured Auto Pay
          type: string
        DefaultHours:
          description: Default Hours
          format: double
          type: number
        BaseRate:
          description: Base Rate
          format: double
          type: number
        BaseSalary:
          description: Base Salary
          format: double
          type: number
        AnnualSalary:
          description: Annual Salary
          format: double
          type: number
        FlowGuid:
          description: One of the onboarding workflow step
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        PreferredLanguage:
          description: Preferred Language, currently English and Spanish is supported
          type: string
        SendEmail:
          description: >-
            If True email will be send to address given in Email copy, else use
            email address
          type: boolean
        EmailCopy:
          description: Alternate email address
          type: string
        Address1:
          description: Address 1
          type: string
        Address2:
          description: Address 2
          type: string
        City:
          description: City
          type: string
        State:
          description: State
          type: string
        Zip:
          description: Zip
          type: string
        Phone:
          description: Phone
          type: string
        HiringManager:
          description: Hiring Manager - Pass the Guid
          type: string
        PayGrade:
          description: One of the pay grade value
          type: string
        EmployeeId:
          description: New hire employee Id, If null system generates
          type: string
        ThirdPartyEmployeeID:
          description: Employee Id Client prefere
          type: string
        DisableValidation:
          description: If true CC validation will be disabled
          type: boolean
        RpoUserName:
          description: User that initiate hiring process
          type: string
        DueDate:
          description: Due Date
          format: date-time
          type: string
        SeniorityDate:
          description: Adj. Seniority Date
          format: date-time
          type: string
        EligibilityDate:
          description: Health Insurance eligibility date
          format: date-time
          type: string
        Sms:
          description: SMS number
          type: string
        PayType:
          description: One of the configured pay type
          type: string
        Tipped:
          description: Tipped
          type: string
        Exempt:
          description: Is Excmpt
          type: boolean
        AdditionalRates:
          description: Additional Rates
          type: array
          items:
            $ref: '#/components/schemas/AdditionalRateModel'
        OtherFields:
          description: Misc. Fields. This could be configured field
          type: array
          items:
            $ref: '#/components/schemas/FieldData'
        CanSendWelcomeEmail:
          description: Can Send Welcome Email
          type: boolean
        CanSendSmsLink:
          description: Can Send Sms link
          type: boolean
    AdditionalRateModel:
      type: object
      properties:
        RateCode:
          type: string
        Rate:
          format: double
          type: number
        SalaryPerPayPeriod:
          format: double
          type: number
        RatePer:
          type: string
        Cc1:
          type: string
        Cc2:
          type: string
        Cc3:
          type: string
        Cc4:
          type: string
        Cc5:
          type: string
        JobCode:
          type: string
        Shift:
          type: string
        Paygrade:
          type: string
    FieldData:
      type: object
      properties:
        FieldName:
          type: string
        Value:
          type: object
    OnboardingSettingsViewModel:
      description: >-
        Represents configured data in RPO that External Systems can map to New
        hire
      type: object
      properties:
        WorkflowLookup:
          description: Configured Workflow data
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        LanguageLookup:
          description: Configured Language
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        AutoPayLookup:
          description: Configured Auto Pay
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        TippedLookup:
          description: Configured Tipped values
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        WorkStateLookup:
          description: Configured States
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        PayTypeLookup:
          description: Configured Pay Type
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        ShiftLookup:
          description: Configured Shift
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        RateCodeLookup:
          description: Configured Rate code. Used in Additional rates
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        RatePerLookup:
          description: Configured Rate Per. Used in Additional rates
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        IsRemoteHireAvailable:
          description: Is Remote Hire Available
          type: boolean
        IsAdditionalRatesAllowed:
          description: Can show additional rates
          type: boolean
        AdditionalRatesFields:
          description: Additional Rate fields
          type: array
          items:
            type: string
        NoOfAdditionalRatesReqired:
          description: No of additional rates
          format: int32
          type: integer
        SetUpInfoFields:
          description: Set up info fields. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/FieldInfo'
        JobPayInfoFields:
          description: Job pay info fields. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/FieldInfo'
        MiscAdditionalFields:
          description: Misc additional fields. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/FieldInfo'
        MiscCustomFields:
          description: Misc Custom Fields. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/FieldInfo'
        MiscTimeClockFields:
          description: Misc Time clock Fields. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/FieldInfo'
        MiscUnionAffiliationFields:
          description: Misc Union affiliation fields. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/FieldInfo'
        SupervisorLookup:
          description: Supervisor look up. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        BenefitClassLookup:
          description: Benefit class look up. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        WccLookup:
          description: Wcc look up. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        PayClassLookup:
          description: Pay class look up. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        ClockGroupLookup:
          description: Clock group look up. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        SchedulePatternLookup:
          description: Schedule Pattern look up. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        FrequencyLookup:
          description: Freqency look up. Refer HR Setup -&gt; custom in RPO
          type: array
          items:
            $ref: '#/components/schemas/LookupViewModel_String_Int32_'
        IsCC1Required:
          description: Is CC1 required
          type: boolean
        IsCC2Required:
          description: Is CC2 Required
          type: boolean
        IsCC3Required:
          description: Is CC3 Required
          type: boolean
        IsCC4Required:
          description: Is CC4 Required
          type: boolean
        IsCC5Required:
          description: Is CC5 Required
          type: boolean
    FieldInfo:
      type: object
      properties:
        FieldName:
          description: Field Name
          type: string
        FieldLabel:
          description: Field Label
          type: string
        IsRequired:
          description: Is as required field
          type: boolean
        DefaultValue:
          description: Default Value
          type: string
    PayHistorySearchResults:
      type: object
      properties:
        co:
          type: string
        id:
          type: string
        type:
          type: string
        checkDate:
          format: date-time
          type: string
        totalHours:
          format: double
          type: number
        totalAmount:
          format: double
          type: number
        transId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
    PayHistoryDetails:
      type: object
      properties:
        co:
          type: string
        id:
          type: string
        checkDate:
          format: date-time
          type: string
        transType:
          type: string
        det:
          type: string
        detCode:
          type: string
        hours:
          format: double
          type: number
        rate:
          format: double
          type: number
        amount:
          format: double
          type: number
        rateCode:
          type: string
        tcode1:
          type: string
        tcode2:
          type: string
        tcode3:
          type: string
        tcode4:
          type: string
        beginDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        shift:
          type: string
        wcc:
          type: string
        cc1:
          type: string
        cc2:
          type: string
        cc3:
          type: string
        cc4:
          type: string
        cc5:
          type: string
        jobCode:
          type: string
        gl1:
          type: string
        gl2:
          type: string
        gl3:
          type: string
        gl4:
          type: string
        gl5:
          type: string
        gl6:
          type: string
        cd:
          type: string
        xgl1:
          type: string
        xgl2:
          type: string
        xgl3:
          type: string
        xgl4:
          type: string
        xgl5:
          type: string
        xgl6:
          type: string
        comment:
          type: string
        trans:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
    PayrollVerificationViewModel:
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        result:
          type: string
        approved:
          type: boolean
        approvedByUser:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/PayrollVerificationDetailViewModel'
    PayrollVerificationDetailViewModel:
      type: object
      properties:
        text:
          type: string
        result:
          type: string
    EmployeeRateViewModel:
      description: The employee rate view model
      required:
        - code
      type: object
      properties:
        code:
          description: The pay rate code
          type: string
        salary:
          description: The salary
          format: double
          type: number
        rate:
          description: The rate
          format: double
          type: number
        ratePer:
          description: The period over which the rate is paid
          type: string
        costCenter1:
          description: The cost center 1
          type: string
        costCenter2:
          description: The cost center 2
          type: string
        costCenter3:
          description: The cost center 3
          type: string
        costCenter4:
          description: The cost center 4
          type: string
        costCenter5:
          description: The cost center 5
          type: string
        jobCode:
          description: The job code
          type: string
        startDate:
          description: The start date
          format: date-time
          type: string
        endDate:
          description: The end date
          format: date-time
          type: string
        payGrade:
          description: The pay grade
          type: string
        id:
          description: The identifier
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        changeRateReasonCode:
          description: The reason why the employee's pay rate was changed
          type: string
        raisePercentage:
          description: The raise percentage
          format: double
          type: number
    ReportListItem:
      description: Object describing a report
      type: object
      properties:
        title:
          description: Title of the report
          type: string
        description:
          description: Brief description of the report
          type: string
        id:
          description: The unique identifier for the report
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        format:
          description: Available formats for the report
          type: string
        category:
          description: The report category
          type: string
        options:
          description: Options for running the report if available (Summary/Detail)
          type: string
    ReportOptionsViewModel:
      description: >-
        Options to apply to a report run request. A check date range (with
        process numbers) OR override date range (BeginDate to EndDate) is
        required
      type: object
      properties:
        outputFormat:
          description: File output type (e.g. PDF, Excel, Word). Defaults to PDF
          type: string
        sortBy:
          description: Comma delimited list of sortby columns
          type: string
        option:
          description: Run option (e.g. Summary or Detail). Defaults to Detail
          type: string
        beginCheckDate:
          description: >-
            Start check date. Must be a valid check date. If provided
            EndCheckDate, BeginProcess, and EndProcess is required
          format: date-time
          type: string
        endCheckDate:
          description: >-
            End check date. Must be a valid check date. If provided
            BeginCheckDate, BeginProcess, and EndProcess is required
          format: date-time
          type: string
        beginProcess:
          description: The process number associated with the begin check date
          format: int64
          type: integer
        endProcess:
          description: The process number associated with the end check date
          format: int64
          type: integer
        beginDate:
          description: Begin date for report date range. If provided, EndDate is required
          format: date-time
          type: string
        endDate:
          description: End date for report date range. If provided, BeginDate is required
          format: date-time
          type: string
    ReportProperties:
      description: Options used when requesting a report run
      type: object
      properties:
        outputFormats:
          description: Available output formats (e.g. PDF, Excel, CSV, TXT)
          type: array
          items:
            type: string
        sortList:
          description: List of columns that can be sorted on
          type: array
          items:
            type: string
        availableCheckDates:
          description: Processed calendar check dates and their process id
          type: array
          items:
            $ref: '#/components/schemas/CheckDateListItem'
    CheckDateListItem:
      description: The check data list item
      type: object
      properties:
        checkDate:
          description: The check date
          type: string
        process:
          description: >-
            The id of the process run for the check date (There may be multiple
            process runs per check date)
          type: string
    EmployeeReviewViewModel:
      required:
        - date
        - id
        - score
      type: object
      properties:
        date:
          format: date-time
          type: string
        effectiveDate:
          format: date-time
          type: string
        employeesNotes:
          type: string
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        newPayAmount:
          format: double
          type: number
        newPayPer:
          type: string
        newPosition:
          type: string
        nextReviewDate:
          format: date-time
          type: string
        raiseAmount:
          format: double
          type: number
        rating:
          type: string
        reviewer:
          type: string
        reviewersNotes:
          type: string
        score:
          format: double
          type: number
    ReviewSearchCriteriaViewModel:
      type: object
      properties:
        effectiveStartDate:
          description: The effective date range start
          format: date-time
          type: string
        effectiveEndDate:
          description: The effective date range end
          format: date-time
          type: string
        employeeIds:
          description: Limit result set to specified comma delimited list of employee ids
          type: string
        pageSize:
          format: int32
          type: integer
        pageNumber:
          format: int32
          type: integer
        sortByProperty:
          description: >-
            Property to sort results by. Valid properties include any from the
            return entity.
          type: string
        sortDirection:
          type: string
    EmployeeReviewSearchViewModel:
      required:
        - employeeId
        - date
        - id
      type: object
      properties:
        employeeId:
          type: string
        date:
          format: date-time
          type: string
        effectiveDate:
          format: date-time
          type: string
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        newPayAmount:
          format: double
          type: number
        newPayPer:
          type: string
        raiseAmount:
          format: double
          type: number
    ShiftCodeViewModel:
      description: The shift code view model
      type: object
      properties:
        description:
          description: Description for this shift
          type: string
        code:
          description: The shift code
          type: string
        addToRate:
          description: Rate to be added to default rate for this shift
          format: double
          type: number
        rate:
          description: Base rate for this shift
          format: double
          type: number
        rateMultiplier:
          description: Multiplier to be applied to the default rate
          format: double
          type: number
    EmployeeSkillViewModel:
      required:
        - code
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        code:
          type: string
        date:
          format: date-time
          type: string
        proficiency:
          type: string
        notes:
          type: string
    TaxViewModel:
      description: The tax view model
      type: object
      properties:
        description:
          description: The description of the tax code
          type: string
        taxCode:
          description: The tax code
          type: string
        startDate:
          description: The start date for the tax record
          format: date-time
          type: string
        endDate:
          description: The end date for the tax record
          format: date-time
          type: string
        taxType:
          description: The tax type
          type: string
    TimeImportResultViewModel:
      description: The time import results view model
      type: object
      properties:
        importCurrentlyRunning:
          description: Is the import still running?
          type: boolean
        importsByProvider:
          description: The import statuses by provider
          type: array
          items:
            $ref: '#/components/schemas/TimeImportByProviderViewModel'
        error:
          description: Error messages associated with this import
          type: string
    TimeImportByProviderViewModel:
      description: A breakdown of the status of the time import by one or more providers
      type: object
      properties:
        provider:
          description: The time import provider name
          type: string
        timeImportCurrentlyRunning:
          description: The import statuses by provider
          type: boolean
        isComplete:
          description: Has the import finished for this provider?
          type: boolean
        providerTimeImportResults:
          description: The separate files available from this provider
          type: array
          items:
            $ref: '#/components/schemas/TimeImportByProviderResultsViewModel'
        error:
          description: Error message indicating problem.
          type: string
    TimeImportByProviderResultsViewModel:
      description: A breakdown of imports by provider/service combination
      type: object
      properties:
        description:
          description: Time import service description.
          type: string
        serviceId:
          description: The provider service id.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        batch:
          description: The calendar batch, may be empty if only one batch exists.
          type: string
        configurationName:
          description: Integration configuration name.
          type: string
        previousImportResult:
          description: Result if time file had been imported previously.
          type: string
        error:
          description: Error message indicating problem.
          type: string
    EmployeeTrainingViewModel:
      required:
        - code
        - category
      type: object
      properties:
        description:
          type: string
        id:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        code:
          type: string
        level:
          type: string
        status:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        companyPaid:
          format: double
          type: number
        employeePaid:
          format: double
          type: number
        reimbursed:
          type: boolean
        notes:
          type: string
        scheduledDate:
          format: date-time
          type: string
        expirationDate:
          format: date-time
          type: string
        renewalFrequency:
          type: string
        instructor:
          type: string
        certificate:
          type: string
        hours:
          format: double
          type: number
        score:
          format: double
          type: number
        category:
          type: string
    ResponseDataWrapper_List_EmployeeAccrualViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeAccrualViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_String_:
      type: object
      properties:
        data:
          type: string
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_EmployeeAccrualViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmployeeAccrualViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_CompanyAccrualViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CompanyAccrualViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_CompanyAccrualViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CompanyAccrualViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeCertificationViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCertificationViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_LookupCodeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_CompanyInformationViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CompanyInformationViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_CostCenterViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CostCenterViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_CostCenterViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CostCenterViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_CompanyCalendarViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CompanyCalendarViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_EarningsResponseViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EarningsResponseViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_DeductionCodeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DeductionCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_DeductionCodeViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DeductionCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EarningCodeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EarningCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_EarningCodeViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EarningCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeEducationViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEducationViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_PagedDataResult_EmployeeSearchResultsViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PagedDataResult_EmployeeSearchResultsViewModel_'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    PagedDataResult_EmployeeSearchResultsViewModel_:
      type: object
      properties:
        EntityList:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSearchResultsViewModel'
        TotalRecords:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        ResultIdentifier:
          type: string
        DistinctFieldNames:
          type: array
          items:
            type: string
        DistinctChangedBy:
          type: array
          items:
            type: string
    ResponseDataWrapper_EmployeeGetRequestViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmployeeGetRequestViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeDeductionCodeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_EmployeeDeductionCodeViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmployeeDeductionCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeEarningCodeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_EmployeeEarningCodeViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmployeeEarningCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_PtoRequestViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PtoRequestViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_JobCodeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/JobCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_JobCodeViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/JobCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeLicenseViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLicenseViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_LookupCodeWithScopeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LookupCodeWithScopeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_OnboardingSettingsViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OnboardingSettingsViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    LookupViewModel_String_Int32_:
      type: object
      properties:
        Key:
          description: The value of the lookup item
          type: string
        Value:
          description: The description of the lookup item
          format: int32
          type: integer
    ResponseDataWrapper_List_PayHistorySearchResults_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayHistorySearchResults'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_PayHistoryDetails_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayHistoryDetails'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_PayrollVerificationViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayrollVerificationViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeRateViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeRateViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_ReportListItem_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ReportListItem'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_ReportProperties_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ReportProperties'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeReviewViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeReviewViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeReviewSearchViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeReviewSearchViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_ShiftCodeViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ShiftCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_ShiftCodeViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ShiftCodeViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeSkillViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSkillViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_TaxViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaxViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_TaxViewModel_:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaxViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_TimeImportResultViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TimeImportResultViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_List_EmployeeTrainingViewModel_:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTrainingViewModel'
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    ResponseDataWrapper_StringArray_:
      type: object
      properties:
        data:
          type: array
          items:
            type: string
        errors:
          type: array
          items:
            type: string
        messages:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        validationErrors:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties:
            type: object
    EmployeeUpdateEmployeeDirectDepositsRequest:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
    EmployeeUpdateEmployeeDirectDepositsRequest1:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
    EmployeeUpdateEmployeeDirectDepositsRequest2:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDirectDepositViewModel'
    EmployeeUpdateEmployeeTaxesRequest:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeTaxViewModel'
    EmployeeUpdateEmployeeTaxesRequest1:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeTaxViewModel'
    EmployeeUpdateEmployeeTaxesRequest2:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeTaxViewModel'
    EmployeeUpdateEmployeeEmerencyContactsRequest:
      type: array
      items:
        $ref: '#/components/schemas/EmergencyContactViewModel'
    EmployeeUpdateEmployeeEmerencyContactsRequest1:
      type: array
      items:
        $ref: '#/components/schemas/EmergencyContactViewModel'
    EmployeeUpdateEmployeeEmerencyContactsRequest2:
      type: array
      items:
        $ref: '#/components/schemas/EmergencyContactViewModel'
    AccrualCreateAccrualResponse:
      type: object
      properties: {}
      example: {}
    AccrualCreateAccrual201Response:
      type: object
    AccrualUpdateAccrualResponse:
      type: object
      properties: {}
      example: {}
    AccrualUpdateAccrual200Response:
      type: object
    AccrualCreateAccrual201Response1:
      type: object
      properties: {}
      example: {}
    AccrualUpdateAccrual200Response1:
      type: object
      properties: {}
      example: {}
    CostCentersCreateCc1Response:
      type: object
      properties: {}
      example: {}
    CostCentersCreateCc1201Response:
      type: object
    CostCentersDeleteCc1Response:
      type: object
      properties: {}
      example: {}
    CostCentersDeleteCc1202Response:
      type: object
    CostCentersUpdateCc1Response:
      type: object
      properties: {}
      example: {}
    CostCentersUpdateCc1200Response:
      type: object
    CostCentersCreateCc2Response:
      type: object
      properties: {}
      example: {}
    CostCentersCreateCc2201Response:
      type: object
    CostCentersDeleteCc2Response:
      type: object
      properties: {}
      example: {}
    CostCentersDeleteCc2202Response:
      type: object
    CostCentersUpdateCc2Response:
      type: object
      properties: {}
      example: {}
    CostCentersUpdateCc2200Response:
      type: object
    CostCentersCreateCc3Response:
      type: object
      properties: {}
      example: {}
    CostCentersCreateCc3201Response:
      type: object
    CostCentersDeleteCc3Response:
      type: object
      properties: {}
      example: {}
    CostCentersDeleteCc3202Response:
      type: object
    CostCentersUpdateCc3Response:
      type: object
      properties: {}
      example: {}
    CostCentersUpdateCc3200Response:
      type: object
    CostCentersCreateCc4Response:
      type: object
      properties: {}
      example: {}
    CostCentersCreateCc4201Response:
      type: object
    CostCentersDeleteCc4Response:
      type: object
      properties: {}
      example: {}
    CostCentersDeleteCc4202Response:
      type: object
    CostCentersUpdateCc4Response:
      type: object
      properties: {}
      example: {}
    CostCentersUpdateCc4200Response:
      type: object
    CostCentersCreateCc5Response:
      type: object
      properties: {}
      example: {}
    CostCentersCreateCc5201Response:
      type: object
    CostCentersDeleteCc5Response:
      type: object
      properties: {}
      example: {}
    CostCentersDeleteCc5202Response:
      type: object
    CostCentersUpdateCc5Response:
      type: object
      properties: {}
      example: {}
    CostCentersUpdateCc5200Response:
      type: object
    DeductionCodeCreateDeductionCodeResponse:
      type: object
      properties: {}
      example: {}
    DeductionCodeCreateDeductionCode201Response:
      type: object
    DeductionCodeUpdateDeductionCodeResponse:
      type: object
      properties: {}
      example: {}
    DeductionCodeUpdateDeductionCode200Response:
      type: object
    EarningCodeCreateEarningCodeResponse:
      type: object
      properties: {}
      example: {}
    EarningCodeCreateEarningCode201Response:
      type: object
    EarningCodeUpdateEarningCodeResponse:
      type: object
      properties: {}
      example: {}
    EarningCodeUpdateEarningCode200Response:
      type: object
    EmployeeDeductionCodeCreateDeductionCodeResponse:
      type: object
      properties: {}
      example: {}
    EmployeeDeductionCodeCreateDeductionCode201Response:
      type: object
    EmployeeDeductionCodeUpdateDeductionCodeResponse:
      type: object
      properties: {}
      example: {}
    EmployeeDeductionCodeUpdateDeductionCode200Response:
      type: object
    EmployeeEarningCodeCreateEarningCodeResponse:
      type: object
      properties: {}
      example: {}
    EmployeeEarningCodeCreateEarningCode201Response:
      type: object
    EmployeeEarningCodeUpdateEarningCodeResponse:
      type: object
      properties: {}
      example: {}
    EmployeeEarningCodeUpdateEarningCode200Response:
      type: object
    JobCodeCreateJobCodeResponse:
      type: object
      properties: {}
      example: {}
    JobCodeCreateJobCode201Response:
      type: object
    JobCodeUpdateJobCodeResponse:
      type: object
      properties: {}
      example: {}
    JobCodeUpdateJobCode200Response:
      type: object
    LicenseDeleteEmployeeLicenseResponse:
      type: object
      properties: {}
      example: {}
    LicenseDeleteEmployeeLicense202Response:
      type: object
    RateDeleteEmployeeRateResponse:
      type: object
      properties: {}
      example: {}
    RateDeleteEmployeeRate202Response:
      type: object
    ShiftCodeCreateECodeResponse:
      type: object
      properties: {}
      example: {}
    ShiftCodeCreateECode201Response:
      type: object
    ShiftCodeUpdateShiftCodeResponse:
      type: object
      properties: {}
      example: {}
    ShiftCodeUpdateShiftCode200Response:
      type: object
    SkillDeleteEmployeeSkillResponse:
      type: object
      properties: {}
      example: {}
    SkillDeleteEmployeeSkill202Response:
      type: object
    TrainingDeleteEmployeeTrainingResponse:
      type: object
      properties: {}
      example: {}
    TrainingDeleteEmployeeTraining202Response:
      type: object
    UtilityVersionResponse:
      type: object
      properties: {}
      example: {}
    UtilityVersion200Response:
      type: object
    UtilityHealthResponse:
      type: object
      properties: {}
      example: {}
    UtilityHealth200Response:
      type: object
