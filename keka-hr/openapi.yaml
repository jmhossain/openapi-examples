openapi: 3.0.1
info:
  title: Requisition
  description: >-
    Here's our story,


    It all began with the frustration of using software that sucks. Prior to
    starting Keka, our core team was a 100 person business that needed an easy
    to use software for managing employees. We looked everywhere and all we
    found were software that was lousy and hard to use. We felt SME businesses
    in India deserved something better. Something awesome actually! 


    Thus emerged Keka!
  version: v1
  x-api-status-urls: false
servers:
  - description: Production server (uses live data)
    url: https://{company}.{environment}.com/api/v1
    variables:
      environment:
        default: keka
        enum:
          - keka
          - kekademo
        type: string
tags:
  - name: Jobs
  - name: Employees
  - name: Projects
  - name: PayCycles
  - name: Clients
  - name: Tasks
  - name: TalentPool
  - name: Groups
  - name: LeaveRequests
  - name: ProjectPhases
  - name: Goal
  - name: Praise
  - name: Departments
  - name: Locations
  - name: JobTitle
  - name: Currency
  - name: NoticePeriod
  - name: LeaveTypes
  - name: LeaveBalance
  - name: Attendance
  - name: AttendanceCaptureScheme
  - name: HolidayCalendar
  - name: SalaryComponents
  - name: PayGroups
  - name: PayGrades
  - name: PayBands
  - name: TimesheetEntries
  - name: TimeFrames
  - name: Badge
  - name: ExpenseCategory
  - name: Expense
  - name: ExpensePolicy
  - name: Asset
  - name: AssetType
  - name: AssetCategory
  - name: AssetCondition
  - name: RequisitionRequest
  - name: Authentication
paths:
  /connect/token:
    post:
      tags:
        - Authentication
      summary: Generate Access Token
      operationId: Authentication_getAccessToken
      description: >-
        Use this API to fetch access token by passing authentication parameters
        ( grant_type, scope, client_id, client_secret, api_key) as form-url
        encoded in the body.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthenticationGetAccessTokenRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "access_token": "eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ",
                        "expires_in": 86400,
                        "token_type": "Bearer",
                        "scope": "kekaapi"
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetAccessTokenResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "error": "unsupported_grant_type"
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetAccessToken400Response'
      deprecated: false
  /hris/employees:
    get:
      tags:
        - Employees
      summary: Get all Employees
      operationId: Employees_getAll
      description: >-
        Gets all employees / the specified employees based on employee search
        parameters.
      parameters:
        - description: >-
            Comma separated list of one or more Employee ids you'd like to
            filter on.
          name: employeeIds
          in: query
          schema:
            type: string
        - description: >-
            Comma separated list of one or more Employee numbers you'd like to
            filter on.
          name: employeeNumbers
          in: query
          schema:
            type: string
        - description: >-
            Comma separated list of one or more Employment Status you'd like to
            filter on, allowed values are Working, Relieved.
          name: employmentStatus
          in: query
          schema:
            type: string
        - description: >-
            Fetches employees who are in probation. The allowed value is true or
            false.
          name: inProbation
          in: query
          schema:
            type: boolean
            default: false
        - description: >-
            Fetches employees who are in notice period. The allowed value is
            true or false.
          name: inNoticePeriod
          in: query
          schema:
            type: boolean
            default: false
        - description: >-
            Date/time when this time off request was last modified, in ISO 8601
            format (YYYY-MM-DDThh:mm:ssÂ±hh:mm).
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfilePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfilePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - Employees
      summary: Create an Employee
      operationId: Employees_createEmployee
      description: Create an Employee and returns created employee identifier.
      requestBody:
        description: The employee.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          text/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/employees/{id}:
    get:
      tags:
        - Employees
      summary: Get an Employee
      operationId: Employees_getById
      description: Get an employee with specified identifier.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeProfileResponse'
  /hris/employees/{id}/personaldetails:
    put:
      tags:
        - Employees
      summary: Update Employee personal details
      operationId: Employees_updatePersonalDetails
      description: Update Employee personal details.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The personal details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PersonalDetailsUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/employees/{id}/jobdetails:
    put:
      tags:
        - Employees
      summary: Update employee job details
      operationId: Employees_updateJobDetails
      description: Update employee job details.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The job details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobDetailsUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/employees/updatefields:
    get:
      tags:
        - Employees
      summary: Get all update fields
      operationId: Employees_getAllUpdateFields
      parameters:
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeFieldResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeFieldResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/groups:
    get:
      tags:
        - Groups
      summary: Get all Groups
      operationId: Groups_getAll
      description: Get all Groups
      parameters:
        - description: >-
            Comma separated list of one or more Group Type Ids youâd like to
            filter on.
          name: groupTypeIds
          in: query
          schema:
            type: string
        - description: >-
            Comma separated list of one or more System Group Type youâd like to
            filter on.
          name: systemGroupTypes
          in: query
          schema:
            type: string
        - description: The Last Modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/grouptypes:
    get:
      tags:
        - Groups
      summary: Get all Group Types
      operationId: Groups_getAllGroupTypes
      description: Gets all Group Types.
      parameters:
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupTypePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupTypePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/departments:
    get:
      tags:
        - Departments
      summary: Get all departments
      operationId: Departments_getAll
      description: Get all departments
      parameters:
        - name: departmentIds
          in: query
          schema:
            type: string
        - description: The Last Modified Date.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIDepartmentViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIDepartmentViewPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/locations:
    get:
      tags:
        - Locations
      summary: Get all Locations
      operationId: Locations_getAll
      description: ' Gets all Locations.'
      parameters:
        - description: The Last Modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LocationPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/jobtitles:
    get:
      tags:
        - JobTitle
      summary: Get all jobtitles
      operationId: JobTitle_getAll
      description: Get all jobtitles
      parameters:
        - description: The Last Modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobTitlePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobTitlePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/currencies:
    get:
      tags:
        - Currency
      summary: Get all currencies
      operationId: Currency_getAll
      description: Get all currencies
      parameters:
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /hris/noticeperiods:
    get:
      tags:
        - NoticePeriod
      summary: Get all noticeperiods
      operationId: NoticePeriod_getAll
      description: Get all noticeperiods
      parameters:
        - description: The notice period ids.
          name: noticePeriodIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /time/leavetypes:
    get:
      tags:
        - LeaveTypes
      summary: Get all Leave Types
      operationId: LeaveTypes_listAll
      description: Get all Leave Types
      parameters:
        - description: >-
            Comma separated list of one or more leave type identifiers you'd
            like to filter on..
          name: leaveTypeIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LeaveTypePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /time/leavebalance:
    get:
      tags:
        - LeaveBalance
      summary: Get all Leave balances
      operationId: LeaveBalance_getAllBalances
      description: Get all the leave balances
      parameters:
        - description: The employee ids.
          name: employeeIds
          in: query
          schema:
            type: string
        - description: The leave type ids.
          name: leaveTypeIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeLeaveBalanceListItemPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeLeaveBalanceListItemPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /time/leaverequests:
    get:
      tags:
        - LeaveRequests
      summary: Get all Leave Requests
      operationId: LeaveRequests_getAllBetweenDates
      description: >-
        Get all the leaves in the organization between `from` and `to` date.If
        both `from` and `to` are not specified, last 30 days records are
        returned.`from` date should be before `to` date.The difference between
        `from` and `to` date cannot be more than **90** days.
      parameters:
        - description: >-
            Comma separated list of one or more Employee ids you'd like to
            filter on.
          name: employeeIds
          in: query
          schema:
            type: string
        - description: From date.
          name: from
          in: query
          schema:
            type: string
            format: date-time
        - description: To date.
          name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/LeaveRequestPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - LeaveRequests
      summary: Create an Leave Request
      operationId: LeaveRequests_createRequestIdentifier
      description: Create an leave request and returns leave request identifier.
      requestBody:
        description: The leave request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostLeaveRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /time/attendance:
    get:
      tags:
        - Attendance
      summary: Get all Attendance Records
      operationId: Attendance_getRecordsInRange
      description: >-
        Gets all Attendance records between date range `from` and `to`.If both
        `from` and `to` are not specified, last 30 days records are
        returned.From `date` should be before `to` date.The difference between
        `from` and `to` date cannot be more than **90** days.
      parameters:
        - description: >-
            Comma separated list of one or more Employee ids you'd like to
            filter on.
          name: employeeIds
          in: query
          schema:
            type: string
        - description: >-
            Date from records to retrieve. If not specified defaults to `to -
            30` days.
          name: from
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Date to records can be retrieved. If not specified defaults to
            `today`.
          name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttendanceSummaryPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /time/capturescheme:
    get:
      tags:
        - AttendanceCaptureScheme
      summary: Get all captureschemes
      operationId: AttendanceCaptureScheme_getAll
      description: Get all captureschemes
      parameters:
        - description: The capturescheme ids.
          name: captureschemeIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /time/holidayscalendar:
    get:
      tags:
        - HolidayCalendar
      summary: Get all holidays Calendar
      operationId: HolidayCalendar_getAllHolidaysCalendar
      description: Get all holidays Calendar
      parameters:
        - description: The holidaysCalendar ids.
          name: holidaysCalendarIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /payroll/salarycomponents:
    get:
      tags:
        - SalaryComponents
      summary: Get all Salary Components
      operationId: SalaryComponents_getAllComponents
      description: Gets all the salary components.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISalaryComponentPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APISalaryComponentPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /payroll/paygroups:
    get:
      tags:
        - PayGroups
      summary: Get all Pay Groups
      operationId: PayGroups_getAll
      description: Gets all Pay Groups.
      parameters:
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPayGroupViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPayGroupViewPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /payroll/paygroups/{payGroupId}/paycycles:
    get:
      tags:
        - PayCycles
      summary: Get all Pay Cycles
      operationId: PayCycles_getAll
      parameters:
        - description: The Pay Group Id
          name: payGroupId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Comma separated list of one or more run Status you'd like to filter
            on, allowed values are Pending, Finalized, Partial.
          name: runStatus
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPayCycleViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPayCycleViewPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/payregister:
    get:
      tags:
        - PayCycles
      summary: Get Pay Register
      operationId: PayCycles_getPayRegister
      parameters:
        - description: The Pay Group Id
          name: payGroupId
          in: path
          required: true
          schema:
            type: string
        - description: The Pay cycle Id
          name: payCycleId
          in: path
          required: true
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPayRegisterViewPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPayRegisterViewPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/paybatches:
    get:
      tags:
        - PayCycles
      summary: Get all Pay Batches
      operationId: PayCycles_getPayBatches
      parameters:
        - description: The Pay Group Id
          name: payGroupId
          in: path
          required: true
          schema:
            type: string
        - description: The Pay cycle Id
          name: payCycleId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Comma separated list of one or more payment Status you'd like to
            filter on, allowed values are UnPaid, Paid.
          name: status
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BatchPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /payroll/paygroups/{payGroupId}/paycycles/{payCycleId}/paybatches/{payBatchId}/payments:
    get:
      tags:
        - PayCycles
      summary: Get all Batch Payments
      operationId: PayCycles_getBatchPayments
      description: >-
        Gets all payments for the specified pay group Id and pay cycle Id and
        pay batch Id / specified pay group id and pay cycle Id and pay batch Id
        and payment status filter
      parameters:
        - description: The Pay Group Id
          name: payGroupId
          in: path
          required: true
          schema:
            type: string
        - description: The Pay cycle Id
          name: payCycleId
          in: path
          required: true
          schema:
            type: string
        - description: The Pay Batch Id
          name: payBatchId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Comma separated list of one or more payment Status you'd like to
            filter on, allowed values are UnPaid, Paid.
          name: status
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePaymentPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePaymentPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
        - PayCycles
      summary: Update the Payments status
      operationId: PayCycles_updatePaymentsStatus
      description: >-
        Update the Payments status.It will allow only 100 bulk transactions from
        that particular batch.
      parameters:
        - description: The Pay Group Id
          name: payGroupId
          in: path
          required: true
          schema:
            type: string
        - description: The Pay cycle Id
          name: payCycleId
          in: path
          required: true
          schema:
            type: string
        - description: The Pay Batch Id
          name: payBatchId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The Payment Transactions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PayCyclesUpdatePaymentsStatusRequest3'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /payroll/paygrades:
    get:
      tags:
        - PayGrades
      summary: Get all Pay Grades
      operationId: PayGrades_getAll
      description: Gets all Pay Grades.
      parameters:
        - description: The paygrade ids.
          name: payGradeIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /payroll/paybands:
    get:
      tags:
        - PayBands
      summary: Get all Pay Bands
      operationId: PayBands_getAll
      description: Gets all Pay Bands.
      parameters:
        - description: The payband ids.
          name: payBandIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/clients:
    get:
      tags:
        - Clients
      summary: Get all clients
      operationId: Clients_getAll
      description: Get all clients
      parameters:
        - description: >-
            Comma separated list of one or more employee ids you'd like to
            filter on.
          name: clientIds
          in: query
          schema:
            type: string
        - description: >-
            Date/time when this time off request was last modified, in ISO 8601
            format (YYYY-MM-DDThh:mm:ssÂ±hh:mm).
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClientPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIClientPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - Clients
      summary: Create a Client
      operationId: Clients_createClientIdentifier
      description: Create a Client and returns created client identifier.
      requestBody:
        description: The client.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          text/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Client'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/clients/{id}:
    get:
      tags:
        - Clients
      summary: Get a client
      operationId: Clients_getById
      description: Gets the specified client based on identifier.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIClientResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIClientResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
        - Clients
      summary: Update a Client
      operationId: Clients_updateDetails
      description: Update Client Details.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The update client.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects/{projectId}/phases:
    get:
      tags:
        - ProjectPhases
      summary: Get project phases.
      operationId: ProjectPhases_getAll
      description: Get project phases.
      parameters:
        - description: The project identifier.
          name: projectId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Date/time when this time off request was last modified, in ISO 8601
            format (YYYY-MM-DDThh:mm:ssÂ±hh:mm).
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPhasePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectPhasePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - ProjectPhases
      summary: Create a Project Phase
      operationId: ProjectPhases_createPhaseIdentifier
      description: Create a Project Phase and returns created phase identifier
      parameters:
        - description: The project identifier.
          name: projectId
          in: path
          required: true
          schema:
            type: string
        - description: Name of the phase.
          name: phaseName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects:
    get:
      tags:
        - Projects
      summary: Get all projects.
      operationId: Projects_getAll
      description: Get all projects.
      parameters:
        - description: >-
            Comma separated list of one or more employee ids you'd like to
            filter on.
          name: clientIds
          in: query
          schema:
            type: string
        - description: >-
            Date/time when this time off request was last modified, in ISO 8601
            format (YYYY-MM-DDThh:mm:ssÂ±hh:mm).
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - Projects
      summary: Create a Project
      operationId: Projects_createProjectIdentifier
      description: Create an Project and returns created project identifier.
      requestBody:
        description: The project.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          text/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Project'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects/{id}:
    get:
      tags:
        - Projects
      summary: Get a project
      operationId: Projects_getById
      description: Gets the specified project based on identifier.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
        - Projects
      summary: Update a Project
      operationId: Projects_updateDetails
      description: Update Project Details.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The update project.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects/{id}/allocations:
    get:
      tags:
        - Projects
      summary: Get a project allocations
      operationId: Projects_getAllocations
      description: Gets the specified project allocations based on identifier.
      parameters:
        - description: The identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: The last modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectAllocationPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectAllocationPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects/{id}/timeentries:
    get:
      tags:
        - Projects
      summary: Get project timesheet entries.
      operationId: Projects_getTimesheetEntriesBetweenDates
      description: >-
        Gets the project time entries between selected from and to date range.If
        both `from` and `to` are not specified, last 30 days records are
        returned.From `date` should be before `to` date.The difference between
        `from` and `to` date cannot be more than **90** days.
      parameters:
        - description: The project identifier.
          name: id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Date from records to retrieve. If not specified defaults to `to -
            30` days.
          name: from
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Date to records can be retrieved. If not specified defaults to
            `today`.
          name: to
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Comma separated list of one or more Employee ids you'd like to
            filter on.
          name: employeeIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects/{projectId}/tasks:
    get:
      tags:
        - Tasks
      summary: Get project tasks.
      operationId: Tasks_getAll
      description: Gets the project tasks.
      parameters:
        - description: The project identifier.
          name: projectId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Date/time when this time off request was last modified, in ISO 8601
            format (YYYY-MM-DDThh:mm:ssÂ±hh:mm).
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProjectTaskPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIProjectTaskPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - Tasks
      summary: Create a task
      operationId: Tasks_createTaskIdentifier
      description: Create project task and returns created task identifier.
      parameters:
        - description: The project identifier.
          name: projectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The project task.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
          text/json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProjectTask'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects/{projectId}/tasks/{taskId}:
    put:
      tags:
        - Tasks
      summary: Update a task
      operationId: Tasks_updateTask
      description: Update project task.
      parameters:
        - description: The project identifier.
          name: projectId
          in: path
          required: true
          schema:
            type: string
        - description: The task identifier.
          name: taskId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The project task.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTask'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/projects/{projectId}/tasks/{taskId}/timeentries:
    get:
      tags:
        - Tasks
      summary: Get project task time entries.
      operationId: Tasks_listTimeEntriesBetweenDates
      description: >-
        Gets the project task time entries between selected from and to date
        range.If both `from` and `to` are not specified, last 30 days records
        are returned.From `date` should be before `to` date.The difference
        between `from` and `to` date cannot be more than **90** days.
      parameters:
        - description: The project identifier.
          name: projectId
          in: path
          required: true
          schema:
            type: string
        - description: The task identifier.
          name: taskId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Date from records to retrieve. If not specified defaults to `to -
            30` days.
          name: from
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Date to records can be retrieved. If not specified defaults to
            `today`.
          name: to
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Comma separated list of one or more Employee ids you'd like to
            filter on.
          name: employeeIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /psa/timeentries:
    get:
      tags:
        - TimesheetEntries
      summary: Get project timesheet entries.
      operationId: TimesheetEntries_getBetweenDates
      description: >-
        Gets the time entries between selected from and to date range.If both
        `from` and `to` are not specified, last 30 days records are
        returned.From `date` should be before `to` date.The difference between
        `from` and `to` date cannot be more than **90** days.
      parameters:
        - description: >-
            Date from records to retrieve. If not specified defaults to `to -
            30` days.
          name: from
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Date to records can be retrieved. If not specified defaults to
            `today`.
          name: to
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Comma separated list of one or more Employee ids you'd like to
            filter on.
          name: employeeIds
          in: query
          schema:
            type: string
        - description: >-
            Comma separated list of one or more project ids you'd like to filter
            on.
          name: projectIds
          in: query
          schema:
            type: string
        - description: >-
            Comma separated list of one or more task ids you'd like to filter
            on.
          name: taskIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimesheetEntryPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /pms/timeframes:
    get:
      tags:
        - TimeFrames
      summary: Gets time frame list.
      operationId: TimeFrames_getAll
      description: Gets all time frames.
      parameters:
        - description: >-
            Comma separated list of one or more Time Frame ids you'd like to
            filter on.
          name: timeFrameIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APITimeFramePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APITimeFramePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /pms/goals:
    get:
      tags:
        - Goal
      summary: Gets goal list.
      operationId: Goal_listWithHierarchy
      description: Gets all goals along with parent goal and child goals
      parameters:
        - description: >-
            Comma separated list of one or more Goal ids you'd like to filter
            on.
          name: goalIds
          in: query
          schema:
            type: string
        - description: >-
            Comma separated list of one or more Time Frame ids you'd like to
            filter on.
          name: timeFrameIds
          in: query
          schema:
            type: string
        - description: >-
            Comma separated list of one or more Employee ids you'd like to
            filter on.
          name: employeeIds
          in: query
          schema:
            type: string
        - description: >-
            Date/time when goal time period will start, in ISO 8601 format
            (YYYY-MM-DDThh:mm:ssÂ±hh). If not specified  defaults `to` - 60 days.
          name: from
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Date/time when goal time period will end, in ISO 8601 format
            (YYYY-MM-DDThh:mm:ssÂ±hh). If not specified  defaults `from` + 60
            days.
          name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIGoalPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIGoalPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /pms/goals/{goalId}/progress:
    put:
      tags:
        - Goal
      summary: Update goal progress
      operationId: Goal_updateProgress
      description: Update the goal progress
      parameters:
        - description: The goal identifier.
          name: goalId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The update goal progress view.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
          text/json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/APIUpdateGoalProgress'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /pms/badges:
    get:
      tags:
        - Badge
      summary: Gets badge list.
      operationId: Badge_getList
      description: Gets all badge.
      parameters:
        - description: >-
            Comma separated list of one or more Badge ids you'd like to filter
            on.
          name: badgeIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIBadgePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIBadgePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /pms/praise:
    get:
      tags:
        - Praise
      summary: Gets praise list.
      operationId: Praise_listEmployeesPraises
      description: Gets all employees praises
      parameters:
        - description: >-
            Comma separated list of one or more praise ids you'd like to filter
            on.
          name: praiseIds
          in: query
          schema:
            type: string
        - description: >-
            Date/time from records to retrieve, in ISO 8601 format
            (YYYY-MM-DDThh:mm:ssÂ±hh). If not specified defaults to `to - 30`
            days.
          name: from
          in: query
          schema:
            type: string
            format: date-time
        - description: >-
            Date/time to records to retrieve, in ISO 8601 format
            (YYYY-MM-DDThh:mm:ssÂ±hh). If not specified defaults to `today`.
          name: to
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIPraisePagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/APIPraisePagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - Praise
      summary: Add Praise
      operationId: Praise_createPraiseIdentifier
      description: Add an praise and returns created praise identifier.
      requestBody:
        description: The praise.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPraise'
          text/json:
            schema:
              $ref: '#/components/schemas/AddPraise'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddPraise'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddPraise'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v1/hire/jobs:
    get:
      tags:
        - Jobs
      summary: Get all jobs
      operationId: Jobs_getAllPublishedJobs
      description: Get all Published, Confidential and Archived jobs
      parameters:
        - name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: JobStatus
          in: query
          schema:
            type: integer
            format: int32
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetAllPublishedJobsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetAllPublishedJobs200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/jobs/{jobId}/applicationfields:
    get:
      tags:
        - Jobs
      summary: Get application fields
      operationId: Jobs_getApplicationFields
      description: Get job application fields
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetApplicationFieldsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetApplicationFields200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/jobs/{jobId}/candidates:
    get:
      tags:
        - Jobs
      summary: Get job candidates
      operationId: Jobs_getCandidates
      description: Get active or archived candidates in a specified job
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
        - name: isArchived
          in: query
          schema:
            type: boolean
            default: false
        - name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidatesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidates200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/jobs/{jobId}/candidate/{candidateId}:
    put:
      tags:
        - Jobs
      summary: Updated a candidate
      operationId: Jobs_updateCandidate
      description: Updated the candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobsUpdateCandidateRequest3'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsUpdateCandidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsUpdateCandidate200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/jobs/{jobId}/candidate/{candidateId}/notes:
    post:
      tags:
        - Jobs
      summary: Adds candidate note
      operationId: Jobs_addCandidateNote
      description: Updated the candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CandidateNoteDTO'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsAddCandidateNoteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsAddCandidateNote200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/jobs/{jobId}/candidate:
    post:
      tags:
        - Jobs
      summary: Post a job candidate
      operationId: Jobs_postCandidate
      description: Post a candidate to a specified job
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobsPostCandidateRequest3'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsPostCandidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsPostCandidate200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/jobs/{jobId}/candidate/{candidateId}/interviews:
    get:
      tags:
        - Jobs
      summary: Get interview scheduled and completed for a job candidate
      operationId: Jobs_getCandidateInterviews
      description: Get interview scheduled and completed for a job and a candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateInterviewsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateInterviews200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/jobs/{jobId}/candidate/{candidateId}/scorecards:
    get:
      tags:
        - Jobs
      summary: Get scorecard of a specified candidate for a job candidate
      operationId: Jobs_getCandidateScorecards
      description: Get the scorecards which are submitted for a specified job candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: string
        - name: jobId
          in: path
          required: true
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateScorecardsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsGetCandidateScorecards200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/talentpool:
    get:
      tags:
        - TalentPool
      summary: Get all Talent pools
      operationId: TalentPool_getAll
      description: Get all active talent pools
      parameters:
        - name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetAllResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetAll200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/talentpool/{talentPoolId}/applicationfields:
    get:
      tags:
        - TalentPool
      summary: Get Talent pool application fields
      operationId: TalentPool_getApplicationFields
      description: Get application fields of a specified talent pool
      parameters:
        - name: talentPoolId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetApplicationFieldsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetApplicationFields200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/talentpool/{talentPoolId}/candidates:
    get:
      tags:
        - TalentPool
      summary: Get Talent pool candidates
      operationId: TalentPool_getCandidates
      description: Get candidates in a specified talent pool
      parameters:
        - name: talentPoolId
          in: path
          required: true
          schema:
            type: string
        - name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetCandidatesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolGetCandidates200Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /v1/hire/talentpool/{talentPoolId}/candidate:
    post:
      tags:
        - TalentPool
      summary: Post a candidate to a talent pool
      operationId: TalentPool_addCandidate
      description: Post a candidate to a specified talent pool
      parameters:
        - name: talentPoolId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest1'
          text/json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest2'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TalentPoolAddCandidateRequest3'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TalentPoolAddCandidateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TalentPoolAddCandidate200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OkErrorResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
  /expense/categories:
    get:
      tags:
        - ExpenseCategory
      summary: Get all Expense Categories
      operationId: ExpenseCategory_getAllCategories
      description: Get all Expense Categories
      parameters:
        - description: >-
            Comma separated list of one or more  expense categories identifiers
            you'd like to filter on.
          name: expenseCategoryIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /expense/claims:
    get:
      tags:
        - Expense
      summary: Get all Expense Claims
      operationId: Expense_getAllClaims
      description: Get all Expense Claims
      parameters:
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseClaimPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseClaimPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /expensepolicies:
    get:
      tags:
        - ExpensePolicy
      summary: Get all expensepolicies
      operationId: ExpensePolicy_listAllExpensePolicies
      description: Get all expensepolicies
      parameters:
        - description: The expensepolicy ids.
          name: expensepolicyIds
          in: query
          schema:
            type: string
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /assets:
    get:
      tags:
        - Asset
      summary: Get all Assets
      operationId: Asset_getAll
      description: Get all Assets
      parameters:
        - description: The asset ids.
          name: assetIds
          in: query
          schema:
            type: string
        - description: The employee ids.
          name: employeeIds
          in: query
          schema:
            type: string
        - description: The asset status.
          name: assetStatus
          in: query
          schema:
            type: string
        - description: The last modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /assets/types:
    get:
      tags:
        - AssetType
      summary: Get all Asset Types
      operationId: AssetType_getAll
      description: Get all Asset Types
      parameters:
        - description: The asset type ids.
          name: assetTypeIds
          in: query
          schema:
            type: string
        - description: The last modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /assets/categories:
    get:
      tags:
        - AssetCategory
      summary: Get all Asset Categories
      operationId: AssetCategory_getAll
      description: Get all Asset Categories
      parameters:
        - description: The asset category ids.
          name: assetCategoryIds
          in: query
          schema:
            type: string
        - description: The last modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /assets/conditions:
    get:
      tags:
        - AssetCondition
      summary: Get all Asset Conditions
      operationId: AssetCondition_getAll
      description: Get all Asset Conditions
      parameters:
        - description: The asset condition ids.
          name: assetConditionIds
          in: query
          schema:
            type: string
        - description: The last modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiLookupPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /requisition/requests:
    get:
      tags:
        - RequisitionRequest
      summary: Get all Requisition Requests
      operationId: RequisitionRequest_getAll
      description: Get all Requisition Requests
      parameters:
        - description: The requisition request ids.
          name: requisitionRequestIds
          in: query
          schema:
            type: string
        - description: The status.
          name: status
          in: query
          schema:
            type: string
        - description: The last modified.
          name: lastModified
          in: query
          schema:
            type: string
            format: date-time
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            Represents how many results you'd like to retrieve per request
            (page). Default is 100. Max is 200
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionRequestPagedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RequisitionRequestPagedResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.kekad.com/connect/authorize
          scopes:
            kekaapi: Keka API
        clientCredentials:
          tokenUrl: https://login.kekad.com/connect/token
          scopes:
            kekaapi: Keka API
  schemas:
    APIBadge:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/BadgeStatus'
    APIBadgeLookup:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
    APIBadgePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIBadge'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIBaseGoal:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          nullable: true
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        employeeId:
          type: string
          nullable: true
        employeeNumber:
          type: string
          nullable: true
        timeFrameId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        initialValue:
          type: number
          format: double
        targetValue:
          type: number
          format: double
        currentValue:
          type: number
          format: double
        progress:
          type: number
          format: double
        metricType:
          $ref: '#/components/schemas/GoalMetricType'
        status:
          $ref: '#/components/schemas/GoalStatus'
        type:
          $ref: '#/components/schemas/GoalType'
        departmentId:
          type: string
          nullable: true
    APIClient:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        billingAddress:
          $ref: '#/components/schemas/Address'
        clientContacts:
          type: array
          items:
            $ref: '#/components/schemas/APIClientContact'
          nullable: true
        additionalFields:
          type: array
          items:
            $ref: '#/components/schemas/PSACustomField'
          nullable: true
    APIClientContact:
      type: object
      properties:
        clientId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
    APIClientPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIClient'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIClientResponse:
      description: class represents response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          $ref: '#/components/schemas/APIClient'
    APIDepartmentView:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        parentId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isArchived:
          type: boolean
        departmentHeads:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLookup'
          nullable: true
    APIDepartmentViewPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIDepartmentView'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIEmployeeLookup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        employeeNumber:
          type: string
          nullable: true
        employeeName:
          type: string
          nullable: true
    APIEmployeeSalary:
      type: object
      properties:
        id:
          type: string
          nullable: true
        employee:
          $ref: '#/components/schemas/APIEmployeeLookup'
        ctc:
          type: number
          format: double
        gross:
          type: number
          format: double
        remunerationType:
          $ref: '#/components/schemas/RemunerationType'
        effectiveFrom:
          type: string
          format: date-time
        earnings:
          type: array
          items:
            $ref: '#/components/schemas/APIEmployeeSalaryComponent'
          nullable: true
        deductions:
          type: array
          items:
            $ref: '#/components/schemas/APIEmployeeSalaryComponent'
          nullable: true
    APIEmployeeSalaryComponent:
      type: object
      properties:
        title:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        amount:
          type: number
          format: double
    APIEmployeeSalaryPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIEmployeeSalary'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIGoal:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          nullable: true
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        employeeId:
          type: string
          nullable: true
        employeeNumber:
          type: string
          nullable: true
        timeFrameId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        initialValue:
          type: number
          format: double
        targetValue:
          type: number
          format: double
        currentValue:
          type: number
          format: double
        progress:
          type: number
          format: double
        metricType:
          $ref: '#/components/schemas/GoalMetricType'
        status:
          $ref: '#/components/schemas/GoalStatus'
        type:
          $ref: '#/components/schemas/GoalType'
        departmentId:
          type: string
          nullable: true
        parentGoal:
          $ref: '#/components/schemas/APIBaseGoal'
        childGoals:
          type: array
          items:
            $ref: '#/components/schemas/APIBaseGoal'
          nullable: true
        isPrivate:
          type: boolean
    APIGoalPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIGoal'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APILookup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    APIPayCycleView:
      type: object
      properties:
        identifier:
          type: string
          nullable: true
        month:
          type: string
          nullable: true
        startDate:
          type: string
          nullable: true
        endDate:
          type: string
          nullable: true
        runStatus:
          $ref: '#/components/schemas/PayrollRunStatus'
    APIPayCycleViewPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIPayCycleView'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIPayGroupView:
      type: object
      properties:
        description:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        legalEntityId:
          type: string
          nullable: true
        legalEntityName:
          type: string
          nullable: true
    APIPayGroupViewPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIPayGroupView'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIPayRegisterView:
      type: object
      properties:
        identifier:
          type: string
          nullable: true
        employeeNumber:
          type: string
          nullable: true
        employeeName:
          type: string
          nullable: true
        panNumber:
          type: string
          nullable: true
        dateJoined:
          type: string
          format: date-time
          nullable: true
        jobTitle:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        payGroup:
          type: string
          nullable: true
        employmentStatus:
          $ref: '#/components/schemas/EmploymentStatus'
        workerType:
          $ref: '#/components/schemas/WorkerType'
        costCenter:
          type: string
          nullable: true
        businessUnit:
          type: string
          nullable: true
        remunerationType:
          $ref: '#/components/schemas/RemunerationType'
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        exitDate:
          type: string
          format: date-time
          nullable: true
        cycleIdentifier:
          type: string
          nullable: true
        cycleFrom:
          type: string
          format: date-time
        cycleTo:
          type: string
          format: date-time
        cycleMonthName:
          type: string
          nullable: true
          readOnly: true
        cycleMonth:
          type: integer
          format: int32
        cycleYear:
          type: integer
          format: int32
        cyclePayDays:
          type: number
          format: double
        workingDays:
          type: number
          format: double
        lossOfPayDays:
          type: number
          format: double
        noOfPayDays:
          type: number
          format: double
        renumerationAmount:
          type: number
          format: double
          nullable: true
        status:
          $ref: '#/components/schemas/EmployeePayrollCycleRunStatus'
        statusDescription:
          type: string
          nullable: true
        earnings:
          type: array
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
        contributions:
          type: array
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
        deductions:
          type: array
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
        reimbursements:
          type: array
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
        outsideGrossPayables:
          type: array
          items:
            $ref: '#/components/schemas/PayItemView'
          nullable: true
        grossAmount:
          type: number
          format: double
        totalOutsideGrossAmount:
          type: number
          format: double
        total:
          type: number
          format: double
          readOnly: true
        totalContributions:
          type: number
          format: double
        totalDeductions:
          type: number
          format: double
        totalReimbursements:
          type: number
          format: double
        cashAdvanceAmount:
          type: number
          format: double
        cashAdvanceSettlementAmount:
          type: number
          format: double
        netAmount:
          type: number
          format: double
    APIPayRegisterViewPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIPayRegisterView'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIPraise:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        feedback:
          type: string
          nullable: true
        badge:
          $ref: '#/components/schemas/APIBadgeLookup'
        employees:
          type: array
          items:
            $ref: '#/components/schemas/APIEmployeeLookup'
          nullable: true
        givenBy:
          $ref: '#/components/schemas/APIEmployeeLookup'
        givenOn:
          type: string
          format: date-time
    APIPraisePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIPraise'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIProject:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        clientId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ProjectStatus'
        projectManagers:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLookup'
          nullable: true
        isBillable:
          type: boolean
        isArchived:
          type: boolean
        customAttributes:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
    APIProjectAllocation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        employee:
          $ref: '#/components/schemas/EmployeeLookup'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
        allocationPercentage:
          type: integer
          format: int32
        billingRole:
          $ref: '#/components/schemas/APILookup'
        billingRate:
          $ref: '#/components/schemas/BillingRateLookup'
    APIProjectAllocationPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIProjectAllocation'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIProjectPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIProject'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIProjectResponse:
      description: class represents response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          $ref: '#/components/schemas/APIProject'
    APIProjectTask:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        projectId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        taskType:
          $ref: '#/components/schemas/TaskType'
        taskBillingType:
          $ref: '#/components/schemas/TaskBillingType'
        assignedTo:
          type: array
          items:
            $ref: '#/components/schemas/APIEmployeeLookup'
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        estimatedHours:
          type: number
          format: double
          nullable: true
        identifier:
          type: string
          nullable: true
    APIProjectTaskPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIProjectTask'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APISalaryComponent:
      type: object
      properties:
        title:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        identifier:
          type: string
          nullable: true
        accountingCode:
          type: string
          nullable: true
    APISalaryComponentPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APISalaryComponent'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APITimeFrame:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        frequency:
          $ref: '#/components/schemas/Frequency'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        isClosed:
          type: boolean
        isLocked:
          type: boolean
        status:
          $ref: '#/components/schemas/TimeFrameStatus'
    APITimeFramePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APITimeFrame'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APITimesheetEntry:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        date:
          type: string
          format: date-time
        employeeId:
          type: string
          nullable: true
        projectId:
          type: string
          nullable: true
        taskId:
          type: string
          nullable: true
        totalMinutes:
          type: number
          format: double
        startTime:
          type: string
          nullable: true
        endTime:
          type: string
          nullable: true
        comments:
          type: string
          nullable: true
        isBillable:
          type: boolean
        status:
          $ref: '#/components/schemas/TimeEntryStatus'
        identifier:
          type: string
          nullable: true
    APITimesheetEntryPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APITimesheetEntry'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIUpdateGoalProgress:
      required:
        - currentValue
        - status
        - updatedBy
      type: object
      properties:
        currentValue:
          type: number
          format: double
        status:
          $ref: '#/components/schemas/GoalStatus'
        updatedBy:
          type: string
        note:
          type: string
          nullable: true
    AccountStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    AddPraise:
      required:
        - badgeId
        - employeeIds
        - feedback
        - givenBy
      type: object
      properties:
        employeeIds:
          type: array
          items:
            type: string
        feedback:
          type: string
        badgeId:
          type: string
        givenBy:
          type: string
    Address:
      type: object
      properties:
        addressLine1:
          type: string
          nullable: true
        addressLine2:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
    ApiLookup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    ApiLookupPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/ApiLookup'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    Asset:
      type: object
      properties:
        id:
          type: string
          nullable: true
        assetName:
          type: string
          nullable: true
        assetId:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/AssetStatus'
        assetCategoryId:
          type: string
          nullable: true
        assetTypeId:
          type: string
          nullable: true
        assetConditionId:
          type: string
          nullable: true
        assignedTo:
          $ref: '#/components/schemas/EmployeeLookup'
        assignedOn:
          type: string
          format: date-time
          nullable: true
    AssetPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/Asset'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    AssetStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    AttendanceDayType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    AttendanceSummary:
      type: object
      properties:
        id:
          type: string
          nullable: true
        employeeNumber:
          type: string
          nullable: true
        employeeIdentifier:
          type: string
          nullable: true
        attendanceDate:
          type: string
          format: date-time
        dayType:
          $ref: '#/components/schemas/AttendanceDayType'
        leaveDayStatus:
          $ref: '#/components/schemas/LeaveDayStatus'
        shiftStartTime:
          type: string
          format: date-time
        shiftEndTime:
          type: string
          format: date-time
        shiftDuration:
          type: number
          format: double
        shiftBreakDuration:
          type: number
          format: double
        shiftEffectiveDuration:
          type: number
          format: double
        totalGrossHours:
          type: number
          format: double
        totalEffectiveHours:
          type: number
          format: double
        totalBreakDuration:
          type: number
          format: double
        totalEffectiveOvertimeDuration:
          type: number
          format: double
        totalGrossOvertimeDuration:
          type: number
          format: double
        firstInOfTheDay:
          $ref: '#/components/schemas/AttendanceTimeEntry'
        lastOutOfTheDay:
          $ref: '#/components/schemas/AttendanceTimeEntry'
    AttendanceSummaryPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/AttendanceSummary'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    AttendanceTimeEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        locationAddress:
          $ref: '#/components/schemas/Address'
    BadgeStatus:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    Batch:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        forPeriod:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/PaymentStatus'
        paymentFor:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    BatchPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/Batch'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    BillingInfo:
      required:
        - billingCurrencyId
      type: object
      properties:
        billingCurrencyId:
          type: string
        billingAddress:
          $ref: '#/components/schemas/Address'
    BillingRateLookup:
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/BillingRateUnit'
        rate:
          type: number
          format: double
    BillingRateUnit:
      enum:
        - 0
      type: integer
      format: int32
    BloodGroup:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
      type: integer
      format: int32
    BooleanResponse:
      description: class represents response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: boolean
    Client:
      required:
        - code
        - name
      type: object
      properties:
        description:
          type: string
          nullable: true
        name:
          type: string
        code:
          type: string
        billingInfo:
          $ref: '#/components/schemas/BillingInfo'
        phone:
          type: string
          format: tel
          nullable: true
        website:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
    ContingentType:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
    Currency:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    CurrencyPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/Currency'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    CustomField:
      type: object
      properties:
        title:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
    Education:
      type: object
      properties:
        id:
          type: string
          nullable: true
        degree:
          type: string
          nullable: true
        branch:
          type: string
          nullable: true
        university:
          type: string
          nullable: true
        cgpa:
          type: number
          format: double
        yearOfJoining:
          type: string
          format: date-time
          nullable: true
        yearOfCompletion:
          type: string
          format: date-time
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
    Employee:
      required:
        - businessUnit
        - dateJoined
        - dateOfBirth
        - department
        - displayName
        - email
        - firstName
        - gender
        - jobTitle
        - lastName
        - location
      type: object
      properties:
        employeeNumber:
          type: string
          nullable: true
        displayName:
          type: string
        firstName:
          type: string
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
        email:
          type: string
          format: email
        mobileNumber:
          type: string
          format: tel
          nullable: true
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          format: date-time
        dateJoined:
          type: string
          format: date-time
        department:
          type: string
        businessUnit:
          type: string
        jobTitle:
          type: string
        secondaryJobTitle:
          type: string
          nullable: true
        location:
          type: string
    EmployeeField:
      type: object
      properties:
        profileFields:
          type: array
          items:
            $ref: '#/components/schemas/FieldItem'
          nullable: true
        jobFields:
          type: array
          items:
            $ref: '#/components/schemas/FieldItem'
          nullable: true
    EmployeeFieldResponse:
      description: class represents response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          $ref: '#/components/schemas/EmployeeField'
    EmployeeLeaveBalanceListItem:
      type: object
      properties:
        employeeIdentifier:
          type: string
          format: uuid
        employeeNumber:
          type: string
          nullable: true
        employeeName:
          type: string
          nullable: true
        leaveBalance:
          type: array
          items:
            $ref: '#/components/schemas/LeaveBalanceListItem'
          nullable: true
    EmployeeLeaveBalanceListItemPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeLeaveBalanceListItem'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    EmployeeLookup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    EmployeePayment:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        employeeNumber:
          type: string
          nullable: true
        employeeName:
          type: string
          nullable: true
        forPeriod:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        salaryPaymentMode:
          type: string
          nullable: true
        bankName:
          type: string
          nullable: true
        ifscCode:
          type: string
          nullable: true
        accountNumber:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/PaymentStatus'
        identifier:
          type: string
          nullable: true
    EmployeePaymentPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayment'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    EmployeePayrollCycleRunStatus:
      enum:
        - 0
        - 1
        - 3
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 50
      type: integer
      format: int32
    EmployeeProfile:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        employeeNumber:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        image:
          $ref: '#/components/schemas/Image'
        jobTitle:
          $ref: '#/components/schemas/LookupInfo'
        secondaryJobTitle:
          type: string
          nullable: true
        reportsTo:
          $ref: '#/components/schemas/EmployeeLookup'
        l2Manager:
          $ref: '#/components/schemas/EmployeeLookup'
        dottedLineManager:
          $ref: '#/components/schemas/EmployeeLookup'
        contingentType:
          $ref: '#/components/schemas/ContingentType'
        timeType:
          $ref: '#/components/schemas/TimeType'
        workerType:
          $ref: '#/components/schemas/WorkerType'
        isPrivate:
          type: boolean
        isProfileComplete:
          type: boolean
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        marriageDate:
          type: string
          format: date-time
          nullable: true
        gender:
          $ref: '#/components/schemas/Gender'
        joiningDate:
          type: string
          format: date-time
        professionalSummary:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        resignationSubmittedDate:
          type: string
          format: date-time
          nullable: true
        exitDate:
          type: string
          format: date-time
          nullable: true
        employmentStatus:
          $ref: '#/components/schemas/EmploymentStatus'
        accountStatus:
          $ref: '#/components/schemas/AccountStatus'
        invitationStatus:
          $ref: '#/components/schemas/InvitationStatus'
        exitStatus:
          $ref: '#/components/schemas/ExitStatus'
        exitType:
          $ref: '#/components/schemas/ExitType'
        exitReason:
          type: string
          nullable: true
        personalEmail:
          type: string
          nullable: true
        workPhone:
          type: string
          nullable: true
        homePhone:
          type: string
          nullable: true
        mobilePhone:
          type: string
          nullable: true
        bloodGroup:
          $ref: '#/components/schemas/BloodGroup'
        attendanceNumber:
          type: string
          nullable: true
        probationEndDate:
          type: string
          format: date-time
          nullable: true
        currentAddress:
          $ref: '#/components/schemas/Address'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        relations:
          type: array
          items:
            $ref: '#/components/schemas/Relation'
          nullable: true
        educationDetails:
          type: array
          items:
            $ref: '#/components/schemas/Education'
          nullable: true
        experienceDetails:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupLookup'
          nullable: true
        leavePlanInfo:
          $ref: '#/components/schemas/LookupInfo'
        bandInfo:
          $ref: '#/components/schemas/LookupInfo'
        payGradeInfo:
          $ref: '#/components/schemas/LookupInfo'
        shiftPolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        weeklyOffPolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        captureSchemeInfo:
          $ref: '#/components/schemas/LookupInfo'
        trackingPolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        expensePolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        overtimePolicyInfo:
          $ref: '#/components/schemas/LookupInfo'
        identifier:
          type: string
          nullable: true
    EmployeeProfilePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeProfile'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    EmployeeProfileResponse:
      description: class represents response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          $ref: '#/components/schemas/EmployeeProfile'
    EmploymentStatus:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    ExitStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ExitType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    Expense:
      type: object
      properties:
        title:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        expenseCategoryId:
          type: string
          format: uuid
        amount:
          type: string
          nullable: true
        comment:
          type: string
          nullable: true
    ExpenseCategory:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        categoryType:
          $ref: '#/components/schemas/ExpenseType'
    ExpenseCategoryPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/ExpenseCategory'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    ExpenseClaim:
      type: object
      properties:
        title:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        employeeIdentifier:
          type: string
          format: uuid
        employeeName:
          type: string
          nullable: true
        claimNumber:
          type: string
          nullable: true
        submittedOn:
          type: string
          format: date-time
        approvalStatus:
          $ref: '#/components/schemas/ExpenseClaimApprovalStatus'
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
          nullable: true
    ExpenseClaimApprovalStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    ExpenseClaimPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/ExpenseClaim'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    ExpenseType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      type: integer
      format: int32
    Experience:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
        jobTitle:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        dateOfJoining:
          type: string
          format: date-time
          nullable: true
        dateOfRelieving:
          type: string
          format: date-time
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
    FieldChoice:
      type: object
      properties:
        id:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
    FieldItem:
      type: object
      properties:
        id:
          type: string
          nullable: true
        fieldName:
          type: string
          nullable: true
        required:
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        isSystemDefined:
          type: boolean
        fieldOptions:
          type: array
          items:
            $ref: '#/components/schemas/FieldChoice'
          nullable: true
    FieldType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
      type: integer
      format: int32
    FilterFieldType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    FilterValue:
      type: object
      properties:
        value:
          type: array
          items:
            type: string
          nullable: true
        minValue:
          type: string
          nullable: true
        maxValue:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/FilterFieldType'
    FilteringOptions:
      type: object
      properties:
        filters:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FilterValue'
          nullable: true
        isEnable:
          type: boolean
          readOnly: true
        searchKey:
          type: string
          nullable: true
    Frequency:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    Gender:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    GoalMetricType:
      enum:
        - 0
        - 1
        - 3
      type: integer
      format: int32
    GoalStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    GoalType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    Group:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        groupTypeId:
          type: string
          nullable: true
        glCode:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    GroupLookup:
      type: object
      properties:
        title:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        groupType:
          $ref: '#/components/schemas/SystemGroupType'
    GroupPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/Group'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    GroupType:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        isSystemDefined:
          type: boolean
        systemGroupType:
          $ref: '#/components/schemas/SystemGroupType'
        identifier:
          type: string
          nullable: true
    GroupTypePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/GroupType'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    Image:
      type: object
      properties:
        fileName:
          type: string
          nullable: true
        thumbs:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
    InvitationStatus:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    JobDetailsUpdateRequest:
      type: object
      properties:
        employeeNumber:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        businessUnit:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        jobTitle:
          type: string
          nullable: true
        reportingManager:
          type: string
          nullable: true
        attendanceNumber:
          type: string
          nullable: true
        timeType:
          $ref: '#/components/schemas/TimeType'
        attendanceCaptureScheme:
          type: string
          nullable: true
        expensePolicy:
          type: string
          nullable: true
        noticePeriod:
          type: string
          nullable: true
        holidayList:
          type: string
          nullable: true
        costCenter:
          type: string
          nullable: true
        payBand:
          type: string
          nullable: true
        payGrade:
          type: string
          nullable: true
        customFields:
          type: object
          additionalProperties:
            nullable: true
          nullable: true
    JobTitle:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    JobTitlePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/JobTitle'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    LeaveBalanceListItem:
      type: object
      properties:
        leaveTypeId:
          type: string
          format: uuid
        leaveTypeName:
          type: string
          nullable: true
        accruedAmount:
          type: number
          format: double
        consumedAmount:
          type: number
          format: double
        availableBalance:
          type: number
          format: double
        annualQuota:
          type: number
          format: double
    LeaveDayStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    LeaveRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        employeeIdentifier:
          type: string
          nullable: true
        employeeNumber:
          type: string
          nullable: true
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        fromSession:
          $ref: '#/components/schemas/SessionType'
        toSession:
          $ref: '#/components/schemas/SessionType'
        requestedOn:
          type: string
          format: date-time
        note:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/LeaveRequestStatus'
        selection:
          type: array
          items:
            $ref: '#/components/schemas/LeaveTypeSelection'
          nullable: true
        cancelRejectReason:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    LeaveRequestPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/LeaveRequest'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    LeaveRequestStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    LeaveType:
      type: object
      properties:
        description:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        isPaid:
          type: boolean
    LeaveTypePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/LeaveType'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    LeaveTypeSelection:
      type: object
      properties:
        leaveTypeIdentifier:
          type: string
          nullable: true
        leaveTypeName:
          type: string
          nullable: true
        count:
          type: number
          format: float
        duration:
          $ref: '#/components/schemas/TimePeriod'
        leaveTypeId:
          type: integer
          format: int32
    LeaveTypeStats:
      type: object
      properties:
        identifier:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        duration:
          $ref: '#/components/schemas/TimePeriod'
        durationString:
          type: string
          nullable: true
          readOnly: true
    LeaveTypeStatsListResponse:
      description: class represents response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/LeaveTypeStats'
          nullable: true
    Location:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        identifier:
          type: string
          nullable: true
    LocationPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/Location'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    LookupInfo:
      type: object
      properties:
        title:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    MaritalStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    PSACustomField:
      type: object
      properties:
        title:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
    PagingOptions:
      description: Class paging options
      type: object
      properties:
        pageIndex:
          description: Gets or sets the index of the page.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
    PayItemView:
      type: object
      properties:
        id:
          type: string
          format: uuid
        componentIdentifier:
          type: string
          nullable: true
        componentTitle:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        accountingCode:
          type: string
          nullable: true
    PaymentStatus:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    PaymentTransaction:
      type: object
      properties:
        paymentIdentifier:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/PaymentStatus'
        transactionOn:
          type: string
          format: date-time
        note:
          type: string
          nullable: true
    PayrollRunStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    PersonalDetailsUpdateRequest:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        gender:
          $ref: '#/components/schemas/Gender'
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        workPhone:
          type: string
          format: tel
          nullable: true
        homePhone:
          type: string
          format: tel
          nullable: true
        personalEmail:
          type: string
          format: email
          nullable: true
        skypeId:
          type: string
          nullable: true
        maritalStatus:
          $ref: '#/components/schemas/MaritalStatus'
        marriageDate:
          type: string
          format: date-time
          nullable: true
        relations:
          type: array
          items:
            $ref: '#/components/schemas/Relation'
          nullable: true
        bloodGroup:
          $ref: '#/components/schemas/BloodGroup'
        currentAddress:
          $ref: '#/components/schemas/Address'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        professionalSummary:
          type: string
          nullable: true
        customFields:
          type: object
          additionalProperties:
            nullable: true
          nullable: true
    PostLeaveRequest:
      required:
        - employeeId
        - fromDate
        - leaveTypeId
        - reason
        - requestedBy
        - toDate
      type: object
      properties:
        employeeId:
          type: string
        requestedBy:
          type: string
        fromDate:
          type: string
          format: date-time
        toDate:
          type: string
          format: date-time
        fromSession:
          $ref: '#/components/schemas/SessionType'
        toSession:
          $ref: '#/components/schemas/SessionType'
        leaveTypeId:
          type: string
        reason:
          type: string
        note:
          type: string
          nullable: true
    Project:
      required:
        - clientId
        - code
        - endDate
        - name
        - startDate
      type: object
      properties:
        description:
          type: string
          nullable: true
        clientId:
          type: string
        name:
          type: string
        code:
          type: string
        status:
          $ref: '#/components/schemas/ProjectStatus'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        isBillable:
          type: boolean
    ProjectPhase:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
    ProjectPhasePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/ProjectPhase'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    ProjectStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ProjectTask:
      required:
        - endDate
        - name
        - projectId
        - startDate
      type: object
      properties:
        description:
          type: string
          nullable: true
        projectId:
          type: string
        name:
          type: string
        taskBillingType:
          $ref: '#/components/schemas/TaskBillingType'
        assignedTo:
          type: array
          items:
            type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        estimatedHours:
          type: number
          format: double
          nullable: true
        phaseId:
          type: string
          nullable: true
    QueryOptions:
      description: Class query options. Used to pass database query options
      type: object
      properties:
        pagingOptions:
          $ref: '#/components/schemas/PagingOptions'
        sortingOptions:
          $ref: '#/components/schemas/SortingOptions'
        filterOptions:
          $ref: '#/components/schemas/FilteringOptions'
        searchableOptions:
          type: array
          items:
            type: string
          nullable: true
        fieldsToReturn:
          type: array
          items:
            type: string
          nullable: true
    Relation:
      type: object
      properties:
        id:
          type: string
          nullable: true
        relationType:
          $ref: '#/components/schemas/RelationType'
        gender:
          $ref: '#/components/schemas/Gender'
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        dateOfBirth:
          type: string
          format: date-time
          nullable: true
        profession:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
    RelationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      type: integer
      format: int32
    RemunerationType:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    SessionType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    SortingOptions:
      type: object
      properties:
        orderBy:
          type: string
          nullable: true
        direction:
          type: string
          nullable: true
    StringResponse:
      description: class represents response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: string
          nullable: true
    SystemGroupType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      format: int32
    TaskBillingType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    TaskType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    TimeDuration:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      type: integer
      format: int32
    TimeEntryStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    TimeFrameStatus:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    TimePeriod:
      type: object
      properties:
        unit:
          $ref: '#/components/schemas/TimeDuration'
        duration:
          type: number
          format: double
        durationString:
          type: string
          nullable: true
          readOnly: true
    TimeType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    UpdateClient:
      type: object
      properties:
        description:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        billingAddress:
          $ref: '#/components/schemas/Address'
    UpdateProject:
      type: object
      properties:
        description:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/ProjectStatus'
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        isBillable:
          type: boolean
          nullable: true
    UpdateProjectTask:
      type: object
      properties:
        description:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        taskBillingType:
          $ref: '#/components/schemas/TaskBillingType'
        assignedTo:
          type: array
          items:
            type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        estimatedHours:
          type: number
          format: double
          nullable: true
        phaseId:
          type: string
          nullable: true
    WorkerType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    StringStringValuesKeyValuePair:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: array
          items:
            type: string
    APIEmployeeReview:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        employee:
          $ref: '#/components/schemas/APIEmployeeLookup'
        reviewGroup:
          $ref: '#/components/schemas/APIReviewGroupLookup'
        reviewCycle:
          $ref: '#/components/schemas/APIReviewCycleLookup'
        ratings:
          type: array
          items:
            $ref: '#/components/schemas/APIReviewRating'
          nullable: true
        status:
          $ref: '#/components/schemas/ReviewStatus'
    APIEmployeeReviewPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIEmployeeReview'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIReviewCycle:
      type: object
      properties:
        id:
          type: string
          nullable: true
          readOnly: true
        reviewGroup:
          $ref: '#/components/schemas/APIReviewGroupLookup'
        name:
          type: string
          nullable: true
        fromDate:
          type: string
          format: date-time
          nullable: true
        toDate:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        frequency:
          $ref: '#/components/schemas/Frequency'
        status:
          $ref: '#/components/schemas/ReviewGroupCycleStatus'
        isAdhoc:
          type: boolean
    APIReviewCycleLookup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    APIReviewCyclePagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIReviewCycle'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIReviewGroup:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
          readOnly: true
        name:
          type: string
          nullable: true
    APIReviewGroupLookup:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    APIReviewGroupPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/APIReviewGroup'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    APIReviewRating:
      type: object
      properties:
        ratingId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        rating:
          type: number
          format: double
          nullable: true
    ReviewGroupCycleStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ReviewStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
      type: integer
      format: int32
    ApplicationStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    CandidateNoteDTO:
      type: object
      properties:
        tags:
          description: Gets or sets the candidate tags
          type: array
          items:
            type: string
          nullable: true
        comments:
          description: Gets or sets the commnet
          type: string
          nullable: true
    EducationDTO:
      type: object
      properties:
        degree:
          description: Gets or sets the degree.
          type: string
          nullable: true
        branch:
          description: Gets or sets the branch.
          type: string
          nullable: true
        dateOfJoining:
          description: Gets or sets the date of joining.
          type: string
          nullable: true
        dateOfCompletion:
          description: Gets or sets the date of completion.
          type: string
          nullable: true
        university:
          description: Gets or sets the university.
          type: string
          nullable: true
        location:
          description: Gets or sets the location.
          type: string
          nullable: true
    ErrorDetail:
      description: Represents a detailed error message for an individual field.
      type: object
      properties:
        fieldName:
          description: Gets or sets the name of the field that caused the error.
          type: string
          nullable: true
        errorMessage:
          description: Gets or sets the error message associated with the field.
          type: string
          nullable: true
    ExperienceDTO:
      type: object
      properties:
        companyName:
          description: Gets or sets the company name.
          type: string
          nullable: true
        designation:
          description: Gets or sets the designation.
          type: string
          nullable: true
        isCurrentlyWorking:
          description: >-
            Gets or sets a value indicating whether this instance is currently
            working.
          type: boolean
        dateOfJoining:
          description: Gets or sets the date of joining.
          type: string
          nullable: true
        dateOfRelieving:
          description: Gets or sets the date of relieving.
          type: string
          nullable: true
        location:
          description: Gets or sets the location.
          type: string
          nullable: true
    FieldOptionDTO:
      type: object
      properties:
        id:
          description: Gets or sets the identifier.
          type: string
          nullable: true
        value:
          description: Gets or sets the value.
          type: string
          nullable: true
    HiringTeamDTO:
      type: object
      properties:
        identifier:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/JobRecruiterType'
    InterviewDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        candidateId:
          type: string
          nullable: true
        jobId:
          type: string
          nullable: true
        interviewDate:
          type: string
          nullable: true
        startTime:
          $ref: '#/components/schemas/TimeDTO'
        endTime:
          $ref: '#/components/schemas/TimeDTO'
        timeZoneId:
          type: string
          nullable: true
        scheduledBy:
          type: string
          nullable: true
        scheduledDate:
          type: string
          nullable: true
        interviewType:
          type: string
          nullable: true
        stageId:
          type: string
          nullable: true
        panelMembers:
          type: string
          nullable: true
    JobApplicationDetailsDTO:
      type: object
      properties:
        jobHiringStageId:
          description: Gets or sets the job hiring stage identifier.
          type: string
          nullable: true
        movedtoStageOn:
          description: Gets or sets the moved to current stage on.
          type: string
          nullable: true
        screeningQuestionsResponse:
          description: Gets or sets the screening questions.
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        appliedOn:
          description: Gets or sets the applied on.
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        sourcedBy:
          description: Gets or sets the sourced by.
          type: string
          nullable: true
        sourceTitle:
          description: Gets or sets the source title.
          type: string
          nullable: true
        assignedTo:
          description: Gets or sets the assigned to.
          type: string
          nullable: true
        assignedOn:
          description: Gets or sets the assigned on.
          type: string
          nullable: true
    JobApplicationFieldsDTO:
      type: object
      properties:
        fieldName:
          description: Gets or sets the name of the field.
          type: string
          nullable: true
        id:
          description: Gets or sets the Field Identifier of the field.
          type: string
          nullable: true
        required:
          description: >-
            Gets or sets a value indicating whether this !:FieldListItem is
            required.
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        fieldOptions:
          description: Gets or sets the field options.
          type: array
          items:
            $ref: '#/components/schemas/FieldOptionDTO'
          nullable: true
    JobCandidateDetailsDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        firstName:
          description: Gets or sets the first name.
          type: string
          nullable: true
        lastName:
          description: Gets or sets the last name.
          type: string
          nullable: true
        middleName:
          description: Gets or sets the middle name.
          type: string
          nullable: true
        gender:
          $ref: '#/components/schemas/Gender'
        email:
          description: Gets or sets the email.
          type: string
          nullable: true
        phone:
          description: Gets or sets the mobile phone.
          type: string
          nullable: true
        educationDetails:
          description: Gets or sets the education details.
          type: array
          items:
            $ref: '#/components/schemas/EducationDTO'
          nullable: true
        candidateTags:
          description: Gets or sets the candidate tags
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
        experienceDetails:
          description: Gets or sets the experience details.
          type: array
          items:
            $ref: '#/components/schemas/ExperienceDTO'
          nullable: true
        skills:
          description: Gets or sets the skills.
          type: array
          items:
            type: string
          nullable: true
        additionalCandidateDetails:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
        jobApplicationDetails:
          $ref: '#/components/schemas/JobApplicationDetailsDTO'
        archivedDetails:
          type: object
          additionalProperties:
            type: string
          nullable: true
    JobCustomFieldDTO:
      type: object
      properties:
        fieldName:
          type: string
          nullable: true
        required:
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        value:
          type: string
          nullable: true
    JobDTO:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        noOfOpenings:
          type: string
          nullable: true
        departmentName:
          type: string
          nullable: true
        jobType:
          type: string
          nullable: true
        isReferralEnabled:
          type: boolean
        isCreatedFromRequisition:
          type: boolean
        requisitionIdentifier:
          type: string
          nullable: true
        canAllowInternalEmployees:
          type: boolean
        orgJobId:
          type: string
          nullable: true
        jobLocations:
          type: array
          items:
            $ref: '#/components/schemas/LocationDTO'
          nullable: true
        hiringTeam:
          type: array
          items:
            $ref: '#/components/schemas/HiringTeamDTO'
          nullable: true
        careerPortalUrl:
          type: string
          nullable: true
        targetHireDate:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/JobStatus'
        createdOn:
          type: string
          nullable: true
        publishedOn:
          type: string
          nullable: true
        experience:
          type: string
          nullable: true
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/JobCustomFieldDTO'
          nullable: true
    JobRecruiterType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 99
      type: integer
      format: int32
    JobStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    LocationDTO:
      type: object
      properties:
        name:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        countryName:
          type: string
          nullable: true
    OkErrorResponse:
      type: object
      properties:
        status:
          description: Gets or sets the HTTP status code of the response.
          type: integer
          format: int32
        succeeded:
          description: >-
            Gets a value indicating whether the response operation succeeded
            (HTTP status code within the range of 200 to 299).
          type: boolean
          readOnly: true
        message:
          description: Gets or sets the message associated with the response.
          type: string
          nullable: true
        errors:
          description: Gets or sets the list of error details for individual fields.
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          nullable: true
        errorCode:
          description: Gets or sets the error code associated with the error.
          type: string
          nullable: true
    ScoreCardDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        jobId:
          type: string
          nullable: true
        candidateId:
          type: string
          nullable: true
        stageId:
          type: string
          nullable: true
        interviewId:
          type: string
          nullable: true
        overallFeedbackDecision:
          type: string
          nullable: true
        overallComments:
          type: string
          nullable: true
        feedbackSubmittedByName:
          type: string
          nullable: true
        sections:
          type: array
          items:
            $ref: '#/components/schemas/ScorecardSectionDTO'
          nullable: true
    ScorecardSectionDTO:
      type: object
      properties:
        sectionName:
          type: string
          nullable: true
        skillTitle:
          type: string
          nullable: true
        skillScore:
          type: string
          nullable: true
        sectionComments:
          type: string
          nullable: true
    Tag:
      type: object
      properties:
        description:
          type: string
          nullable: true
        identifier:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    TalentPoolApplicationFieldsDTO:
      type: object
      properties:
        fieldName:
          description: Gets or sets the name of the field.
          type: string
          nullable: true
        required:
          description: >-
            Gets or sets a value indicating whether this
            Keka.Hire.Core.Entities.Field is required.
          type: boolean
        fieldType:
          $ref: '#/components/schemas/FieldType'
        isSystemDefined:
          description: >-
            Gets or sets a value indicating whether this field is system
            generated.
          type: boolean
        fieldOptions:
          description: Gets or sets the field options.
          type: array
          items:
            $ref: '#/components/schemas/FieldOptionDTO'
          nullable: true
        id:
          description: Gets or sets the identifier
          type: string
          nullable: true
    TalentPoolCandidateDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        firstName:
          description: Gets or sets the first name.
          type: string
          nullable: true
        lastName:
          description: Gets or sets the last name.
          type: string
          nullable: true
        middleName:
          description: Gets or sets the middle name.
          type: string
          nullable: true
        gender:
          $ref: '#/components/schemas/Gender'
        email:
          description: Gets or sets the email.
          type: string
          nullable: true
        phone:
          description: Gets or sets the phone
          type: string
          nullable: true
        educationDetails:
          description: Gets or sets the education details.
          type: array
          items:
            $ref: '#/components/schemas/EducationDTO'
          nullable: true
        experienceDetails:
          description: Gets or sets the experience details.
          type: array
          items:
            $ref: '#/components/schemas/ExperienceDTO'
          nullable: true
        skills:
          description: Gets or sets the skills.
          type: array
          items:
            type: string
          nullable: true
        additionalCandidateDetails:
          type: object
          additionalProperties:
            type: string
          nullable: true
        talentPoolDetails:
          type: object
          additionalProperties:
            type: string
          nullable: true
    TalentPoolDTO:
      type: object
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        addedBy:
          type: string
          nullable: true
        addedOn:
          type: string
          nullable: true
    TimeDTO:
      type: object
      properties:
        hours:
          description: Gets or sets the hours.
          type: integer
          format: int32
        minutes:
          description: Gets or sets the minutes.
          type: integer
          format: int32
    CustomFormField:
      type: object
      properties:
        question:
          type: string
          nullable: true
        answer:
          type: string
          nullable: true
        multipleAnswers:
          type: object
          additionalProperties:
            type: string
            nullable: true
          nullable: true
    JobType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    ReplacementEmployee:
      type: object
      properties:
        employeeId:
          type: string
          nullable: true
        replacementReason:
          $ref: '#/components/schemas/ReplacementReason'
    ReplacementReason:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      type: integer
      format: int32
    RequisitionReplacementEmployee:
      type: object
      properties:
        employeeId:
          type: integer
          format: int32
        replacementReason:
          $ref: '#/components/schemas/ReplacementReason'
    RequisitionRequest:
      type: object
      properties:
        id:
          type: string
          nullable: true
        requisitionFor:
          type: string
          nullable: true
        jobNumber:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        subDepartment:
          type: string
          nullable: true
        requestedBy:
          type: string
          nullable: true
        requestedOn:
          type: string
          format: date-time
        locations:
          type: array
          items:
            type: string
          nullable: true
        status:
          $ref: '#/components/schemas/RequisitionRequestStatus'
        isPriority:
          type: boolean
        budget:
          type: string
          nullable: true
        openPositions:
          type: integer
          format: int32
        hired:
          type: integer
          format: int32
          nullable: true
        requisitionTypes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        toBeReplaced:
          type: array
          items:
            $ref: '#/components/schemas/ReplacementEmployee'
          nullable: true
        jobType:
          $ref: '#/components/schemas/JobType'
        targetHiringDate:
          type: string
          format: date-time
          nullable: true
        isArchived:
          type: boolean
        additionalComments:
          type: string
          nullable: true
        additionalFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
          nullable: true
    RequisitionRequestPagedResponse:
      description: class represents paged response.
      type: object
      properties:
        succeeded:
          description: >-
            Gets or sets a value indicating whether this
            Keka.API.Web.Core.Response`1 is succeeded.
          type: boolean
        message:
          description: Gets or sets the message.
          type: string
          nullable: true
        errors:
          description: Gets or sets the errors.
          type: array
          items:
            type: string
          nullable: true
        data:
          description: Gets or sets the data.
          type: array
          items:
            $ref: '#/components/schemas/RequisitionRequest'
          nullable: true
        pageNumber:
          description: Gets or sets the page number.
          type: integer
          format: int32
        pageSize:
          description: Gets or sets the size of the page.
          type: integer
          format: int32
        firstPage:
          description: Gets or sets the first page.
          type: string
          format: uri
          nullable: true
        lastPage:
          description: Gets or sets the last page.
          type: string
          format: uri
          nullable: true
        totalPages:
          description: Gets or sets the total pages.
          type: integer
          format: int32
        totalRecords:
          description: Gets or sets the total records.
          type: integer
          format: int32
        nextPage:
          description: Gets or sets the next page.
          type: string
          format: uri
          nullable: true
        previousPage:
          description: Gets or sets the previous page.
          type: string
          format: uri
          nullable: true
    RequisitionRequestStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    AuthenticationGetAccessTokenRequest:
      type: object
      required:
        - grant_type
        - scope
        - client_id
        - client_secret
        - api_key
      properties:
        grant_type:
          type: string
          default: kekaapi
        scope:
          type: string
          default: kekaapi
        client_id:
          type: string
        client_secret:
          type: string
        api_key:
          type: string
    PayCyclesUpdatePaymentsStatusRequest:
      type: array
      items:
        $ref: '#/components/schemas/PaymentTransaction'
    PayCyclesUpdatePaymentsStatusRequest1:
      type: array
      items:
        $ref: '#/components/schemas/PaymentTransaction'
    PayCyclesUpdatePaymentsStatusRequest2:
      type: array
      items:
        $ref: '#/components/schemas/PaymentTransaction'
    PayCyclesUpdatePaymentsStatusRequest3:
      type: array
      items:
        $ref: '#/components/schemas/PaymentTransaction'
    JobsUpdateCandidateRequest:
      type: object
      additionalProperties: {}
    JobsUpdateCandidateRequest1:
      type: object
      additionalProperties: {}
    JobsUpdateCandidateRequest2:
      type: object
      additionalProperties: {}
    JobsUpdateCandidateRequest3:
      type: object
      additionalProperties: {}
    JobsPostCandidateRequest:
      type: object
      additionalProperties: {}
    JobsPostCandidateRequest1:
      type: object
      additionalProperties: {}
    JobsPostCandidateRequest2:
      type: object
      additionalProperties: {}
    JobsPostCandidateRequest3:
      type: object
      additionalProperties: {}
    TalentPoolAddCandidateRequest:
      type: object
      additionalProperties: {}
    TalentPoolAddCandidateRequest1:
      type: object
      additionalProperties: {}
    TalentPoolAddCandidateRequest2:
      type: object
      additionalProperties: {}
    TalentPoolAddCandidateRequest3:
      type: object
      additionalProperties: {}
    AuthenticationGetAccessTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: >-
            eyJhRtRciOiJ56zI1NiIsImtpZCI6IjBGQ0JCNEZEQzNERjQ0Nzk4RjQyREY3ODc3ODgwN0E1MUVFNzUzMkUiLCJ4NXQiOiJEOHUwX2NQZlJIbVBRdDk0ZDRnSHBSN25VeTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2xvZ2luLmtla2FkLmNvbSIsIm5iZiI6MTY5Mjg1NDc2OCwiaWF0IjoxNjkyODU0NzY4LCJleHAiOjE2OTI5NDExNjgsImF1ZCI6WyJrZWthYXBpIiwiaHR0cHM6Ly9sb2dpbi5rZWthZC5jb20vcmVzb3VyY2VzIl0sInNjb3BlIjpbImtla2FhcGkiXSwiYW1yIjpbImtla2FhcGkiXSwiY2xpZW50X2lkIjoiNDY3MTYwNmMtMWNkNi00YmYzLWJlNWMtNTE5NWE0MDQ4ZGYzIiwic3ViIjoiMWIwNzdhZjUtZTlhNS00NTc2LTlmMWEtZDg0ZGIwMThjZDU4IiwiYXV0aF90aW1lIjoxNjkyODU0NzY4LCJpZHAiOiJsb2NhbCIsImp0aSI6IkNFRDQ4QURBQjZCNDkxMzkyNDE2Q0ZFNzczMkI3MzlFIn0.t0YRRYeAdCkiYt0ZFIDEZKBpsIyvJUvdAPd-Dobi5oCpi0zqr4sNPG20egInU64IGnqTk5Bd2Fh4M8ifpW33Ogyo7_Cfv9k08I6etQ2J9ZaxtF7ptx5xCO4heyLpMa2WXImnwqkKAVHiJUqcqVJDhqyQ09ulqR0uSQ2p2xxu4Lm3ddCXwHYQj0l48WvfjrzRcqjTe4l5cI7GBajc_9HOcheNOuoTked1TtiorRKWZrmXXNsV9HIqzHbQMFnP3ZzAUXs-ucjp7tNdK3QWnmSRw9ORSJBcl0EcZLi4V-K4J9DxjqKE7bWwPNVpLm0CKlkNfmHtg90T9SyIQeaJHl0RnQ
        expires_in:
          type: integer
          example: 86400
          default: 0
        token_type:
          type: string
          example: Bearer
        scope:
          type: string
          example: kekaapi
    AuthenticationGetAccessToken400Response:
      type: object
      properties:
        error:
          type: string
          example: unsupported_grant_type
    JobsGetAllPublishedJobsResponse:
      type: array
      items:
        $ref: '#/components/schemas/JobDTO'
    JobsGetAllPublishedJobs200Response:
      type: array
      items:
        $ref: '#/components/schemas/JobDTO'
    JobsGetApplicationFieldsResponse:
      type: array
      items:
        $ref: '#/components/schemas/JobApplicationFieldsDTO'
    JobsGetApplicationFields200Response:
      type: array
      items:
        $ref: '#/components/schemas/JobApplicationFieldsDTO'
    JobsGetCandidatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/JobCandidateDetailsDTO'
    JobsGetCandidates200Response:
      type: array
      items:
        $ref: '#/components/schemas/JobCandidateDetailsDTO'
    JobsUpdateCandidateResponse:
      type: string
    JobsUpdateCandidate200Response:
      type: string
    JobsAddCandidateNoteResponse:
      type: string
    JobsAddCandidateNote200Response:
      type: string
    JobsPostCandidateResponse:
      type: string
    JobsPostCandidate200Response:
      type: string
    JobsGetCandidateInterviewsResponse:
      type: array
      items:
        $ref: '#/components/schemas/InterviewDTO'
    JobsGetCandidateInterviews200Response:
      type: array
      items:
        $ref: '#/components/schemas/InterviewDTO'
    JobsGetCandidateScorecardsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ScoreCardDTO'
    JobsGetCandidateScorecards200Response:
      type: array
      items:
        $ref: '#/components/schemas/ScoreCardDTO'
    TalentPoolGetAllResponse:
      type: array
      items:
        $ref: '#/components/schemas/TalentPoolDTO'
    TalentPoolGetAll200Response:
      type: array
      items:
        $ref: '#/components/schemas/TalentPoolDTO'
    TalentPoolGetApplicationFieldsResponse:
      type: array
      items:
        $ref: '#/components/schemas/TalentPoolApplicationFieldsDTO'
    TalentPoolGetApplicationFields200Response:
      type: array
      items:
        $ref: '#/components/schemas/TalentPoolApplicationFieldsDTO'
    TalentPoolGetCandidatesResponse:
      type: array
      items:
        $ref: '#/components/schemas/TalentPoolCandidateDTO'
    TalentPoolGetCandidates200Response:
      type: array
      items:
        $ref: '#/components/schemas/TalentPoolCandidateDTO'
    TalentPoolAddCandidateResponse:
      type: string
    TalentPoolAddCandidate200Response:
      type: string
security:
  - oauth2: []
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
_id: 65db913e5fedf4007cc50fe9
