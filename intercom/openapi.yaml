openapi: 3.0.1
info:
  title: Intercom API
  description: The intercom API reference.
  version: '2.9'
  contact:
    name: Intercom Developer Hub
    url: https://developers.intercom.com
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  x-konfig-ignore:
    potential-incorrect-type: true
servers:
  - description: The production API server
    url: https://api.intercom.io
  - description: The european API server
    url: https://api.eu.intercom.io
  - description: The australian API server
    url: https://api.au.intercom.io
tags:
  - description: Everything about your contacts
    name: Contacts
  - description: Everything about your Conversations
    name: Conversations
    externalDocs:
      description: What is a conversation?
      url: https://www.intercom.com/help/en/articles/4323904-what-is-a-conversation
  - description: Everything about your Companies
    name: Companies
  - description: Everything about your Help Center
    name: Help Center
  - description: Everything about tags
    name: Tags
  - description: Everything about your News
    name: News
    externalDocs:
      description: News explained
      url: https://www.intercom.com/help/en/articles/6362251-news-explained
  - description: Everything about your Admins
    name: Admins
  - description: Everything about your Articles
    name: Articles
  - description: Everything about your Visitors
    name: Visitors
  - description: Everything about your Data Exports
    name: Data Export
  - description: Everything about subscription types
    name: Subscription Types
  - description: Everything about your ticket types
    name: Ticket Types
  - description: Everything about your tickets
    name: Tickets
  - description: Everything about your Data Attributes
    name: Data Attributes
  - description: Everything about your Data Events
    name: Data Events
  - description: Everything about your Notes
    name: Notes
  - description: Everything about your Segments
    name: Segments
  - description: Everything about your Teams
    name: Teams
  - description: Everything about your ticket type attributes
    name: Ticket Type Attributes
  - description: Everything about your messages
    name: Messages
  - description: Everything about Switch
    name: Switch
    externalDocs:
      description: 'Meet Switch: from on hold to messaging in just a few taps'
      url: https://www.intercom.com/switch
paths:
  /me:
    get:
      tags:
        - Admins
      summary: Identify an admin
      operationId: Admins_getAdminDetails
      description: >

        You can view the currently authorised admin along with the embedded app
        object (a "workspace" in legacy terminology).


        > 🚧 Single Sign On

        >

        > If you are building a custom "Log in with Intercom" flow for your
        site, and you call the `/me` endpoint to identify the logged-in user,
        you should not accept any sign-ins from users with unverified email
        addresses as it poses a potential impersonation security risk.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: admin
                    id: '991267251'
                    email: admin1@email.com
                    name: Ciaran1 Lee
                    email_verified: true
                    app:
                      type: app
                      id_code: this_is_an_id1_that_should_be_at_least_40
                      name: MyApp 1
                      created_at: 1709726300
                      secure: false
                      identity_verification: false
                      timezone: America/Los_Angeles
                      region: US
                    avatar:
                      type: avatar
                      image_url: >-
                        https://static.intercomassets.com/assets/default-avatars/admins/128.png
                    has_inbox_seat: true
              schema:
                $ref: '#/components/schemas/admin_with_app'
  /admins/{id}/away:
    put:
      tags:
        - Admins
      summary: Set an admin to away
      operationId: Admins_setAdminAway
      description: You can set an Admin as away for the Inbox.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier of a given admin
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminsSetAdminAwayRequest'
            examples:
              successful_response:
                summary: Successful response
                value:
                  away_mode_enabled: true
                  away_mode_reassign: true
              admin_not_found:
                summary: Admin not found
                value:
                  away_mode_enabled: true
                  away_mode_reassign: true
              unauthorized:
                summary: Unauthorized
                value:
                  away_mode_enabled: true
                  away_mode_reassign: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: admin
                    id: '991267252'
                    name: Ciaran2 Lee
                    email: admin2@email.com
                    away_mode_enabled: true
                    away_mode_reassign: true
                    has_inbox_seat: true
                    team_ids: []
              schema:
                $ref: '#/components/schemas/admin'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 45681de3-5b16-4651-a6b9-764a374b5f63
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Admin not found
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    type: error.list
                    request_id: d6395d7b-9a71-4bf3-8f61-f7c30e5be714
                    errors:
                      - code: admin_not_found
                        message: Admin for admin_id not found
              schema:
                $ref: '#/components/schemas/error'
  /admins/activity_logs:
    get:
      tags:
        - Admins
      summary: List all activity logs
      operationId: Admins_listActivityLogs
      description: You can get a log of activities by all admins in an app.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The start date that you request data for. It must be formatted as a
            UNIX timestamp.
          name: created_at_after
          in: query
          required: true
          example: '1677253093'
          schema:
            type: string
        - description: >-
            The end date that you request data for. It must be formatted as a
            UNIX timestamp.
          name: created_at_before
          in: query
          required: false
          example: '1677861493'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: activity_log.list
                    pages:
                      type: pages
                      next: null
                      page: 1
                      per_page: 20
                      total_pages: 1
                    activity_logs:
                      - id: 4ac18b8c-429d-4772-9e3c-63611aa65da4
                        performed_by:
                          type: admin
                          id: '991267256'
                          email: admin5@email.com
                          ip: 127.0.0.1
                        metadata:
                          message:
                            title: Initial message title
                            id: 123
                          before: Initial message title
                          after: Eventual message title
                        created_at: 1709726306
                        activity_type: message_state_change
                        activity_description: >-
                          Ciaran5 Lee changed your Initial message title message
                          from Initial message title to Eventual message title.
                      - id: 88822985-9ffd-4dab-a71c-c33c607ed702
                        performed_by:
                          type: admin
                          id: 991267256X
                          email: admin5@email.com
                          ip: 127.0.0.1
                        metadata:
                          before: before
                          after: after
                        created_at: 1709726306
                        activity_type: app_name_change
                        activity_description: >-
                          Ciaran5 Lee changed your app name from before to
                          after.
              schema:
                $ref: '#/components/schemas/activity_log_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 4839969a-d6e9-4a2a-906a-500c21dca8fd
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /admins:
    get:
      tags:
        - Admins
      summary: List all admins
      operationId: Admins_getAll
      description: You can fetch a list of admins for a given workspace.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: admin.list
                    admins:
                      - type: admin
                        email: admin7@email.com
                        id: '991267258'
                        name: Ciaran7 Lee
                        away_mode_enabled: false
                        away_mode_reassign: false
                        has_inbox_seat: true
                        team_ids: []
              schema:
                $ref: '#/components/schemas/admin_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 71b542e4-42f5-482c-9816-80d3b9b07446
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /admins/{id}:
    get:
      tags:
        - Admins
      summary: Retrieve an admin
      operationId: Admins_getAdminById
      description: You can retrieve the details of a single admin.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier of a given admin
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: Admin found
          content:
            application/json:
              examples:
                Admin found:
                  value:
                    type: admin
                    id: '991267260'
                    name: Ciaran9 Lee
                    email: admin9@email.com
                    away_mode_enabled: false
                    away_mode_reassign: false
                    has_inbox_seat: true
                    team_ids: []
              schema:
                $ref: '#/components/schemas/admin'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 77fe52e9-f7d3-48ef-9bf6-c685d99d00ae
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Admin not found
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    type: error.list
                    request_id: 6e6281df-86e0-4472-bff7-8aee7d21ee70
                    errors:
                      - code: admin_not_found
                        message: Admin not found
              schema:
                $ref: '#/components/schemas/error'
  /articles:
    get:
      tags:
        - Articles
      summary: List all articles
      operationId: Articles_listAll
      description: >
        You can fetch a list of all articles by making a GET request to
        `https://api.intercom.io/articles`.


        > 📘 How are the articles sorted and ordered?

        >

        > Articles will be returned in descending order on the `updated_at`
        attribute. This means if you need to iterate through results then we'll
        show the most recently updated articles first.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    pages:
                      type: pages
                      page: 1
                      per_page: 25
                      total_pages: 1
                    total_count: 1
                    data:
                      - title: This is the article title
                        description: ''
                        id: '52'
                        type: article
                        workspace_id: this_is_an_id22_that_should_be_at_least_4
                        parent_id: 176
                        parent_type: collection
                        parent_ids: []
                        body: ''
                        author_id: 991267263
                        state: published
                        created_at: 1709726310
                        updated_at: 1709726310
                        url: >-
                          http://help-center.test/myapp-22/en/articles/52-this-is-the-article-title
              schema:
                $ref: '#/components/schemas/article_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 7003ba92-b849-4bc1-9c24-2d35243d744a
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Articles
      summary: Create an article
      operationId: Articles_createNewArticle
      description: >-
        You can create a new article by making a POST request to
        `https://api.intercom.io/articles`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_article_request'
            examples:
              article_created:
                summary: article created
                value:
                  title: Thanks for everything
                  description: Description of the Article
                  body: Body of the Article
                  author_id: 991267268
                  state: published
                  parent_id: 178
                  parent_type: collection
                  translated_content:
                    fr:
                      title: Merci pour tout
                      description: Description de l'article
                      body: Corps de l'article
                      author_id: 991267268
                      state: published
              bad_request:
                summary: Bad Request
                value:
                  title: Thanks for everything
                  description: Description of the Article
                  body: Body of the Article
                  state: published
      responses:
        '200':
          description: article created
          content:
            application/json:
              examples:
                article created:
                  value:
                    title: Thanks for everything
                    description: Description of the Article
                    id: '55'
                    type: article
                    workspace_id: this_is_an_id26_that_should_be_at_least_4
                    parent_id: 178
                    parent_type: collection
                    parent_ids: []
                    statistics:
                      type: article_statistics
                      views: 0
                      conversations: 0
                      reactions: 0
                      happy_reaction_percentage: 0
                      neutral_reaction_percentage: 0
                      sad_reaction_percentage: 0
                    body: <p class="no-margin">Body of the Article</p>
                    author_id: 991267268
                    state: published
                    created_at: 1709726313
                    updated_at: 1709726313
                    url: >-
                      http://help-center.test/myapp-26/en/articles/55-thanks-for-everything
              schema:
                $ref: '#/components/schemas/article_list_item'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    type: error.list
                    request_id: 22377ca8-e2be-4fd2-9f9e-62d8286ebd24
                    errors:
                      - code: parameter_not_found
                        message: >-
                          author_id must be in the main body or default locale
                          translated_content object
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: a7097afa-33f9-440f-88b5-97a604743124
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /articles/{id}:
    get:
      tags:
        - Articles
      summary: Retrieve an article
      operationId: Articles_getById
      description: >-
        You can fetch the details of a single article by making a GET request to
        `https://api.intercom.io/articles/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the article which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: Article found
          content:
            application/json:
              examples:
                Article found:
                  value:
                    title: This is the article title
                    description: ''
                    id: '58'
                    type: article
                    workspace_id: this_is_an_id32_that_should_be_at_least_4
                    parent_id: 181
                    parent_type: collection
                    parent_ids: []
                    statistics:
                      type: article_statistics
                      views: 0
                      conversations: 0
                      reactions: 0
                      happy_reaction_percentage: 0
                      neutral_reaction_percentage: 0
                      sad_reaction_percentage: 0
                    body: ''
                    author_id: 991267273
                    state: published
                    created_at: 1709726315
                    updated_at: 1709726315
                    url: >-
                      http://help-center.test/myapp-32/en/articles/58-this-is-the-article-title
              schema:
                $ref: '#/components/schemas/article_list_item'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 840d198c-48e6-4ead-92b8-e7075a5dc26e
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Article not found
          content:
            application/json:
              examples:
                Article not found:
                  value:
                    type: error.list
                    request_id: 3f3166de-dc9f-421a-8d7d-2a3c74af3bd7
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - Articles
      summary: Update an article
      operationId: Articles_updateDetails
      description: >-
        You can update the details of a single article by making a PUT request
        to `https://api.intercom.io/articles/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the article which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_article_request'
            examples:
              successful:
                summary: successful
                value:
                  title: Christmas is here!
                  body: <p>New gifts in store for the jolly season</p>
              article_not_found:
                summary: Article Not Found
                value:
                  title: Christmas is here!
                  body: <p>New gifts in store for the jolly season</p>
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    title: Christmas is here!
                    description: ''
                    id: '61'
                    type: article
                    workspace_id: this_is_an_id38_that_should_be_at_least_4
                    parent_id: 184
                    parent_type: collection
                    parent_ids: []
                    statistics:
                      type: article_statistics
                      views: 0
                      conversations: 0
                      reactions: 0
                      happy_reaction_percentage: 0
                      neutral_reaction_percentage: 0
                      sad_reaction_percentage: 0
                    body: >-
                      <p class="no-margin">New gifts in store for the jolly
                      season</p>
                    author_id: 991267279
                    state: published
                    created_at: 1709726317
                    updated_at: 1709726318
                    url: >-
                      http://help-center.test/myapp-38/en/articles/61-christmas-is-here
              schema:
                $ref: '#/components/schemas/article_list_item'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: bf174bf1-9a7d-4c08-94e2-09f9cd1afc43
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Article Not Found
          content:
            application/json:
              examples:
                Article Not Found:
                  value:
                    type: error.list
                    request_id: fbaefe27-f1c3-45bd-aa13-43df1e85acff
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Articles
      summary: Delete an article
      operationId: Articles_deleteArticleById
      description: >-
        You can delete a single article by making a DELETE request to
        `https://api.intercom.io/articles/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the article which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '64'
                    object: article
                    deleted: true
              schema:
                $ref: '#/components/schemas/deleted_article_object'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: faa8129a-0493-4321-b9f2-4f91426c4c4c
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Article Not Found
          content:
            application/json:
              examples:
                Article Not Found:
                  value:
                    type: error.list
                    request_id: 89012a0d-a3ac-46d1-bc65-0787625667c6
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /help_center/collections:
    get:
      tags:
        - Help Center
      summary: List all collections
      operationId: HelpCenter_listAllCollections
      description: >
        You can fetch a list of all collections by making a GET request to
        `https://api.intercom.io/help_center/collections`.


        Collections will be returned in descending order on the `updated_at`
        attribute. This means if you need to iterate through results then we'll
        show the most recently updated collections first.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data:
                      - description: english collection description
                        id: '192'
                        workspace_id: this_is_an_id52_that_should_be_at_least_4
                        name: English collection title
                        url: http://help-center.test/myapp-52/collection-17
                        order: 17
                        created_at: 1709726323
                        updated_at: 1709726323
                        icon: bookmark
                        help_center_id: 112
                        type: collection
                    total_count: 1
                    pages:
                      type: pages
                      page: 1
                      per_page: 20
                      total_pages: 1
              schema:
                $ref: '#/components/schemas/collection_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 9d27c9ec-eeea-4a16-ab97-4c8258b8be34
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Help Center
      summary: Create a collection
      operationId: HelpCenter_createCollection
      description: >-
        You can create a new collection by making a POST request to
        `https://api.intercom.io/help_center/collections.`
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_collection_request'
            examples:
              collection_created:
                summary: collection created
                value:
                  name: Thanks for everything
              bad_request:
                summary: Bad Request
                value:
                  description: Missing required parameter
      responses:
        '200':
          description: collection created
          content:
            application/json:
              examples:
                collection created:
                  value:
                    description: ''
                    id: '198'
                    workspace_id: this_is_an_id56_that_should_be_at_least_4
                    name: Thanks for everything
                    url: http://help-center.test/myapp-56/
                    order: 1
                    created_at: 1709726324
                    updated_at: 1709726324
                    icon: book-bookmark
                    help_center_id: 114
                    type: collection
              schema:
                $ref: '#/components/schemas/collection'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    type: error.list
                    request_id: 72bca5d3-f6c7-4d34-afd2-d3345af9ed0f
                    errors:
                      - code: parameter_not_found
                        message: Name is a required parameter.
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 65a1ad41-16b0-4d6f-9662-577044b57fd8
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /help_center/collections/{id}:
    get:
      tags:
        - Help Center
      summary: Retrieve a collection
      operationId: HelpCenter_getCollection
      description: >-
        You can fetch the details of a single collection by making a GET request
        to `https://api.intercom.io/help_center/collections/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the collection which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: Collection found
          content:
            application/json:
              examples:
                Collection found:
                  value:
                    description: english collection description
                    id: '203'
                    workspace_id: this_is_an_id62_that_should_be_at_least_4
                    name: English collection title
                    url: http://help-center.test/myapp-62/collection-22
                    order: 22
                    created_at: 1709726326
                    updated_at: 1709726326
                    icon: bookmark
                    help_center_id: 117
                    type: collection
              schema:
                $ref: '#/components/schemas/collection'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 693dc874-52f9-47ce-aa84-03ad965e91b5
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Collection not found
          content:
            application/json:
              examples:
                Collection not found:
                  value:
                    type: error.list
                    request_id: 4a3e5b0c-704c-42ea-852a-f755f50d6dc7
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - Help Center
      summary: Update a collection
      operationId: HelpCenter_updateCollectionById
      description: >-
        You can update the details of a single collection by making a PUT
        request to `https://api.intercom.io/collections/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the collection which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_collection_request'
            examples:
              successful:
                summary: successful
                value:
                  name: Update collection name
              collection_not_found:
                summary: Collection Not Found
                value:
                  name: Update collection name
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    description: english collection description
                    id: '209'
                    workspace_id: this_is_an_id68_that_should_be_at_least_4
                    name: Update collection name
                    url: http://help-center.test/myapp-68/collection-25
                    order: 25
                    created_at: 1709726328
                    updated_at: 1709726328
                    icon: folder
                    help_center_id: 120
                    type: collection
              schema:
                $ref: '#/components/schemas/collection'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: c4ef0a35-400c-4d9c-9f46-cbec55897ffb
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Collection Not Found
          content:
            application/json:
              examples:
                Collection Not Found:
                  value:
                    type: error.list
                    request_id: dc166249-f6fc-46ff-a6af-60ebc6eed5eb
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Help Center
      summary: Delete a collection
      operationId: HelpCenter_deleteCollection
      description: >-
        You can delete a single collection by making a DELETE request to
        `https://api.intercom.io/collections/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the collection which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '215'
                    object: collection
                    deleted: true
              schema:
                $ref: '#/components/schemas/deleted_collection_object'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: eb282244-ebdf-471b-a15b-f0b0f397c2ed
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: collection Not Found
          content:
            application/json:
              examples:
                collection Not Found:
                  value:
                    type: error.list
                    request_id: a035bb7a-f246-4525-b48d-20ad423c3996
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /help_center/help_centers/{id}:
    get:
      tags:
        - Help Center
      summary: Retrieve a Help Center
      operationId: HelpCenter_getDetails
      description: >-
        You can fetch the details of a single Help Center by making a GET
        request to `https://api.intercom.io/help_center/help_center/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the collection which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: Collection found
          content:
            application/json:
              examples:
                Collection found:
                  value:
                    id: '126'
                    workspace_id: this_is_an_id80_that_should_be_at_least_4
                    created_at: 1709726331
                    updated_at: 1709726331
                    identifier: help-center-1
                    website_turned_on: false
                    display_name: Intercom Help Center
              schema:
                $ref: '#/components/schemas/help_center'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 5768bbbf-1ce1-4038-b7e5-517aeab9d74b
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Collection not found
          content:
            application/json:
              examples:
                Collection not found:
                  value:
                    type: error.list
                    request_id: 8c2b3866-09c6-4401-8120-0578b687f362
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /help_center/help_centers:
    get:
      tags:
        - Help Center
      summary: List all Help Centers
      operationId: HelpCenter_listAllHelpCenters
      description: >-
        You can list all Help Centers by making a GET request to
        `https://api.intercom.io/help_center/help_centers`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Help Centers found
          content:
            application/json:
              examples:
                Help Centers found:
                  value:
                    type: list
                    data: []
              schema:
                $ref: '#/components/schemas/help_center_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 0272824b-da6a-4e20-8fd7-517866b4d531
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /help_center/sections:
    get:
      tags:
        - Help Center
      summary: List all sections
      operationId: HelpCenter_listAllSections
      description: >
        You can fetch a list of all sections by making a GET request to
        `https://api.intercom.io/help_center/sections`.

        > 📘 How are the sections sorted and ordered?

        >

        > Sections will be returned in descending order on the `updated_at`
        attribute. This means if you need to iterate through results then we'll
        show the most recently updated sections first.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data:
                      - id: '222'
                        workspace_id: this_is_an_id90_that_should_be_at_least_4
                        name: English section title
                        url: http://help-center.test/myapp-90/section-15
                        order: 15
                        created_at: 1709726333
                        updated_at: 1709726333
                        type: section
                        parent_id: 221
                    total_count: 1
                    pages:
                      type: pages
                      page: 1
                      per_page: 20
                      total_pages: 1
              schema:
                $ref: '#/components/schemas/section_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 2241e2ca-c5fe-43b4-b0f3-80ac63e4e904
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Help Center
      summary: Create a section
      operationId: HelpCenter_createSection
      description: >-
        You can create a new section by making a POST request to
        `https://api.intercom.io/help_center/sections.`
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_section_request'
            examples:
              section_created:
                summary: section created
                value:
                  name: Thanks for everything
                  parent_id: 225
      responses:
        '200':
          description: section created
          content:
            application/json:
              examples:
                section created:
                  value:
                    id: '227'
                    workspace_id: this_is_an_id94_that_should_be_at_least_4
                    name: Thanks for everything
                    url: http://help-center.test/myapp-94/
                    order: 1
                    created_at: 1709726335
                    updated_at: 1709726335
                    type: section
                    parent_id: '225'
              schema:
                $ref: '#/components/schemas/section'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 29d97559-c951-43bb-b66b-b8341576dfd3
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /help_center/sections/{id}:
    get:
      tags:
        - Help Center
      summary: Retrieve a section
      operationId: HelpCenter_getSectionById
      description: >-
        You can fetch the details of a single section by making a GET request to
        `https://api.intercom.io/help_center/sections/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the section which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: Section found
          content:
            application/json:
              examples:
                Section found:
                  value:
                    id: '231'
                    workspace_id: this_is_an_id98_that_should_be_at_least_4
                    name: English section title
                    url: http://help-center.test/myapp-98/section-19
                    order: 19
                    created_at: 1709726335
                    updated_at: 1709726335
                    type: section
                    parent_id: 230
              schema:
                $ref: '#/components/schemas/section'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 2cc98f12-c9ea-4431-81b9-758194ea4b79
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Section not found
          content:
            application/json:
              examples:
                Section not found:
                  value:
                    type: error.list
                    request_id: cbd4dc57-cf49-4e32-80e3-ec575fc41d89
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - Help Center
      summary: Update a section
      operationId: HelpCenter_updateSectionById
      description: >-
        You can update the details of a single section by making a PUT request
        to `https://api.intercom.io/sections/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the section which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_section_request'
            examples:
              successful:
                summary: successful
                value:
                  name: Update section name
                  parent_id: 236
              section_not_found:
                summary: Section Not Found
                value:
                  name: Update section name
                  parent_id: 238
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '237'
                    workspace_id: this_is_an_id104_that_should_be_at_least_
                    name: Update section name
                    url: http://help-center.test/myapp-104/section-22
                    order: 22
                    created_at: 1709726337
                    updated_at: 1709726337
                    type: section
                    parent_id: '236'
              schema:
                $ref: '#/components/schemas/section'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 9ddbe1d2-e458-459a-a345-f22399af8c95
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Section Not Found
          content:
            application/json:
              examples:
                Section Not Found:
                  value:
                    type: error.list
                    request_id: ea86da89-4866-41fc-af5c-5705121bfe31
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Help Center
      summary: Delete a section
      operationId: HelpCenter_deleteSection
      description: >-
        You can delete a single section by making a DELETE request to
        `https://api.intercom.io/sections/<id>`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the section which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '243'
                    object: section
                    deleted: true
              schema:
                $ref: '#/components/schemas/deleted_section_object'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 20148c0e-ab92-449a-b8d3-7079d06d5da9
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: section Not Found
          content:
            application/json:
              examples:
                section Not Found:
                  value:
                    type: error.list
                    request_id: 988211e8-70fb-4f36-964c-fa8ee123c0b8
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /companies:
    post:
      tags:
        - Companies
      summary: Create or Update a company
      operationId: Companies_createOrUpdateCompany
      description: >
        You can create or update a company.


        Companies will be only visible in Intercom when there is at least one
        associated user.


        Companies are looked up via `company_id` in a `POST` request, if not
        found via `company_id`, the new company will be created, if found, that
        company will be updated.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_or_update_company_request'
            examples:
              successful:
                summary: Successful
                value:
                  company_id: company_remote_id
                  name: my company
                  remote_created_at: 1374138000
              bad_request:
                summary: Bad Request
                value:
                  test: invalid
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    company_id: company_remote_id
                    id: 65e85a856abd01fdcb4c6fc7
                    app_id: this_is_an_id116_that_should_be_at_least_
                    name: my company
                    remote_created_at: 1374138000
                    created_at: 1709726341
                    updated_at: 1709726341
                    monthly_spend: 0
                    session_count: 0
                    user_count: 0
                    segments:
                      type: segment.list
                      segments: []
                    plan: {}
                    custom_attributes:
                      creation_source: api
              schema:
                $ref: '#/components/schemas/company'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    type: error.list
                    request_id: null
                    errors:
                      - code: bad_request
                        message: bad 'test' parameter
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 2c7755ff-f15e-41c2-a8c4-8f0f62c9faf4
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - Companies
      summary: Retrieve companies
      operationId: Companies_getAllCompanies
      description: >
        You can fetch a single company by passing in `company_id` or `name`.

          `https://api.intercom.io/companies?name={name}`

          `https://api.intercom.io/companies?company_id={company_id}`

        You can fetch all companies and filter by `segment_id` or `tag_id` as a
        query parameter.

          `https://api.intercom.io/companies?tag_id={tag_id}`

          `https://api.intercom.io/companies?segment_id={segment_id}`
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The `name` of the company to filter by.
          name: name
          in: query
          required: false
          example: my company
          schema:
            type: string
        - description: The `company_id` of the company to filter by.
          name: company_id
          in: query
          required: false
          example: '12345'
          schema:
            type: string
        - description: The `tag_id` of the company to filter by.
          name: tag_id
          in: query
          required: false
          example: '678910'
          schema:
            type: string
        - description: The `segment_id` of the company to filter by.
          name: segment_id
          in: query
          required: false
          example: '98765'
          schema:
            type: string
        - description: The page of results to fetch. Defaults to first page
          name: page
          in: query
          required: false
          example: 1
          schema:
            type: integer
        - description: How many results to display per page. Defaults to 15
          name: per_page
          in: query
          required: false
          example: 15
          schema:
            type: integer
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data:
                      - tags:
                          tags: []
                          type: tag.list
                        type: company
                        company_id: remote_companies_scroll_2
                        id: 65e85a866abd01fdcb4c6fcf
                        app_id: this_is_an_id122_that_should_be_at_least_
                        name: IntercomQATest1
                        remote_created_at: 1709726342
                        created_at: 1709726342
                        updated_at: 1709726342
                        monthly_spend: 0
                        session_count: 0
                        user_count: 4
                        segments:
                          type: segment.list
                          segments: []
                        plan: {}
                        custom_attributes: {}
                    pages:
                      type: pages
                      next: null
                      page: 1
                      per_page: 15
                      total_pages: 1
                    total_count: 1
              schema:
                $ref: '#/components/schemas/company_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 289c0cfd-5b18-4795-992a-2f753412167f
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Company Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: d986bc0d-32de-44a2-ab09-7cba86784b8b
                    errors:
                      - code: company_not_found
                        message: Company Not Found
              schema:
                $ref: '#/components/schemas/error'
  /companies/{id}:
    get:
      tags:
        - Companies
      summary: Retrieve a company by ID
      operationId: Companies_getById
      description: You can fetch a single company.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the company which is given by Intercom
          name: id
          in: path
          required: true
          example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    company_id: '1'
                    id: 65e85a896abd01fdcb4c6fda
                    app_id: this_is_an_id128_that_should_be_at_least_
                    name: company1
                    remote_created_at: 1709726345
                    created_at: 1709726345
                    updated_at: 1709726345
                    monthly_spend: 0
                    session_count: 0
                    user_count: 1
                    segments:
                      type: segment.list
                      segments: []
                    plan: {}
                    custom_attributes: {}
              schema:
                $ref: '#/components/schemas/company'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 905909ef-1923-414a-8404-2ee78925e6f8
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Company Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: 92752272-96a0-452c-b279-f6335a730ede
                    errors:
                      - code: company_not_found
                        message: Company Not Found
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - Companies
      summary: Update a company
      operationId: Companies_updateCompanyById
      description: You can update a single company
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the company which is given by Intercom
          name: id
          in: path
          required: true
          example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    company_id: '1'
                    id: 65e85a8b6abd01fdcb4c6fe4
                    app_id: this_is_an_id134_that_should_be_at_least_
                    name: company2
                    remote_created_at: 1709726347
                    created_at: 1709726347
                    updated_at: 1709726347
                    monthly_spend: 0
                    session_count: 0
                    user_count: 1
                    segments:
                      type: segment.list
                      segments: []
                    plan: {}
                    custom_attributes: {}
              schema:
                $ref: '#/components/schemas/company'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: b3685b38-211e-48a2-8447-5c0b036eb35c
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Company Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: eaf95b99-c472-4a1d-b364-9dedc476b9a6
                    errors:
                      - code: company_not_found
                        message: Company Not Found
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Companies
      summary: Delete a company
      operationId: Companies_deleteCompanyById
      description: You can delete a single company.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the company which is given by Intercom
          name: id
          in: path
          required: true
          example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    id: 65e85a8d6abd01fdcb4c6fee
                    object: company
                    deleted: true
              schema:
                $ref: '#/components/schemas/deleted_company_object'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 355f3d28-b3c9-4942-ad3a-302e13c25513
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Company Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: ec8b34a2-eecb-459a-a751-eacc197cf480
                    errors:
                      - code: company_not_found
                        message: Company Not Found
              schema:
                $ref: '#/components/schemas/error'
  /companies/{id}/contacts:
    get:
      tags:
        - Companies
        - Contacts
      summary: List attached contacts
      operationId: Companies_listAttachedContacts
      description: You can fetch a list of all contacts that belong to a company.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the company which is given by Intercom
          name: id
          in: path
          required: true
          example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data: []
                    total_count: 0
                    pages:
                      type: pages
                      page: 1
                      per_page: 50
                      total_pages: 0
              schema:
                $ref: '#/components/schemas/company_attached_contacts'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: ffad400b-d093-4761-aaac-7d9c3be95503
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Company Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: e1e99200-9375-4fbe-b142-d6edcd45a4d6
                    errors:
                      - code: company_not_found
                        message: Company Not Found
              schema:
                $ref: '#/components/schemas/error'
  /companies/{id}/segments:
    get:
      tags:
        - Companies
      summary: List attached segments for companies
      operationId: Companies_listAttachedSegments
      description: You can fetch a list of all segments that belong to a company.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the company which is given by Intercom
          name: id
          in: path
          required: true
          example: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data: []
              schema:
                $ref: '#/components/schemas/company_attached_segments'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: ec499814-bb1b-4fa2-b55d-49e9d355b1ca
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Company Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: c2a46165-5010-442c-962c-71e4655b6b76
                    errors:
                      - code: company_not_found
                        message: Company Not Found
              schema:
                $ref: '#/components/schemas/error'
  /companies/list:
    post:
      tags:
        - Companies
      summary: List all companies
      operationId: Companies_listAll
      description: >
        You can list companies. The company list is sorted by the
        `last_request_at` field and by default is ordered descending, most
        recently requested first.


        Note that the API does not include companies who have no associated
        users in list responses.


        When using the Companies endpoint and the pages object to iterate
        through the returned companies, there is a limit of 10,000 Companies
        that can be returned. If you need to list or iterate on more than 10,000
        Companies, please use the [Scroll
        API](https://developers.intercom.com/reference#iterating-over-all-companies).
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: what page of results to fetch. Defaults to first page
          name: page
          in: query
          required: false
          example: 1
          schema:
            type: integer
        - description: how many results per page. Defaults to 15
          name: per_page
          in: query
          required: false
          example: 15
          schema:
            type: integer
        - description: >-
            `asc` or `desc`. Return the companies in ascending or descending
            order. Defaults to desc
          name: order
          in: query
          required: false
          example: desc
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data:
                      - tags:
                          tags: []
                          type: tag.list
                        type: company
                        company_id: remote_companies_scroll_2
                        id: 65e85a936abd01fdcb4c700a
                        app_id: this_is_an_id158_that_should_be_at_least_
                        name: IntercomQATest1
                        remote_created_at: 1709726355
                        created_at: 1709726355
                        updated_at: 1709726355
                        monthly_spend: 0
                        session_count: 0
                        user_count: 4
                        segments:
                          type: segment.list
                          segments: []
                        plan: {}
                        custom_attributes: {}
                    pages:
                      type: pages
                      next: null
                      page: 1
                      per_page: 15
                      total_pages: 1
                    total_count: 1
              schema:
                $ref: '#/components/schemas/company_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 02b4dfef-99a7-44fa-b858-de8eb7ce9d70
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /companies/scroll:
    get:
      tags:
        - Companies
      summary: Scroll over all companies
      operationId: Companies_scrollAllCompanies
      description: >2
              The `list all companies` functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.

        - Each app can only have 1 scroll open at a time. You'll get an error
        message if you try to have more than one open per app.

        - If the scroll isn't used for 1 minute, it expires and calls with that
        scroll param will fail

        - If the end of the scroll is reached, "companies" will be empty and the
        scroll parameter will expire


        > 📘 Scroll Parameter

        >

        > You can get the first page of companies by simply sending a GET
        request to the scroll endpoint. For subsequent requests you will need to
        use the scroll parameter from the response.


        > ❗️ Scroll network timeouts

        >

        > Since scroll is often used on large datasets network errors such as
        timeouts can be encountered. When this occurs you will need to restart
        your scroll query as it is not possible to continue from a specific
        point when using scroll.

        >

        > When this occurs you will see a HTTP 500 error with the following
        message:

        > "Request failed due to an internal network error. Please restart the
        scroll operation."
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: ''
          name: scroll_param
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data:
                      - tags:
                          tags: []
                          type: tag.list
                        type: company
                        company_id: remote_companies_scroll_2
                        id: 65e85a956abd01fdcb4c7010
                        app_id: this_is_an_id162_that_should_be_at_least_
                        name: IntercomQATest1
                        remote_created_at: 1709726357
                        created_at: 1709726357
                        updated_at: 1709726357
                        monthly_spend: 0
                        session_count: 0
                        user_count: 4
                        segments:
                          type: segment.list
                          segments: []
                        plan: {}
                        custom_attributes: {}
                    pages: null
                    total_count: null
                    scroll_param: 3f0851ed-0ad5-41ab-acb6-aac6f7c2711f
              schema:
                $ref: '#/components/schemas/company_scroll'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: cc1c50b0-dc27-4ef9-8d2a-fe87314274e3
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{id}/companies:
    post:
      tags:
        - Companies
        - Contacts
      summary: Attach a Contact to a Company
      operationId: Companies_attachContactTo
      description: You can attach a company to a single contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the contact which is given by Intercom
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompaniesAttachContactToRequest'
            examples:
              successful:
                summary: Successful
                value:
                  id: 65e85a966abd01fdcb4c7019X
              bad_request:
                summary: Bad Request
                value: null
              company_not_found:
                summary: Company Not Found
                value:
                  id: '123'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    company_id: '1'
                    id: 65e85a966abd01fdcb4c7019
                    app_id: this_is_an_id166_that_should_be_at_least_
                    name: company6
                    remote_created_at: 1709726358
                    created_at: 1709726358
                    updated_at: 1709726358
                    monthly_spend: 0
                    session_count: 0
                    user_count: 1
                    segments:
                      type: segment.list
                      segments: []
                    plan: {}
                    custom_attributes: {}
              schema:
                $ref: '#/components/schemas/company'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Bad Request:
                  value:
                    type: error.list
                    request_id: b9be0310-5f52-491c-a2fc-5e34de4aa8c1
                    errors:
                      - code: parameter_not_found
                        message: company not specified
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 66afab50-0901-40bf-a72b-f65854a7245a
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Company Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: 73022839-5cc4-411e-a195-60ea543fce39
                    errors:
                      - code: company_not_found
                        message: Company Not Found
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - Contacts
        - Companies
      summary: List attached companies for contact
      operationId: Contacts_listAttachedCompanies
      description: You can fetch a list of companies that are associated to a contact.
      parameters:
        - description: The unique identifier for the contact which is given by Intercom
          name: id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    data:
                      - tags:
                          tags: []
                          type: tag.list
                        type: company
                        company_id: '1'
                        id: 65e85a9d6abd01fdcb4c703a
                        app_id: this_is_an_id182_that_should_be_at_least_
                        name: company12
                        remote_created_at: 1709726365
                        created_at: 1709726365
                        updated_at: 1709726365
                        last_request_at: 1709553565
                        monthly_spend: 0
                        session_count: 0
                        user_count: 1
                        segments:
                          type: segment.list
                          segments: []
                        plan: {}
                        custom_attributes: {}
                    pages:
                      type: pages
                      next: null
                      page: 1
                      per_page: 50
                      total_pages: 1
                    total_count: 1
              schema:
                $ref: '#/components/schemas/contact_attached_companies'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 7cfa0824-17f3-4fcb-b4f3-4e1ba32a3022
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Contact not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 19ff4de3-1f4c-4b08-931e-bdff43a459ba
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{contact_id}/companies/{id}:
    delete:
      tags:
        - Companies
        - Contacts
      summary: Detach a contact from a company
      operationId: Companies_detachContactFromCompany
      description: You can detach a company from a single contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          required: true
          example: 58a430d35458202d41b1e65b
          schema:
            type: string
        - description: The unique identifier for the company which is given by Intercom
          name: id
          in: path
          required: true
          example: 58a430d35458202d41b1e65b
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: company
                    company_id: '1'
                    id: 65e85a9a6abd01fdcb4c7029
                    app_id: this_is_an_id174_that_should_be_at_least_
                    name: company8
                    remote_created_at: 1709726362
                    created_at: 1709726362
                    updated_at: 1709726362
                    monthly_spend: 0
                    session_count: 0
                    user_count: 0
                    segments:
                      type: segment.list
                      segments: []
                    plan: {}
                    custom_attributes: {}
              schema:
                $ref: '#/components/schemas/company'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 6ef9c6c2-01c6-4c44-958a-3f39cc3236f2
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Contact Not Found
          content:
            application/json:
              examples:
                Company Not Found:
                  value:
                    type: error.list
                    request_id: 18cb838c-575b-46ce-be23-3404d2434093
                    errors:
                      - code: company_not_found
                        message: Company Not Found
                Contact Not Found:
                  value:
                    type: error.list
                    request_id: 766622bf-19e0-4e08-923d-d5d43c0f77aa
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{id}/notes:
    get:
      tags:
        - Notes
        - Contacts
      summary: List all notes
      operationId: Notes_listAll
      description: You can fetch a list of notes that are associated to a contact.
      parameters:
        - description: The unique identifier of a contact.
          name: id
          in: path
          required: true
          schema:
            type: integer
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: list
                    data:
                      - type: note
                        id: '29'
                        created_at: 1709121567
                        contact:
                          type: contact
                          id: 65e85a9f6abd01fdcb4c7045
                        author:
                          type: admin
                          id: '991267361'
                          name: Ciaran110 Lee
                          email: admin110@email.com
                          away_mode_enabled: false
                          away_mode_reassign: false
                        body: <p>This is a note.</p>
                      - type: note
                        id: '28'
                        created_at: 1709035167
                        contact:
                          type: contact
                          id: 65e85a9f6abd01fdcb4c7045X
                        author:
                          type: admin
                          id: 991267361X
                          name: Ciaran110 Lee
                          email: admin110@email.com
                          away_mode_enabled: false
                          away_mode_reassign: false
                        body: <p>This is a note.</p>
                      - type: note
                        id: '27'
                        created_at: 1709035167
                        contact:
                          type: contact
                          id: 65e85a9f6abd01fdcb4c7045X
                        author:
                          type: admin
                          id: 991267361X
                          name: Ciaran110 Lee
                          email: admin110@email.com
                          away_mode_enabled: false
                          away_mode_reassign: false
                        body: <p>This is a note.</p>
                    total_count: 3
                    pages:
                      type: pages
                      next: null
                      page: 1
                      per_page: 50
                      total_pages: 1
              schema:
                $ref: '#/components/schemas/note_list'
        '404':
          description: Contact not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: e1eda96f-16d1-4a28-87bd-2c197f03d39c
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Notes
        - Contacts
      summary: Create a note
      operationId: Notes_addNoteToContact
      description: You can add a note to a single contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier of a given contact.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotesAddNoteToContactRequest'
            examples:
              successful_response:
                summary: Successful response
                value:
                  contact_id: 65e85aa06abd01fdcb4c7047
                  admin_id: 991267363
                  body: Hello
              admin_not_found:
                summary: Admin not found
                value:
                  contact_id: 65e85aa16abd01fdcb4c7048
                  admin_id: 123
                  body: Hello
              contact_not_found:
                summary: Contact not found
                value:
                  contact_id: 123
                  admin_id: 991267365
                  body: Hello
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: note
                    id: '34'
                    created_at: 1709726368
                    contact:
                      type: contact
                      id: 65e85aa06abd01fdcb4c7047
                    author:
                      type: admin
                      id: '991267363'
                      name: Ciaran112 Lee
                      email: admin112@email.com
                      away_mode_enabled: false
                      away_mode_reassign: false
                    body: <p>Hello</p>
              schema:
                $ref: '#/components/schemas/note'
        '404':
          description: Contact not found
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    type: error.list
                    request_id: 33e908d4-5328-48a2-944d-32e2937ff92d
                    errors:
                      - code: not_found
                        message: Resource Not Found
                Contact not found:
                  value:
                    type: error.list
                    request_id: 12f563cb-1e4b-4cab-9f9d-73dcf6cdbc8e
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{contact_id}/segments:
    get:
      tags:
        - Contacts
        - Segments
      summary: List attached segments for contact
      operationId: Contacts_getSegmentsForContact
      description: You can fetch a list of segments that are associated to a contact.
      parameters:
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    data:
                      - type: segment
                        id: 65e85aa26abd01fdcb4c704a
                        name: segment
                        created_at: 1709726370
                        updated_at: 1709726370
                        person_type: user
              schema:
                $ref: '#/components/schemas/contact_segments'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 66e3b649-8fd7-4829-871c-887a4eb24a98
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Contact not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 51b2b757-8165-403a-85cc-6b105158fe99
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{contact_id}/subscriptions:
    get:
      tags:
        - Contacts
        - Subscription Types
      summary: List subscriptions for a contact
      operationId: Contacts_listContactSubscriptions
      description: >
        You can fetch a list of subscription types that are attached to a
        contact. These can be subscriptions that a user has 'opted-in' to or has
        'opted-out' from, depending on the subscription type.

        This will return a list of Subscription Type objects that the contact is
        associated with.


        The data property will show a combined list of:

          1.Opt-out subscription types that the user has opted-out from.
          2.Opt-in subscription types that the user has opted-in to receiving.
      parameters:
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data:
                      - type: subscription
                        id: '93'
                        state: live
                        consent_type: opt_out
                        default_translation:
                          description: Lorem ipsum dolor sit amet
                          name: Newsletters
                          locale: en
                        translations:
                          - description: Lorem ipsum dolor sit amet
                            name: Newsletters
                            locale: en
                        content_types:
                          - email
                      - type: subscription
                        id: '95'
                        state: live
                        consent_type: opt_in
                        default_translation:
                          description: Lorem ipsum dolor sit amet
                          name: Newsletters
                          locale: en
                        translations:
                          - description: Lorem ipsum dolor sit amet
                            name: Newsletters
                            locale: en
                        content_types:
                          - sms_message
              schema:
                $ref: '#/components/schemas/subscription_type_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 2f88385e-b1c0-41de-bb54-77b42377136e
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Contact not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 38a4352a-87cb-4cf1-8429-7473abd6b82d
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Subscription Types
        - Contacts
      summary: Add subscription to a contact
      operationId: SubscriptionTypes_addSubscriptionToContact
      description: >
        You can add a specific subscription to a contact. In Intercom, we have
        two different subscription types based on user consent - opt-out and
        opt-in:

          1.Attaching a contact to an opt-out subscription type will opt that user out from receiving messages related to that subscription type.

          2.Attaching a contact to an opt-in subscription type will opt that user in to receiving messages related to that subscription type.

        This will return a subscription type model for the subscription type
        that was added to the contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SubscriptionTypesAddSubscriptionToContactRequest
            examples:
              successful:
                summary: Successful
                value:
                  id: 108
                  consent_type: opt_in
              contact_not_found:
                summary: Contact not found
                value:
                  id: 112
                  consent_type: opt_in
              resource_not_found:
                summary: Resource not found
                value:
                  id: invalid_id
                  consent_type: opt_in
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: subscription
                    id: '108'
                    state: live
                    consent_type: opt_in
                    default_translation:
                      description: Lorem ipsum dolor sit amet
                      name: Newsletters
                      locale: en
                    translations:
                      - description: Lorem ipsum dolor sit amet
                        name: Newsletters
                        locale: en
                    content_types:
                      - sms_message
              schema:
                $ref: '#/components/schemas/subscription_type'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: b831c609-2beb-488c-a313-11532cdbe414
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Resource not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 16a8d499-8a9c-4b0a-9e57-67de4fd41cd1
                    errors:
                      - code: not_found
                        message: User Not Found
                Resource not found:
                  value:
                    type: error.list
                    request_id: a0eed4b2-ac1b-4aaa-a5b2-f0ccbd51f66f
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{contact_id}/subscriptions/{id}:
    delete:
      tags:
        - Subscription Types
        - Contacts
      summary: Remove subscription from a contact
      operationId: SubscriptionTypes_removeFromContact
      description: >-
        You can remove a specific subscription from a contact. This will return
        a subscription type model for the subscription type that was removed
        from the contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier for the subscription type which is given by
            Intercom
          name: id
          in: path
          example: '37846'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: subscription
                    id: '124'
                    state: live
                    consent_type: opt_in
                    default_translation:
                      description: Lorem ipsum dolor sit amet
                      name: Newsletters
                      locale: en
                    translations:
                      - description: Lorem ipsum dolor sit amet
                        name: Newsletters
                        locale: en
                    content_types:
                      - sms_message
              schema:
                $ref: '#/components/schemas/subscription_type'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: b2d9e18c-6756-48ce-bfed-aa0d344298a3
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Resource not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 1651900e-608b-42b5-a016-1e9d8b5f19c8
                    errors:
                      - code: not_found
                        message: User Not Found
                Resource not found:
                  value:
                    type: error.list
                    request_id: 52692d16-de62-47a4-82e4-25bf65599309
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{contact_id}/tags:
    get:
      tags:
        - Contacts
        - Tags
      summary: List tags attached to a contact
      operationId: Contacts_getContactTags
      description: >-
        You can fetch a list of all tags that are attached to a specific
        contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    data:
                      - type: tag
                        id: '83'
                        name: Manual tag
              schema:
                $ref: '#/components/schemas/tag_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 7dab6a19-731a-4e05-aee1-278a089cecb6
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Contact not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 9033fa1b-d7a2-43c5-a177-d52ec87c1406
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Tags
        - Contacts
      summary: Add tag to a contact
      operationId: Tags_addTagToContact
      description: >-
        You can tag a specific contact. This will return a tag object for the
        tag that was added to the contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsAddTagToContactRequest'
            examples:
              successful:
                summary: successful
                value:
                  id: 84
              contact_not_found:
                summary: Contact not found
                value:
                  id: 85
              tag_not_found:
                summary: Tag not found
                value:
                  id: 123X
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: tag
                    id: '84'
                    name: Manual tag
              schema:
                $ref: '#/components/schemas/tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 2198b001-5b37-4bed-882f-acc89bd31afa
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Tag not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 5983861e-f75a-4ec2-a5cf-4b237d01c2f7
                    errors:
                      - code: not_found
                        message: User Not Found
                Tag not found:
                  value:
                    type: error.list
                    request_id: 6f867b84-0748-416f-87f8-e1aca1ad0e89
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{contact_id}/tags/{id}:
    delete:
      tags:
        - Tags
        - Contacts
      summary: Remove tag from a contact
      operationId: Tags_removeFromContact
      description: >-
        You can remove tag from a specific contact. This will return a tag
        object for the tag that was removed from the contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the contact which is given by Intercom
          name: contact_id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
        - description: The unique identifier for the tag which is given by Intercom
          name: id
          in: path
          example: '7522907'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: tag
                    id: '87'
                    name: Manual tag
              schema:
                $ref: '#/components/schemas/tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 99c138ce-9ca8-42f5-b79f-f01c121b6cd1
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Tag not found
          content:
            application/json:
              examples:
                Contact not found:
                  value:
                    type: error.list
                    request_id: 18fe73d2-7477-4cb1-bfab-bcfea384bc4d
                    errors:
                      - code: not_found
                        message: User Not Found
                Tag not found:
                  value:
                    type: error.list
                    request_id: 0322c45f-2f7d-44b4-9a9d-af288eaa380e
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{id}:
    put:
      tags:
        - Contacts
      summary: Update a contact
      operationId: Contacts_updateContact
      description: You can update an existing contact (ie. user or lead).
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: id
          name: id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactsUpdateContactRequest'
            examples:
              successful:
                summary: successful
                value:
                  email: joebloggs@intercom.io
                  name: joe bloggs
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      type: list
                      data: []
                      url: /contacts/65e85ab16abd01fdcb4c7061/tags
                      total_count: 0
                      has_more: false
                    type: contact
                    id: 65e85ab16abd01fdcb4c7061
                    workspace_id: this_is_an_id248_that_should_be_at_least_
                    external_id: '70'
                    role: user
                    email: joebloggs@intercom.io
                    phone: null
                    name: joe bloggs
                    avatar: null
                    owner_id: null
                    social_profiles:
                      type: list
                      data: []
                    has_hard_bounced: false
                    marked_email_as_spam: false
                    unsubscribed_from_emails: false
                    created_at: 1709726385
                    updated_at: 1709726385
                    signed_up_at: 1709726385
                    last_seen_at: null
                    last_replied_at: null
                    last_contacted_at: null
                    last_email_opened_at: null
                    last_email_clicked_at: null
                    language_override: null
                    browser: null
                    browser_version: null
                    browser_language: null
                    os: null
                    location:
                      type: location
                      country: null
                      region: null
                      city: null
                      country_code: null
                      continent_code: null
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_os_version: null
                    android_sdk_version: null
                    android_last_seen_at: null
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_os_version: null
                    ios_sdk_version: null
                    ios_last_seen_at: null
                    custom_attributes: {}
                    notes:
                      type: list
                      data: []
                      url: /contacts/65e85ab16abd01fdcb4c7061/notes
                      total_count: 0
                      has_more: false
                    companies:
                      type: list
                      data: []
                      url: /contacts/65e85ab16abd01fdcb4c7061/companies
                      total_count: 0
                      has_more: false
                    opted_out_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab16abd01fdcb4c7061/subscriptions
                      total_count: 0
                      has_more: false
                    opted_in_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab16abd01fdcb4c7061/subscriptions
                      total_count: 0
                      has_more: false
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    referrer: null
              schema:
                $ref: '#/components/schemas/contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 50f9dc6e-7d79-462e-891c-7fe711a7acca
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - Contacts
      summary: Get a contact
      operationId: Contacts_getById
      description: You can fetch the details of a single contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: id
          name: id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      type: list
                      data: []
                      url: /contacts/65e85ab26abd01fdcb4c7062/tags
                      total_count: 0
                      has_more: false
                    type: contact
                    id: 65e85ab26abd01fdcb4c7062
                    workspace_id: this_is_an_id252_that_should_be_at_least_
                    external_id: '70'
                    role: user
                    email: joe@bloggs.com
                    phone: null
                    name: Joe Bloggs
                    avatar: null
                    owner_id: null
                    social_profiles:
                      type: list
                      data: []
                    has_hard_bounced: false
                    marked_email_as_spam: false
                    unsubscribed_from_emails: false
                    created_at: 1709726386
                    updated_at: 1709726386
                    signed_up_at: 1709726386
                    last_seen_at: null
                    last_replied_at: null
                    last_contacted_at: null
                    last_email_opened_at: null
                    last_email_clicked_at: null
                    language_override: null
                    browser: null
                    browser_version: null
                    browser_language: null
                    os: null
                    location:
                      type: location
                      country: null
                      region: null
                      city: null
                      country_code: null
                      continent_code: null
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_os_version: null
                    android_sdk_version: null
                    android_last_seen_at: null
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_os_version: null
                    ios_sdk_version: null
                    ios_last_seen_at: null
                    custom_attributes: {}
                    notes:
                      type: list
                      data: []
                      url: /contacts/65e85ab26abd01fdcb4c7062/notes
                      total_count: 0
                      has_more: false
                    companies:
                      type: list
                      data: []
                      url: /contacts/65e85ab26abd01fdcb4c7062/companies
                      total_count: 0
                      has_more: false
                    opted_out_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab26abd01fdcb4c7062/subscriptions
                      total_count: 0
                      has_more: false
                    opted_in_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab26abd01fdcb4c7062/subscriptions
                      total_count: 0
                      has_more: false
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    referrer: null
              schema:
                $ref: '#/components/schemas/contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 1892da80-d302-4ddf-8aa2-f9f893189adb
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Contacts
      summary: Delete a contact
      operationId: Contacts_deleteContactById
      description: You can delete a single contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: 65e85ab36abd01fdcb4c7063
                    object: contact
                    deleted: true
              schema:
                $ref: '#/components/schemas/contact_deleted'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 1eabec9a-a820-4c46-b24b-35de59c90df2
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /contacts/merge:
    post:
      tags:
        - Contacts
      summary: Merge a lead and a user
      operationId: Contacts_mergeLeadUser
      description: >-
        You can merge a contact with a `role` of `lead` into a contact with a
        `role` of `user`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/merge_contacts_request'
            examples:
              successful:
                summary: successful
                value:
                  from: 65e85ab56abd01fdcb4c7064
                  into: 65e85ab56abd01fdcb4c7065
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      type: list
                      data: []
                      url: /contacts/65e85ab56abd01fdcb4c7065/tags
                      total_count: 0
                      has_more: false
                    type: contact
                    id: 65e85ab56abd01fdcb4c7065
                    workspace_id: this_is_an_id260_that_should_be_at_least_
                    external_id: '70'
                    role: user
                    email: joe@bloggs.com
                    phone: null
                    name: Joe Bloggs
                    avatar: null
                    owner_id: null
                    social_profiles:
                      type: list
                      data: []
                    has_hard_bounced: false
                    marked_email_as_spam: false
                    unsubscribed_from_emails: false
                    created_at: 1709726389
                    updated_at: 1709726389
                    signed_up_at: 1709726389
                    last_seen_at: null
                    last_replied_at: null
                    last_contacted_at: null
                    last_email_opened_at: null
                    last_email_clicked_at: null
                    language_override: null
                    browser: null
                    browser_version: null
                    browser_language: null
                    os: null
                    location:
                      type: location
                      country: null
                      region: null
                      city: null
                      country_code: null
                      continent_code: null
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_os_version: null
                    android_sdk_version: null
                    android_last_seen_at: null
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_os_version: null
                    ios_sdk_version: null
                    ios_last_seen_at: null
                    custom_attributes: {}
                    notes:
                      type: list
                      data: []
                      url: /contacts/65e85ab56abd01fdcb4c7065/notes
                      total_count: 0
                      has_more: false
                    companies:
                      type: list
                      data: []
                      url: /contacts/65e85ab56abd01fdcb4c7065/companies
                      total_count: 0
                      has_more: false
                    opted_out_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab56abd01fdcb4c7065/subscriptions
                      total_count: 0
                      has_more: false
                    opted_in_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab56abd01fdcb4c7065/subscriptions
                      total_count: 0
                      has_more: false
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    referrer: null
              schema:
                $ref: '#/components/schemas/contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 0f83835c-c260-4db3-9261-bdf861a9500b
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /contacts/search:
    post:
      tags:
        - Contacts
      summary: Search contacts
      operationId: Contacts_searchContacts
      description: >
        You can search for multiple contacts by the value of their attributes in
        order to fetch exactly who you want.


        To search for contacts, you need to send a `POST` request to
        `https://api.intercom.io/contacts/search`.


        This will accept a query object in the body which will define your
        filters in order to search for contacts.


        ### Contact Creation Delay


        If a contact has recently been created, there is a possibility that it
        will not yet be available when searching. This means that it may not
        appear in the response. This delay can take a few minutes. If you need
        to be instantly notified it is recommended to use webhooks and iterate
        to see if they match your search filters.


        ### Nesting & Limitations


        You can nest these filters in order to get even more granular insights
        that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).

        There are some limitations to the amount of multiple's there can be:

        * There's a limit of max 2 nested filters

        * There's a limit of max 15 filters for each AND or OR group


        ### Searching for Timestamp Fields


        All timestamp fields (created_at, updated_at etc.) are indexed as Dates
        for Contact Search queries; Datetime queries are not currently
        supported. This means you can only query for timestamp fields by day -
        not hour, minute or second.

        For example, if you search for all Contacts with a created_at value
        greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020
        9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020
        12:00 AM). The search results will then include Contacts created from
        January 2nd, 2020 12:00 AM onwards.

        If you'd like to get contacts created on January 1st, 2020 you should
        search with a created_at value equal (=) to 1577836800 (January 1st,
        2020 12:00 AM).

        This behaviour applies only to timestamps used in search queries. The
        search results will still contain the full UNIX timestamp and be sorted
        accordingly.


        ### Accepted Fields


        Most key listed as part of the Contacts Model are searchable, whether
        writeable or not. The value you search for has to match the accepted
        type, otherwise the query will fail (ie. as `created_at` accepts a date,
        the `value` cannot be a string such as `"foorbar"`).


        | Field                              | Type                           |

        | ---------------------------------- | ------------------------------ |

        | id                                 | String                         |

        | role                               | String<br>Accepts user or lead |

        | name                               | String                         |

        | avatar                             | String                         |

        | owner_id                           | Integer                        |

        | email                              | String                         |

        | email_domain                       | String                         |

        | phone                              | String                         |

        | formatted_phone                    | String                         |

        | external_id                        | String                         |

        | created_at                         | Date (UNIX Timestamp)          |

        | signed_up_at                       | Date (UNIX Timestamp)          |

        | updated_at                         | Date (UNIX Timestamp)          |

        | last_seen_at                       | Date (UNIX Timestamp)          |

        | last_contacted_at                  | Date (UNIX Timestamp)          |

        | last_replied_at                    | Date (UNIX Timestamp)          |

        | last_email_opened_at               | Date (UNIX Timestamp)          |

        | last_email_clicked_at              | Date (UNIX Timestamp)          |

        | language_override                  | String                         |

        | browser                            | String                         |

        | browser_language                   | String                         |

        | os                                 | String                         |

        | location.country                   | String                         |

        | location.region                    | String                         |

        | location.city                      | String                         |

        | unsubscribed_from_emails           | Boolean                        |

        | marked_email_as_spam               | Boolean                        |

        | has_hard_bounced                   | Boolean                        |

        | ios_last_seen_at                   | Date (UNIX Timestamp)          |

        | ios_app_version                    | String                         |

        | ios_device                         | String                         |

        | ios_app_device                     | String                         |

        | ios_os_version                     | String                         |

        | ios_app_name                       | String                         |

        | ios_sdk_version                    | String                         |

        | android_last_seen_at               | Date (UNIX Timestamp)          |

        | android_app_version                | String                         |

        | android_device                     | String                         |

        | android_app_name                   | String                         |

        | andoid_sdk_version                 | String                         |

        | segment_id                         | String                         |

        | tag_id                             | String                         |

        | custom_attributes.{attribute_name} | String                         |


        ### Accepted Operators


        The table below shows the operators you can use to define how you want
        to search for the value.  The operator should be put in as a string
        (`"="`). The operator has to be compatible with the field's type (eg.
        you cannot search with `>` for a given string value as it's only
        compatible for integer's and dates).


        | Operator | Valid Types                      |
        Description                                                      |

        | :------- | :------------------------------- |
        :--------------------------------------------------------------- |

        | =        | All                              |
        Equals                                                           |

        | !=       | All                              | Doesn't
        Equal                                                    |

        | IN       | All                              | In<br>Shortcut for `OR`
        queries<br>Values must be in Array       |

        | NIN      | All                              | Not In<br>Shortcut for
        `OR !` queries<br>Values must be in Array |

        | >        | Integer<br>Date (UNIX Timestamp) | Greater
        than                                                     |

        | <       | Integer<br>Date (UNIX Timestamp) | Lower
        than                                                       |

        | ~        | String                           |
        Contains                                                         |

        | !~       | String                           | Doesn't
        Contain                                                  |

        | ^        | String                           | Starts
        With                                                      |

        | $        | String                           | Ends
        With                                                        |
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/search_request'
            examples:
              successful:
                summary: successful
                value:
                  query:
                    operator: AND
                    value:
                      - field: id
                        operator: '='
                        value: 65e85ab66abd01fdcb4c7068
                      - operator: OR
                        value:
                          - field: id
                            operator: '='
                            value: 65e85ab66abd01fdcb4c7068
                          - field: id
                            operator: '='
                            value: 65e85ab66abd01fdcb4c7068
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    data: []
                    total_count: 0
                    pages:
                      type: pages
                      page: 1
                      per_page: 50
                      total_pages: 0
              schema:
                $ref: '#/components/schemas/contact_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: a298573b-f46e-4cf5-b38a-ff845d44dccc
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /contacts:
    get:
      tags:
        - Contacts
      summary: List all contacts
      operationId: Contacts_listAllContacts
      description: You can fetch a list of all contacts.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    data: []
                    total_count: 0
                    pages:
                      type: pages
                      page: 1
                      per_page: 10
                      total_pages: 0
              schema:
                $ref: '#/components/schemas/contact_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: bc5c0d3c-3e43-45af-ab5e-c07bcb6a1e86
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Contacts
      summary: Create contact
      operationId: Contacts_createNewContact
      description: You can create a new contact (ie. user or lead).
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactsCreateNewContactRequest'
            examples:
              successful:
                summary: successful
                value:
                  email: joebloggs@intercom.io
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      type: list
                      data: []
                      url: /contacts/65e85ab96abd01fdcb4c706a/tags
                      total_count: 0
                      has_more: false
                    type: contact
                    id: 65e85ab96abd01fdcb4c706a
                    workspace_id: this_is_an_id272_that_should_be_at_least_
                    external_id: null
                    role: user
                    email: joebloggs@intercom.io
                    phone: null
                    name: null
                    avatar: null
                    owner_id: null
                    social_profiles:
                      type: list
                      data: []
                    has_hard_bounced: false
                    marked_email_as_spam: false
                    unsubscribed_from_emails: false
                    created_at: 1709726393
                    updated_at: 1709726393
                    signed_up_at: null
                    last_seen_at: null
                    last_replied_at: null
                    last_contacted_at: null
                    last_email_opened_at: null
                    last_email_clicked_at: null
                    language_override: null
                    browser: null
                    browser_version: null
                    browser_language: null
                    os: null
                    location:
                      type: location
                      country: null
                      region: null
                      city: null
                      country_code: null
                      continent_code: null
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_os_version: null
                    android_sdk_version: null
                    android_last_seen_at: null
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_os_version: null
                    ios_sdk_version: null
                    ios_last_seen_at: null
                    custom_attributes: {}
                    notes:
                      type: list
                      data: []
                      url: /contacts/65e85ab96abd01fdcb4c706a/notes
                      total_count: 0
                      has_more: false
                    companies:
                      type: list
                      data: []
                      url: /contacts/65e85ab96abd01fdcb4c706a/companies
                      total_count: 0
                      has_more: false
                    opted_out_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab96abd01fdcb4c706a/subscriptions
                      total_count: 0
                      has_more: false
                    opted_in_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85ab96abd01fdcb4c706a/subscriptions
                      total_count: 0
                      has_more: false
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    referrer: null
              schema:
                $ref: '#/components/schemas/contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: fab04a70-d234-4b98-a430-abd55bb006f8
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /contacts/{id}/archive:
    post:
      tags:
        - Contacts
      summary: Archive contact
      operationId: Contacts_archiveContact
      description: You can archive a single contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: id
          name: id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: 65e85aba6abd01fdcb4c706b
                    object: contact
                    archived: true
              schema:
                $ref: '#/components/schemas/contact_archived'
  /contacts/{id}/unarchive:
    post:
      tags:
        - Contacts
      summary: Unarchive contact
      operationId: Contacts_unarchiveContact
      description: You can unarchive a single contact.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: id
          name: id
          in: path
          example: 63a07ddf05a32042dffac965
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: 65e85abb6abd01fdcb4c706c
                    object: contact
                    archived: false
              schema:
                $ref: '#/components/schemas/contact_unarchived'
  /conversations/{conversation_id}/tags:
    post:
      tags:
        - Tags
        - Conversations
      summary: Add tag to a conversation
      operationId: Tags_addTagToConversation
      description: >-
        You can tag a specific conversation. This will return a tag object for
        the tag that was added to the conversation.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: conversation_id
          name: conversation_id
          in: path
          example: '64619700005694'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsAddTagToConversationRequest'
            examples:
              successful:
                summary: successful
                value:
                  id: 89
                  admin_id: 991267396
              conversation_not_found:
                summary: Conversation not found
                value:
                  id: 90
                  admin_id: 991267398
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: tag
                    id: '89'
                    name: Manual tag
              schema:
                $ref: '#/components/schemas/tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 3a24da26-1063-4483-99cc-6ab47963c7d0
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Conversation not found
          content:
            application/json:
              examples:
                Conversation not found:
                  value:
                    type: error.list
                    request_id: b0b999cd-b3ea-482f-8f1b-4ccfe68097ee
                    errors:
                      - code: not_found
                        message: Conversation not found
              schema:
                $ref: '#/components/schemas/error'
  /conversations/{conversation_id}/tags/{id}:
    delete:
      tags:
        - Tags
        - Conversations
      summary: Remove tag from a conversation
      operationId: Tags_removeFromConversation
      description: >-
        You can remove tag from a specific conversation. This will return a tag
        object for the tag that was removed from the conversation.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: conversation_id
          name: conversation_id
          in: path
          example: '64619700005694'
          required: true
          schema:
            type: string
        - description: id
          name: id
          in: path
          example: '7522907'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsRemoveFromConversationRequest'
            examples:
              successful:
                summary: successful
                value:
                  admin_id: 991267400
              conversation_not_found:
                summary: Conversation not found
                value:
                  admin_id: 991267402
              tag_not_found:
                summary: Tag not found
                value:
                  admin_id: 991267403
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: tag
                    id: '92'
                    name: Manual tag
              schema:
                $ref: '#/components/schemas/tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 11d0f3af-1588-4364-bebc-061a9b3a7913
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Tag not found
          content:
            application/json:
              examples:
                Conversation not found:
                  value:
                    type: error.list
                    request_id: 62d81025-bc70-4832-b199-8de9ab842284
                    errors:
                      - code: not_found
                        message: Conversation not found
                Tag not found:
                  value:
                    type: error.list
                    request_id: d834d5f5-7e2d-4c5e-8c64-990fa3256209
                    errors:
                      - code: tag_not_found
                        message: Tag not found
              schema:
                $ref: '#/components/schemas/error'
  /conversations:
    get:
      tags:
        - Conversations
      summary: List all conversations
      operationId: Conversations_listAllConversations
      description: >
        You can fetch a list of all conversations.


        You can optionally request the result page size and the cursor to start
        after to fetch the result
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: How many results per page
          name: per_page
          in: query
          schema:
            type: integer
            default: 20
            maximum: 150
          required: false
        - description: String used to get the next page of conversations.
          name: starting_after
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: conversation.list
                    pages:
                      type: pages
                      page: 1
                      per_page: 20
                      total_pages: 1
                    total_count: 1
                    conversations:
                      - tags:
                          tags: []
                          type: tag.list
                        title: null
                        type: conversation
                        id: '280'
                        created_at: 1709726403
                        updated_at: 1709726403
                        waiting_since: null
                        snoozed_until: null
                        source:
                          type: conversation
                          id: '403918228'
                          delivered_as: admin_initiated
                          subject: ''
                          body: <p>this is the message body</p>
                          author:
                            type: admin
                            id: '991267406'
                            name: Ciaran152 Lee
                            email: admin152@email.com
                          attachments: []
                          url: null
                          redacted: false
                        contacts:
                          type: contact.list
                          contacts:
                            - type: contact
                              id: 65e85ac36abd01fdcb4c7070
                        first_contact_reply: null
                        admin_assignee_id: null
                        team_assignee_id: null
                        open: false
                        state: closed
                        read: false
                        priority: not_priority
                        sla_applied: null
                        statistics: null
                        conversation_rating: null
                        teammates: null
                        custom_attributes: {}
                        topics: {}
                        ticket: null
              schema:
                $ref: '#/components/schemas/paginated_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: eeb2ec92-ed07-4bb6-97fb-9a034fda6905
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: 69dcf735-931c-4e87-90bd-a74e88bd0979
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Conversations
      summary: Creates a conversation
      operationId: Conversations_createInAppMessage
      description: >+
        You can create a conversation that has been initiated by a contact (ie.
        user or lead).

        The conversation can be an in-app message only.


        {% admonition type="info" name="Sending for visitors" %}

        You can also send a message from a visitor by specifying their `user_id`
        or `id` value in the `from` field, along with a `type` field value of
        `contact`.

        This visitor will be automatically converted to a contact with a lead
        role once the conversation is created.

        {% /admonition %}


        This will return the Message model that has been created.

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_conversation_request'
            examples:
              conversation_created:
                summary: conversation created
                value:
                  from:
                    type: user
                    id: 65e85adf6abd01fdcb4c7085
                  body: Hello there
              contact_not_found:
                summary: Contact Not Found
                value:
                  from:
                    type: user
                    id: 123_doesnt_exist
                  body: Hello there
      responses:
        '200':
          description: conversation created
          content:
            application/json:
              examples:
                conversation created:
                  value:
                    type: user_message
                    id: '403918238'
                    created_at: 1709726432
                    body: Hello there
                    message_type: inapp
                    conversation_id: '305'
              schema:
                $ref: '#/components/schemas/message'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: cd91071a-743d-4e8e-adb2-2d8aaccdbb2e
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: 938dc43c-0aa3-47e8-bf97-e27050da8e26
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Contact Not Found
          content:
            application/json:
              examples:
                Contact Not Found:
                  value:
                    type: error.list
                    request_id: 89183f27-4bed-4190-8430-d3d0a36c5a01
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
  /conversations/{id}:
    get:
      tags:
        - Conversations
      summary: Retrieve a conversation
      operationId: Conversations_getById
      description: >

        You can fetch the details of a single conversation.


        This will return a single Conversation model with all its conversation
        parts.


        {% admonition type="warning" name="Hard limit of 500 parts" %}

        The maximum number of conversation parts that can be returned via the
        API is 500. If you have more than that we will return the 500 most
        recent conversation parts.

        {% /admonition %}


        ### Bot Name in Conversation Parts


        For conversation parts generated by a bot, bot name will depend on the
        following:

        - Customers that never turned on AI answers will have `operator` as the
        bot name

        - Customers that have turned on AI answers at some point will have `fin`
        as the bot name
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The id of the conversation to target
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
        - description: Set to plaintext to retrieve conversation messages in plain text.
          name: display_as
          in: query
          required: false
          example: plaintext
          schema:
            type: string
      responses:
        '200':
          description: conversation found
          content:
            application/json:
              examples:
                conversation found:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '309'
                    created_at: 1709726438
                    updated_at: 1709726438
                    waiting_since: null
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918242'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267420'
                        name: Ciaran159 Lee
                        email: admin159@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85ae66abd01fdcb4c7089
                    first_contact_reply: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: false
                    state: closed
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts: []
                      total_count: 0
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: a9427e80-7f2b-41fa-8e95-cfd49760f768
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: c76e2acc-9a61-44ec-b7e9-09ab7a7b3c76
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Not found:
                  value:
                    type: error.list
                    request_id: 239c01fb-03b0-4717-8df2-33545ca09570
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - Conversations
      summary: Update a conversation
      operationId: Conversations_updateConversation
      description: >+

        You can update an existing conversation.


        {% admonition type="info" name="Replying and other actions" %}

        If you want to reply to a coveration or take an action such as assign,
        unassign, open, close or snooze, take a look at the reply and manage
        endpoints.

        {% /admonition %}

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The id of the conversation to target
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
        - description: Set to plaintext to retrieve conversation messages in plain text.
          name: display_as
          in: query
          required: false
          example: plaintext
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_conversation_request'
            examples:
              conversation_found:
                summary: conversation found
                value:
                  read: true
                  custom_attributes:
                    issue_type: Billing
                    priority: High
              not_found:
                summary: Not found
                value:
                  read: true
                  custom_attributes:
                    issue_type: Billing
                    priority: High
      responses:
        '200':
          description: conversation found
          content:
            application/json:
              examples:
                conversation found:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '313'
                    created_at: 1709726445
                    updated_at: 1709726447
                    waiting_since: null
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918246'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267428'
                        name: Ciaran163 Lee
                        email: admin163@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85aed6abd01fdcb4c708d
                    first_contact_reply: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: false
                    state: closed
                    read: true
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes:
                      issue_type: Billing
                      priority: High
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '56'
                          part_type: conversation_attribute_updated_by_admin
                          body: null
                          created_at: 1709726447
                          updated_at: 1709726447
                          notified_at: 1709726447
                          assigned_to: null
                          author:
                            id: '991267429'
                            type: bot
                            name: Operator
                            email: >-
                              operator+this_is_an_id316_that_should_be_at_least_@intercom.io
                          attachments: []
                          external_id: null
                          redacted: false
                        - type: conversation_part
                          id: '57'
                          part_type: conversation_attribute_updated_by_admin
                          body: null
                          created_at: 1709726447
                          updated_at: 1709726447
                          notified_at: 1709726447
                          assigned_to: null
                          author:
                            id: 991267429X
                            type: bot
                            name: Operator
                            email: >-
                              operator+this_is_an_id316_that_should_be_at_least_@intercom.io
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 2
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: d8c48e55-6568-47f7-88dd-528a6065af4a
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: 1a31dbb1-6d0e-452a-a966-496091e18cbe
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Not found:
                  value:
                    type: error.list
                    request_id: ec05070c-2f35-42f3-8b48-ffa91f185ea2
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /conversations/search:
    post:
      tags:
        - Conversations
      summary: Search conversations
      operationId: Conversations_searchConversations
      description: >
        You can search for multiple conversations by the value of their
        attributes in order to fetch exactly which ones you want.


        To search for conversations, you need to send a `POST` request to
        `https://api.intercom.io/conversations/search`.


        This will accept a query object in the body which will define your
        filters in order to search for conversations.


        ### Nesting & Limitations


        You can nest these filters in order to get even more granular insights
        that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).

        There are some limitations to the amount of multiple's there can be:

        - There's a limit of max 2 nested filters

        - There's a limit of max 15 filters for each AND or OR group


        ### Accepted Fields


        Most keys listed as part of the The conversation model is searchable,
        whether writeable or not. The value you search for has to match the
        accepted type, otherwise the query will fail (ie. as `created_at`
        accepts a date, the `value` cannot be a string such as `"foorbar"`).


        | Field                                     |
        Type                                                                                                                                                  
        |

        | :---------------------------------------- |
        :-----------------------------------------------------------------------------------------------------------------------------------------------------
        |

        | id                                        |
        String                                                                                                                                                
        |

        | created_at                                | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | updated_at                                | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | source.type                               | String<br>Accepted fields
        are `conversation`, `email`, `facebook`, `instagram`, `phone_call`,
        `phone_switch`, `push`, `sms`, `twitter` and `whatsapp`. |

        | source.id                                 |
        String                                                                                                                                                
        |

        | source.delivered_as                       |
        String                                                                                                                                                
        |

        | source.subject                            |
        String                                                                                                                                                
        |

        | source.body                               |
        String                                                                                                                                                
        |

        | source.author.id                          |
        String                                                                                                                                                
        |

        | source.author.type                        |
        String                                                                                                                                                
        |

        | source.author.name                        |
        String                                                                                                                                                
        |

        | source.author.email                       |
        String                                                                                                                                                
        |

        | source.url                                |
        String                                                                                                                                                
        |

        | contact_ids                               |
        String                                                                                                                                                
        |

        | teammate_ids                              |
        String                                                                                                                                                
        |

        | admin_assignee_id                         |
        String                                                                                                                                                
        |

        | team_assignee_id                          |
        String                                                                                                                                                
        |

        | channel_initiated                         |
        String                                                                                                                                                
        |

        | open                                      |
        Boolean                                                                                                                                               
        |

        | read                                      |
        Boolean                                                                                                                                               
        |

        | state                                     |
        String                                                                                                                                                
        |

        | waiting_since                             | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | snoozed_until                             | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | tag_ids                                   |
        String                                                                                                                                                
        |

        | priority                                  |
        String                                                                                                                                                
        |

        | statistics.time_to_assignment             |
        Integer                                                                                                                                               
        |

        | statistics.time_to_admin_reply            |
        Integer                                                                                                                                               
        |

        | statistics.time_to_first_close            |
        Integer                                                                                                                                               
        |

        | statistics.time_to_last_close             |
        Integer                                                                                                                                               
        |

        | statistics.median_time_to_reply           |
        Integer                                                                                                                                               
        |

        | statistics.first_contact_reply_at         | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.first_assignment_at            | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.first_admin_reply_at           | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.first_close_at                 | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_assignment_at             | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_assignment_admin_reply_at | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_contact_reply_at          | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_admin_reply_at            | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_close_at                  | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_closed_by_id              |
        String                                                                                                                                                
        |

        | statistics.count_reopens                  |
        Integer                                                                                                                                               
        |

        | statistics.count_assignments              |
        Integer                                                                                                                                               
        |

        | statistics.count_conversation_parts       |
        Integer                                                                                                                                               
        |

        | conversation_rating.requested_at          | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | conversation_rating.replied_at            | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | conversation_rating.score                 |
        Integer                                                                                                                                               
        |

        | conversation_rating.remark                |
        String                                                                                                                                                
        |

        | conversation_rating.contact_id            |
        String                                                                                                                                                
        |

        | conversation_rating.admin_d               |
        String                                                                                                                                                
        |


        ### Accepted Operators


        The table below shows the operators you can use to define how you want
        to search for the value.  The operator should be put in as a string
        (`"="`). The operator has to be compatible with the field's type  (eg.
        you cannot search with `>` for a given string value as it's only
        compatible for integer's and dates).


        | Operator | Valid Types                    |
        Description                                                  |

        | :------- | :----------------------------- |
        :----------------------------------------------------------- |

        | =        | All                            |
        Equals                                                       |

        | !=       | All                            | Doesn't
        Equal                                                |

        | IN       | All                            | In  Shortcut for `OR`
        queries  Values most be in Array       |

        | NIN      | All                            | Not In  Shortcut for `OR
        !` queries  Values must be in Array |

        | >        | Integer  Date (UNIX Timestamp) | Greater (or equal)
        than                                      |

        | <       | Integer  Date (UNIX Timestamp) | Lower (or equal)
        than                                        |

        | ~        | String                         |
        Contains                                                     |

        | !~       | String                         | Doesn't
        Contain                                              |

        | ^        | String                         | Starts
        With                                                  |

        | $        | String                         | Ends
        With                                                    |
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/search_request'
            examples:
              successful:
                summary: successful
                value:
                  query:
                    operator: AND
                    value:
                      - field: id
                        operator: '='
                        value: '320'
                      - operator: OR
                        value:
                          - field: id
                            operator: '='
                            value: '320'
                          - field: id
                            operator: '='
                            value: '320'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: conversation.list
                    pages:
                      type: pages
                      page: 1
                      per_page: 150
                      total_pages: 1
                    total_count: 1
                    conversations:
                      - tags:
                          tags: []
                          type: tag.list
                        title: null
                        type: conversation
                        id: '320'
                        created_at: 1709726458
                        updated_at: 1709726458
                        waiting_since: null
                        snoozed_until: null
                        source:
                          type: conversation
                          id: '403918253'
                          delivered_as: admin_initiated
                          subject: ''
                          body: <p>this is the message body</p>
                          author:
                            type: admin
                            id: '991267458'
                            name: Ciaran186 Lee
                            email: admin186@email.com
                          attachments: []
                          url: null
                          redacted: false
                        contacts:
                          type: contact.list
                          contacts:
                            - type: contact
                              id: 65e85af96abd01fdcb4c7094
                        first_contact_reply: null
                        admin_assignee_id: null
                        team_assignee_id: null
                        open: false
                        state: closed
                        read: false
                        priority: not_priority
                        sla_applied: null
                        statistics: null
                        conversation_rating: null
                        teammates: null
                        custom_attributes: {}
                        topics: {}
                        ticket: null
              schema:
                $ref: '#/components/schemas/conversation_list'
  /conversations/{id}/reply:
    post:
      tags:
        - Conversations
      summary: Reply to a conversation
      operationId: Conversations_replyMessage
      description: >-
        You can reply to a conversation with a message from an admin or on
        behalf of a contact, or with a note for admins.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The Intercom provisioned identifier for the conversation or the
            string "last" to reply to the last part of the conversation
          name: id
          in: path
          required: true
          example: 123 or "last"
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reply_conversation_request'
            examples:
              user_reply:
                summary: User reply
                value:
                  message_type: comment
                  type: user
                  intercom_user_id: 65e85b016abd01fdcb4c709b
                  body: Thanks again :)
              admin_note_reply:
                summary: Admin note reply
                value:
                  message_type: note
                  type: admin
                  admin_id: 991267462
                  body: >-
                    <html> <body>  <h2>An Unordered HTML List</h2>  <ul>  
                    <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>   
                    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>  
                    <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>
              user_last_conversation_reply:
                summary: User last conversation reply
                value:
                  message_type: comment
                  type: user
                  intercom_user_id: 65e85b076abd01fdcb4c709e
                  body: Thanks again :)
              not_found:
                summary: Not found
                value:
                  message_type: comment
                  type: user
                  intercom_user_id: 65e85b096abd01fdcb4c709f
                  body: Thanks again :)
      responses:
        '200':
          description: User last conversation reply
          content:
            application/json:
              examples:
                User reply:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '328'
                    created_at: 1709726465
                    updated_at: 1709726467
                    waiting_since: 1709726467
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918256'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267460'
                        name: Ciaran187 Lee
                        email: admin187@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b016abd01fdcb4c709b
                    first_contact_reply:
                      created_at: 1709726467
                      type: conversation
                      url: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: true
                    state: open
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '59'
                          part_type: open
                          body: <p>Thanks again :)</p>
                          created_at: 1709726467
                          updated_at: 1709726467
                          notified_at: 1709726467
                          assigned_to: null
                          author:
                            id: 65e85b016abd01fdcb4c709bX
                            type: user
                            name: Joe Bloggs
                            email: joe@bloggs.com
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
                Admin note reply:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '329'
                    created_at: 1709726468
                    updated_at: 1709726469
                    waiting_since: null
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918257'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267462'
                        name: Ciaran188 Lee
                        email: admin188@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b046abd01fdcb4c709c
                    first_contact_reply: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: false
                    state: closed
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '60'
                          part_type: note
                          body: |-
                            <h2>An Unordered HTML List</h2>
                            <ul>
                            <li>Coffee</li>
                            <li>Tea</li>
                            <li>Milk</li>
                            </ul>
                            <h2>An Ordered HTML List</h2>
                            <ol>
                            <li>Coffee</li>
                            <li>Tea</li>
                            <li>Milk</li>
                            </ol>
                          created_at: 1709726469
                          updated_at: 1709726469
                          notified_at: 1709726469
                          assigned_to: null
                          author:
                            id: 991267462X
                            type: admin
                            name: Ciaran188 Lee
                            email: admin188@email.com
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
                User last conversation reply:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '331'
                    created_at: 1709726471
                    updated_at: 1709726472
                    waiting_since: 1709726472
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918259'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267466'
                        name: Ciaran190 Lee
                        email: admin190@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b076abd01fdcb4c709e
                    first_contact_reply:
                      created_at: 1709726472
                      type: conversation
                      url: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: true
                    state: open
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: 61X
                          part_type: open
                          body: <p>Thanks again :)</p>
                          created_at: 1709726472
                          updated_at: 1709726472
                          notified_at: 1709726472
                          assigned_to: null
                          author:
                            id: 65e85b076abd01fdcb4c709eX
                            type: user
                            name: Joe Bloggs
                            email: joe@bloggs.com
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 1550efb9-1988-4176-bb5c-8789c2be5fd6
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: 37f035f1-c9f8-479b-9866-3904572c0d1e
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Not found:
                  value:
                    type: error.list
                    request_id: cdfa47cb-ee4c-4290-8855-9a8d87abab76
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /conversations/{id}/parts:
    post:
      tags:
        - Conversations
      summary: Manage a conversation
      operationId: Conversations_manageConversation
      description: |
        For managing conversations you can:
        - Close a conversation
        - Snooze a conversation to reopen on a future date
        - Open a conversation which is `snoozed` or `closed`
        - Assign a conversation to an admin and/or team.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The identifier for the conversation as given by Intercom.
          name: id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationsManageConversationRequest'
            examples:
              close_a_conversation:
                summary: Close a conversation
                value:
                  message_type: close
                  type: admin
                  admin_id: 991267474
                  body: Goodbye :)
              snooze_a_conversation:
                summary: Snooze a conversation
                value:
                  message_type: snoozed
                  admin_id: 991267476
                  snoozed_until: 1709730081
              open_a_conversation:
                summary: Open a conversation
                value:
                  message_type: open
                  admin_id: 991267478
              assign_a_conversation:
                summary: Assign a conversation
                value:
                  message_type: assignment
                  type: admin
                  admin_id: 991267480
                  assignee_id: 991267480
              not_found:
                summary: Not found
                value:
                  message_type: close
                  type: admin
                  admin_id: 991267482
                  body: Goodbye :)
      responses:
        '200':
          description: Assign a conversation
          content:
            application/json:
              examples:
                Close a conversation:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '335'
                    created_at: 1709726478
                    updated_at: 1709726480
                    waiting_since: null
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918263'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267474'
                        name: Ciaran194 Lee
                        email: admin194@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b0e6abd01fdcb4c70a2
                    first_contact_reply: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: false
                    state: closed
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '62'
                          part_type: close
                          body: <p>Goodbye :)</p>
                          created_at: 1709726480
                          updated_at: 1709726480
                          notified_at: 1709726480
                          assigned_to: null
                          author:
                            id: 991267474X
                            type: admin
                            name: Ciaran194 Lee
                            email: admin194@email.com
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
                Snooze a conversation:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '336'
                    created_at: 1709726481
                    updated_at: 1709726482
                    waiting_since: null
                    snoozed_until: 1709730081
                    source:
                      type: conversation
                      id: '403918264'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267476'
                        name: Ciaran195 Lee
                        email: admin195@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b116abd01fdcb4c70a3
                    first_contact_reply: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: true
                    state: snoozed
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '63'
                          part_type: snoozed
                          body: null
                          created_at: 1709726482
                          updated_at: 1709726482
                          notified_at: 1709726482
                          assigned_to: null
                          author:
                            id: 991267476X
                            type: admin
                            name: Ciaran195 Lee
                            email: admin195@email.com
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
                Open a conversation:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: ''
                    type: conversation
                    id: '341'
                    created_at: 1709726480
                    updated_at: 1709726490
                    waiting_since: null
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918265'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267478'
                        name: Ciaran196 Lee
                        email: admin196@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b166abd01fdcb4c70a8
                    first_contact_reply: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: true
                    state: open
                    read: true
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '65'
                          part_type: open
                          body: null
                          created_at: 1709726490
                          updated_at: 1709726490
                          notified_at: 1709726490
                          assigned_to: null
                          author:
                            id: 991267478X
                            type: admin
                            name: Ciaran196 Lee
                            email: admin196@email.com
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
                Assign a conversation:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '345'
                    created_at: 1709726491
                    updated_at: 1709726492
                    waiting_since: null
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918268'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267480'
                        name: Ciaran197 Lee
                        email: admin197@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b1b6abd01fdcb4c70ab
                    first_contact_reply: null
                    admin_assignee_id: 991267480
                    team_assignee_id: null
                    open: true
                    state: open
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '66'
                          part_type: assign_and_reopen
                          body: null
                          created_at: 1709726492
                          updated_at: 1709726492
                          notified_at: 1709726492
                          assigned_to:
                            type: admin
                            id: 991267480X
                          author:
                            id: 991267480X
                            type: admin
                            name: Ciaran197 Lee
                            email: admin197@email.com
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 1cf80ad8-9559-48c5-a03d-df9aeb54c636
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: b9929cc6-6b56-463c-9d3c-d7f8c02b7a18
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Not found:
                  value:
                    type: error.list
                    request_id: 51a61074-bc67-4605-a68d-9e2986e41660
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /conversations/{id}/run_assignment_rules:
    post:
      tags:
        - Conversations
      summary: Run Assignment Rules on a conversation
      operationId: Conversations_runAssignmentRules
      description: >-
        You can let a conversation be automatically assigned following
        assignment rules.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The identifier for the conversation as given by Intercom.
          name: id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      responses:
        '200':
          description: Assign a conversation using assignment rules
          content:
            application/json:
              examples:
                Assign a conversation using assignment rules:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '349'
                    created_at: 1709726499
                    updated_at: 1709726500
                    waiting_since: null
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918272'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267488'
                        name: Ciaran201 Lee
                        email: admin201@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b226abd01fdcb4c70af
                    first_contact_reply: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: false
                    state: closed
                    read: false
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '67'
                          part_type: default_assignment
                          body: null
                          created_at: 1709726500
                          updated_at: 1709726500
                          notified_at: 1709726500
                          assigned_to:
                            type: nobody_admin
                            id: null
                          author:
                            id: '991267489'
                            type: bot
                            name: Operator
                            email: >-
                              operator+this_is_an_id357_that_should_be_at_least_@intercom.io
                          attachments: []
                          external_id: null
                          redacted: false
                      total_count: 1
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: ae0c14fc-9db0-42c5-acd7-66e0ae0ef292
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: 7aea581a-ec77-424e-af1e-1cfaa31ccca4
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Not found:
                  value:
                    type: error.list
                    request_id: 5891b3aa-de85-4f20-9760-245fff9188fe
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /conversations/{id}/customers:
    post:
      tags:
        - Conversations
      summary: Attach a contact to a conversation
      operationId: Conversations_attachContactToConversation
      description: >+
        You can add participants who are contacts to a conversation, on behalf
        of either another contact or an admin.


        {% admonition type="attention" name="Contacts without an email" %}

        If you add a contact via the email parameter and there is no user/lead
        found on that workspace with he given email, then we will create a new
        contact with `role` set to `lead`.

        {% /admonition %}

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The identifier for the conversation as given by Intercom.
          name: id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/attach_contact_to_conversation_request'
            examples:
              attach_a_contact_to_a_conversation:
                summary: Attach a contact to a conversation
                value:
                  admin_id: 991267496
                  customer:
                    intercom_user_id: 65e85b2a6abd01fdcb4c70b3
              not_found:
                summary: Not found
                value:
                  admin_id: 991267498
                  customer:
                    intercom_user_id: 65e85b2c6abd01fdcb4c70b4
      responses:
        '200':
          description: Attach a contact to a conversation
          content:
            application/json:
              examples:
                Attach a contact to a conversation:
                  value:
                    customers:
                      - type: user
                        id: 65e85b2a6abd01fdcb4c70b3
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 6d0f6c6a-c4b1-46ab-bc6d-437f11ae16f2
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: b85975cf-e524-422d-b7d9-5fe1fe3b3a2d
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Not found:
                  value:
                    type: error.list
                    request_id: 36326c9e-6976-4e02-833e-53e3be258bbf
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /conversations/{conversation_id}/customers/{contact_id}:
    delete:
      tags:
        - Conversations
      summary: Detach a contact from a group conversation
      operationId: Conversations_detachContactFromGroup
      description: >+
        You can add participants who are contacts to a conversation, on behalf
        of either another contact or an admin.


        {% admonition type="attention" name="Contacts without an email" %}

        If you add a contact via the email parameter and there is no user/lead
        found on that workspace with he given email, then we will create a new
        contact with `role` set to `lead`.

        {% /admonition %}

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The identifier for the conversation as given by Intercom.
          name: conversation_id
          in: path
          required: true
          example: '123'
          schema:
            type: string
        - description: The identifier for the contact as given by Intercom.
          name: contact_id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/detach_contact_from_conversation_request'
            examples:
              detach_a_contact_from_a_group_conversation:
                summary: Detach a contact from a group conversation
                value:
                  admin_id: 991267504
                  customer:
                    intercom_user_id: 65e85b316abd01fdcb4c70b7
              conversation_not_found:
                summary: Conversation not found
                value:
                  admin_id: 991267506
                  customer:
                    intercom_user_id: 65e85b3a6abd01fdcb4c70bf
              contact_not_found:
                summary: Contact not found
                value:
                  admin_id: 991267508
                  customer:
                    intercom_user_id: 65e85b426abd01fdcb4c70c6
              last_customer:
                summary: Last customer
                value:
                  admin_id: 991267510
                  customer:
                    intercom_user_id: 65e85b4b6abd01fdcb4c70cd
      responses:
        '200':
          description: Detach a contact from a group conversation
          content:
            application/json:
              examples:
                Detach a contact from a group conversation:
                  value:
                    customers:
                      - type: user
                        id: 65e85b396abd01fdcb4c70be
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 0aa4fac4-9c55-4045-86c5-914dd9d51984
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: 6b817249-21a3-4d10-b492-21e3c06bda09
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Contact not found
          content:
            application/json:
              examples:
                Conversation not found:
                  value:
                    type: error.list
                    request_id: ab467ea0-0e85-48e3-b290-334ac8a6d190
                    errors:
                      - code: not_found
                        message: Resource Not Found
                Contact not found:
                  value:
                    type: error.list
                    request_id: af7ef9bd-464a-49bd-80b9-3cd07113ded2
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
        '422':
          description: Last customer
          content:
            application/json:
              examples:
                Last customer:
                  value:
                    type: error.list
                    request_id: 98405357-fc1f-47c6-9840-d7a0cf4af626
                    errors:
                      - code: parameter_invalid
                        message: Removing the last customer is not allowed
              schema:
                $ref: '#/components/schemas/error'
  /conversations/redact:
    post:
      tags:
        - Conversations
      summary: Redact a conversation part
      operationId: Conversations_redactConversationPart
      description: >+
        You can redact a conversation part or the source message of a
        conversation (as seen in the source object).


        {% admonition type="info" name="Redacting parts and messages" %}

        If you are redacting a conversation part, it must have a `body`. If you
        are redacting a source message, it must have been created by a contact.
        We will return a `conversation_part_not_redactable` error if these
        criteria are not met.

        {% /admonition %}

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redact_conversation_request'
            examples:
              redact_a_conversation_part:
                summary: Redact a conversation part
                value:
                  type: conversation_part
                  conversation_id: 405
                  conversation_part_id: 75
              not_found:
                summary: Not found
                value:
                  type: conversation_part
                  conversation_id: really_123_doesnt_exist
                  conversation_part_id: really_123_doesnt_exist
      responses:
        '200':
          description: Redact a conversation part
          content:
            application/json:
              examples:
                Redact a conversation part:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    title: null
                    type: conversation
                    id: '405'
                    created_at: 1709726563
                    updated_at: 1709726565
                    waiting_since: 1709726564
                    snoozed_until: null
                    source:
                      type: conversation
                      id: '403918298'
                      delivered_as: admin_initiated
                      subject: ''
                      body: <p>this is the message body</p>
                      author:
                        type: admin
                        id: '991267516'
                        name: Ciaran215 Lee
                        email: admin215@email.com
                      attachments: []
                      url: null
                      redacted: false
                    contacts:
                      type: contact.list
                      contacts:
                        - type: contact
                          id: 65e85b636abd01fdcb4c70e2
                    first_contact_reply:
                      created_at: 1709726564
                      type: conversation
                      url: null
                    admin_assignee_id: null
                    team_assignee_id: null
                    open: true
                    state: open
                    read: true
                    priority: not_priority
                    sla_applied: null
                    statistics: null
                    conversation_rating: null
                    teammates: null
                    custom_attributes: {}
                    topics: {}
                    ticket: null
                    conversation_parts:
                      type: conversation_part.list
                      conversation_parts:
                        - type: conversation_part
                          id: '75'
                          part_type: open
                          body: <p><i>This message was deleted</i></p>
                          created_at: 1709726564
                          updated_at: 1709726565
                          notified_at: 1709726564
                          assigned_to: null
                          author:
                            id: 65e85b636abd01fdcb4c70e2X
                            type: user
                            name: Joe Bloggs
                            email: joe@bloggs.com
                          attachments: []
                          external_id: null
                          redacted: true
                      total_count: 1
              schema:
                $ref: '#/components/schemas/conversation'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 744da6b1-a056-4fc2-9845-229bcbaf424e
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Not found
          content:
            application/json:
              examples:
                Not found:
                  value:
                    type: error.list
                    request_id: 662cc5d2-f3d7-4025-8499-5472bac60594
                    errors:
                      - code: conversation_part_or_message_not_found
                        message: Conversation part or message not found
              schema:
                $ref: '#/components/schemas/error'
  /data_attributes:
    get:
      tags:
        - Data Attributes
      summary: List all data attributes
      operationId: DataAttributes_listAll
      description: >-
        You can fetch a list of all data attributes belonging to a workspace for
        contacts, companies or conversations.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: Specify the data attribute model to return.
          name: model
          in: query
          required: false
          schema:
            type: string
            enum:
              - contact
              - company
              - conversation
          example: company
        - description: >-
            Include archived attributes in the list. By default we return only
            non archived data attributes.
          name: include_archived
          in: query
          required: false
          example: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: list
                    data:
                      - description: The name of a company
                        type: data_attribute
                        name: name
                        full_name: name
                        label: Company name
                        data_type: string
                        api_writable: true
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: A number identifying a company
                        type: data_attribute
                        name: company_id
                        full_name: company_id
                        label: Company ID
                        data_type: string
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: >-
                          The last day anyone from a company visited your site
                          or app
                        type: data_attribute
                        name: last_request_at
                        full_name: last_request_at
                        label: Company last seen
                        data_type: date
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: The day a company was added to Intercom
                        type: data_attribute
                        name: remote_created_at
                        full_name: remote_created_at
                        label: Company created at
                        data_type: date
                        api_writable: true
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: The number of people in a company
                        type: data_attribute
                        name: user_count
                        full_name: user_count
                        label: People
                        data_type: integer
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: >-
                          All visits from anyone in a company to your product's
                          site or app
                        type: data_attribute
                        name: session_count
                        full_name: session_count
                        label: Company web sessions
                        data_type: integer
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: >-
                          A specific plan or level within your product that
                          companies have signed up to
                        type: data_attribute
                        name: name
                        full_name: plan.name
                        label: Plan
                        data_type: string
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: The monthly revenue you receive from a company
                        type: data_attribute
                        name: monthly_spend
                        full_name: monthly_spend
                        label: Monthly Spend
                        data_type: float
                        api_writable: true
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: >-
                          The number of people employed in this company,
                          expressed as a single number
                        type: data_attribute
                        name: size
                        full_name: size
                        label: Company size
                        data_type: integer
                        api_writable: true
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: >-
                          The category or domain this company belongs to e.g.
                          'ecommerce' or 'SaaS'
                        type: data_attribute
                        name: industry
                        full_name: industry
                        label: Company industry
                        data_type: string
                        api_writable: true
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: >-
                          The web address for the company's primary marketing
                          site
                        type: data_attribute
                        name: website
                        full_name: website
                        label: Company website
                        data_type: string
                        api_writable: true
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: >-
                          One ring to rule them all, one ring to find them, One
                          ring to bring them all and in the darkness bind them.
                        id: 34
                        type: data_attribute
                        name: The One Ring
                        full_name: custom_attributes.The One Ring
                        label: The One Ring
                        data_type: string
                        api_writable: true
                        ui_writable: false
                        messenger_writable: true
                        custom: true
                        archived: false
                        admin_id: '991267541'
                        created_at: 1709726577
                        updated_at: 1709726577
                        model: company
                      - description: The Intercom defined id representing the company
                        type: data_attribute
                        name: id
                        full_name: id
                        label: ID
                        data_type: string
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: The time the company was added to Intercom
                        type: data_attribute
                        name: created_at
                        full_name: created_at
                        label: Created at
                        data_type: date
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: The last time the company was updated
                        type: data_attribute
                        name: updated_at
                        full_name: updated_at
                        label: Updated at
                        data_type: date
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: The Intercom defined id representing the plan
                        type: data_attribute
                        name: id
                        full_name: plan.id
                        label: Plan ID
                        data_type: string
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
                      - description: The Intercom defined id representing the app
                        type: data_attribute
                        name: app_id
                        full_name: app_id
                        label: App ID
                        data_type: string
                        api_writable: false
                        ui_writable: false
                        messenger_writable: true
                        custom: false
                        archived: false
                        model: company
              schema:
                $ref: '#/components/schemas/data_attribute_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: bb0253e1-663e-4e6f-b931-56cb6ba081a8
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Data Attributes
      summary: Create a data attribute
      operationId: DataAttributes_createDataAttribute
      description: You can create a data attributes for a `contact` or a `company`.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_data_attribute_request'
            examples:
              successful:
                summary: Successful
                value:
                  name: Mithril Shirt
                  model: company
                  data_type: string
              same_name_already_exists:
                summary: Same name already exists
                value:
                  name: The One Ring
                  model: contact
                  data_type: integer
              invalid_name:
                summary: Invalid name
                value:
                  name: '!nv@l!d n@me'
                  model: company
                  data_type: string
              attribute_already_exists:
                summary: Attribute already exists
                value:
                  name: The One Ring
                  model: company
                  data_type: string
              invalid_data_type:
                summary: Invalid Data Type
                value:
                  name: The Second Ring
                  model: company
                  data_type: mithril
              too_few_options_for_list:
                summary: Too few options for list
                value:
                  description: Just a plain old ring
                  options:
                    - value: 1-10
                  archived: false
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    id: 37
                    type: data_attribute
                    name: Mithril Shirt
                    full_name: custom_attributes.Mithril Shirt
                    label: Mithril Shirt
                    data_type: string
                    api_writable: true
                    ui_writable: false
                    messenger_writable: true
                    custom: true
                    archived: false
                    admin_id: '991267543'
                    created_at: 1709726578
                    updated_at: 1709726578
                    model: company
              schema:
                $ref: '#/components/schemas/data_attribute'
        '400':
          description: Too few options for list
          content:
            application/json:
              examples:
                Same name already exists:
                  value:
                    type: error.list
                    request_id: 51183689-4e7f-4176-a28d-d7ff58b51916
                    errors:
                      - code: parameter_invalid
                        message: >-
                          You already have 'The One Ring' in your company data.
                          To save this as new people data, use a different name.
                Invalid name:
                  value:
                    type: error.list
                    request_id: 7c31bef7-0636-499d-b865-eb6e9505ea7f
                    errors:
                      - code: parameter_invalid
                        message: >-
                          Your name for this attribute must only contain
                          alphanumeric characters, currency symbols, and hyphens
                Attribute already exists:
                  value:
                    type: error.list
                    request_id: 99ca86f2-7bd1-486f-9f98-e5bc39f082bf
                    errors:
                      - code: parameter_invalid
                        message: >-
                          You already have 'The One Ring' in your company data.
                          To save this as new company data, use a different
                          name.
                Invalid Data Type:
                  value:
                    type: error.list
                    request_id: 36b5ca98-f310-4ce5-948c-6b8019c189c1
                    errors:
                      - code: parameter_invalid
                        message: Data Type isn't an option
                Too few options for list:
                  value:
                    type: error.list
                    request_id: 305f8af3-97f4-44c3-a742-28dcbee7c8e6
                    errors:
                      - code: parameter_invalid
                        message: >-
                          The Data Attribute model field must be either contact
                          or company
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 698eead6-b4fe-411b-be65-0cd9ee4805f7
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /data_attributes/{id}:
    put:
      tags:
        - Data Attributes
      summary: Update a data attribute
      operationId: DataAttributes_updateAttributeById
      description: >

        You can update a data attribute.


        > 🚧 Updating the data type is not possible

        >

        > It is currently a dangerous action to execute changing a data
        attribute's type via the API. You will need to update the type via the
        UI instead.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The data attribute id
          name: id
          in: path
          required: true
          example: 1
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_data_attribute_request'
            examples:
              successful:
                summary: Successful
                value:
                  description: Just a plain old ring
                  options:
                    - value: 1-10
                    - value: 11-20
                  archived: false
              too_few_options_in_list:
                summary: Too few options in list
                value:
                  description: Too few options
                  options:
                    value: 1-10
                  archived: false
              attribute_not_found:
                summary: Attribute Not Found
                value:
                  description: Just a plain old ring
                  options:
                    - value: 1-10
                    - value: 11-20
                  archived: false
              has_dependant_object:
                summary: Has Dependant Object
                value:
                  description: Trying to archieve
                  archived: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    description: Just a plain old ring
                    id: 44
                    type: data_attribute
                    name: The One Ring
                    full_name: custom_attributes.The One Ring
                    label: The One Ring
                    data_type: string
                    options:
                      - 1-10
                      - 11-20
                    api_writable: true
                    ui_writable: false
                    messenger_writable: true
                    custom: true
                    archived: false
                    admin_id: '991267550'
                    created_at: 1709726581
                    updated_at: 1709726581
                    model: company
              schema:
                $ref: '#/components/schemas/data_attribute'
        '400':
          description: Too few options in list
          content:
            application/json:
              examples:
                Too few options in list:
                  value:
                    type: error.list
                    request_id: 4abd84fc-831f-42b0-a3b4-b0a216b33635
                    errors:
                      - code: parameter_invalid
                        message: Options isn't an array
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 804b8146-8d55-49ee-8104-2cbaeed9fcc3
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Attribute Not Found
          content:
            application/json:
              examples:
                Attribute Not Found:
                  value:
                    type: error.list
                    request_id: 0d982642-3139-43a1-9b6c-fe782e1a4e8b
                    errors:
                      - code: field_not_found
                        message: We couldn't find that data attribute to update
              schema:
                $ref: '#/components/schemas/error'
        '422':
          description: Has Dependant Object
          content:
            application/json:
              examples:
                Has Dependant Object:
                  value:
                    type: error.list
                    request_id: 27a352e2-8bb0-4447-bdf3-1944052b5e80
                    errors:
                      - code: data_invalid
                        message: >-
                          The Data Attribute you are trying to archive has a
                          dependant object
              schema:
                $ref: '#/components/schemas/error'
  /events:
    post:
      tags:
        - Data Events
      summary: Submit a data event
      operationId: DataEvents_submitEvent
      description: >+

        You will need an Access Token that has write permissions to send Events.
        Once you have a key you can submit events via POST to the Events
        resource, which is located at https://api.intercom.io/events, or you can
        send events using one of the client libraries. When working with the
        HTTP API directly a client should send the event with a `Content-Type`
        of `application/json`.


        When using the JavaScript API, [adding the code to your
        app](http://docs.intercom.io/configuring-Intercom/tracking-user-events-in-your-app)
        makes the Events API available. Once added, you can submit an event
        using the `trackEvent` method. This will associate the event with the
        Lead or currently logged-in user or logged-out visitor/lead and send it
        to Intercom. The final parameter is a map that can be used to send
        optional metadata about the event.


        With the Ruby client you pass a hash describing the event to
        `Intercom::Event.create`, or call the `track_user` method directly on
        the current user object (e.g. `user.track_event`).


        **NB: For the JSON object types, please note that we do not currently
        support nested JSON structure.**


        | Type            |
        Description                                                                                                                                                                                                    
        |
        Example                                                                          
        |

        | :-------------- |
        :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        |
        :--------------------------------------------------------------------------------
        |

        | String          | The value is a JSON
        String                                                                                                                                                                                     
        |
        `"source":"desktop"`                                                             
        |

        | Number          | The value is a JSON
        Number                                                                                                                                                                                     
        | `"load":
        3.67`                                                                   
        |

        | Date            | The key ends with the String `_date` and the value
        is a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time), assumed
        to be in the
        [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time) timezone.
        | `"contact_date":
        1392036272`                                                      |

        | Link            | The value is a HTTP or HTTPS
        URI.                                                                                                                                                                              
        | `"article":
        "https://example.org/ab1de.html"`                                     |

        | Rich Link       | The value is a JSON object that contains `url` and
        `value`
        keys.                                                                                                                                               
        | `"article": {"url": "https://example.org/ab1de.html", "value":"the
        dude abides"}` |

        | Monetary Amount | The value is a JSON object that contains `amount`
        and `currency` keys. The `amount` key is a positive integer representing
        the amount in cents. The price in the example to the right denotes
        €349.99.          | `"price": {"amount": 34999, "currency":
        "eur"}`                                   |


        **Lead Events**


        When submitting events for Leads, you will need to specify the Lead's
        `id`.


        **Metadata behaviour**


        - We currently limit the number of tracked metadata keys to 10 per
        event. Once the quota is reached, we ignore any further keys we receive.
        The first 10 metadata keys are determined by the order in which they are
        sent in with the event.

        - It is not possible to change the metadata keys once the event has been
        sent. A new event will need to be created with the new keys and you can
        archive the old one.

        - There might be up to 24 hrs delay when you send a new metadata for an
        existing event.


        **Event de-duplication**


        The API may detect and ignore duplicate events. Each event is uniquely
        identified as a combination of the following data - the Workspace
        identifier, the Contact external identifier, the Data Event name and the
        Data Event created time. As a result, it is **strongly recommended** to
        send a second granularity Unix timestamp in the `created_at` field.


        Duplicated events are responded to using the normal `202 Accepted` code
        - an error is not thrown, however repeat requests will be counted
        against any rate limit that is in place.


        ### HTTP API Responses


        - Successful responses to submitted events return `202 Accepted` with an
        empty body.

        - Unauthorised access will be rejected with a `401 Unauthorized` or `403
        Forbidden` response code.

        - Events sent about users that cannot be found will return a `404 Not
        Found`.

        - Event lists containing duplicate events will have those duplicates
        ignored.

        - Server errors will return a `500` response code and may contain an
        error message in the body.

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_data_event_request'
      responses:
        '202':
          description: successful
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 0ff0b9cc-6cd4-413d-bd39-c1989ced82fa
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - Data Events
      summary: List all data events
      operationId: DataEvents_listUserEvents
      description: >

        > 🚧

        >

        > Please note that you can only 'list' events that are less than 90 days
        old. Event counts and summaries will still include your events older
        than 90 days but you cannot 'list' these events individually if they are
        older than 90 days


        The events belonging to a customer can be listed by sending a GET
        request to `https://api.intercom.io/events` with a user or lead
        identifier along with a `type` parameter. The identifier parameter can
        be one of `user_id`, `email` or `intercom_user_id`. The `type` parameter
        value must be `user`.


        - `https://api.intercom.io/events?type=user&user_id={user_id}`

        - `https://api.intercom.io/events?type=user&email={email}`

        - `https://api.intercom.io/events?type=user&intercom_user_id={id}` (this
        call can be used to list leads)


        The `email` parameter value should be [url
        encoded](http://en.wikipedia.org/wiki/Percent-encoding) when sending.


        You can optionally define the result page size as well with the
        `per_page` parameter.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - in: query
          name: filter
          required: true
          style: form
          explode: true
          schema:
            type: object
            oneOf:
              - title: user_id query parameter
                properties:
                  user_id:
                    type: string
                required:
                  - user_id
                additionalProperties: false
              - title: intercom_user_id query parameter
                properties:
                  intercom_user_id:
                    type: string
                required:
                  - intercom_user_id
                additionalProperties: false
              - title: email query parameter
                properties:
                  email:
                    type: string
                required:
                  - email
                additionalProperties: false
        - description: The value must be user
          name: type
          in: query
          required: true
          schema:
            type: string
        - description: summary flag
          name: summary
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: event.summary
                    events: []
                    pages:
                      next: http://api.intercom.test/events?next page
                    email: user26@email.com
                    intercom_user_id: 65e85b7a6abd01fdcb4c70eb
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
              schema:
                $ref: '#/components/schemas/data_event_summary'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: d3b54910-aeb4-42af-b142-a74b7bf7e2c6
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /events/summaries:
    post:
      tags:
        - Data Events
      summary: Create event summaries
      operationId: DataEvents_createEventSummaries
      description: >+
        Create event summaries for a user. Event summaries are used to track the
        number of times an event has occurred, the first time it occurred and
        the last time it occurred.

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_data_event_summaries_request'
      responses:
        '200':
          description: successful
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: b2550c99-8c2d-4acb-a62f-d6258f022e8c
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /export/content/data:
    post:
      tags:
        - Data Export
      summary: Create content data export
      operationId: DataExport_createContentExport
      description: >
        To create your export job, you need to send a `POST` request to the
        export endpoint `https://api.intercom.io/export/content/data`.


        The only parameters you need to provide are the range of dates that you
        want exported.


        >🚧 Limit of one active job

        >

        > You can only have one active job per workspace. You will receive a
        HTTP status code of 429 with the message Exceeded rate limit of 1
        pending message data export jobs if you attempt to create a second
        concurrent job.


        >❗️ Updated_at not included

        >

        > It should be noted that the timeframe only includes messages sent
        during the time period and not messages that were only updated during
        this period. For example, if a message was updated yesterday but sent
        two days ago, you would need to set the created_at_after date before the
        message was sent to include that in your retrieval job.


        >📘 Date ranges are inclusive

        >

        > Requesting data for 2018-06-01 until 2018-06-30 will get all data for
        those days including those specified - e.g. 2018-06-01 00:00:00 until
        2018-06-30 23:59:99.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_data_exports_request'
            examples:
              successful:
                summary: successful
                value:
                  created_at_after: 1709708588
                  created_at_before: 1709726588
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    job_identifier: lsv24vbsep0joc2y
                    status: pending
                    download_url: ''
                    download_expires_at: ''
              schema:
                $ref: '#/components/schemas/data_export'
  /export/content/data/{job_identifier}:
    get:
      tags:
        - Data Export
      summary: Show content data export
      operationId: DataExport_statusByJobIdentifier
      description: >
        You can view the status of your job by sending a `GET` request to the
        URL

        `https://api.intercom.io/export/content/data/{job_identifier}` - the
        `{job_identifier}` is the value returned in the response when you first
        created the export job. More on it can be seen in the Export Job Model.


        > 🚧 Jobs expire after two days

        > All jobs that have completed processing (and are thus available to
        download from the provided URL) will have an expiry limit of two days
        from when the export ob completed. After this, the data will no longer
        be available.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: job_identifier
          name: job_identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    job_identifier: q997do2647e69xxs
                    status: pending
                    download_url: ''
                    download_expires_at: ''
              schema:
                $ref: '#/components/schemas/data_export'
  /export/cancel/{job_identifier}:
    post:
      tags:
        - Data Export
      summary: Cancel content data export
      operationId: DataExport_cancelJob
      description: You can cancel your job
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: job_identifier
          name: job_identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    job_identifier: xu9bwcevvpah7rb6
                    status: canceled
                    download_url: ''
                    download_expires_at: ''
              schema:
                $ref: '#/components/schemas/data_export'
  /download/content/data/{job_identifier}:
    get:
      tags:
        - Data Export
      summary: Download content data export
      operationId: DataExport_downloadDataExport
      description: >
        When a job has a status of complete, and thus a filled download_url, you
        can download your data by hitting that provided URL, formatted like so:
        https://api.intercom.io/download/content/data/xyz1234.


        Your exported message data will be streamed continuously back down to
        you in a gzipped CSV format.


        > 📘 Octet header required

        >

        > You will have to specify the header Accept: `application/octet-stream`
        when hitting this endpoint.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: job_identifier
          name: job_identifier
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
  /messages:
    post:
      tags:
        - Messages
      summary: Create a message
      operationId: Messages_createMessage
      description: >
        You can create a message that has been initiated by an admin. The
        conversation can be either an in-app message or an email.


        > 🚧 Sending for visitors

        >

        > There can be a short delay between when a contact is created and when
        a contact becomes available to be messaged through the API. A 404 Not
        Found error will be returned in this case.


        This will return the Message model that has been created.


        > 🚧 Retrieving Associated Conversations

        >

        > As this is a message, there will be no conversation present until the
        contact responds. Once they do, you will have to search for a contact's
        conversations with the id of the message.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_message_request'
            examples:
              user_message_created:
                summary: user message created
                value:
                  from:
                    type: user
                    id: 65e85b7f6abd01fdcb4c70f0
                  body: heyy
                  referer: https://twitter.com/bob
              lead_message_created:
                summary: lead message created
                value:
                  from:
                    type: lead
                    id: 65e85b806abd01fdcb4c70f1
                  body: heyy
                  referer: https://twitter.com/bob
              admin_message_created:
                summary: admin message created
                value:
                  from:
                    type: admin
                    id: 991267573X
                  to:
                    type: user
                    id: 65e85b816abd01fdcb4c70f2
                  message_type: conversation
                  body: heyy
              no_body_supplied_for_message:
                summary: No body supplied for message
                value:
                  from:
                    type: admin
                    id: '991267575'
                  to:
                    type: user
                    id: 65e85b826abd01fdcb4c70f3
                  message_type: inapp
                  body: null
                  subject: heyy
              no_subject_supplied_for_email_message:
                summary: No subject supplied for email message
                value:
                  from:
                    type: admin
                    id: '991267576'
                  to:
                    type: user
                    user_id: '70'
                  message_type: email
                  body: hey there
              no_body_supplied_for_email_message:
                summary: No body supplied for email message
                value:
                  from:
                    type: admin
                    id: '991267577'
                  to:
                    type: user
                    id: 65e85b836abd01fdcb4c70f5
                  message_type: email
                  body: null
                  subject: heyy
      responses:
        '200':
          description: admin message created
          content:
            application/json:
              examples:
                user message created:
                  value:
                    type: user_message
                    id: '403918303'
                    created_at: 1709726591
                    body: heyy
                    message_type: inapp
                    conversation_id: '410'
                lead message created:
                  value:
                    type: user_message
                    id: '403918304'
                    created_at: 1709726592
                    body: heyy
                    message_type: inapp
                    conversation_id: '411'
                admin message created:
                  value:
                    type: admin_message
                    id: '15'
                    created_at: 1709726593
                    subject: heyy
                    body: heyy
                    message_type: inapp
                    owner:
                      type: admin
                      id: '991267573'
                      name: Ciaran265 Lee
                      email: admin265@email.com
                      away_mode_enabled: false
                      away_mode_reassign: false
              schema:
                $ref: '#/components/schemas/message'
        '400':
          description: No body supplied for email message
          content:
            application/json:
              examples:
                No body supplied for message:
                  value:
                    type: error.list
                    request_id: 923785a7-e6f0-4987-9f94-4b029b30d531
                    errors:
                      - code: parameter_invalid
                        message: Body is required
                No body supplied for email message:
                  value:
                    type: error.list
                    request_id: 25fa5242-66e2-4703-a2d2-e5e2d57b9f6a
                    errors:
                      - code: parameter_invalid
                        message: Body is required
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 36c203ed-836f-46a1-ab3a-c86572486059
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '403':
          description: API plan restricted
          content:
            application/json:
              examples:
                API plan restricted:
                  value:
                    type: error.list
                    request_id: ec8bee0b-3263-4529-9a44-45c7431fbb75
                    errors:
                      - code: api_plan_restricted
                        message: Active subscription needed.
              schema:
                $ref: '#/components/schemas/error'
        '422':
          description: No subject supplied for email message
          content:
            application/json:
              examples:
                No subject supplied for email message:
                  value:
                    type: error.list
                    request_id: 2b198bb9-e0ae-47f5-918a-824b2eefbd2d
                    errors:
                      - code: parameter_not_found
                        message: No subject supplied for email message
              schema:
                $ref: '#/components/schemas/error'
  /news/news_items:
    get:
      tags:
        - News
      summary: List all news items
      operationId: News_listAllNewsItems
      description: You can fetch a list of all news items
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    pages:
                      page: 1
                      per_page: 10
                      total_pages: 1
                      type: pages
                    data:
                      - title: We have news
                        id: 29X
                        type: news-item
                        workspace_id: this_is_an_id479_that_should_be_at_least_
                        body: <p>Hello there,</p>
                        sender_id: 991267582
                        state: draft
                        labels: []
                        cover_image_url: null
                        reactions:
                          - null
                          - null
                          - null
                          - null
                        deliver_silently: false
                        created_at: 1709726597
                        updated_at: 1709726597
                        newsfeed_assignments: []
                      - title: We have news
                        id: '30'
                        type: news-item
                        workspace_id: this_is_an_id479_that_should_be_at_least_
                        body: <p>Hello there,</p>
                        sender_id: 991267584
                        state: draft
                        labels: []
                        cover_image_url: null
                        reactions:
                          - null
                          - null
                          - null
                          - null
                        deliver_silently: false
                        created_at: 1709726597
                        updated_at: 1709726597
                        newsfeed_assignments: []
                    total_count: 2
              schema:
                $ref: '#/components/schemas/paginated_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: e0346253-9924-4597-b9c4-bc6006a9bfc9
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - News
      summary: Create a news item
      operationId: News_createNewsItem
      description: You can create a news item
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/news_item_request'
            examples:
              successful:
                summary: successful
                value:
                  title: Halloween is here!
                  body: <p>New costumes in store for this spooky season</p>
                  labels:
                    - Product
                    - Update
                    - New
                  sender_id: 991267591
                  deliver_silently: true
                  reactions:
                    - 😆
                    - 😅
                  state: live
                  newsfeed_assignments:
                    - newsfeed_id: 53
                      published_at: 1664638214
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    title: Halloween is here!
                    id: '33'
                    type: news-item
                    workspace_id: this_is_an_id483_that_should_be_at_least_
                    body: <p>New costumes in store for this spooky season</p>
                    sender_id: 991267591
                    state: live
                    labels:
                      - New
                      - Product
                      - Update
                    cover_image_url: null
                    reactions:
                      - 😆
                      - 😅
                    deliver_silently: true
                    created_at: 1709726599
                    updated_at: 1709726599
                    newsfeed_assignments:
                      - newsfeed_id: 53
                        published_at: 1664638214
              schema:
                $ref: '#/components/schemas/news_item'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: fa5db6b8-4875-49c0-a6aa-9f93a216711b
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /news/news_items/{id}:
    get:
      tags:
        - News
      summary: Retrieve a news item
      operationId: News_getItem
      description: You can fetch the details of a single news item.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the news item which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    title: We have news
                    id: 34X
                    type: news-item
                    workspace_id: this_is_an_id487_that_should_be_at_least_
                    body: <p>Hello there,</p>
                    sender_id: 991267594
                    state: live
                    labels: []
                    cover_image_url: null
                    reactions:
                      - null
                      - null
                      - null
                      - null
                    deliver_silently: false
                    created_at: 1709726600
                    updated_at: 1709726600
                    newsfeed_assignments:
                      - newsfeed_id: 55
                        published_at: 1709726600
              schema:
                $ref: '#/components/schemas/news_item'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 76489021-a45b-48bb-b0de-32afb5bfd944
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: News Item Not Found
          content:
            application/json:
              examples:
                News Item Not Found:
                  value:
                    type: error.list
                    request_id: 3dc1b248-4bcd-48dd-bfa6-a3d95830afbb
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - News
      summary: Update a news item
      operationId: News_updateNewsItem
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the news item which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/news_item_request'
            examples:
              successful:
                summary: successful
                value:
                  title: Christmas is here!
                  body: <p>New gifts in store for the jolly season</p>
                  sender_id: 991267602
                  reactions:
                    - 😝
                    - 😂
              news_item_not_found:
                summary: News Item Not Found
                value:
                  title: Christmas is here!
                  body: <p>New gifts in store for the jolly season</p>
                  sender_id: 991267605
                  reactions:
                    - 😝
                    - 😂
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    title: Christmas is here!
                    id: '37'
                    type: news-item
                    workspace_id: this_is_an_id493_that_should_be_at_least_
                    body: <p>New gifts in store for the jolly season</p>
                    sender_id: 991267602
                    state: live
                    labels: []
                    cover_image_url: null
                    reactions:
                      - 😝
                      - 😂
                    deliver_silently: false
                    created_at: 1709726602
                    updated_at: 1709726603
                    newsfeed_assignments: []
              schema:
                $ref: '#/components/schemas/news_item'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 426edc96-b25c-432f-9de1-696969f0fb99
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: News Item Not Found
          content:
            application/json:
              examples:
                News Item Not Found:
                  value:
                    type: error.list
                    request_id: aadce446-f1b0-4873-ac90-e8c481fd9892
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - News
      summary: Delete a news item
      operationId: News_deleteItem
      description: You can delete a single news item.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the news item which is given by Intercom.
          name: id
          in: path
          required: true
          example: 123
          schema:
            type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '40'
                    object: news-item
                    deleted: true
              schema:
                $ref: '#/components/schemas/deleted_object'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 632da097-8eb0-4d11-8254-71dfafc239c6
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: News Item Not Found
          content:
            application/json:
              examples:
                News Item Not Found:
                  value:
                    type: error.list
                    request_id: ba0b333b-e221-4b1c-b493-7b7024b1532d
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /news/newsfeeds/{id}/items:
    get:
      tags:
        - News
      summary: List all live newsfeed items
      operationId: News_listLiveItems
      description: You can fetch a list of all news items that are live on a given newsfeed
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The unique identifier for the news feed item which is given by
            Intercom.
          name: id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    pages:
                      page: 1
                      per_page: 20
                      total_pages: 0
                      type: pages
                    data: []
                    total_count: 0
              schema:
                $ref: '#/components/schemas/paginated_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 9fe7016b-4edc-47bb-950a-7d4d9796a18f
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /news/newsfeeds:
    get:
      tags:
        - News
      summary: List all newsfeeds
      operationId: News_listAllNewsfeeds
      description: You can fetch a list of all newsfeeds
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    pages:
                      page: 1
                      per_page: 10
                      total_pages: 1
                      type: pages
                    data:
                      - id: '68'
                        type: newsfeed
                        name: Visitor Feed
                        created_at: 1709726608
                        updated_at: 1709726608
                      - id: '69'
                        type: newsfeed
                        name: Visitor Feed
                        created_at: 1709726608
                        updated_at: 1709726608
                    total_count: 2
              schema:
                $ref: '#/components/schemas/paginated_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 9aa76efc-24e2-4381-b009-fa37c3b565e2
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /news/newsfeeds/{id}:
    get:
      tags:
        - News
      summary: Retrieve a newsfeed
      operationId: News_getNewsfeed
      description: You can fetch the details of a single newsfeed
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The unique identifier for the news feed item which is given by
            Intercom.
          name: id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    id: '72'
                    type: newsfeed
                    name: Visitor Feed
                    created_at: 1709726609
                    updated_at: 1709726609
              schema:
                $ref: '#/components/schemas/newsfeed'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: ffcb9841-fd33-4baf-98bc-2b36992e5e22
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /notes/{id}:
    get:
      tags:
        - Notes
      summary: Retrieve a note
      operationId: Notes_getNoteDetails
      description: You can fetch the details of a single note.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier of a given note
          name: id
          in: path
          required: true
          example: 1
          schema:
            type: integer
      responses:
        '200':
          description: Note found
          content:
            application/json:
              examples:
                Note found:
                  value:
                    type: note
                    id: 37X
                    created_at: 1709035409
                    contact:
                      type: contact
                      id: 65e85b916abd01fdcb4c70f8
                    author:
                      type: admin
                      id: '991267621'
                      name: Ciaran312 Lee
                      email: admin312@email.com
                      away_mode_enabled: false
                      away_mode_reassign: false
                    body: <p>This is a note.</p>
              schema:
                $ref: '#/components/schemas/note'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: d74ea5e7-6903-4059-8a1c-cf19aa4eb6f2
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Note not found
          content:
            application/json:
              examples:
                Note not found:
                  value:
                    type: error.list
                    request_id: 6d655de5-0e32-482b-99c1-79b9a1d4453d
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /segments:
    get:
      tags:
        - Segments
      summary: List all segments
      operationId: Segments_listAll
      description: You can fetch a list of all segments.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: It includes the count of contacts that belong to each segment.
          name: include_count
          in: query
          required: false
          example: true
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: segment.list
                    segments:
                      - type: segment
                        id: 65e85b936abd01fdcb4c70fb
                        name: John segment
                        created_at: 1709726611
                        updated_at: 1709726611
                        person_type: user
                      - type: segment
                        id: 65e85b936abd01fdcb4c70fc
                        name: Jane segment
                        created_at: 1709726611
                        updated_at: 1709726611
                        person_type: user
              schema:
                $ref: '#/components/schemas/segment_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 460c5d13-c652-4629-a8e6-7452567869fa
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /segments/{id}:
    get:
      tags:
        - Segments
      summary: Retrieve a segment
      operationId: Segments_getById
      description: You can fetch the details of a single segment.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identified of a given segment.
          name: id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: segment
                    id: 65e85b946abd01fdcb4c70ff
                    name: John segment
                    created_at: 1709726612
                    updated_at: 1709726612
                    person_type: user
              schema:
                $ref: '#/components/schemas/segment'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: cdb3682d-ee80-4c91-9f4a-8ccdb22846b2
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Segment not found
          content:
            application/json:
              examples:
                Segment not found:
                  value:
                    type: error.list
                    request_id: dffac172-ec8f-4fb5-b8da-59004cae64fb
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /subscription_types:
    get:
      tags:
        - Subscription Types
      summary: List subscription types
      operationId: SubscriptionTypes_list
      description: >-
        You can list all subscription types. A list of subscription type objects
        will be returned.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              examples:
                Successful:
                  value:
                    type: list
                    data:
                      - type: subscription
                        id: '137'
                        state: live
                        consent_type: opt_out
                        default_translation:
                          description: Lorem ipsum dolor sit amet
                          name: Newsletters
                          locale: en
                        translations:
                          - description: Lorem ipsum dolor sit amet
                            name: Newsletters
                            locale: en
                        content_types:
                          - email
              schema:
                $ref: '#/components/schemas/subscription_type_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: f4951576-bb28-42e9-8c50-b887edca8383
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /phone_call_redirects:
    post:
      tags:
        - Switch
      summary: Create a phone Switch
      operationId: Switch_deflectPhoneCalls
      description: >
        You can use the API to deflect phone calls to the Intercom Messenger.

        Calling this endpoint will send an SMS with a link to the Messenger to
        the phone number specified.


        If custom attributes are specified, they will be added to the user or
        lead's custom data attributes.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_phone_switch_request'
            examples:
              successful:
                summary: successful
                value:
                  phone: '+353832345678'
                  custom_attributes:
                    issue_type: Billing
                    priority: High
              bad_request_-_exception_sending_sms:
                summary: bad request - exception sending sms
                value:
                  phone: '+353832345678'
                  custom_attributes:
                    issue_type: Billing
                    priority: High
              bad_request_-_invalid_number:
                summary: bad request - invalid number
                value:
                  phone: '+353832345678'
                  custom_attributes:
                    issue_type: Billing
                    priority: High
              unprocessable_entity:
                summary: unprocessable entity
                value:
                  phone: '+40241100100'
                  custom_attributes:
                    issue_type: Billing
                    priority: High
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    url: >-
                      http://via.intercom.io/msgr/ac527dbe-597b-4394-8792-0c7d01d6e6a0
                    type: phone_call_redirect
              schema:
                $ref: '#/components/schemas/phone_switch'
        '400':
          description: bad request - invalid number
          content:
            application/json:
              examples:
                bad request - exception sending sms:
                  value:
                    error_key: sms_failed
                    message: SMS was not sent due to an unknown error
                bad request - invalid number:
                  value:
                    error_key: invalid_phone_number
                    message: Invalid phone number
              schema:
                $ref: '#/components/schemas/SwitchDeflectPhoneCallsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 17da0a10-532c-4ab8-ad8c-b99a6d518e2a
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '422':
          description: unprocessable entity
          content:
            application/json:
              examples:
                unprocessable entity:
                  value:
                    error_key: some_error
              schema:
                $ref: '#/components/schemas/SwitchDeflectPhoneCalls422Response'
  /tags:
    get:
      tags:
        - Tags
      summary: List all tags
      operationId: Tags_getAllTags
      description: |+
        You can fetch a list of all tags for a given workspace.

      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    data:
                      - type: tag
                        id: '105'
                        name: Manual tag 1
              schema:
                $ref: '#/components/schemas/tag_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 979e8097-e55d-478e-a95e-407858cc5e0a
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Tags
      summary: Create or update a tag, Tag or untag companies, Tag contacts
      operationId: Tags_createOrUpdateTag
      description: |
        You can use this endpoint to perform the following operations:

          **1. Create a new tag:** You can create a new tag by passing in the tag name as specified in "Create or Update Tag Request Payload" described below.

          **2. Update an existing tag:** You can update an existing tag by passing the id of the tag as specified in "Create or Update Tag Request Payload" described below.

          **3. Tag Companies:** You can tag single company or a list of companies. You can tag a company by passing in the tag name and the company details as specified in "Tag Company Request Payload" described below. Also, if the tag doesn't exist then a new one will be created automatically.

          **4. Untag Companies:** You can untag a single company or a list of companies. You can untag a company by passing in the tag id and the company details as specified in "Untag Company Request Payload" described below.

          **5. Tag Multiple Users:** You can tag a list of users. You can tag the users by passing in the tag name and the user details as specified in "Tag Users Request Payload" described below.

        Each operation will return a tag object.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsCreateOrUpdateTagRequest'
            examples:
              action_successful:
                summary: Action successful
                value:
                  name: test
              invalid_parameters:
                summary: Invalid parameters
                value:
                  test: invalid
              company_not_found:
                summary: Company not found
                value:
                  name: test
                  companies:
                    - company_id: '123'
              user_not_found:
                summary: User  not found
                value:
                  name: test
                  users:
                    - id: 123X
      responses:
        '200':
          description: Action successful
          content:
            application/json:
              examples:
                Action successful:
                  value:
                    type: tag
                    id: 108X
                    name: test
              schema:
                $ref: '#/components/schemas/tag'
        '400':
          description: Invalid parameters
          content:
            application/json:
              examples:
                Invalid parameters:
                  value:
                    type: error.list
                    request_id: c248e7a1-4a9c-415a-ab2a-04d699329c5f
                    errors:
                      - code: parameter_invalid
                        message: invalid tag parameters
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: c02a2f47-c884-490d-bbec-dd9c43771f6e
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: User  not found
          content:
            application/json:
              examples:
                Company not found:
                  value:
                    type: error.list
                    request_id: 7aaa958a-2a03-419c-ba9f-4a66d2b8b64f
                    errors:
                      - code: company_not_found
                        message: Company Not Found
                User  not found:
                  value:
                    type: error.list
                    request_id: 3106de00-0d52-46e4-9cb1-9b880e87d864
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
  /tags/{id}:
    get:
      tags:
        - Tags
      summary: Find a specific tag
      operationId: Tags_findSpecificTag
      description: |
        You can fetch the details of tags that are on the workspace by their id.
        This will return a tag object.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier of a given tag
          name: id
          in: path
          example: '123'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tag found
          content:
            application/json:
              examples:
                Tag found:
                  value:
                    type: tag
                    id: '116'
                    name: Manual tag
              schema:
                $ref: '#/components/schemas/tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: d07afff3-483c-417f-9463-d3698c11dd68
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Tag not found
          content:
            application/json:
              examples:
                Tag not found:
                  value:
                    type: error.list
                    request_id: b8db66c8-1438-486e-87e2-cd87163681e7
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Tags
      summary: Delete tag
      operationId: Tags_deleteTagById
      description: >-
        You can delete the details of tags that are on the workspace by passing
        in the id.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier of a given tag
          name: id
          in: path
          example: '123'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
        '400':
          description: Tag has dependent objects
          content:
            application/json:
              examples:
                Tag has dependent objects:
                  value:
                    type: error.list
                    request_id: bbd30d32-85c1-42b8-ad76-ab48b90b6dea
                    errors:
                      - code: tag_has_dependent_objects
                        message: >-
                          Unable to delete Tag with dependent objects. Segments:
                          Seg 1.
              schema:
                $ref: '#/components/schemas/error'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 3c5149d1-26fd-4f97-beac-118c6896fcd4
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Resource not found
          content:
            application/json:
              examples:
                Resource not found:
                  value:
                    type: error.list
                    request_id: 7065d038-4e02-4d01-90be-4d169e705ea9
                    errors:
                      - code: not_found
                        message: Resource Not Found
              schema:
                $ref: '#/components/schemas/error'
  /teams:
    get:
      tags:
        - Teams
      summary: List all teams
      operationId: Teams_getAll
      description: This will return a list of team objects for the App.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: team.list
                    teams: []
              schema:
                $ref: '#/components/schemas/team_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: f18d7fd9-4eb3-48d6-9d38-939361402696
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /teams/{id}:
    get:
      tags:
        - Teams
      summary: Retrieve a team
      operationId: Teams_getDetails
      description: >-
        You can fetch the details of a single team, containing an array of
        admins that belong to this team.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier of a given team.
          name: id
          in: path
          required: true
          example: '123'
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: team
                    id: '991267659'
                    name: team 1
                    admin_ids: []
              schema:
                $ref: '#/components/schemas/team'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 545387ad-23f9-4dc9-89e8-c698c0890c56
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Team not found
          content:
            application/json:
              examples:
                Team not found:
                  value:
                    type: error.list
                    request_id: b6334271-3f6e-49fb-b517-f5b7080af746
                    errors:
                      - code: team_not_found
                        message: Team not found
              schema:
                $ref: '#/components/schemas/error'
  /ticket_types/{ticket_type_id}/attributes:
    post:
      tags:
        - Ticket Type Attributes
      summary: Create a new attribute for a ticket type
      operationId: TicketTypeAttributes_createNewAttribute
      description: You can create a new attribute for a ticket type.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The unique identifier for the ticket type which is given by
            Intercom.
          name: ticket_type_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ticket_type_attribute_request'
            examples:
              ticket_type_attribute_created:
                summary: Ticket Type Attribute created
                value:
                  description: Attribute Description
                  name: Attribute Title
                  data_type: string
                  required_to_create: false
      responses:
        '200':
          description: Ticket Type Attribute created
          content:
            application/json:
              examples:
                Ticket Type Attribute created:
                  value:
                    description: Attribute Description
                    type: ticket_type_attribute
                    id: '151'
                    workspace_id: this_is_an_id585_that_should_be_at_least_
                    name: Attribute Title
                    data_type: string
                    input_options:
                      multiline: false
                    order: 2
                    required_to_create: false
                    required_to_create_for_contacts: false
                    visible_on_create: true
                    visible_to_contacts: true
                    default: false
                    ticket_type_id: 45
                    archived: false
                    created_at: 1709726630
                    updated_at: 1709726630
              schema:
                $ref: '#/components/schemas/ticket_type_attribute'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 4ec9cc00-d2a1-4185-b497-369a291647df
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /ticket_types/{ticket_type_id}/attributes/{id}:
    put:
      tags:
        - Ticket Type Attributes
      summary: Update an existing attribute for a ticket type
      operationId: TicketTypeAttributes_updateExistingAttribute
      description: You can update an existing attribute for a ticket type.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The unique identifier for the ticket type which is given by
            Intercom.
          name: ticket_type_id
          in: path
          required: true
          schema:
            type: string
        - description: >-
            The unique identifier for the ticket type attribute which is given
            by Intercom.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ticket_type_attribute_request'
            examples:
              ticket_type_attribute_updated:
                summary: Ticket Type Attribute updated
                value:
                  description: New Attribute Description
      responses:
        '200':
          description: Ticket Type Attribute updated
          content:
            application/json:
              examples:
                Ticket Type Attribute updated:
                  value:
                    description: New Attribute Description
                    type: ticket_type_attribute
                    id: '156'
                    workspace_id: this_is_an_id589_that_should_be_at_least_
                    name: name
                    data_type: string
                    order: 0
                    required_to_create: false
                    required_to_create_for_contacts: false
                    visible_on_create: false
                    visible_to_contacts: false
                    default: false
                    ticket_type_id: 47
                    archived: false
                    created_at: 1709726631
                    updated_at: 1709726632
              schema:
                $ref: '#/components/schemas/ticket_type_attribute'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 76574bd0-2045-4f18-8542-0a740dd4c23e
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /ticket_types:
    get:
      tags:
        - Ticket Types
      summary: List all ticket types
      operationId: TicketTypes_listAll
      description: You can get a list of all ticket types for a workspace.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    type: list
                    data:
                      - description: Bug Report Template
                        type: ticket_type
                        id: '49'
                        name: Bug Report
                        icon: 🎟️
                        workspace_id: this_is_an_id593_that_should_be_at_least_
                        archived: false
                        created_at: 1709726632
                        updated_at: 1709726632
                        is_internal: false
                        ticket_type_attributes:
                          type: list
                          data:
                            - description: ''
                              type: ticket_type_attribute
                              id: '159'
                              workspace_id: this_is_an_id593_that_should_be_at_least_
                              name: _default_title_
                              data_type: string
                              input_options:
                                multiline: false
                              order: 0
                              required_to_create: false
                              required_to_create_for_contacts: false
                              visible_on_create: true
                              visible_to_contacts: true
                              default: true
                              ticket_type_id: 49
                              archived: false
                              created_at: 1709726632
                              updated_at: 1709726632
                            - description: description
                              type: ticket_type_attribute
                              id: '161'
                              workspace_id: this_is_an_id593_that_should_be_at_least_
                              name: name
                              data_type: string
                              input_options: null
                              order: 0
                              required_to_create: false
                              required_to_create_for_contacts: false
                              visible_on_create: false
                              visible_to_contacts: false
                              default: false
                              ticket_type_id: 49
                              archived: false
                              created_at: 1709726632
                              updated_at: 1709726632
                            - description: ''
                              type: ticket_type_attribute
                              id: '160'
                              workspace_id: this_is_an_id593_that_should_be_at_least_
                              name: _default_description_
                              data_type: string
                              input_options:
                                multiline: true
                              order: 1
                              required_to_create: false
                              required_to_create_for_contacts: false
                              visible_on_create: true
                              visible_to_contacts: true
                              default: true
                              ticket_type_id: 49
                              archived: false
                              created_at: 1709726632
                              updated_at: 1709726632
              schema:
                $ref: '#/components/schemas/ticket_type_list'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: d039c562-cd2d-4f89-a69b-48514c7c47fa
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    post:
      tags:
        - Ticket Types
      summary: Create a ticket type
      operationId: TicketTypes_createNewType
      description: >
        You can create a new ticket type.

        > 📘 Creating ticket types.

        >

        > Every ticket type will be created with two default attributes:
        _default_title_ and _default_description_.

        > For the `icon` propery, use an emoji from [Twemoji
        Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ticket_type_request'
            examples:
              ticket_type_created:
                summary: Ticket type created
                value:
                  description: Customer Report Template
                  name: Customer Issue
                  icon: 🎟️
      responses:
        '200':
          description: Ticket type created
          content:
            application/json:
              examples:
                Ticket type created:
                  value:
                    description: Customer Report Template
                    type: ticket_type
                    id: 52X
                    name: Customer Issue
                    icon: 🎟️
                    workspace_id: this_is_an_id597_that_should_be_at_least_
                    archived: false
                    created_at: 1709726634
                    updated_at: 1709726634
                    is_internal: false
                    ticket_type_attributes:
                      type: list
                      data:
                        - description: ''
                          type: ticket_type_attribute
                          id: '168'
                          workspace_id: this_is_an_id597_that_should_be_at_least_
                          name: _default_title_
                          data_type: string
                          input_options:
                            multiline: false
                          order: 0
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: true
                          visible_to_contacts: true
                          default: true
                          ticket_type_id: 52
                          archived: false
                          created_at: 1709726634
                          updated_at: 1709726634
                        - description: ''
                          type: ticket_type_attribute
                          id: '169'
                          workspace_id: this_is_an_id597_that_should_be_at_least_
                          name: _default_description_
                          data_type: string
                          input_options:
                            multiline: true
                          order: 1
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: true
                          visible_to_contacts: true
                          default: true
                          ticket_type_id: 52
                          archived: false
                          created_at: 1709726634
                          updated_at: 1709726634
              schema:
                $ref: '#/components/schemas/ticket_type'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 893456c2-3882-4f8c-a549-e1f8d1938735
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /ticket_types/{id}:
    get:
      tags:
        - Ticket Types
      summary: Retrieve a ticket type
      operationId: TicketTypes_getDetails
      description: You can fetch the details of a single ticket type.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The unique identifier for the ticket type which is given by
            Intercom.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ticket type found
          content:
            application/json:
              examples:
                Ticket type found:
                  value:
                    description: Bug Report Template
                    type: ticket_type
                    id: '54'
                    name: Bug Report
                    icon: 🎟️
                    workspace_id: this_is_an_id601_that_should_be_at_least_
                    archived: false
                    created_at: 1709726635
                    updated_at: 1709726635
                    is_internal: false
                    ticket_type_attributes:
                      type: list
                      data:
                        - description: ''
                          type: ticket_type_attribute
                          id: '173'
                          workspace_id: this_is_an_id601_that_should_be_at_least_
                          name: _default_title_
                          data_type: string
                          input_options:
                            multiline: false
                          order: 0
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: true
                          visible_to_contacts: true
                          default: true
                          ticket_type_id: 54
                          archived: false
                          created_at: 1709726635
                          updated_at: 1709726635
                        - description: description
                          type: ticket_type_attribute
                          id: '175'
                          workspace_id: this_is_an_id601_that_should_be_at_least_
                          name: name
                          data_type: string
                          input_options: null
                          order: 0
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: false
                          visible_to_contacts: false
                          default: false
                          ticket_type_id: 54
                          archived: false
                          created_at: 1709726635
                          updated_at: 1709726635
                        - description: ''
                          type: ticket_type_attribute
                          id: '174'
                          workspace_id: this_is_an_id601_that_should_be_at_least_
                          name: _default_description_
                          data_type: string
                          input_options:
                            multiline: true
                          order: 1
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: true
                          visible_to_contacts: true
                          default: true
                          ticket_type_id: 54
                          archived: false
                          created_at: 1709726635
                          updated_at: 1709726635
              schema:
                $ref: '#/components/schemas/ticket_type'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 4d7e3fe1-c5f5-4ab5-ba87-ded8c7c46fd5
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
    put:
      tags:
        - Ticket Types
      summary: Update a ticket type
      operationId: TicketTypes_updateTicketTypeById
      description: >

        You can update a ticket type.


        > 📘 Updating a ticket type.

        >

        > For the `icon` propery, use an emoji from [Twemoji
        Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: >-
            The unique identifier for the ticket type which is given by
            Intercom.
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ticket_type_request'
            examples:
              ticket_type_updated:
                summary: Ticket type updated
                value:
                  name: Bug Report 2
      responses:
        '200':
          description: Ticket type updated
          content:
            application/json:
              examples:
                Ticket type updated:
                  value:
                    description: Bug Report Template
                    type: ticket_type
                    id: 56X
                    name: Bug Report 2
                    icon: 🎟️
                    workspace_id: this_is_an_id605_that_should_be_at_least_
                    archived: false
                    created_at: 1709726636
                    updated_at: 1709726636
                    is_internal: false
                    ticket_type_attributes:
                      type: list
                      data:
                        - description: ''
                          type: ticket_type_attribute
                          id: '179'
                          workspace_id: this_is_an_id605_that_should_be_at_least_
                          name: _default_title_
                          data_type: string
                          input_options:
                            multiline: false
                          order: 0
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: true
                          visible_to_contacts: true
                          default: true
                          ticket_type_id: 56
                          archived: false
                          created_at: 1709726636
                          updated_at: 1709726636
                        - description: description
                          type: ticket_type_attribute
                          id: '181'
                          workspace_id: this_is_an_id605_that_should_be_at_least_
                          name: name
                          data_type: string
                          input_options: null
                          order: 0
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: false
                          visible_to_contacts: false
                          default: false
                          ticket_type_id: 56
                          archived: false
                          created_at: 1709726636
                          updated_at: 1709726636
                        - description: ''
                          type: ticket_type_attribute
                          id: '180'
                          workspace_id: this_is_an_id605_that_should_be_at_least_
                          name: _default_description_
                          data_type: string
                          input_options:
                            multiline: true
                          order: 1
                          required_to_create: false
                          required_to_create_for_contacts: false
                          visible_on_create: true
                          visible_to_contacts: true
                          default: true
                          ticket_type_id: 56
                          archived: false
                          created_at: 1709726636
                          updated_at: 1709726636
              schema:
                $ref: '#/components/schemas/ticket_type'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: e6eaa7dc-2f2d-4d32-a31b-fae7c09c7eb8
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /tickets/{id}/reply:
    post:
      tags:
        - Tickets
      summary: Reply to a ticket
      operationId: Tickets_replyNote
      description: You can reply to a ticket with a note from an admin.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - name: id
          in: path
          required: true
          schema:
            title: Ticket ID
            description: The id of the ticket to target.
            type: string
            example: '123'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ticket_reply_request'
            examples:
              admin_note_reply:
                summary: Admin note reply
                value:
                  message_type: note
                  type: admin
                  admin_id: 991267685
                  body: >-
                    <html> <body>  <h2>An Unordered HTML List</h2>  <ul>  
                    <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>   
                    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>  
                    <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>
      responses:
        '200':
          description: Admin note reply
          content:
            application/json:
              examples:
                Admin note reply:
                  value:
                    type: ticket_part
                    id: '80'
                    part_type: note
                    body: |-
                      <h2>An Unordered HTML List</h2>
                      <ul>
                      <li>Coffee</li>
                      <li>Tea</li>
                      <li>Milk</li>
                      </ul>
                      <h2>An Ordered HTML List</h2>
                      <ol>
                      <li>Coffee</li>
                      <li>Tea</li>
                      <li>Milk</li>
                      </ol>
                    created_at: 1709726639
                    updated_at: 1709726639
                    author:
                      id: '991267685'
                      type: admin
                      name: Ciaran371 Lee
                      email: admin371@email.com
                    attachments: []
                    redacted: false
              schema:
                $ref: '#/components/schemas/ticket_note'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: c0da453f-d025-4f4f-9d71-3c672b924cf3
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /tickets:
    post:
      tags:
        - Tickets
      summary: Create a ticket
      operationId: Tickets_createNewTicket
      description: You can create a new ticket.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_ticket_request'
            examples:
              successful_response:
                summary: Successful response
                value:
                  ticket_type_id: 63
                  contacts:
                    - id: 65e85bb26abd01fdcb4c7122X
                  ticket_attributes:
                    title: example
                    description: there is a problem
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: ticket
                    id: '414'
                    ticket_attributes:
                      title: example
                      description: there is a problem
                    ticket_state: submitted
                    ticket_type:
                      description: my ticket type description is awesome.
                      type: ticket_type
                      id: 63X
                      name: my-ticket-type-6
                      icon: 🦁
                      workspace_id: this_is_an_id619_that_should_be_at_least_
                      archived: false
                      created_at: 1709726642
                      updated_at: 1709726642
                      is_internal: false
                      ticket_type_attributes:
                        type: list
                        data:
                          - description: ola
                            type: ticket_type_attribute
                            id: '191'
                            workspace_id: this_is_an_id619_that_should_be_at_least_
                            name: title
                            data_type: string
                            input_options: null
                            order: 0
                            required_to_create: true
                            required_to_create_for_contacts: false
                            visible_on_create: true
                            visible_to_contacts: false
                            default: false
                            ticket_type_id: 63
                            archived: false
                            created_at: 1709726642
                            updated_at: 1709726642
                          - description: ola
                            type: ticket_type_attribute
                            id: 192X
                            workspace_id: this_is_an_id619_that_should_be_at_least_
                            name: description
                            data_type: string
                            input_options: null
                            order: 0
                            required_to_create: true
                            required_to_create_for_contacts: false
                            visible_on_create: true
                            visible_to_contacts: false
                            default: false
                            ticket_type_id: 63
                            archived: false
                            created_at: 1709726642
                            updated_at: 1709726642
                    contacts:
                      type: contact.list
                      contacts:
                        - id: 65e85bb26abd01fdcb4c7122
                          role: user
                    admin_assignee_id: '0'
                    team_assignee_id: '0'
                    created_at: 1709726643
                    updated_at: 1709726643
                    ticket_parts:
                      type: ticket_part.list
                      ticket_parts:
                        - type: ticket_part
                          id: '81'
                          part_type: ticket_state_updated_by_admin
                          ticket_state: submitted
                          previous_ticket_state: submitted
                          created_at: 1709726643
                          updated_at: 1709726643
                          author:
                            id: '991267705'
                            type: bot
                            name: Operator
                            email: >-
                              operator+this_is_an_id619_that_should_be_at_least_@intercom.io
                          attachments: []
                          redacted: false
                      total_count: 1
              schema:
                $ref: '#/components/schemas/ticket'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 5fd6ee74-76e0-4a3a-9805-7f3c4dc802f1
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /tickets/{id}:
    put:
      tags:
        - Tickets
      summary: Update a ticket
      operationId: Tickets_updateTicketById
      description: You can update a ticket.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the ticket which is given by Intercom
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_ticket_request'
            examples:
              successful_response:
                summary: Successful response
                value:
                  ticket_attributes:
                    title: example
                    description: there is a problem
                  state: in_progress
                  assignment:
                    admin_id: '991267717'
                    assignee_id: '991267719'
                  open: true
                  snoozed_until: 1673609604
              admin_not_found:
                summary: Admin not found
                value:
                  ticket_attributes:
                    title: example
                    description: there is a problem
                  state: in_progress
                  assignment:
                    admin_id: '123'
                    assignee_id: '991267727'
              assignee_not_found:
                summary: Assignee not found
                value:
                  ticket_attributes:
                    title: example
                    description: there is a problem
                  state: in_progress
                  assignment:
                    admin_id: '991267733'
                    assignee_id: '456'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              examples:
                Successful response:
                  value:
                    type: ticket
                    id: '415'
                    ticket_attributes:
                      title: example
                      description: there is a problem
                    ticket_state: in_progress
                    ticket_type:
                      description: my ticket type description is awesome.
                      type: ticket_type
                      id: 65X
                      name: my-ticket-type-8
                      icon: 🦁
                      workspace_id: this_is_an_id623_that_should_be_at_least_
                      archived: false
                      created_at: 1709726644
                      updated_at: 1709726644
                      is_internal: false
                      ticket_type_attributes:
                        type: list
                        data:
                          - description: ola
                            type: ticket_type_attribute
                            id: '196'
                            workspace_id: this_is_an_id623_that_should_be_at_least_
                            name: title
                            data_type: string
                            input_options: null
                            order: 0
                            required_to_create: true
                            required_to_create_for_contacts: false
                            visible_on_create: true
                            visible_to_contacts: false
                            default: false
                            ticket_type_id: 65
                            archived: false
                            created_at: 1709726645
                            updated_at: 1709726645
                          - description: ola
                            type: ticket_type_attribute
                            id: '197'
                            workspace_id: this_is_an_id623_that_should_be_at_least_
                            name: description
                            data_type: string
                            input_options: null
                            order: 0
                            required_to_create: true
                            required_to_create_for_contacts: false
                            visible_on_create: true
                            visible_to_contacts: false
                            default: false
                            ticket_type_id: 65
                            archived: false
                            created_at: 1709726645
                            updated_at: 1709726645
                    contacts:
                      type: contact.list
                      contacts:
                        - id: 65e85bb56abd01fdcb4c7123
                          role: lead
                    admin_assignee_id: '991267719'
                    team_assignee_id: '0'
                    created_at: 1709726645
                    updated_at: 1709726647
                    ticket_parts:
                      type: ticket_part.list
                      ticket_parts:
                        - type: ticket_part
                          id: '82'
                          part_type: ticket_state_updated_by_admin
                          ticket_state: submitted
                          previous_ticket_state: submitted
                          created_at: 1709726645
                          updated_at: 1709726645
                          author:
                            id: '991267717'
                            type: admin
                            name: Ciaran401 Lee
                            email: admin401@email.com
                          attachments: []
                          redacted: false
                        - type: ticket_part
                          id: 83X
                          part_type: ticket_attribute_updated_by_admin
                          created_at: 1709726647
                          updated_at: 1709726647
                          author:
                            id: '991267718'
                            type: bot
                            name: Operator
                            email: >-
                              operator+this_is_an_id623_that_should_be_at_least_@intercom.io
                          attachments: []
                          redacted: false
                        - type: ticket_part
                          id: 84X
                          part_type: ticket_attribute_updated_by_admin
                          created_at: 1709726647
                          updated_at: 1709726647
                          author:
                            id: 991267718X
                            type: bot
                            name: Operator
                            email: >-
                              operator+this_is_an_id623_that_should_be_at_least_@intercom.io
                          attachments: []
                          redacted: false
                        - type: ticket_part
                          id: '85'
                          part_type: ticket_state_updated_by_admin
                          ticket_state: in_progress
                          previous_ticket_state: submitted
                          created_at: 1709726647
                          updated_at: 1709726647
                          author:
                            id: 991267718X
                            type: bot
                            name: Operator
                            email: >-
                              operator+this_is_an_id623_that_should_be_at_least_@intercom.io
                          attachments: []
                          redacted: false
                        - type: ticket_part
                          id: '86'
                          part_type: assignment
                          created_at: 1709726647
                          updated_at: 1709726647
                          assigned_to:
                            type: admin
                            id: '991267719'
                          author:
                            id: 991267717X
                            type: admin
                            name: Ciaran401 Lee
                            email: admin401@email.com
                          attachments: []
                          redacted: false
                      total_count: 5
              schema:
                $ref: '#/components/schemas/ticket'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: f774d9cd-b5e7-47aa-bd82-72ca6d02b650
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Assignee not found
          content:
            application/json:
              examples:
                Admin not found:
                  value:
                    type: error.list
                    request_id: 7277cfdc-7edc-4448-95f2-761f4c35ae29
                    errors:
                      - code: assignee_not_found
                        message: Assignee not found
                Assignee not found:
                  value:
                    type: error.list
                    request_id: bf8839ff-4f4d-408e-98f8-8c4c2c928ec4
                    errors:
                      - code: assignee_not_found
                        message: Assignee not found
              schema:
                $ref: '#/components/schemas/TicketsUpdateTicketByIdResponse'
    get:
      tags:
        - Tickets
      summary: Retrieve a ticket
      operationId: Tickets_getTicketDetails
      description: You can fetch the details of a single ticket.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The unique identifier for the ticket which is given by Intercom.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Ticket found
          content:
            application/json:
              examples:
                Ticket found:
                  value:
                    type: ticket
                    id: '418'
                    ticket_attributes:
                      title: attribute_value
                      description: null
                    ticket_state: submitted
                    ticket_type:
                      description: my ticket type description is awesome.
                      type: ticket_type
                      id: 69X
                      name: my-ticket-type-12
                      icon: 🦁
                      workspace_id: this_is_an_id631_that_should_be_at_least_
                      archived: false
                      created_at: 1709726653
                      updated_at: 1709726653
                      is_internal: false
                      ticket_type_attributes:
                        type: list
                        data:
                          - description: ola
                            type: ticket_type_attribute
                            id: '207'
                            workspace_id: this_is_an_id631_that_should_be_at_least_
                            name: title
                            data_type: string
                            input_options: null
                            order: 0
                            required_to_create: true
                            required_to_create_for_contacts: false
                            visible_on_create: true
                            visible_to_contacts: false
                            default: false
                            ticket_type_id: 69
                            archived: false
                            created_at: 1709726653
                            updated_at: 1709726653
                          - description: ola
                            type: ticket_type_attribute
                            id: '208'
                            workspace_id: this_is_an_id631_that_should_be_at_least_
                            name: description
                            data_type: string
                            input_options: null
                            order: 0
                            required_to_create: true
                            required_to_create_for_contacts: false
                            visible_on_create: true
                            visible_to_contacts: false
                            default: false
                            ticket_type_id: 69
                            archived: false
                            created_at: 1709726654
                            updated_at: 1709726654
                    contacts:
                      type: contact.list
                      contacts:
                        - id: 65e85bbe6abd01fdcb4c7126
                          role: lead
                    admin_assignee_id: '0'
                    team_assignee_id: '0'
                    created_at: 1709726654
                    updated_at: 1709726655
                    ticket_parts:
                      type: ticket_part.list
                      ticket_parts:
                        - type: ticket_part
                          id: 89X
                          part_type: ticket_state_updated_by_admin
                          ticket_state: submitted
                          previous_ticket_state: submitted
                          created_at: 1709726655
                          updated_at: 1709726655
                          author:
                            id: '991267746'
                            type: admin
                            name: Ciaran427 Lee
                            email: admin427@email.com
                          attachments: []
                          redacted: false
                      total_count: 1
              schema:
                $ref: '#/components/schemas/ticket'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 8b9c0277-ab7d-4826-bb46-3eeda42bdd7c
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
  /visitors:
    put:
      tags:
        - Visitors
      summary: Update a visitor
      operationId: Visitors_updateExistingVisitor
      description: >
        Sending a PUT request to `/visitors` will result in an update of an
        existing Visitor.


        **Option 1.** You can update a visitor by passing in the `user_id` of
        the visitor in the Request body.


        **Option 2.** You can update a visitor by passing in the `id` of the
        visitor in the Request body.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_visitor_request'
            examples:
              successful:
                summary: successful
                value:
                  id: 65e85bc26abd01fdcb4c7129X
                  name: Gareth Bale
              visitor_not_found:
                summary: visitor Not Found
                value:
                  user_id: fail
                  name: Christian Fail
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    id: 65e85bc26abd01fdcb4c7129
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    anonymous: true
                    email: ''
                    phone: null
                    name: Gareth Bale
                    pseudonym: Cyan Accordion
                    avatar:
                      type: avatar
                      image_url: >-
                        https://static.intercomassets.com/app/pseudonym_avatars_2019/cyan-accordion.png
                    app_id: this_is_an_id638_that_should_be_at_least_
                    companies:
                      type: company.list
                      companies: []
                    location_data: {}
                    last_request_at: null
                    created_at: 1709726658
                    remote_created_at: 1709726658
                    signed_up_at: 1709726658
                    updated_at: 1709726658
                    session_count: 0
                    social_profiles:
                      type: social_profile.list
                      social_profiles: []
                    owner_id: null
                    unsubscribed_from_emails: false
                    marked_email_as_spam: false
                    has_hard_bounced: false
                    segments:
                      type: segment.list
                      segments: []
                    custom_attributes: {}
                    referrer: null
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    do_not_track: null
              schema:
                $ref: '#/components/schemas/visitor'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 0f4627e9-f586-42ac-9274-98032e2a55ac
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: visitor Not Found
          content:
            application/json:
              examples:
                visitor Not Found:
                  value:
                    type: error.list
                    request_id: 33be345e-0f00-4b6f-9402-060546da7c96
                    errors:
                      - code: not_found
                        message: Visitor Not Found
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - Visitors
      summary: Retrieve a visitor with User ID
      operationId: Visitors_getWithUserId
      description: You can fetch the details of a single visitor.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: The user_id of the Visitor you want to retrieve.
          name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    id: 65e85bc46abd01fdcb4c712f
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    anonymous: true
                    email: ''
                    phone: null
                    name: null
                    pseudonym: null
                    avatar:
                      type: avatar
                      image_url: null
                    app_id: this_is_an_id644_that_should_be_at_least_
                    companies:
                      type: company.list
                      companies: []
                    location_data: {}
                    last_request_at: null
                    created_at: 1709726660
                    remote_created_at: 1709726660
                    signed_up_at: 1709726660
                    updated_at: 1709726660
                    session_count: 0
                    social_profiles:
                      type: social_profile.list
                      social_profiles: []
                    owner_id: null
                    unsubscribed_from_emails: false
                    marked_email_as_spam: false
                    has_hard_bounced: false
                    segments:
                      type: segment.list
                      segments: []
                    custom_attributes: {}
                    referrer: null
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    do_not_track: null
              schema:
                $ref: '#/components/schemas/visitor'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 4e28073f-e683-4903-aafe-ffdeb484f7e9
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Visitor not found
          content:
            application/json:
              examples:
                Visitor not found:
                  value:
                    type: error.list
                    request_id: 2c39da22-6f95-4910-8cfe-8c50eb0e871f
                    errors:
                      - code: not_found
                        message: Visitor Not Found
              schema:
                $ref: '#/components/schemas/error'
  /visitors/{id}:
    get:
      tags:
        - Visitors
      summary: Retrieve a visitor with ID
      operationId: Visitors_getById
      description: You can fetch the details of a single visitor.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: Id provided by Intercom.
          name: id
          in: path
          required: true
          example: 5e1c4c1c-7b1e-4b5d-8c1c-5e1c4c1c7b1e
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    id: 65e85bc56abd01fdcb4c7135
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    anonymous: true
                    email: ''
                    phone: null
                    name: null
                    pseudonym: null
                    avatar:
                      type: avatar
                      image_url: null
                    app_id: this_is_an_id650_that_should_be_at_least_
                    companies:
                      type: company.list
                      companies: []
                    location_data: {}
                    last_request_at: null
                    created_at: 1709726661
                    remote_created_at: 1709726661
                    signed_up_at: 1709726661
                    updated_at: 1709726661
                    session_count: 0
                    social_profiles:
                      type: social_profile.list
                      social_profiles: []
                    owner_id: null
                    unsubscribed_from_emails: false
                    marked_email_as_spam: false
                    has_hard_bounced: false
                    segments:
                      type: segment.list
                      segments: []
                    custom_attributes: {}
                    referrer: null
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    do_not_track: null
              schema:
                $ref: '#/components/schemas/visitor'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: e2d6ff8f-abac-4042-8f3a-50315108c079
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Visitor not found
          content:
            application/json:
              examples:
                Visitor not found:
                  value:
                    type: error.list
                    request_id: ffb51a81-34f4-4887-b350-726612245f98
                    errors:
                      - code: not_found
                        message: Visitor Not Found
              schema:
                $ref: '#/components/schemas/error'
    delete:
      tags:
        - Visitors
      summary: Delete a visitor
      operationId: Visitors_deleteVisitorById
      description: You can delete a single visitor.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
        - description: Id provided by Intercom.
          name: id
          in: path
          required: true
          example: 5e1c4c1c-7b1e-4b5d-8c1c-5e1c4c1c7b1e
          schema:
            type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      tags: []
                      type: tag.list
                    type: visitor
                    id: 65e85bc76abd01fdcb4c713b
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                    anonymous: true
                    email: ''
                    phone: null
                    name: null
                    pseudonym: null
                    avatar:
                      type: avatar
                      image_url: null
                    app_id: this_is_an_id656_that_should_be_at_least_
                    companies:
                      type: company.list
                      companies: []
                    location_data: {}
                    last_request_at: null
                    created_at: 1709726663
                    remote_created_at: 1709726663
                    signed_up_at: 1709726663
                    updated_at: 1709726664
                    session_count: 0
                    social_profiles:
                      type: social_profile.list
                      social_profiles: []
                    owner_id: null
                    unsubscribed_from_emails: false
                    marked_email_as_spam: false
                    has_hard_bounced: false
                    segments:
                      type: segment.list
                      segments: []
                    custom_attributes: {}
                    referrer: null
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    do_not_track: null
              schema:
                $ref: '#/components/schemas/visitor_deleted_object'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: d5769128-ebc0-4ee1-8ef8-7e317521a4bb
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
        '404':
          description: Visitor Not Found
          content:
            application/json:
              examples:
                Visitor Not Found:
                  value:
                    type: error.list
                    request_id: 304d0dfb-d46f-49a0-adc5-3ad7ae68d707
                    errors:
                      - code: not_found
                        message: User Not Found
              schema:
                $ref: '#/components/schemas/error'
  /visitors/convert:
    post:
      tags:
        - Visitors
      summary: Convert a visitor
      operationId: Visitors_convertVisitorToContact
      description: >
        You can merge a Visitor to a Contact of role type `lead` or `user`.


        > 📘 What happens upon a visitor being converted?

        >

        > If the User exists, then the Visitor will be merged into it, the
        Visitor deleted and the User returned. If the User does not exist, the
        Visitor will be converted to a User, with the User identifiers replacing
        it's Visitor identifiers.
      parameters:
        - name: Intercom-Version
          in: header
          schema:
            $ref: '#/components/schemas/intercom_version'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/convert_visitor_request'
            examples:
              successful:
                summary: successful
                value:
                  visitor:
                    user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
                  user:
                    email: foo@bar.com
                  type: user
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                successful:
                  value:
                    tags:
                      type: list
                      data: []
                      url: /contacts/65e85bca6abd01fdcb4c7142/tags
                      total_count: 0
                      has_more: false
                    type: contact
                    id: 65e85bca6abd01fdcb4c7142
                    workspace_id: this_is_an_id662_that_should_be_at_least_
                    external_id: null
                    role: user
                    email: foo@bar.com
                    phone: null
                    name: null
                    avatar: null
                    owner_id: null
                    social_profiles:
                      type: list
                      data: []
                    has_hard_bounced: false
                    marked_email_as_spam: false
                    unsubscribed_from_emails: false
                    created_at: 1709726666
                    updated_at: 1709726666
                    signed_up_at: 1709726665
                    last_seen_at: null
                    last_replied_at: null
                    last_contacted_at: null
                    last_email_opened_at: null
                    last_email_clicked_at: null
                    language_override: null
                    browser: null
                    browser_version: null
                    browser_language: null
                    os: null
                    location:
                      type: location
                      country: null
                      region: null
                      city: null
                      country_code: null
                      continent_code: null
                    android_app_name: null
                    android_app_version: null
                    android_device: null
                    android_os_version: null
                    android_sdk_version: null
                    android_last_seen_at: null
                    ios_app_name: null
                    ios_app_version: null
                    ios_device: null
                    ios_os_version: null
                    ios_sdk_version: null
                    ios_last_seen_at: null
                    custom_attributes: {}
                    notes:
                      type: list
                      data: []
                      url: /contacts/65e85bca6abd01fdcb4c7142/notes
                      total_count: 0
                      has_more: false
                    companies:
                      type: list
                      data: []
                      url: /contacts/65e85bca6abd01fdcb4c7142/companies
                      total_count: 0
                      has_more: false
                    opted_out_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85bca6abd01fdcb4c7142/subscriptions
                      total_count: 0
                      has_more: false
                    opted_in_subscription_types:
                      type: list
                      data: []
                      url: /contacts/65e85bca6abd01fdcb4c7142/subscriptions
                      total_count: 0
                      has_more: false
                    utm_campaign: null
                    utm_content: null
                    utm_medium: null
                    utm_source: null
                    utm_term: null
                    referrer: null
              schema:
                $ref: '#/components/schemas/contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Unauthorized:
                  value:
                    type: error.list
                    request_id: 87fb23bd-06f9-4f2c-8f7d-49c210378ae7
                    errors:
                      - code: unauthorized
                        message: Access Token Invalid
              schema:
                $ref: '#/components/schemas/error'
components:
  schemas:
    tags:
      title: Tags
      description: A list of tags objects associated with a conversation
      type: object
      properties:
        tags:
          description: A list of tags objects associated with the conversation.
          type: array
          items:
            $ref: '#/components/schemas/tag'
        type:
          description: The type of the object
          type: string
          enum:
            - tag.list
          example: tag.list
    activity_log:
      title: Activity Log
      description: Activities performed by admins.
      type: object
      nullable: true
      properties:
        id:
          description: The id representing the activity.
          type: string
          example: '6'
        performed_by:
          description: An object representing the admin who performed the activity.
          type: object
          properties:
            type:
              description: >-
                String representing the object's type. Always has the value
                `admin`.
              type: string
              example: admin
            id:
              description: The id representing the admin.
              type: string
              example: '1295'
            email:
              description: The email of the admin.
              type: string
              example: john@example.com
            ip:
              description: The IP address of the admin.
              type: string
              example: 198.51.100.255
        metadata:
          type: object
        created_at:
          description: The time the activity was created.
          type: integer
          format: date-time
          example: 1671028894
        activity_type:
          type: string
          enum:
            - admin_assignment_limit_change
            - admin_away_mode_change
            - admin_deletion
            - admin_deprovisioned
            - admin_impersonation_end
            - admin_impersonation_start
            - admin_invite_change
            - admin_invite_creation
            - admin_invite_deletion
            - admin_login_failure
            - admin_login_success
            - admin_logout
            - admin_password_reset_request
            - admin_password_reset_success
            - admin_permission_change
            - admin_provisioned
            - admin_two_factor_auth_change
            - admin_unauthorized_sign_in_method
            - app_admin_join
            - app_authentication_method_change
            - app_data_deletion
            - app_data_export
            - app_google_sso_domain_change
            - app_identity_verification_change
            - app_name_change
            - app_outbound_address_change
            - app_package_installation
            - app_package_token_regeneration
            - app_package_uninstallation
            - app_team_creation
            - app_team_deletion
            - app_team_membership_modification
            - app_timezone_change
            - app_webhook_creation
            - app_webhook_deletion
            - articles_in_messenger_enabled_change
            - bulk_delete
            - bulk_export
            - campaign_deletion
            - campaign_state_change
            - conversation_part_deletion
            - conversation_topic_change
            - conversation_topic_creation
            - conversation_topic_deletion
            - help_center_settings_change
            - inbound_conversations_change
            - inbox_access_change
            - message_deletion
            - message_state_change
            - messenger_look_and_feel_change
            - messenger_search_required_change
            - messenger_spaces_change
            - office_hours_change
            - role_change
            - role_creation
            - role_deletion
            - ruleset_activation_title_preview
            - ruleset_creation
            - ruleset_deletion
            - search_browse_enabled_change
            - search_browse_required_change
            - seat_change
            - seat_revoke
            - security_settings_change
            - temporary_expectation_change
            - upfront_email_collection_change
            - welcome_message_change
          example: app_name_change
        activity_description:
          description: A sentence or two describing the activity.
          type: string
          example: Admin updated the app's name to "My App".
    activity_log_list:
      title: Paginated Response
      description: A paginated list of activity logs.
      type: object
      properties:
        type:
          description: >-
            String representing the object's type. Always has the value
            `activity_log.list`.
          type: string
          example: activity_log.list
        pages:
          $ref: '#/components/schemas/cursor_pages'
        activity_logs:
          description: An array of activity logs
          type: array
          items:
            $ref: '#/components/schemas/activity_log'
    addressable_list:
      title: Addressable List
      description: A list used to access other resources from a parent model.
      type: object
      nullable: false
      properties:
        type:
          description: The addressable object type
          type: string
          format: uri
          example: note
        id:
          description: The id of the addressable object
          type: string
          example: '123'
        url:
          description: Url to get more company resources for this contact
          type: string
          format: uri
          example: /contacts/5ba682d23d7cf92bef87bfd4/notes
    admin:
      title: Admin
      description: Admins are teammate accounts that have access to a workspace.
      type: object
      x-tags:
        - Admins
      nullable: true
      properties:
        type:
          description: String representing the object's type. Always has the value `admin`.
          type: string
          example: admin
        id:
          description: The id representing the admin.
          type: string
          example: '1295'
        name:
          description: The name of the admin.
          type: string
          example: Hoban Washburne
        email:
          description: The email of the admin.
          type: string
          example: wash@serenity.io
        job_title:
          description: The job title of the admin.
          type: string
          example: Philosopher
        away_mode_enabled:
          description: Identifies if this admin is currently set in away mode.
          type: boolean
          example: false
        away_mode_reassign:
          description: >-
            Identifies if this admin is set to automatically reassign new
            conversations to the apps default inbox.
          type: boolean
          example: false
        has_inbox_seat:
          description: >-
            Identifies if this admin has a paid inbox seat to restrict/allow
            features that require them.
          type: boolean
          example: true
        team_ids:
          description: This object represents the avatar associated with the admin.
          type: array
          example:
            - 814865
          items:
            type: integer
        avatar:
          description: Image for the associated team or teammate
          type: string
          format: uri
          nullable: true
          example: https://picsum.photos/200/300
        team_priority_level:
          $ref: '#/components/schemas/team_priority_level'
    admin_list:
      title: Admins
      description: A list of admins associated with a given workspace.
      type: object
      properties:
        type:
          description: >-
            String representing the object's type. Always has the value
            `admin.list`.
          type: string
          example: admin.list
        admins:
          description: A list of admins associated with a given workspace.
          type: array
          items:
            $ref: '#/components/schemas/admin'
    admin_priority_level:
      title: Admin Priority Level
      description: Admin priority levels for the team
      type: object
      nullable: true
      properties:
        primary_admin_ids:
          description: The primary admin ids for the team
          type: array
          nullable: true
          example:
            - 493881
          items:
            type: integer
        secondary_admin_ids:
          description: The secondary admin ids for the team
          type: array
          nullable: true
          example:
            - 814865
          items:
            type: integer
    admin_reply_conversation_request:
      title: Admin Reply
      description: Payload of the request to reply on behalf of an admin
      type: object
      properties:
        message_type:
          type: string
          enum:
            - comment
            - note
        type:
          type: string
          enum:
            - admin
          example: admin
        body:
          description: >-
            The text body of the reply.\nNotes accept some HTML
            formatting.\nMust be present for comment and note message types.
          type: string
          example: Hello there!
        admin_id:
          description: The id of the admin who is authoring the comment.
          type: string
          example: '3156780'
        attachment_urls:
          description: >-
            A list of image URLs that will be added as attachments. You can
            include up to 5 URLs.
          type: array
          items:
            type: string
            format: uri
          maxItems: 5
        attachment_files:
          description: A list of files that will be added as attachments.
          type: array
          items:
            $ref: '#/components/schemas/conversation_attachment_files'
      required:
        - message_type
        - type
        - admin_id
    admin_with_app:
      title: Admin
      description: Admins are the teammate accounts that have access to a workspace
      type: object
      nullable: true
      properties:
        type:
          description: String representing the object's type. Always has the value `admin`.
          type: string
          example: admin
        id:
          description: The id representing the admin.
          type: string
          example: '1295'
        name:
          description: The name of the admin.
          type: string
          example: Hoban Washburne
        email:
          description: The email of the admin.
          type: string
          example: wash@serenity.io
        job_title:
          description: The job title of the admin.
          type: string
          example: Philosopher
        away_mode_enabled:
          description: Identifies if this admin is currently set in away mode.
          type: boolean
          example: false
        away_mode_reassign:
          description: >-
            Identifies if this admin is set to automatically reassign new
            conversations to the apps default inbox.
          type: boolean
          example: false
        has_inbox_seat:
          description: >-
            Identifies if this admin has a paid inbox seat to restrict/allow
            features that require them.
          type: boolean
          example: true
        team_ids:
          description: This is a list of ids of the teams that this admin is part of.
          type: array
          example:
            - 814865
          items:
            type: integer
        avatar:
          description: This object represents the avatar associated with the admin.
          type: object
          properties:
            type:
              description: >-
                This is a string that identifies the type of the object. It will
                always have the value `avatar`.
              type: string
              default: avatar
              example: avatar
            image_url:
              description: This object represents the avatar associated with the admin.
              type: string
              format: uri
              nullable: true
              example: https://example.com/avatar.png
        email_verified:
          description: Identifies if this admin's email is verified.
          type: boolean
          nullable: true
          example: true
        app:
          description: App that the admin belongs to.
          $ref: '#/components/schemas/app'
          nullable: true
    app:
      title: App
      description: App is a workspace on Intercom
      type: object
      nullable: true
      properties:
        type:
          description: ''
          type: string
          default: app
          example: app
        id_code:
          description: The id of the app.
          type: string
          example: xyz789
        name:
          description: The name of the app.
          type: string
          example: ACME
        region:
          description: The Intercom region the app is located in.
          type: string
          example: US
        timezone:
          description: The timezone of the region where the app is located.
          type: string
          example: America/Los_Angeles
        created_at:
          description: When the app was created.
          type: integer
          example: 1671465577
        identity_verification:
          description: Whether or not the app uses identity verification.
          type: boolean
          example: false
    article_content:
      title: Article Content
      description: The Content of an Article.
      type: object
      nullable: true
      properties:
        title:
          description: The title of the article.
          type: string
          example: How to create a new article
        description:
          description: The description of the article.
          type: string
          example: This article will show you how to create a new article.
        type:
          description: The type of object - `article_content` .
          type: string
          enum:
            - null
            - article_content
          example: article_content
          nullable: true
        body:
          description: The body of the article.
          type: string
          example: This is the body of the article.
        author_id:
          description: The ID of the author of the article.
          type: integer
          example: 5017691
        state:
          description: Whether the article is `published` or is a `draft` .
          type: string
          enum:
            - published
            - draft
          example: draft
        created_at:
          description: The time when the article was created.
          type: integer
          format: date-time
          example: 1663597223
        updated_at:
          description: The time when the article was last updated.
          type: integer
          format: date-time
          example: 1663597260
        url:
          description: The URL of the article.
          type: string
          example: http://intercom.test/help/en/articles/3-default-language
    article_list:
      title: Articles
      description: This will return a list of articles for the App.
      type: object
      properties:
        type:
          description: The type of the object - `list`.
          type: string
          enum:
            - list
          example: list
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of articles.
          type: integer
          example: 1
        data:
          description: An array of Article objects
          type: array
          items:
            $ref: '#/components/schemas/article_list_item'
    article_list_item:
      title: Articles
      description: The data returned about your articles when you list them.
      type: object
      x-tags:
        - Articles
      properties:
        title:
          description: >-
            The title of the article. For multilingual articles, this will be
            the title of the default language's content.
          type: string
          example: Default language title
        description:
          description: >-
            The description of the article. For multilingual articles, this will
            be the description of the default language's content.
          type: string
          nullable: true
          example: Default language description
        type:
          description: The type of object - `article`.
          type: string
          enum:
            - article
          default: article
          example: article
        id:
          description: The unique identifier for the article which is given by Intercom.
          type: string
          example: '6871119'
        workspace_id:
          description: The id of the workspace which the article belongs to.
          type: string
          example: hfi1bx4l
        body:
          description: >-
            The body of the article in HTML. For multilingual articles, this
            will be the body of the default language's content.
          type: string
          nullable: true
          example: Default language body in html
        author_id:
          description: >-
            The id of the author of the article. For multilingual articles, this
            will be the id of the author of the default language's content. Must
            be a teammate on the help center's workspace.
          type: integer
          example: 5017691
        state:
          description: >-
            Whether the article is `published` or is a `draft`. For multilingual
            articles, this will be the state of the default language's content.
          type: string
          enum:
            - published
            - draft
          default: draft
          example: published
        created_at:
          description: >-
            The time when the article was created. For multilingual articles,
            this will be the timestamp of creation of the default language's
            content.
          type: integer
          format: date-time
          example: 1672928359
        updated_at:
          description: >-
            The time when the article was last updated. For multilingual
            articles, this will be the timestamp of last update of the default
            language's content.
          type: integer
          format: date-time
          example: 1672928610
        url:
          description: >-
            The URL of the article. For multilingual articles, this will be the
            URL of the default language's content.
          type: string
          nullable: true
          example: http://intercom.test/help/en/articles/3-default-language
        parent_id:
          description: >-
            The id of the article's parent collection or section. An article
            without this field stands alone.
          type: integer
          nullable: true
          example: 125685
        parent_ids:
          description: >-
            The ids of the article's parent collections or sections. An article
            without this field stands alone.
          type: array
          items:
            type: integer
          example:
            - 18
            - 19
        parent_type:
          description: The type of parent, which can either be a `collection` or `section`.
          type: string
          nullable: true
          example: collection
        default_locale:
          description: >-
            The default locale of the help center. This field is only returned
            for multilingual help centers.
          type: string
          example: en
        translated_content:
          nullable: true
          $ref: '#/components/schemas/article_translated_content'
    article_statistics:
      title: Article Statistics
      description: The statistics of an article.
      type: object
      nullable: true
      properties:
        type:
          description: The type of object - `article_statistics`.
          type: string
          enum:
            - article_statistics
          default: article_statistics
          example: article_statistics
        views:
          description: The number of total views the article has received.
          type: integer
          example: 10
        conversions:
          description: The number of conversations started from the article.
          type: integer
          example: 0
        reactions:
          description: The number of total reactions the article has received.
          type: integer
          example: 10
        happy_reaction_percentage:
          description: >-
            The percentage of happy reactions the article has received against
            other types of reaction.
          type: number
          format: float
          example: 40
        neutral_reaction_percentage:
          description: >-
            The percentage of neutral reactions the article has received against
            other types of reaction.
          type: number
          format: float
          example: 40
        sad_reaction_percentage:
          description: >-
            The percentage of sad reactions the article has received against
            other types of reaction.
          type: number
          format: float
          example: 20
    article_translated_content:
      title: Article Translated Content
      description: >-
        The Translated Content of an Article. The keys are the locale codes and
        the values are the translated content of the article.
      type: object
      nullable: true
      properties:
        type:
          description: The type of object - article_translated_content.
          type: string
          enum:
            - null
            - article_translated_content
          example: article_translated_content
          nullable: true
        ar:
          description: The content of the article in Arabic
          $ref: '#/components/schemas/article_content'
        bg:
          description: The content of the article in Bulgarian
          $ref: '#/components/schemas/article_content'
        bs:
          description: The content of the article in Bosnian
          $ref: '#/components/schemas/article_content'
        ca:
          description: The content of the article in Catalan
          $ref: '#/components/schemas/article_content'
        cs:
          description: The content of the article in Czech
          $ref: '#/components/schemas/article_content'
        da:
          description: The content of the article in Danish
          $ref: '#/components/schemas/article_content'
        de:
          description: The content of the article in German
          $ref: '#/components/schemas/article_content'
        el:
          description: The content of the article in Greek
          $ref: '#/components/schemas/article_content'
        en:
          description: The content of the article in English
          $ref: '#/components/schemas/article_content'
        es:
          description: The content of the article in Spanish
          $ref: '#/components/schemas/article_content'
        et:
          description: The content of the article in Estonian
          $ref: '#/components/schemas/article_content'
        fi:
          description: The content of the article in Finnish
          $ref: '#/components/schemas/article_content'
        fr:
          description: The content of the article in French
          $ref: '#/components/schemas/article_content'
        he:
          description: The content of the article in Hebrew
          $ref: '#/components/schemas/article_content'
        hr:
          description: The content of the article in Croatian
          $ref: '#/components/schemas/article_content'
        hu:
          description: The content of the article in Hungarian
          $ref: '#/components/schemas/article_content'
        id:
          description: The content of the article in Indonesian
          $ref: '#/components/schemas/article_content'
        it:
          description: The content of the article in Italian
          $ref: '#/components/schemas/article_content'
        ja:
          description: The content of the article in Japanese
          $ref: '#/components/schemas/article_content'
        ko:
          description: The content of the article in Korean
          $ref: '#/components/schemas/article_content'
        lt:
          description: The content of the article in Lithuanian
          $ref: '#/components/schemas/article_content'
        lv:
          description: The content of the article in Latvian
          $ref: '#/components/schemas/article_content'
        mn:
          description: The content of the article in Mongolian
          $ref: '#/components/schemas/article_content'
        nb:
          description: The content of the article in Norwegian
          $ref: '#/components/schemas/article_content'
        nl:
          description: The content of the article in Dutch
          $ref: '#/components/schemas/article_content'
        pl:
          description: The content of the article in Polish
          $ref: '#/components/schemas/article_content'
        pt:
          description: The content of the article in Portuguese (Portugal)
          $ref: '#/components/schemas/article_content'
        ro:
          description: The content of the article in Romanian
          $ref: '#/components/schemas/article_content'
        ru:
          description: The content of the article in Russian
          $ref: '#/components/schemas/article_content'
        sl:
          description: The content of the article in Slovenian
          $ref: '#/components/schemas/article_content'
        sr:
          description: The content of the article in Serbian
          $ref: '#/components/schemas/article_content'
        sv:
          description: The content of the article in Swedish
          $ref: '#/components/schemas/article_content'
        tr:
          description: The content of the article in Turkish
          $ref: '#/components/schemas/article_content'
        vi:
          description: The content of the article in Vietnamese
          $ref: '#/components/schemas/article_content'
        pt-BR:
          description: The content of the article in Portuguese (Brazil)
          $ref: '#/components/schemas/article_content'
        zh-CN:
          description: The content of the article in Chinese (China)
          $ref: '#/components/schemas/article_content'
        zh-TW:
          description: The content of the article in Chinese (Taiwan)
          $ref: '#/components/schemas/article_content'
    assign_conversation_request:
      title: Assign Conversation Request
      description: Payload of the request to assign a conversation
      type: object
      properties:
        message_type:
          type: string
          enum:
            - assignment
          example: assignment
        type:
          type: string
          enum:
            - admin
            - team
          example: admin
        admin_id:
          description: The id of the admin who is performing the action.
          type: string
          example: '12345'
        assignee_id:
          description: >-
            The `id`` of the `admin` or `team` which will be assigned the
            conversation.\nA conversation can be assigned both an admin and a
            team.\nSet `0` if you want this assign to no admin or team (ie.
            Unassigned).
          type: string
          example: '4324241'
        body:
          description: >-
            Optionally you can send a response in the conversation when it is
            assigned.
          type: string
          example: Let me pass you over to one of my colleagues.
      required:
        - message_type
        - type
        - admin_id
        - assignee_id
    attach_contact_to_conversation_request:
      title: Assign Conversation Request
      description: Payload of the request to assign a conversation
      type: object
      properties:
        admin_id:
          description: The `id` of the admin who is adding the new participant.
          type: string
          example: '12345'
        customer:
          type: object
          oneOf:
            - title: Intercom User ID
              properties:
                intercom_user_id:
                  description: The identifier for the contact as given by Intercom.
                  type: string
                  example: 6329bd9ffe4e2e91dac76188
                customer:
                  $ref: '#/components/schemas/customer_request'
              required:
                - intercom_user_id
            - title: User ID
              properties:
                user_id:
                  description: >-
                    The external_id you have defined for the contact who is
                    being added as a participant.
                  type: string
                  example: 6329bd9ffe4e2e91dac76188
                customer:
                  $ref: '#/components/schemas/customer_request'
              required:
                - user_id
            - title: Email
              properties:
                email:
                  description: >-
                    The email you have defined for the contact who is being
                    added as a participant.
                  type: string
                  example: winstonsmith@truth.org
                customer:
                  $ref: '#/components/schemas/customer_request'
              required:
                - email
    close_conversation_request:
      title: Close Conversation Request
      description: Payload of the request to close a conversation
      type: object
      properties:
        message_type:
          type: string
          enum:
            - close
          example: close
        type:
          type: string
          enum:
            - admin
          example: admin
        admin_id:
          description: The id of the admin who is performing the action.
          type: string
          example: '12345'
        body:
          description: >-
            Optionally you can leave a message in the conversation to provide
            additional context to the user and other teammates.
          type: string
          example: ' This conversation is now closed!'
      required:
        - message_type
        - type
        - admin_id
    collection:
      title: Collection
      description: >-
        Collections are top level containers for Articles within the Help
        Center.
      type: object
      x-tags:
        - Help Center
      properties:
        description:
          description: >-
            The description of the collection. For multilingual help centers,
            this will be the description of the collection for the default
            language.
          type: string
          nullable: true
          example: Default language description
        id:
          description: The unique identifier for the collection which is given by Intercom.
          type: string
          example: '6871119'
        workspace_id:
          description: The id of the workspace which the collection belongs to.
          type: string
          example: hfi1bx4l
        name:
          description: >-
            The name of the collection. For multilingual collections, this will
            be the name of the default language's content.
          type: string
          example: Default language name
        created_at:
          description: >-
            The time when the article was created. For multilingual articles,
            this will be the timestamp of creation of the default language's
            content.
          type: integer
          format: date-time
          example: 1672928359
        updated_at:
          description: >-
            The time when the article was last updated. For multilingual
            articles, this will be the timestamp of last update of the default
            language's content.
          type: integer
          format: date-time
          example: 1672928610
        url:
          description: >-
            The URL of the collection. For multilingual help centers, this will
            be the URL of the collection for the default language.
          type: string
          nullable: true
          example: http://intercom.test/help/collection/name
        icon:
          description: The icon of the collection.
          type: string
          nullable: true
          example: book-bookmark
        order:
          description: >-
            The order of the section in relation to others sections within a
            collection. Values go from `0`` upwards. `0`` is the default if
            there's no order.
          type: integer
          example: 1
        default_locale:
          description: >-
            The default locale of the help center. This field is only returned
            for multilingual help centers.
          type: string
          example: en
        translated_content:
          nullable: true
          $ref: '#/components/schemas/group_translated_content'
        help_center_id:
          description: The id of the help center the collection is in.
          type: integer
          nullable: true
          example: 123
        type:
          description: The type of object - `collection`.
          type: string
          enum:
            - collection
          default: collection
          example: collection
    collection_list:
      title: Collections
      description: This will return a list of Collections for the App.
      type: object
      properties:
        type:
          description: The type of the object - `list`.
          type: string
          enum:
            - list
          example: list
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of collections.
          type: integer
          example: 1
        data:
          description: An array of collection objects
          type: array
          items:
            $ref: '#/components/schemas/collection'
    company:
      title: Company
      description: >-
        Companies allow you to represent organizations using your product. Each
        company will have its own description and be associated with contacts.
        You can fetch, create, update and list companies.
      type: object
      x-tags:
        - Companies
      properties:
        tags:
          description: The list of tags associated with the company
          type: object
          properties:
            tags:
              type: array
              items:
                items:
                  $ref: '#/components/schemas/tag'
            type:
              description: The type of the object
              type: string
              enum:
                - tag.list
        type:
          description: Value is `company`
          type: string
          enum:
            - company
          example: company
        id:
          description: The Intercom defined id representing the company.
          type: string
          example: 531ee472cce572a6ec000006
        name:
          description: The name of the company.
          type: string
          example: Blue Sun
        app_id:
          description: >-
            The Intercom defined code of the workspace the company is associated
            to.
          type: string
          example: ecahpwf5
        plan:
          type: object
          properties:
            type:
              description: Value is always "plan"
              type: string
              example: plan
            id:
              description: The id of the plan
              type: string
              example: '269315'
            name:
              description: The name of the plan
              type: string
              example: Pro
        company_id:
          description: The company id you have defined for the company.
          type: string
          example: '6'
        remote_created_at:
          description: The time the company was created by you.
          type: integer
          example: 1663597223
        created_at:
          description: The time the company was added in Intercom.
          type: integer
          example: 1663597223
        updated_at:
          description: The last time the company was updated.
          type: integer
          example: 1663597223
        last_request_at:
          description: The time the company last recorded making a request.
          type: integer
          example: 1663597223
        size:
          description: The number of employees in the company.
          type: integer
          example: 100
        website:
          description: The URL for the company website.
          type: string
          example: https://www.intercom.com
        industry:
          description: The industry that the company operates in.
          type: string
          example: Software
        monthly_spend:
          description: How much revenue the company generates for your business.
          type: integer
          example: 100
        session_count:
          description: How many sessions the company has recorded.
          type: integer
          example: 100
        user_count:
          description: The number of users in the company.
          type: integer
          example: 100
        custom_attributes:
          description: The custom attributes you have set on the company.
          type: object
          additionalProperties:
            type: string
          example:
            paid_subscriber: true
            monthly_spend: 155.5
            team_mates: 9
        segments:
          description: The list of segments associated with the company
          type: object
          properties:
            type:
              description: The type of the object
              type: string
              enum:
                - segment.list
            segments:
              type: array
              items:
                $ref: '#/components/schemas/segment'
    company_attached_contacts:
      title: Company Attached Contacts
      description: A list of Contact Objects
      type: object
      properties:
        type:
          description: The type of object - `list`
          type: string
          enum:
            - list
          example: list
        data:
          description: An array containing Contact Objects
          type: array
          items:
            $ref: '#/components/schemas/contact'
        total_count:
          description: The total number of contacts
          type: integer
          example: 100
        pages:
          $ref: '#/components/schemas/cursor_pages'
    company_attached_segments:
      title: Company Attached Segments
      description: A list of Segment Objects
      type: object
      properties:
        type:
          description: The type of object - `list`
          type: string
          enum:
            - list
          example: list
        data:
          description: An array containing Segment Objects
          type: array
          items:
            $ref: '#/components/schemas/segment'
    company_list:
      title: Companies
      description: This will return a list of companies for the App.
      type: object
      properties:
        type:
          description: The type of object - `list`.
          type: string
          enum:
            - list
          example: list
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: The total number of companies.
          type: integer
          example: 100
        data:
          description: An array containing Company Objects.
          type: array
          items:
            $ref: '#/components/schemas/company'
    company_scroll:
      title: Company Scroll
      description: >-
        Companies allow you to represent organizations using your product. Each
        company will have its own description and be associated with contacts.
        You can fetch, create, update and list companies.
      type: object
      nullable: true
      properties:
        type:
          description: The type of object - `list`
          type: string
          enum:
            - list
          example: list
        data:
          type: array
          items:
            $ref: '#/components/schemas/company'
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: The total number of companies
          type: integer
          nullable: true
          example: 100
        scroll_param:
          description: >-
            The scroll parameter to use in the next request to fetch the next
            page of results.
          type: string
          example: 25b649f7-4d33-4ef6-88f5-60e5b8244309
    contact:
      title: Contact
      description: Contact are the objects that represent your leads and users in Intercom.
      type: object
      x-tags:
        - Contacts
      properties:
        tags:
          $ref: '#/components/schemas/contact_tags'
        type:
          description: The type of object.
          type: string
          example: contact
        id:
          description: The unique identifier for the contact which is given by Intercom.
          type: string
          example: 5ba682d23d7cf92bef87bfd4
        external_id:
          description: >-
            The unique identifier for the contact which is provided by the
            Client.
          type: string
          nullable: true
          example: f3b87a2e09d514c6c2e79b9a
        workspace_id:
          description: The id of the workspace which the contact belongs to.
          type: string
          example: ecahpwf5
        role:
          description: The role of the contact.
          type: string
          example: user
        email:
          description: The contact's email.
          type: string
          example: joe@example.com
        email_domain:
          description: The contact's email domain.
          type: string
          example: example.com
        phone:
          description: The contacts phone.
          type: string
          nullable: true
          example: '+1123456789'
        formatted_phone:
          description: The contacts phone number normalized to the E164 format
          type: string
          nullable: true
          example: '+1123456789'
        name:
          description: The contacts name.
          type: string
          nullable: true
          example: John Doe
        owner_id:
          description: >-
            The id of an admin that has been assigned account ownership of the
            contact.
          type: integer
          nullable: true
          example: 123
        has_hard_bounced:
          description: Whether the contact has had an email sent to them hard bounce.
          type: boolean
          example: true
        marked_email_as_spam:
          description: Whether the contact has marked an email sent to them as spam.
          type: boolean
          example: true
        unsubscribed_from_emails:
          description: Whether the contact is unsubscribed from emails.
          type: boolean
          example: true
        created_at:
          description: (UNIX timestamp) The time when the contact was created.
          type: integer
          format: date-time
          example: 1571672154
        updated_at:
          description: (UNIX timestamp) The time when the contact was last updated.
          type: integer
          format: date-time
          example: 1571672154
        signed_up_at:
          description: (UNIX timestamp) The time specified for when a contact signed up.
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        last_seen_at:
          description: >-
            (UNIX timestamp) The time when the contact was last seen (either
            where the Intercom Messenger was installed or when specified
            manually).
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        last_replied_at:
          description: (UNIX timestamp) The time when the contact last messaged in.
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        last_contacted_at:
          description: (UNIX timestamp) The time when the contact was last messaged.
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        last_email_opened_at:
          description: (UNIX timestamp) The time when the contact last opened an email.
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        last_email_clicked_at:
          description: >-
            (UNIX timestamp) The time when the contact last clicked a link in an
            email.
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        language_override:
          description: >-
            A preferred language setting for the contact, used by the Intercom
            Messenger even if their browser settings change.
          type: string
          nullable: true
          example: en
        browser:
          description: The name of the browser which the contact is using.
          type: string
          nullable: true
          example: Chrome
        browser_version:
          description: The version of the browser which the contact is using.
          type: string
          nullable: true
          example: 80.0.3987.132
        browser_language:
          description: The language set by the browser which the contact is using.
          type: string
          nullable: true
          example: en-US
        os:
          description: The operating system which the contact is using.
          type: string
          nullable: true
          example: Mac OS X
        android_app_name:
          description: The name of the Android app which the contact is using.
          type: string
          nullable: true
          example: Intercom
        android_app_version:
          description: The version of the Android app which the contact is using.
          type: string
          nullable: true
          example: 5.0.0
        android_device:
          description: The Android device which the contact is using.
          type: string
          nullable: true
          example: Pixel 3
        android_os_version:
          description: The version of the Android OS which the contact is using.
          type: string
          nullable: true
          example: '10'
        android_sdk_version:
          description: The version of the Android SDK which the contact is using.
          type: string
          nullable: true
          example: '28'
        android_last_seen_at:
          description: >-
            (UNIX timestamp) The time when the contact was last seen on an
            Android device.
          type: integer
          nullable: true
          format: date-time
          example: 1571672154
        ios_app_name:
          description: The name of the iOS app which the contact is using.
          type: string
          nullable: true
          example: Intercom
        ios_app_version:
          description: The version of the iOS app which the contact is using.
          type: string
          nullable: true
          example: 5.0.0
        ios_device:
          description: The iOS device which the contact is using.
          type: string
          nullable: true
          example: iPhone 11
        ios_os_version:
          description: The version of iOS which the contact is using.
          type: string
          nullable: true
          example: 13.3.1
        ios_sdk_version:
          description: The version of the iOS SDK which the contact is using.
          type: string
          nullable: true
          example: 13.3.1
        ios_last_seen_at:
          description: (UNIX timestamp) The last time the contact used the iOS app.
          type: integer
          nullable: true
          format: date-time
          example: 1571672154
        custom_attributes:
          description: The custom attributes which are set for the contact.
          type: object
        avatar:
          type: object
          nullable: true
          properties:
            type:
              description: The type of object
              type: string
              example: avatar
            image_url:
              description: An image URL containing the avatar of a contact.
              type: string
              format: uri
              nullable: true
              example: https://example.org/128Wash.jpg
        notes:
          $ref: '#/components/schemas/contact_notes'
        companies:
          $ref: '#/components/schemas/contact_companies'
        location:
          $ref: '#/components/schemas/contact_location'
        social_profiles:
          $ref: '#/components/schemas/contact_social_profiles'
    contact_archived:
      title: Contact Archived
      description: archived contact object
      type: object
      properties:
        type:
          description: always contact
          type: string
          enum:
            - contact
          example: contact
        id:
          description: The unique identifier for the contact which is given by Intercom.
          type: string
          example: 5ba682d23d7cf92bef87bfd4
        external_id:
          description: >-
            The unique identifier for the contact which is provided by the
            Client.
          type: string
          nullable: true
          example: f3b87a2e09d514c6c2e79b9a
        archived:
          description: Whether the contact is archived or not.
          type: boolean
          example: true
    contact_attached_companies:
      title: Contact Attached Companies
      description: A list of Company Objects
      type: object
      properties:
        type:
          description: The type of object
          type: string
          enum:
            - list
          example: list
        companies:
          description: An array containing Company Objects
          type: array
          items:
            $ref: '#/components/schemas/company'
        total_count:
          description: The total number of companies associated to this contact
          type: integer
          example: 100
        pages:
          $ref: '#/components/schemas/pages_link'
    contact_companies:
      title: Contact companies
      description: >-
        An object containing companies meta data about the companies that a
        contact has. Up to 10 will be displayed here. Use the url to get more.
      type: object
      nullable: false
      properties:
        url:
          description: Url to get more company resources for this contact
          type: string
          format: uri
          example: /contacts/5ba682d23d7cf92bef87bfd4/companies
        total_count:
          description: >-
            Int representing the total number of companyies attached to this
            contact
          type: integer
          example: 100
        has_more:
          description: >-
            Whether there's more Addressable Objects to be viewed. If true, use
            the url to view all
          type: boolean
          example: true
    contact_deleted:
      title: Contact Deleted
      description: deleted contact object
      type: object
      properties:
        type:
          description: always contact
          type: string
          enum:
            - contact
          example: contact
        id:
          description: The unique identifier for the contact which is given by Intercom.
          type: string
          example: 5ba682d23d7cf92bef87bfd4
        external_id:
          description: >-
            The unique identifier for the contact which is provided by the
            Client.
          type: string
          nullable: true
          example: f3b87a2e09d514c6c2e79b9a
        deleted:
          description: Whether the contact is deleted or not.
          type: boolean
          example: true
    contact_list:
      title: Contact List
      description: Contacts are your users in Intercom.
      type: object
      properties:
        type:
          description: Always list
          type: string
          enum:
            - list
          example: list
        data:
          description: The list of contact objects
          type: array
          items:
            $ref: '#/components/schemas/contact'
        total_count:
          description: A count of the total number of objects.
          type: integer
          example: 100
        pages:
          $ref: '#/components/schemas/cursor_pages'
    contact_location:
      title: Contact Location
      description: An object containing location meta data about a Intercom contact.
      type: object
      nullable: false
      properties:
        type:
          description: Always location
          type: string
          nullable: true
          example: location
        country:
          description: The country that the contact is located in
          type: string
          nullable: true
          example: Ireland
        region:
          description: The overal region that the contact is located in
          type: string
          nullable: true
          example: Dublin
        city:
          description: The city that the contact is located in
          type: string
          nullable: true
          example: Dublin
    contact_notes:
      title: Contact notes
      description: >-
        An object containing notes meta data about the notes that a contact has.
        Up to 10 will be displayed here. Use the url to get more.
      type: object
      nullable: false
      properties:
        data:
          description: This object represents the notes attached to a contact.
          type: array
          items:
            $ref: '#/components/schemas/addressable_list'
        url:
          description: Url to get more company resources for this contact
          type: string
          format: uri
          example: /contacts/5ba682d23d7cf92bef87bfd4/notes
        total_count:
          description: >-
            Int representing the total number of companyies attached to this
            contact
          type: integer
          example: 100
        has_more:
          description: >-
            Whether there's more Addressable Objects to be viewed. If true, use
            the url to view all
          type: boolean
          example: true
    contact_reference:
      title: Contact Reference
      description: reference to contact object
      type: object
      properties:
        type:
          description: always contact
          type: string
          enum:
            - contact
          example: contact
        id:
          description: The unique identifier for the contact which is given by Intercom.
          type: string
          example: 5ba682d23d7cf92bef87bfd4
        external_id:
          description: >-
            The unique identifier for the contact which is provided by the
            Client.
          type: string
          nullable: true
          example: f3b87a2e09d514c6c2e79b9a
    contact_reply_conversation_request:
      title: Contact Reply
      oneOf:
        - $ref: '#/components/schemas/contact_reply_intercom_user_id_request'
        - $ref: '#/components/schemas/contact_reply_email_request'
        - $ref: '#/components/schemas/contact_reply_user_id_request'
    contact_reply_email_request:
      title: Email
      description: >-
        Payload of the request to reply on behalf of a contact using their
        `email`
      type: object
      properties:
        message_type:
          type: string
          enum:
            - comment
        type:
          type: string
          enum:
            - user
        body:
          description: The text body of the comment.
          type: string
        email:
          description: The email you have defined for the user.
          type: string
        attachment_urls:
          description: >-
            A list of image URLs that will be added as attachments. You can
            include up to 5 URLs.
          type: array
          items:
            type: string
            format: uri
          maxItems: 5
        attachment_files:
          description: A list of files that will be added as attachments.
          type: array
          items:
            $ref: '#/components/schemas/conversation_attachment_files'
      required:
        - message_type
        - type
        - body
        - email
    contact_reply_intercom_user_id_request:
      title: Intercom User ID
      description: >-
        Payload of the request to reply on behalf of a contact using their
        `intercom_user_id`
      type: object
      properties:
        message_type:
          type: string
          enum:
            - comment
        type:
          type: string
          enum:
            - user
        body:
          description: The text body of the comment.
          type: string
        intercom_user_id:
          description: The identifier for the contact as given by Intercom.
          type: string
        attachment_urls:
          title: Attachment URLs
          description: >-
            A list of image URLs that will be added as attachments. You can
            include up to 5 URLs.
          type: array
          items:
            type: string
            format: uri
          maxItems: 5
        attachment_files:
          description: A list of files that will be added as attachments.
          type: array
          items:
            $ref: '#/components/schemas/conversation_attachment_files'
      required:
        - message_type
        - type
        - body
        - intercom_user_id
    contact_reply_user_id_request:
      title: User ID
      description: >-
        Payload of the request to reply on behalf of a contact using their
        `user_id`
      type: object
      properties:
        message_type:
          type: string
          enum:
            - comment
        type:
          type: string
          enum:
            - user
        body:
          description: The text body of the comment.
          type: string
        user_id:
          description: The external_id you have defined for the contact.
          type: string
        attachment_urls:
          title: Attachment URLs
          description: >-
            A list of image URLs that will be added as attachments. You can
            include up to 5 URLs.
          type: array
          items:
            type: string
            format: uri
          maxItems: 5
        attachment_files:
          description: A list of files that will be added as attachments.
          type: array
          items:
            $ref: '#/components/schemas/conversation_attachment_files'
      required:
        - message_type
        - type
        - body
        - user_id
    contact_segments:
      title: Segments
      description: A list of segments objects attached to a specific contact.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - list
          example: list
        data:
          description: Segment objects associated with the contact.
          type: array
          items:
            $ref: '#/components/schemas/segment'
    contact_social_profiles:
      title: Social Profile
      description: An object containing social profiles that a contact has.
      type: object
      nullable: false
      properties:
        data:
          description: A list of social profiles objects associated with the contact.
          type: array
          items:
            $ref: '#/components/schemas/social_profile'
    contact_subscription_types:
      title: Contact Subscription Types
      description: >-
        An object containing Subscription Types meta data about the
        SubscriptionTypes that a contact has.
      type: object
      nullable: false
      properties:
        data:
          description: This object represents the subscriptions attached to a contact.
          type: array
          items:
            $ref: '#/components/schemas/addressable_list'
        url:
          description: Url to get more subscription type resources for this contact
          type: string
          format: uri
          example: /contacts/5ba682d23d7cf92bef87bfd4/subscriptions
        total_count:
          description: >-
            Int representing the total number of subscription types attached to
            this contact
          type: integer
          example: 100
        has_more:
          description: >-
            Whether there's more Addressable Objects to be viewed. If true, use
            the url to view all
          type: boolean
          example: true
    contact_tags:
      title: Contact Tags
      description: >-
        An object containing tags meta data about the tags that a contact has.
        Up to 10 will be displayed here. Use the url to get more.
      type: object
      nullable: true
      properties:
        data:
          description: This object represents the tags attached to a contact.
          type: array
          items:
            $ref: '#/components/schemas/addressable_list'
        url:
          description: url to get more tag resources for this contact
          type: string
          format: uri
          example: /contacts/5ba682d23d7cf92bef87bfd4/tags
        total_count:
          description: Int representing the total number of tags attached to this contact
          type: integer
          example: 100
        has_more:
          description: >-
            Whether there's more Addressable Objects to be viewed. If true, use
            the url to view all
          type: boolean
          example: true
    contact_unarchived:
      title: Contact Unarchived
      description: unarchived contact object
      type: object
      properties:
        type:
          description: always contact
          type: string
          enum:
            - contact
          example: contact
        id:
          description: The unique identifier for the contact which is given by Intercom.
          type: string
          example: 5ba682d23d7cf92bef87bfd4
        external_id:
          description: >-
            The unique identifier for the contact which is provided by the
            Client.
          type: string
          nullable: true
          example: f3b87a2e09d514c6c2e79b9a
        archived:
          description: Whether the contact is archived or not.
          type: boolean
          example: false
    conversation:
      title: Conversation
      description: >-
        Conversations are how you can communicate with users in Intercom. They
        are created when a contact replies to an outbound message, or when one
        admin directly sends a message to a single contact.
      type: object
      x-tags:
        - Conversations
      properties:
        tags:
          $ref: '#/components/schemas/tags'
        title:
          description: The title given to the conversation.
          type: string
          nullable: true
          example: Conversation Title
        type:
          description: Always conversation.
          type: string
          example: conversation
        id:
          description: The id representing the conversation.
          type: string
          example: '1295'
        created_at:
          description: The time the conversation was created.
          type: integer
          format: date-time
          example: 1663597223
        updated_at:
          description: The last time the conversation was updated.
          type: integer
          format: date-time
          example: 1663597260
        waiting_since:
          description: >-
            The last time a Contact responded to an Admin. In other words, the
            time a customer started waiting for a response. Set to null if last
            reply is from an Admin.
          type: integer
          format: date-time
          nullable: true
          example: 1663597260
        snoozed_until:
          description: >-
            If set this is the time in the future when this conversation will be
            marked as open. i.e. it will be in a snoozed state until this time.
            i.e. it will be in a snoozed state until this time.
          type: integer
          format: date-time
          nullable: true
          example: 1663597260
        open:
          description: Indicates whether a conversation is open (true) or closed (false).
          type: boolean
          example: true
        state:
          description: Can be set to "open", "closed" or "snoozed".
          type: string
          enum:
            - open
            - closed
            - snoozed
          example: open
        read:
          description: Indicates whether a conversation has been read.
          type: boolean
          example: true
        priority:
          description: If marked as priority, it will return priority or else not_priority.
          type: string
          enum:
            - priority
            - not_priority
          example: priority
        admin_assignee_id:
          description: >-
            The id of the admin assigned to the conversation. If it's not
            assigned to an admin it will return null.
          type: integer
          nullable: true
          example: 0
        team_assignee_id:
          description: >-
            The id of the team assigned to the conversation. If it's not
            assigned to a team it will return null.
          type: string
          nullable: true
          example: '5017691'
        conversation_rating:
          $ref: '#/components/schemas/conversation_rating'
        source:
          $ref: '#/components/schemas/conversation_source'
        contacts:
          $ref: '#/components/schemas/conversation_contacts'
        teammates:
          $ref: '#/components/schemas/conversation_teammates'
        custom_attributes:
          $ref: '#/components/schemas/custom_attributes'
        first_contact_reply:
          $ref: '#/components/schemas/conversation_first_contact_reply'
        sla_applied:
          $ref: '#/components/schemas/sla_applied'
        statistics:
          $ref: '#/components/schemas/conversation_statistics'
        conversation_parts:
          $ref: '#/components/schemas/conversation_parts'
    conversation_attachment_files:
      title: Conversation attachment files
      description: Properties of the attachment files in a conversation part
      type: object
      properties:
        content_type:
          description: The content type of the file
          type: string
          example: application/json
        data:
          description: The base64 encoded file data.
          type: string
          example: ewogICJ0ZXN0IjogMQp9
        name:
          description: The name of the file.
          type: string
          example: test.json
    conversation_contacts:
      title: Contacts
      description: >-
        The list of contacts (users or leads) involved in this conversation.
        This will only contain one customer unless more were added via the group
        conversation feature.
      type: object
      properties:
        type:
          description: ''
          type: string
          enum:
            - contact.list
          example: contact.list
        contacts:
          description: >-
            The list of contacts (users or leads) involved in this conversation.
            This will only contain one customer unless more were added via the
            group conversation feature.
          type: array
          items:
            $ref: '#/components/schemas/contact_reference'
    conversation_first_contact_reply:
      title: First contact reply
      description: >-
        An object containing information on the first users message. For a
        contact initiated message this will represent the users original
        message.
      type: object
      nullable: true
      properties:
        created_at:
          description: ''
          type: integer
          format: date-time
          example: 1663597223
        type:
          description: ''
          type: string
          example: conversation
        url:
          description: ''
          type: string
          nullable: true
          example: https://developers.intercom.com/
    conversation_list:
      title: Conversation List
      description: >-
        Conversations are how you can communicate with users in Intercom. They
        are created when a contact replies to an outbound message, or when one
        admin directly sends a message to a single contact.
      type: object
      properties:
        type:
          description: Always conversation.list
          type: string
          enum:
            - conversation.list
          example: conversation.list
        conversations:
          description: The list of conversation objects
          type: array
          items:
            $ref: '#/components/schemas/conversation'
        total_count:
          description: A count of the total number of objects.
          type: integer
          example: 12345
        pages:
          $ref: '#/components/schemas/cursor_pages'
    conversation_part:
      title: Conversation Part
      description: A Conversation Part represents a message in the conversation.
      type: object
      properties:
        type:
          description: Always conversation_part
          type: string
          example: conversation_part
        id:
          description: The id representing the conversation part.
          type: string
          example: '3'
        part_type:
          description: The type of conversation part.
          type: string
          example: comment
        body:
          description: >-
            The message body, which may contain HTML. For Twitter, this will
            show a generic message regarding why the body is obscured.
          type: string
          nullable: true
          example: <p>Okay!</p>
        created_at:
          description: The time the conversation part was created.
          type: integer
          format: date-time
          example: 1663597223
        updated_at:
          description: The last time the conversation part was updated.
          type: integer
          format: date-time
          example: 1663597260
        notified_at:
          description: The time the user was notified with the conversation part.
          type: integer
          format: date-time
          example: 1663597260
        assigned_to:
          description: >-
            The id of the admin that was assigned the conversation by this
            conversation_part (null if there has been no change in assignment.)
          $ref: '#/components/schemas/reference'
          nullable: true
        author:
          $ref: '#/components/schemas/conversation_part_author'
        attachments:
          title: Conversation part attachments
          description: A list of attachments for the part.
          type: array
          items:
            $ref: '#/components/schemas/part_attachment'
        external_id:
          description: The external id of the conversation part
          type: string
          nullable: true
          example: abcd1234
        redacted:
          description: Whether or not the conversation part has been redacted.
          type: boolean
          example: false
    conversation_part_author:
      title: Conversation part author
      description: >-
        The object who initiated the conversation, which can be a Contact, Admin
        or Team. Bots and campaigns send messages on behalf of Admins or Teams.
        For Twitter, this will be blank.
      type: object
      properties:
        type:
          description: The type of the author
          type: string
          example: admin
        id:
          description: The id of the author
          type: string
          example: '274'
        name:
          description: The name of the author
          type: string
          example: Operator
        email:
          description: The email of the author
          type: string
          format: email
          example: operator+abcd1234@intercom.io
    conversation_parts:
      title: Conversation Parts
      description: >-
        A list of Conversation Part objects for each part message in the
        conversation. This is only returned when Retrieving a Conversation, and
        ignored when Listing all Conversations. There is a limit of 500 parts.
      type: object
      properties:
        type:
          description: ''
          type: string
          enum:
            - conversation_part.list
          example: conversation_part.list
        conversation_parts:
          title: Conversation Parts
          description: >-
            A list of Conversation Part objects for each part message in the
            conversation. This is only returned when Retrieving a Conversation,
            and ignored when Listing all Conversations. There is a limit of 500
            parts.
          type: array
          items:
            $ref: '#/components/schemas/conversation_part'
        total_count:
          description: ''
          type: integer
          example: 2
    conversation_rating:
      title: Conversation Rating
      description: >-
        The Conversation Rating object which contains information on the rating
        and/or remark added by a Contact and the Admin assigned to the
        conversation.
      type: object
      nullable: true
      properties:
        rating:
          description: The rating, between 1 and 5, for the conversation.
          type: integer
          example: 5
        remark:
          description: An optional field to add a remark to correspond to the number rating
          type: string
          example: ''
        created_at:
          description: The time the rating was requested in the conversation being rated.
          type: integer
          format: date-time
          example: 1671028894
        contact:
          $ref: '#/components/schemas/contact_reference'
        teammate:
          $ref: '#/components/schemas/reference'
    conversation_source:
      title: Conversation source
      description: >-
        The Conversation Part that originated this conversation, which can be
        Contact, Admin, Campaign, Automated or Operator initiated.
      type: object
      properties:
        type:
          description: >-
            This includes conversation, email, facebook, instagram, phone_call,
            phone_switch, push, sms, twitter and whatsapp.
          type: string
          example: conversation
        id:
          description: The id representing the message.
          type: string
          example: '3'
        delivered_as:
          description: >-
            The conversation's initiation type. Possible values are
            customer_initiated, campaigns_initiated (legacy campaigns),
            operator_initiated (Custom bot), automated (Series and other
            outbounds with dynamic audience message) and admin_initiated (fixed
            audience message, ticket initiated by an admin, group email).
          type: string
          example: operator_initiated
        subject:
          description: >-
            Optional. The message subject. For Twitter, this will show a generic
            message regarding why the subject is obscured.
          type: string
          example: ''
        body:
          description: >-
            The message body, which may contain HTML. For Twitter, this will
            show a generic message regarding why the body is obscured.
          type: string
          example: <p>Hey there!</p>
        author:
          $ref: '#/components/schemas/conversation_part_author'
        attachments:
          description: A list of attachments for the part.
          type: array
          items:
            $ref: '#/components/schemas/part_attachment'
        url:
          description: >-
            The URL where the conversation was started. For Twitter, Email, and
            Bots, this will be blank.
          type: string
          nullable: true
          example: null
        redacted:
          description: >-
            Whether or not the source message has been redacted. Only applicable
            for contact initiated messages.
          type: boolean
          example: false
    conversation_statistics:
      title: Conversation statistics
      description: >-
        A Statistics object containing all information required for reporting,
        with timestamps and calculated metrics.
      type: object
      nullable: true
      properties:
        type:
          description: ''
          type: string
          example: conversation_statistics
        time_to_assignment:
          description: Duration until last assignment before first admin reply. In seconds.
          type: integer
          example: 2310
        time_to_admin_reply:
          description: >-
            Duration until first admin reply. Subtracts out of business hours.
            In seconds.
          type: integer
          example: 2310
        time_to_first_close:
          description: >-
            Duration until conversation was closed first time. Subtracts out of
            business hours. In seconds.
          type: integer
          example: 2310
        time_to_last_close:
          description: >-
            Duration until conversation was closed last time. Subtracts out of
            business hours. In seconds.
          type: integer
          example: 2310
        median_time_to_reply:
          description: >-
            Median based on all admin replies after a contact reply. Subtracts
            out of business hours. In seconds.
          type: integer
          example: 2310
        first_contact_reply_at:
          description: Time of first text conversation part from a contact.
          type: integer
          format: date-time
          example: 1663597233
        first_assignment_at:
          description: Time of first assignment after first_contact_reply_at.
          type: integer
          format: date-time
          example: 1663597233
        first_admin_reply_at:
          description: Time of first admin reply after first_contact_reply_at.
          type: integer
          format: date-time
          example: 1663597233
        first_close_at:
          description: Time of first close after first_contact_reply_at.
          type: integer
          format: date-time
          example: 1663597233
        last_assignment_at:
          description: Time of last assignment after first_contact_reply_at.
          type: integer
          format: date-time
          example: 1663597233
        last_assignment_admin_reply_at:
          description: Time of first admin reply since most recent assignment.
          type: integer
          format: date-time
          example: 1663597233
        last_contact_reply_at:
          description: Time of the last conversation part from a contact.
          type: integer
          format: date-time
          example: 1663597233
        last_admin_reply_at:
          description: Time of the last conversation part from an admin.
          type: integer
          format: date-time
          example: 1663597233
        last_close_at:
          description: Time of the last conversation close.
          type: integer
          format: date-time
          example: 1663597233
        last_closed_by_id:
          description: >-
            The last admin who closed the conversation. Returns a reference to
            an Admin object.
          type: string
          example: c3po
        count_reopens:
          description: Number of reopens after first_contact_reply_at.
          type: integer
          example: 1
        count_assignments:
          description: Number of assignments after first_contact_reply_at.
          type: integer
          example: 1
        count_conversation_parts:
          description: Total number of conversation parts.
          type: integer
          example: 1
    conversation_teammates:
      title: Conversation teammates
      description: >-
        The list of teammates who participated in the conversation (wrote at
        least one conversation part).
      type: object
      nullable: true
      properties:
        type:
          description: The type of the object - `admin.list`.
          type: string
          example: admin.list
        teammates:
          description: >-
            The list of teammates who participated in the conversation (wrote at
            least one conversation part).
          type: array
          items:
            $ref: '#/components/schemas/reference'
    convert_visitor_request:
      title: Convert Visitor Request Payload
      description: You can merge a Visitor to a Contact of role type lead or user.
      type: object
      properties:
        type:
          description: Represents the role of the Contact model. Accepts `lead` or `user`.
          type: string
          example: user
        user:
          description: The unique identifiers retained after converting or merging.
          type: object
          properties:
            id:
              description: >-
                The unique identifier for the contact which is given by
                Intercom.
              type: string
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
            user_id:
              description: >-
                A unique identifier for the contact which is given to Intercom,
                which will be represented as external_id.
              type: string
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
            email:
              description: The contact's email, retained by default if one is present.
              type: string
              example: winstonsmith@truth.org
          anyOf:
            - required:
                - id
            - required:
                - user_id
        visitor:
          description: The unique identifiers to convert a single Visitor.
          type: object
          properties:
            id:
              description: >-
                The unique identifier for the contact which is given by
                Intercom.
              type: string
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
            user_id:
              description: A unique identifier for the contact which is given to Intercom.
              type: string
              example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
            email:
              description: The visitor's email.
              type: string
              example: winstonsmith@truth.org
          anyOf:
            - required:
                - id
            - required:
                - user_id
            - required:
                - email
      required:
        - type
        - user
        - visitor
    create_article_request:
      title: Create Article Request Payload
      description: You can create an Article
      type: object
      nullable: true
      properties:
        title:
          description: >-
            The title of the article.For multilingual articles, this will be the
            title of the default language's content.
          type: string
          example: Thanks for everything
        description:
          description: >-
            The description of the article. For multilingual articles, this will
            be the description of the default language's content.
          type: string
          example: Description of the Article
        body:
          description: >-
            The content of the article. For multilingual articles, this will be
            the body of the default language's content.
          type: string
          example: <p>This is the body in html</p>
        author_id:
          description: >-
            The id of the author of the article. For multilingual articles, this
            will be the id of the author of the default language's content. Must
            be a teammate on the help center's workspace.
          type: integer
          example: 1295
        state:
          description: >-
            Whether the article will be `published` or will be a `draft`.
            Defaults to draft. For multilingual articles, this will be the state
            of the default language's content.
          type: string
          enum:
            - published
            - draft
          example: draft
        parent_id:
          description: >-
            The id of the article's parent collection or section. An article
            without this field stands alone.
          type: integer
          example: 18
        parent_type:
          description: The type of parent, which can either be a `collection` or `section`.
          type: string
          example: collection
        translated_content:
          $ref: '#/components/schemas/article_translated_content'
      required:
        - title
        - author_id
    create_collection_request:
      title: Create Collection Request Payload
      description: You can create a collection
      type: object
      properties:
        description:
          description: >-
            The description of the collection. For multilingual collections,
            this will be the description of the default language's content.
          type: string
          example: English description
        name:
          description: >-
            The name of the collection. For multilingual collections, this will
            be the name of the default language's content.
          type: string
          example: collection 51
        translated_content:
          nullable: true
          $ref: '#/components/schemas/group_translated_content'
        help_center_id:
          description: >-
            The id of the help center where the collection will be created. If
            `null` then it will be created in the default help center.
          type: integer
          nullable: true
          example: 123
      required:
        - name
    create_contact_request:
      title: Create Contact Request Payload
      description: Payload to create a contact
      type: object
      properties:
        role:
          description: The role of the contact.
          type: string
        external_id:
          description: A unique identifier for the contact which is given to Intercom
          type: string
        email:
          description: The contacts email
          type: string
          example: jdoe@example.com
        phone:
          description: The contacts phone
          type: string
          nullable: true
          example: '+353871234567'
        name:
          description: The contacts name
          type: string
          nullable: true
          example: John Doe
        avatar:
          description: An image URL containing the avatar of a contact
          type: string
          nullable: true
          example: https://www.example.com/avatar_image.jpg
        signed_up_at:
          description: The time specified for when a contact signed up
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        last_seen_at:
          description: >-
            The time when the contact was last seen (either where the Intercom
            Messenger was installed or when specified manually)
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        owner_id:
          description: >-
            The id of an admin that has been assigned account ownership of the
            contact
          type: integer
          nullable: true
          example: 123
        unsubscribed_from_emails:
          description: Whether the contact is unsubscribed from emails
          type: boolean
          nullable: true
          example: true
        custom_attributes:
          description: The custom attributes which are set for the contact
          type: object
          nullable: true
      anyOf:
        - title: Create contact with email
          required:
            - email
        - title: Create contact with external_id
          required:
            - external_id
        - title: Create contact with role
          required:
            - role
    create_conversation_request:
      title: Create Conversation Request Payload
      description: >-
        Conversations are how you can communicate with users in Intercom. They
        are created when a contact replies to an outbound message, or when one
        admin directly sends a message to a single contact.
      type: object
      properties:
        from:
          type: object
          properties:
            type:
              description: The role associated to the contact - user or lead.
              type: string
              enum:
                - lead
                - user
                - contact
              example: user
            id:
              description: The identifier for the contact which is given by Intercom.
              type: string
              format: uuid
              minLength: 24
              maxLength: 24
              example: 536e564f316c83104c000020
          required:
            - type
            - id
        body:
          description: The content of the message. HTML is not supported.
          type: string
          example: Hello
      required:
        - from
        - body
    create_data_attribute_request:
      title: Create Data Attribute Request
      description: ''
      type: object
      properties:
        description:
          description: The readable description you see in the UI for the attribute.
          type: string
          example: My Data Attribute Description
        name:
          description: The name of the data attribute.
          type: string
          example: My Data Attribute
        model:
          description: The model that the data attribute belongs to.
          type: string
          enum:
            - contact
            - company
          example: contact
        data_type:
          description: The type of data stored for this attribute.
          type: string
          enum:
            - string
            - integer
            - float
            - boolean
            - datetime
            - date
          example: string
        options:
          description: >-
            To create list attributes. Provide a set of hashes with `value` as
            the key of the options you want to make. `data_type` must be
            `string`.
          type: array
          items:
            type: string
          example:
            - option1
            - option2
        messenger_writable:
          description: Can this attribute be updated by the Messenger
          type: boolean
          example: false
      required:
        - name
        - model
        - data_type
    create_data_event_request:
      title: Create Data Event Request
      description: ''
      type: object
      properties:
        event_name:
          description: >-
            The name of the event that occurred. This is presented to your App's
            admins when filtering and creating segments - a good event name is
            typically a past tense 'verb-noun' combination, to improve
            readability, for example `updated-plan`.
          type: string
          example: invited-friend
        created_at:
          description: The time the event occurred as a UTC Unix timestamp
          type: integer
          format: date-time
          example: 1671028894
        user_id:
          description: Your identifier for the user.
          type: string
          example: '314159'
        id:
          description: >-
            The unique identifier for the contact (lead or user) which is given
            by Intercom.
          type: string
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
        email:
          description: >-
            An email address for your user. An email should only be used where
            your application uses email to uniquely identify users.
          type: string
          example: frodo.baggins@example.com
        metadata:
          description: Optional metadata about the event.
          type: object
          additionalProperties:
            type: string
          example:
            invite_code: ADDAFRIEND
      anyOf:
        - title: id required
          required:
            - event_name
            - created_at
            - id
        - title: user_id required
          required:
            - event_name
            - created_at
            - user_id
        - title: email required
          required:
            - event_name
            - created_at
            - email
    create_data_event_summaries_request:
      title: Create Data Event Summaries Request
      description: >-
        You can send a list of event summaries for a user. Each event summary
        should contain the event name, the time the event occurred, and the
        number of times the event occurred. The event name should be a past
        tense "verb-noun" combination, to improve readability, for example
        `updated-plan`.
      type: object
      properties:
        user_id:
          description: Your identifier for the user.
          type: string
          example: '314159'
        event_summaries:
          description: >-
            A list of event summaries for the user. Each event summary should
            contain the event name, the time the event occurred, and the number
            of times the event occurred. The event name should be a past tense
            'verb-noun' combination, to improve readability, for example
            `updated-plan`.
          type: object
          properties:
            event_name:
              description: >-
                The name of the event that occurred. A good event name is
                typically a past tense 'verb-noun' combination, to improve
                readability, for example `updated-plan`.
              type: string
              example: invited-friend
            count:
              description: The number of times the event occurred.
              type: integer
              example: 1
            first:
              description: The first time the event was sent
              type: integer
              format: date-time
              example: 1671028894
            last:
              description: The last time the event was sent
              type: integer
              format: date-time
              example: 1671028894
    create_data_exports_request:
      title: Create Data Export Request
      description: Request for creating a data export
      type: object
      properties:
        created_at_after:
          description: >-
            The start date that you request data for. It must be formatted as a
            unix timestamp.
          type: integer
          example: 1527811200
        created_at_before:
          description: >-
            The end date that you request data for. It must be formatted as a
            unix timestamp.
          type: integer
          example: 1527811200
      required:
        - created_at_after
        - created_at_before
    create_message_request:
      title: Create Message Request Payload
      description: You can create a message
      type: object
      nullable: true
      properties:
        message_type:
          description: 'The kind of message being created. Values: `in_app` or `email`.'
          type: string
          enum:
            - in_app
            - email
          example: in_app
        subject:
          description: The title of the email.
          type: string
          example: Thanks for everything
        body:
          description: The content of the message. HTML and plaintext are supported.
          type: string
          example: Hello there
        template:
          description: >-
            The style of the outgoing message. Possible values `plain` or
            `personal`.
          type: string
          example: plain
        from:
          description: >-
            The sender of the message. If not provided, the default sender will
            be used.
          type: object
          properties:
            type:
              description: Always `admin`.
              type: string
              enum:
                - admin
              example: admin
            id:
              description: The identifier for the admin which is given by Intercom.
              type: integer
              example: 394051
          required:
            - type
            - id
        to:
          description: >-
            The sender of the message. If not provided, the default sender will
            be used.
          type: object
          properties:
            type:
              description: The role associated to the contact - `user` or `lead`.
              type: string
              enum:
                - user
                - lead
              example: user
            id:
              description: The identifier for the contact which is given by Intercom.
              type: string
              example: 536e564f316c83104c000020
          required:
            - type
            - id
        create_conversation_without_contact_reply:
          description: >-
            Whether a conversation should be opened in the inbox for the message
            without the contact replying. Defaults to false if not provided.
          type: boolean
          default: false
          example: true
      anyOf:
        - title: 'message_type: `email`.'
          required:
            - message_type
            - subject
            - body
            - template
            - from
            - to
        - title: 'message_type: `inapp`.'
          required:
            - message_type
            - body
            - from
            - to
    create_or_update_company_request:
      title: Create Or Update Company Request Payload
      description: You can create or update a Company
      type: object
      nullable: true
      properties:
        name:
          description: The name of the Company
          type: string
          example: Intercom
        company_id:
          description: The company id you have defined for the company. Can't be updated
          type: string
          example: 625e90fc55ab113b6d92175f
        plan:
          description: The name of the plan you have associated with the company.
          type: string
          example: Enterprise
        size:
          description: The number of employees in this company.
          type: integer
          example: 100
        website:
          description: >-
            The URL for this company's website. Please note that the value
            specified here is not validated. Accepts any string.
          type: string
          example: https://www.example.com
        industry:
          description: The industry that this company operates in.
          type: string
          example: Manufacturing
        custom_attributes:
          description: >-
            A hash of key/value pairs containing any other data about the
            company you want Intercom to store.
          type: object
          additionalProperties:
            type: string
          example:
            paid_subscriber: true
            monthly_spend: 155.5
            team_mates: 9
        remote_created_at:
          description: The time the company was created by you.
          type: integer
          example: 1394531169
        monthly_spend:
          description: >-
            How much revenue the company generates for your business. Note that
            this will truncate floats. i.e. it only allow for whole integers,
            155.98 will be truncated to 155. Note that this has an upper limit
            of 2**31-1 or 2147483647..
          type: integer
          example: 1000
    create_or_update_tag_request:
      title: Create or Update Tag Request Payload
      description: You can create or update an existing tag.
      type: object
      properties:
        name:
          description: >-
            The name of the tag, which will be created if not found, or the new
            name for the tag if this is an update request. Names are case
            insensitive.
          type: string
          example: Independent
        id:
          description: The id of tag to updates.
          type: string
          example: '656452352'
      required:
        - name
    create_phone_switch_request:
      title: Create Phone Switch Request Payload
      description: You can create an phone switch
      type: object
      nullable: true
      properties:
        phone:
          description: >-
            Phone number in E.164 format, that will receive the SMS to continue
            the conversation in the Messenger.
          type: string
          example: +1 1234567890
        custom_attributes:
          $ref: '#/components/schemas/custom_attributes'
      required:
        - phone
    create_section_request:
      title: Create Section Request Payload
      description: You can create a Section
      type: object
      properties:
        name:
          description: >-
            The name of the collection. For multilingual collections, this will
            be the name of the default language's content.
          type: string
          example: Section 51
        parent_id:
          description: The id for the collection this section will be within.
          type: integer
          example: 18
        translated_content:
          nullable: true
          $ref: '#/components/schemas/group_translated_content'
      required:
        - name
        - parent_id
    create_ticket_reply_request:
      title: Create Ticket Reply Request Payload
      description: You can create a reply on a ticket.
      type: object
      properties:
        body:
          description: The message body of the note, which may contain HTML.
          type: string
          example: <p>Okay!</p>
        message_type:
          description: The type of the reply. Only `note` is supported at the moment.
          type: string
          example: note
          default: note
        admin_id:
          description: The id of the admin who is making the note.
          type: string
          example: '1234'
      required:
        - body
        - admin_id
    create_ticket_request:
      title: Create Ticket Request Payload
      description: You can create a Ticket
      type: object
      properties:
        ticket_type_id:
          description: The ID of the type of ticket you want to create
          type: string
          example: '1234'
        contacts:
          description: >-
            The list of contacts (users or leads) affected by this ticket.
            Currently only one is allowed
          type: array
          items:
            type: object
            oneOf:
              - title: ID
                properties:
                  id:
                    description: The identifier for the contact as given by Intercom.
                    type: string
                required:
                  - id
              - title: External ID
                properties:
                  external_id:
                    description: >-
                      The external_id you have defined for the contact who is
                      being added as a participant.
                    type: string
                required:
                  - external_id
              - title: Email
                properties:
                  email:
                    description: >-
                      The email you have defined for the contact who is being
                      added as a participant. If a contact with this email does
                      not exist, one will be created.
                    type: string
                required:
                  - email
          example:
            - id: '1234'
        ticket_attributes:
          $ref: '#/components/schemas/ticket_request_custom_attributes'
      required:
        - ticket_type_id
        - contacts
    create_ticket_type_attribute_request:
      title: Create Ticket Type Attribute Request Payload
      description: You can create a Ticket Type Attribute
      type: object
      properties:
        description:
          description: >-
            The description of the attribute presented to the teammate or
            contact
          type: string
          example: Priority level of the bug
        name:
          description: The name of the ticket type attribute
          type: string
          example: Bug Priority
        data_type:
          description: The data type of the attribute
          type: string
          enum:
            - string
            - list
            - integer
            - decimal
            - boolean
            - datetime
            - files
          example: string
        required_to_create:
          description: >-
            Whether the attribute is required to be filled in when teammates are
            creating the ticket in Inbox.
          type: boolean
          default: false
          example: false
        required_to_create_for_contacts:
          description: >-
            Whether the attribute is required to be filled in when contacts are
            creating the ticket in Messenger.
          type: boolean
          default: false
          example: false
        visible_on_create:
          description: >-
            Whether the attribute is visible to teammates when creating a ticket
            in Inbox.
          type: boolean
          default: true
          example: true
        visible_to_contacts:
          description: >-
            Whether the attribute is visible to contacts when creating a ticket
            in Messenger.
          type: boolean
          default: true
          example: true
        multiline:
          description: >-
            Whether the attribute allows multiple lines of text (only applicable
            to string attributes)
          type: boolean
          example: false
        list_items:
          description: >-
            A comma delimited list of items for the attribute value (only
            applicable to list attributes)
          type: string
          example: Low Priority,Medium Priority,High Priority
        allow_multiple_values:
          description: >-
            Whether the attribute allows multiple files to be attached to it
            (only applicable to file attributes)
          type: boolean
          example: false
      required:
        - name
        - description
        - data_type
    create_ticket_type_request:
      title: Create Ticket Type Request Payload
      description: |
        The request payload for creating a ticket type.
          You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
      type: object
      nullable: true
      properties:
        description:
          description: The description of the ticket type.
          type: string
          example: Used for tracking bugs
        name:
          description: The name of the ticket type.
          type: string
          example: Bug
        icon:
          description: The icon of the ticket type.
          type: string
          example: 🐞
          default: 🎟️
        is_internal:
          description: >-
            Whether the tickets associated with this ticket type are intended
            for internal use only or will be shared with customers. This is
            currently a limited attribute.
          type: boolean
          example: false
          default: false
      required:
        - name
    cursor_pages:
      title: Cursor based pages
      description: >
        Cursor-based pagination is a technique used in the Intercom API to
        navigate through large amounts of data.

        A "cursor" or pointer is used to keep track of the current position in
        the result set, allowing the API to return the data in small chunks or
        "pages" as needed.
      type: object
      nullable: true
      properties:
        type:
          description: the type of object `pages`.
          type: string
          example: pages
          enum:
            - pages
        page:
          description: The current page
          type: integer
          example: 1
        next:
          $ref: '#/components/schemas/starting_after_paging'
        per_page:
          description: Number of results per page
          type: integer
          example: 2
        total_pages:
          description: Total number of pages
          type: integer
          example: 13
    custom_attributes:
      title: Custom Attributes
      description: >-
        An object containing the different custom attributes associated to the
        conversation as key-value pairs. For relationship attributes the value
        will be a list of custom object instance models.
      type: object
      additionalProperties:
        anyOf:
          - type: string
          - $ref: '#/components/schemas/custom_object_instance'
    custom_object_instance:
      title: Custom Object Instance
      description: >-
        A Custom Object Instance represents an instance of a custom object type.
        This allows you to create and set custom attributes to store data about
        your customers that is not already captured by Intercom. The parent
        object includes recommended default attributes and you can add your own
        custom attributes.
      type: object
      x-tags:
        - Custom Object Instances
      nullable: true
      properties:
        id:
          description: The Intercom defined id representing the custom object instance.
          type: string
          example: 5a7a19e9f59ae20001d1c1e6
        external_id:
          description: The id you have defined for the custom object instance.
          type: string
          example: 0001d1c1e65a7a19e9f59ae2
        type:
          description: >-
            The identifier of the custom object type that defines the structure
            of the custom object instance.
          type: string
          example: Order
        custom_attributes:
          description: The custom attributes you have set on the custom object instance.
          type: object
          additionalProperties:
            type: string
    customer_request:
      type: object
      nullable: true
      oneOf:
        - title: Intercom User ID
          properties:
            intercom_user_id:
              description: The identifier for the contact as given by Intercom.
              type: string
              example: 6329bd9ffe4e2e91dac76188
          required:
            - intercom_user_id
        - title: User ID
          properties:
            user_id:
              description: >-
                The external_id you have defined for the contact who is being
                added as a participant.
              type: string
              example: 2e91dac761886329bd9ffe4e
          required:
            - user_id
        - title: Email
          properties:
            email:
              description: >-
                The email you have defined for the contact who is being added as
                a participant.
              type: string
              example: sam.sung@example.com
          required:
            - email
    data_attribute:
      title: Data Attribute
      description: >-
        Data Attributes are metadata used to describe your contact, company and
        conversation models. These include standard and custom attributes. By
        using the data attributes endpoint, you can get the global list of
        attributes for your workspace, as well as create and archive custom
        attributes.
      type: object
      x-tags:
        - Data Attributes
      properties:
        description:
          description: Readable description of the attribute.
          type: string
          example: Whether the user is a paid subscriber.
        type:
          description: Value is `data_attribute`.
          type: string
          enum:
            - data_attribute
          example: data_attribute
        id:
          description: >-
            The unique identifier for the data attribute which is given by
            Intercom. Only available for custom attributes.
          type: integer
          example: 12878
        model:
          description: >-
            Value is `contact` for user/lead attributes and `company` for
            company attributes.
          type: string
          enum:
            - contact
            - company
          example: contact
        name:
          description: Name of the attribute.
          type: string
          example: paid_subscriber
        full_name:
          description: >-
            Full name of the attribute. Should match the name unless it's a
            nested attribute. We can split full_name on `.` to access nested
            user object values.
          type: string
          example: custom_attributes.paid_subscriber
        label:
          description: Readable name of the attribute (i.e. name you see in the UI)
          type: string
          example: Paid Subscriber
        data_type:
          description: The data type of the attribute.
          type: string
          enum:
            - string
            - integer
            - float
            - boolean
            - date
          example: boolean
        options:
          description: List of predefined options for attribute value.
          type: array
          items:
            type: string
          example:
            - 'true'
            - 'false'
        api_writable:
          description: Can this attribute be updated through API
          type: boolean
          example: true
        messenger_writable:
          description: Can this attribute be updated by the Messenger
          type: boolean
          example: false
        ui_writable:
          description: Can this attribute be updated in the UI
          type: boolean
          example: true
        custom:
          description: Set to true if this is a CDA
          type: boolean
          example: true
        archived:
          description: Is this attribute archived. (Only applicable to CDAs)
          type: boolean
          example: false
        created_at:
          description: The time the attribute was created as a UTC Unix timestamp
          type: integer
          format: date-time
          example: 1671028894
        updated_at:
          description: The time the attribute was last updated as a UTC Unix timestamp
          type: integer
          format: date-time
          example: 1671028894
        admin_id:
          description: Teammate who created the attribute. Only applicable to CDAs
          type: string
          example: '5712945'
    data_attribute_list:
      title: Data Attribute List
      description: >-
        A list of all data attributes belonging to a workspace for contacts,
        companies or conversations.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - list
          example: list
        data:
          description: A list of data attributes
          type: array
          items:
            $ref: '#/components/schemas/data_attribute'
    data_event:
      title: Data Event
      description: Data events are used to notify Intercom of changes to your data.
      type: object
      x-tags:
        - Data Events
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - event
          example: event
        event_name:
          description: >-
            The name of the event that occurred. This is presented to your App's
            admins when filtering and creating segments - a good event name is
            typically a past tense 'verb-noun' combination, to improve
            readability, for example `updated-plan`.
          type: string
          example: invited-friend
        created_at:
          description: The time the event occurred as a UTC Unix timestamp
          type: integer
          format: date-time
          example: 1671028894
        user_id:
          description: Your identifier for the user.
          type: string
          example: '314159'
        id:
          description: Your identifier for a lead or a user.
          type: string
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
        intercom_user_id:
          description: The Intercom identifier for the user.
          type: string
          example: 63a0979a5eeebeaf28dd56ba
        email:
          description: >-
            An email address for your user. An email should only be used where
            your application uses email to uniquely identify users.
          type: string
          example: frodo.baggins@example.com
        metadata:
          description: Optional metadata about the event.
          type: object
          additionalProperties:
            type: string
          example:
            invite_code: ADDAFRIEND
      required:
        - event_name
        - created_at
    data_event_list:
      title: Data Event List
      description: This will return a list of data events for the App.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - event.list
          example: event.list
        events:
          description: A list of data events
          type: array
          items:
            $ref: '#/components/schemas/data_event'
        pages:
          description: Pagination
          type: object
          properties:
            next:
              type: string
              example: >-
                https://api.intercom.io/events?per_page=2&before=1389913941064&intercom_user_id=63a0979a5eeebeaf28dd56ba&type=user"
            since:
              type: string
              example: >-
                https://api.intercom.io/events?intercom_user_id=63a0979a5eeebeaf28dd56ba&type=user&since=1389913941065
    data_event_summary:
      title: Data Event Summary
      description: This will return a summary of data events for the App.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - event.summary
          example: event.summary
        email:
          description: The email address of the user
          type: string
          example: Sam.Sung@example.com
        intercom_user_id:
          description: The Intercom user ID of the user
          type: string
          example: 63a0979a5eeebeaf28dd56ba
        user_id:
          description: The user ID of the user
          type: string
          example: 62b997f288e14803c5006932
        events:
          description: A summary of data events
          type: array
          items:
            $ref: '#/components/schemas/data_event_summary_item'
    data_event_summary_item:
      title: Data Event Summary Item
      description: This will return a summary of a data event for the App.
      type: object
      nullable: true
      properties:
        description:
          description: The description of the event
          type: string
          example: A user placed an order
        name:
          description: The name of the event
          type: string
          example: placed-order
        first:
          description: The first time the event was sent
          type: string
          example: '2014-01-16T23:12:21.000+00:00'
        last:
          description: The last time the event was sent
          type: string
          example: '2014-01-16T23:12:21.000+00:00 '
        count:
          description: The number of times the event was sent
          type: integer
          example: 1
    data_export:
      title: Data Export
      description: >-
        The data export api is used to view all message sent & viewed in a given
        timeframe.
      type: object
      x-tags:
        - Data Export
      properties:
        job_identfier:
          description: The identifier for your job.
          type: string
          example: orzzsbd7hk67xyu
        status:
          description: The current state of your job.
          type: string
          enum:
            - pending
            - in_progress
            - failed
            - completed
            - no_data
            - canceled
          example: pending
        download_expires_at:
          description: The time after which you will not be able to access the data.
          type: string
          example: '1674917488'
        download_url:
          description: The location where you can download your data.
          type: string
          example: https://api.intercom.test/download/messages/data/example
    data_export_csv:
      title: Data Export CSV
      description: A CSV output file
      type: object
      properties:
        user_id:
          description: The user_id of the user who was sent the message.
          type: string
        user_external_id:
          description: The external_user_id of the user who was sent the message
          type: string
        company_id:
          description: >-
            The company ID of the user in relation to the message that was sent.
            Will return -1 if no company is present.
          type: string
        email:
          description: The users email who was sent the message.
          type: string
        name:
          description: The full name of the user receiving the message
          type: string
        ruleset_id:
          description: The id of the message.
          type: string
        content_id:
          description: >-
            The specific content that was received. In an A/B test each version
            has its own Content ID.
          type: string
        content_type:
          description: Email, Chat, Post etc.
          type: string
        content_title:
          description: The title of the content you see in your Intercom workspace.
          type: string
        ruleset_version_id:
          description: >-
            As you edit content we record new versions. This ID can help you
            determine which version of a piece of content that was received.
          type: string
        receipt_id:
          description: >-
            ID for this receipt. Will be included with any related stats in
            other files to identify this specific delivery of a message.
          type: string
        received_at:
          description: Timestamp for when the receipt was recorded.
          type: integer
        series_id:
          description: >-
            The id of the series that this content is part of. Will return -1 if
            not part of a series.
          type: string
        series_title:
          description: The title of the series that this content is part of.
          type: string
        node_id:
          description: >-
            The id of the series node that this ruleset is associated with. Each
            block in a series has a corresponding node_id.
          type: string
        first_reply:
          description: >-
            The first time a user replied to this message if the content was
            able to receive replies.
          type: integer
        first_completion:
          description: >-
            The first time a user completed this message if the content was able
            to be completed e.g. Tours, Surveys.
          type: integer
        first_series_completion:
          description: >-
            The first time the series this message was a part of was completed
            by the user.
          type: integer
        first_series_disengagement:
          description: >-
            The first time the series this message was a part of was disengaged
            by the user.
          type: integer
        first_series_exit:
          description: >-
            The first time the series this message was a part of was exited by
            the user.
          type: integer
        first_goal_success:
          description: >-
            The first time the user met this messages associated goal if one
            exists.
          type: integer
        first_open:
          description: The first time the user opened this message.
          type: integer
        first_click:
          description: >-
            The first time the series the user clicked on a link within this
            message.
          type: integer
        first_dismisall:
          description: The first time the series the user dismissed this message.
          type: integer
        first_unsubscribe:
          description: The first time the user unsubscribed from this message.
          type: integer
        first_hard_bounce:
          description: The first time this message hard bounced for this user
          type: integer
    deleted_article_object:
      title: Deleted Article Object
      description: Response returned when an object is deleted
      type: object
      properties:
        id:
          description: The unique identifier for the article which you provided in the URL.
          type: string
          example: '6890762'
        object:
          description: The type of object which was deleted. - article
          type: string
          enum:
            - article
          example: article
        deleted:
          description: Whether the article was deleted successfully or not.
          type: boolean
          example: true
    deleted_collection_object:
      title: Deleted Collection Object
      description: Response returned when an object is deleted
      type: object
      properties:
        id:
          description: >-
            The unique identifier for the collection which you provided in the
            URL.
          type: string
          example: '6890762'
        object:
          description: The type of object which was deleted. - `collection`
          type: string
          enum:
            - collection
          example: collection
        deleted:
          description: Whether the collection was deleted successfully or not.
          type: boolean
          example: true
    deleted_company_object:
      title: Deleted Company Object
      description: Response returned when an object is deleted
      type: object
      properties:
        id:
          description: The unique identifier for the company which is given by Intercom.
          type: string
          example: 5b7e8b2f-7a1a-4e6c-8e1b-4f9d4f4c4d4f
        object:
          description: The type of object which was deleted. - `company`
          type: string
          enum:
            - company
          example: company
        deleted:
          description: Whether the company was deleted successfully or not.
          type: boolean
          example: true
    deleted_object:
      title: Deleted Object
      description: Response returned when an object is deleted
      type: object
      properties:
        id:
          description: >-
            The unique identifier for the news item which you provided in the
            URL.
          type: string
          example: '6890762'
        object:
          description: The type of object which was deleted - news-item.
          type: string
          enum:
            - news-item
          example: news-item
        deleted:
          description: Whether the news item was deleted successfully or not.
          type: boolean
          example: true
    deleted_section_object:
      title: Deleted Section Object
      description: Response returned when an object is deleted
      type: object
      properties:
        id:
          description: The unique identifier for the section which you provided in the URL.
          type: string
          example: '6890762'
        object:
          description: The type of object which was deleted. - `section`
          type: string
          enum:
            - section
          example: section
        deleted:
          description: Whether the section was deleted successfully or not.
          type: boolean
          example: true
    detach_contact_from_conversation_request:
      properties:
        admin_id:
          description: The `id` of the admin who is performing the action.
          type: string
          example: '5017690'
      required:
        - admin_id
    error:
      title: Error
      description: >-
        The API will return an Error List for a failed request, which will
        contain one or more Error objects.
      type: object
      properties:
        type:
          description: The type is error.list
          type: string
          example: error.list
        request_id:
          description: ''
          type: string
          nullable: true
          format: uuid
          example: f93ecfa8-d08a-4325-8694-89aeb89c8f85
        errors:
          description: An array of one or more error objects
          type: array
          items:
            properties:
              code:
                description: >-
                  A string indicating the kind of error, used to further qualify
                  the HTTP response code
                type: string
                example: unauthorized
              message:
                description: Optional. Human readable description of the error.
                type: string
                nullable: true
                example: Access Token Invalid
              field:
                description: >-
                  Optional. Used to identify a particular field or query
                  parameter that was in error.
                type: string
                nullable: true
                example: email
            required:
              - code
      required:
        - type
        - errors
    file_attribute:
      title: File
      description: The value describing a file upload set for a custom attribute
      type: object
      properties:
        type:
          type: string
          example: upload
        name:
          description: The name of the file
          type: string
          example: Screenshot.png
        url:
          description: >-
            The url of the file. This is a temporary URL and will expire after
            30 minutes.
          type: string
          example: https://intercom-attachments-1.com/.../Screenshot.png
        content_type:
          description: The type of file
          type: string
          example: image/png
        filesize:
          description: The size of the file in bytes
          type: integer
          example: 11308309
        width:
          description: The width of the file in pixels, if applicable
          type: integer
          example: 3024
        height:
          description: The height of the file in pixels, if applicable
          type: integer
          example: 1964
    group_content:
      title: Group Content
      description: The Content of a Group.
      type: object
      nullable: true
      properties:
        description:
          description: The description of the collection. Only available for collections.
          type: string
          example: ' Collection description'
        type:
          description: The type of object - `group_content` .
          type: string
          enum:
            - null
            - group_content
          example: group_content
          nullable: true
        name:
          description: The name of the collection or section.
          type: string
          example: Collection name
    group_translated_content:
      title: Group Translated Content
      description: >-
        The Translated Content of an Group. The keys are the locale codes and
        the values are the translated content of the Group.
      type: object
      nullable: true
      properties:
        type:
          description: The type of object - group_translated_content.
          type: string
          nullable: true
          enum:
            - null
            - group_translated_content
          example: group_translated_content
        ar:
          description: The content of the group in Arabic
          $ref: '#/components/schemas/group_content'
        bg:
          description: The content of the group in Bulgarian
          $ref: '#/components/schemas/group_content'
        bs:
          description: The content of the group in Bosnian
          $ref: '#/components/schemas/group_content'
        ca:
          description: The content of the group in Catalan
          $ref: '#/components/schemas/group_content'
        cs:
          description: The content of the group in Czech
          $ref: '#/components/schemas/group_content'
        da:
          description: The content of the group in Danish
          $ref: '#/components/schemas/group_content'
        de:
          description: The content of the group in German
          $ref: '#/components/schemas/group_content'
        el:
          description: The content of the group in Greek
          $ref: '#/components/schemas/group_content'
        en:
          description: The content of the group in English
          $ref: '#/components/schemas/group_content'
        es:
          description: The content of the group in Spanish
          $ref: '#/components/schemas/group_content'
        et:
          description: The content of the group in Estonian
          $ref: '#/components/schemas/group_content'
        fi:
          description: The content of the group in Finnish
          $ref: '#/components/schemas/group_content'
        fr:
          description: The content of the group in French
          $ref: '#/components/schemas/group_content'
        he:
          description: The content of the group in Hebrew
          $ref: '#/components/schemas/group_content'
        hr:
          description: The content of the group in Croatian
          $ref: '#/components/schemas/group_content'
        hu:
          description: The content of the group in Hungarian
          $ref: '#/components/schemas/group_content'
        id:
          description: The content of the group in Indonesian
          $ref: '#/components/schemas/group_content'
        it:
          description: The content of the group in Italian
          $ref: '#/components/schemas/group_content'
        ja:
          description: The content of the group in Japanese
          $ref: '#/components/schemas/group_content'
        ko:
          description: The content of the group in Korean
          $ref: '#/components/schemas/group_content'
        lt:
          description: The content of the group in Lithuanian
          $ref: '#/components/schemas/group_content'
        lv:
          description: The content of the group in Latvian
          $ref: '#/components/schemas/group_content'
        mn:
          description: The content of the group in Mongolian
          $ref: '#/components/schemas/group_content'
        nb:
          description: The content of the group in Norwegian
          $ref: '#/components/schemas/group_content'
        nl:
          description: The content of the group in Dutch
          $ref: '#/components/schemas/group_content'
        pl:
          description: The content of the group in Polish
          $ref: '#/components/schemas/group_content'
        pt:
          description: The content of the group in Portuguese (Portugal)
          $ref: '#/components/schemas/group_content'
        ro:
          description: The content of the group in Romanian
          $ref: '#/components/schemas/group_content'
        ru:
          description: The content of the group in Russian
          $ref: '#/components/schemas/group_content'
        sl:
          description: The content of the group in Slovenian
          $ref: '#/components/schemas/group_content'
        sr:
          description: The content of the group in Serbian
          $ref: '#/components/schemas/group_content'
        sv:
          description: The content of the group in Swedish
          $ref: '#/components/schemas/group_content'
        tr:
          description: The content of the group in Turkish
          $ref: '#/components/schemas/group_content'
        vi:
          description: The content of the group in Vietnamese
          $ref: '#/components/schemas/group_content'
        pt-BR:
          description: The content of the group in Portuguese (Brazil)
          $ref: '#/components/schemas/group_content'
        zh-CN:
          description: The content of the group in Chinese (China)
          $ref: '#/components/schemas/group_content'
        zh-TW:
          description: The content of the group in Chinese (Taiwan)
          $ref: '#/components/schemas/group_content'
    help_center:
      title: Help Center
      description: Help Centers contain collections
      type: object
      x-tags:
        - Help Center
      properties:
        id:
          description: >-
            The unique identifier for the Help Center which is given by
            Intercom.
          type: string
          example: '123'
        workspace_id:
          description: The id of the workspace which the Help Center belongs to.
          type: string
          example: hfi1bx4l
        created_at:
          description: The time when the Help Center was created.
          type: integer
          format: date-time
          example: 1672928359
        updated_at:
          description: The time when the Help Center was last updated.
          type: integer
          format: date-time
          example: 1672928610
        identifier:
          description: >-
            The identifier of the Help Center. This is used in the URL of the
            Help Center.
          type: string
          example: intercom
        website_turned_on:
          description: >-
            Whether the Help Center is turned on or not. This is controlled in
            your Help Center settings.
          type: boolean
          example: true
        display_name:
          description: The display name of the Help Center only seen by teammates.
          type: string
          example: Intercom Help Center
    help_center_list:
      title: Help Centers
      description: A list of Help Centers belonging to the App
      type: object
      x-tags:
        - Help Center
      properties:
        type:
          description: The type of the object - `list`.
          type: string
          enum:
            - list
          example: list
        data:
          description: An array of Help Center objects
          type: array
          items:
            $ref: '#/components/schemas/help_center'
    intercom_version:
      description: >-
        Intercom API version.</br>By default, it's equal to the version set in
        the app package.
      type: string
      example: '2.9'
      default: '2.9'
      enum:
        - '1.0'
        - '1.1'
        - '1.2'
        - '1.3'
        - '1.4'
        - '2.0'
        - '2.1'
        - '2.2'
        - '2.3'
        - '2.4'
        - '2.5'
        - '2.6'
        - '2.7'
        - '2.8'
        - '2.9'
        - '2.10'
        - Unstable
    merge_contacts_request:
      title: Merge contact data
      description: Merge contact data.
      type: object
      properties:
        from:
          description: >-
            The unique identifier for the contact to merge away from. Must be a
            lead.
          type: string
          example: 5d70dd30de4efd54f42fd526
        into:
          description: The unique identifier for the contact to merge into. Must be a user.
          type: string
          example: 5ba682d23d7cf92bef87bfd4
    message:
      title: Message
      description: >-
        Message are how you reach out to contacts in Intercom. They are created
        when an admin sends an outbound message to a contact.
      type: object
      x-tags:
        - Messages
      properties:
        type:
          description: The type of the message
          type: string
          example: user_message
        id:
          description: The id representing the message.
          type: string
          example: '1488971108'
        created_at:
          description: The time the conversation was created.
          type: integer
          format: date-time
          example: 1667560812
        subject:
          description: 'The subject of the message. Only present if message_type: email.'
          type: string
          example: Greetings
        body:
          description: The message body, which may contain HTML.
          type: string
          example: Hello
        message_type:
          description: >-
            The type of message that was sent. Can be email, inapp, facebook or
            twitter.
          type: string
          enum:
            - email
            - inapp
            - facebook
            - twitter
          example: inapp
        conversation_id:
          description: The associated conversation_id
          type: string
          example: '64619700005570'
      required:
        - type
        - id
        - created_at
        - body
        - message_type
    multiple_filter_search_request:
      type: object
      properties:
        operator:
          description: An operator to allow boolean inspection between multiple fields.
          type: string
          enum:
            - AND
            - OR
          example: AND
        value:
          oneOf:
            - title: multiple filter search request
              description: Add mutiple filters.
              type: array
              items:
                $ref: '#/components/schemas/multiple_filter_search_request'
            - title: single filter search request
              description: Add a single filter field.
              type: array
              items:
                $ref: '#/components/schemas/single_filter_search_request'
    news_item:
      title: News Item
      description: >-
        A News Item is a content type in Intercom enabling you to announce
        product updates, company news, promotions, events and more with your
        customers.
      type: object
      x-tags:
        - News
      properties:
        title:
          description: The title of the news item.
          type: string
          example: 'New feature: News Items'
        type:
          description: The type of object.
          type: string
          enum:
            - news-item
          example: news-item
        id:
          description: The unique identifier for the news item which is given by Intercom.
          type: string
          example: '141'
        workspace_id:
          description: The id of the workspace which the news item belongs to.
          type: string
          example: t74hdn32
        body:
          description: The news item body, which may contain HTML.
          type: string
          example: >-
            We are excited to announce the launch of News Items, a new content
            type in Intercom enabling you to announce product updates, company
            news, promotions, events and more with your customers.
        sender_id:
          description: >-
            The id of the sender of the news item. Must be a teammate on the
            workspace.
          type: integer
          example: 123
        state:
          description: >-
            News items will not be visible to your users in the assigned
            newsfeeds until they are set live.
          type: string
          enum:
            - draft
            - live
          example: live
        newsfeed_assignments:
          description: A list of newsfeed_assignments to assign to the specified newsfeed.
          type: array
          items:
            $ref: '#/components/schemas/newsfeed_assignment'
        labels:
          description: Label names displayed to users to categorize the news item.
          type: array
          items:
            description: The label name.
            type: string
            nullable: true
            example: Product Update
        cover_image_url:
          description: URL of the image used as cover. Must have .jpg or .png extension.
          type: string
          format: uri
          nullable: true
          example: https://example.com/cover.jpg
        reactions:
          description: >-
            Ordered list of emoji reactions to the news item. When empty,
            reactions are disabled.
          type: array
          items:
            description: The emoji reaction to the news item.
            type: string
            nullable: true
            example: 👍
        deliver_silently:
          description: >-
            When set to true, the news item will appear in the messenger
            newsfeed without showing a notification badge.
          type: boolean
          example: true
        created_at:
          description: Timestamp for when the news item was created.
          type: integer
          format: timestamp
          example: 1610589632
        updated_at:
          description: Timestamp for when the news item was last updated.
          type: integer
          format: timestamp
          example: 1610589632
    news_item_request:
      title: Create News Item Request
      description: >-
        A News Item is a content type in Intercom enabling you to announce
        product updates, company news, promotions, events and more with your
        customers.
      type: object
      properties:
        title:
          description: The title of the news item.
          type: string
          example: Halloween is here!
        body:
          description: The news item body, which may contain HTML.
          type: string
          example: <p>New costumes in store for this spooky season</p>
        sender_id:
          description: >-
            The id of the sender of the news item. Must be a teammate on the
            workspace.
          type: integer
          example: 123
        state:
          description: >-
            News items will not be visible to your users in the assigned
            newsfeeds until they are set live.
          type: string
          enum:
            - draft
            - live
          example: live
        deliver_silently:
          description: >-
            When set to `true`, the news item will appear in the messenger
            newsfeed without showing a notification badge.
          type: boolean
          example: true
        labels:
          description: Label names displayed to users to categorize the news item.
          type: array
          items:
            type: string
          example:
            - Product
            - Update
            - New
        reactions:
          description: >-
            Ordered list of emoji reactions to the news item. When empty,
            reactions are disabled.
          type: array
          items:
            type: string
            nullable: true
          example:
            - 😆
            - 😅
        newsfeed_assignments:
          description: A list of newsfeed_assignments to assign to the specified newsfeed.
          type: array
          items:
            $ref: '#/components/schemas/newsfeed_assignment'
      required:
        - title
        - sender_id
    newsfeed:
      title: Newsfeed
      description: >
        A newsfeed is a collection of news items, targeted to a specific
        audience.


        Newsfeeds currently cannot be edited through the API, please refer to
        [this
        article](https://www.intercom.com/help/en/articles/6362267-getting-started-with-news)
        to set up your newsfeeds in Intercom.
      type: object
      x-tags:
        - News
      properties:
        id:
          description: The unique identifier for the newsfeed which is given by Intercom.
          type: string
          example: '12312'
        type:
          description: The type of object.
          type: string
          enum:
            - newsfeed
          example: newsfeed
        name:
          description: >-
            The name of the newsfeed. This name will never be visible to your
            users.
          type: string
          example: My Newsfeed
        created_at:
          description: Timestamp for when the newsfeed was created.
          type: integer
          format: timestamp
          example: 1674917488
        updated_at:
          description: Timestamp for when the newsfeed was last updated.
          type: integer
          format: timestamp
          example: 1674917488
    newsfeed_assignment:
      title: Newsfeed Assignment
      description: Assigns a news item to a newsfeed.
      type: object
      x-tags:
        - News
      properties:
        newsfeed_id:
          description: >-
            The unique identifier for the newsfeed which is given by Intercom.
            Publish dates cannot be in the future, to schedule news items use
            the dedicated feature in app (see this article).
          type: integer
          example: 198313
        published_at:
          description: >-
            Publish date of the news item on the newsfeed, use this field if you
            want to set a publish date in the past (e.g. when importing existing
            news items). On write, this field will be ignored if the news item
            state is "draft".
          type: integer
          format: timestamp
          example: 1674917488
    note:
      title: Note
      description: Notes allow you to annotate and comment on your contacts.
      type: object
      x-tags:
        - Notes
      properties:
        type:
          description: String representing the object's type. Always has the value `note`.
          type: string
          example: note
        id:
          description: The id of the note.
          type: string
          example: '17495962'
        created_at:
          description: The time the note was created.
          type: integer
          format: timestamp
          example: 1674589321
        contact:
          description: Represents the contact that the note was created about.
          type: object
          nullable: true
          properties:
            type:
              description: >-
                String representing the object's type. Always has the value
                `contact`.
              type: string
            id:
              description: The id of the contact.
              type: string
              example: 214656d0c743eafcfde7f248
        author:
          description: Optional. Represents the Admin that created the note.
          $ref: '#/components/schemas/admin'
        body:
          description: The body text of the note.
          type: string
          example: <p>Text for the note.</p>
    note_list:
      title: Paginated Response
      description: A paginated list of notes associated with a contact.
      type: object
      properties:
        type:
          description: String representing the object's type. Always has the value `list`.
          type: string
          example: list
        data:
          description: An array of notes.
          type: array
          items:
            $ref: '#/components/schemas/note'
        total_count:
          description: A count of the total number of notes.
          type: integer
          example: 1
        pages:
          $ref: '#/components/schemas/cursor_pages'
    open_conversation_request:
      title: Open Conversation Request
      description: Payload of the request to open a conversation
      type: object
      properties:
        message_type:
          type: string
          enum:
            - open
          example: open
        admin_id:
          description: The id of the admin who is performing the action.
          type: string
          example: '5017690'
      required:
        - message_type
        - admin_id
    pages_link:
      title: Pagination Object
      description: >
        The majority of list resources in the API are paginated to allow clients
        to traverse data over multiple requests.


        Their responses are likely to contain a pages object that hosts
        pagination links which a client can use to paginate through the data
        without having to construct a query. The link relations for the pages
        field are as follows.
      type: object
      properties:
        type:
          type: string
          example: pages
          enum:
            - pages
        page:
          type: integer
          example: 1
        next:
          description: >-
            A link to the next page of results. A response that does not contain
            a next link does not have further data to fetch.
          type: string
          format: uri
          nullable: true
        per_page:
          type: integer
          example: 50
        total_pages:
          type: integer
          example: 1
    paginated_response:
      title: Paginated Response
      description: Paginated Response
      type: object
      properties:
        type:
          description: The type of object
          type: string
          enum:
            - list
            - conversation.list
          example: list
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of objects.
          type: integer
          example: 1
        data:
          description: An array of Objects
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/news_item'
              - $ref: '#/components/schemas/newsfeed'
    part_attachment:
      title: Part attachment
      description: The file attached to a part
      type: object
      properties:
        type:
          description: The type of attachment
          type: string
          example: upload
        name:
          description: The name of the attachment
          type: string
          example: example.png
        url:
          description: The URL of the attachment
          type: string
          example: https://picsum.photos/200/300
        content_type:
          description: The content type of the attachment
          type: string
          example: image/png
        filesize:
          description: The size of the attachment
          type: integer
          example: 100
        width:
          description: The width of the attachment
          type: integer
          example: 100
        height:
          description: The height of the attachment
          type: integer
          example: 100
    phone_switch:
      title: Phone Switch
      description: Phone Switch Response
      type: object
      nullable: true
      properties:
        type:
          description: ''
          type: string
          enum:
            - phone_call_redirect
          default: phone_call_redirect
          example: phone_call_redirect
        phone:
          description: >-
            Phone number in E.164 format, that has received the SMS to continue
            the conversation in the Messenger.
          type: string
          example: +1 1234567890
    redact_conversation_request:
      oneOf:
        - title: Redact Conversation Part Request
          description: Payload of the request to redact a conversation part
          type: object
          properties:
            type:
              description: The type of resource being redacted.
              type: string
              enum:
                - conversation_part
              example: conversation_part
            conversation_id:
              description: The id of the conversation.
              type: string
              example: '19894788788'
            conversation_part_id:
              description: The id of the conversation_part.
              type: string
              example: '19381789428'
          required:
            - type
            - conversation_id
            - conversation_part_id
        - title: Redact Conversation Source Request
          description: Payload of the request to redact a conversation source
          type: object
          properties:
            type:
              description: The type of resource being redacted.
              type: string
              enum:
                - source
              example: source
            conversation_id:
              description: The id of the conversation.
              type: string
              example: '19894788788'
            source_id:
              description: The id of the source.
              type: string
              example: '19894781231'
          required:
            - type
            - conversation_id
            - source_id
    reference:
      title: Reference
      description: reference to another object
      type: object
      properties:
        type:
          description: ''
          type: string
          example: contact
        id:
          description: ''
          type: string
          nullable: true
          example: 1a2b3c
    reply_conversation_request:
      oneOf:
        - $ref: '#/components/schemas/contact_reply_conversation_request'
        - $ref: '#/components/schemas/admin_reply_conversation_request'
    search_request:
      title: Search data
      description: Search using Intercoms Search APIs.
      type: object
      properties:
        query:
          oneOf:
            - title: Single filter search request
              $ref: '#/components/schemas/single_filter_search_request'
            - title: multiple filter search request
              $ref: '#/components/schemas/multiple_filter_search_request'
        pagination:
          $ref: '#/components/schemas/starting_after_paging'
      required:
        - query
    section:
      title: Section
      description: >-
        Sections are subdivisions of a collection, with a collection potentially
        having multiple sections.
      type: object
      x-tags:
        - Help Center
      properties:
        type:
          description: The type of object - `section`.
          type: string
          enum:
            - section
          default: section
          example: section
        id:
          description: The unique identifier for the section which is given by Intercom.
          type: string
          example: '6871119'
        workspace_id:
          description: The id of the workspace which the section belongs to.
          type: string
          example: hfi1bx4l
        name:
          description: >-
            The name of the section. For multilingual sections, this will be the
            name of the default language's content.
          type: string
          example: Default language name
        created_at:
          description: >-
            The time when the section was created. For multilingual sections,
            this will be the timestamp of creation of the default language's
            content.
          type: integer
          format: date-time
          example: 1672928359
        updated_at:
          description: >-
            The time when the section was last updated. For multilingual
            sections, this will be the timestamp of last update of the default
            language's content.
          type: integer
          format: date-time
          example: 1672928610
        url:
          description: >-
            The URL of the section. For multilingual help centers, this will be
            the URL of the section for the default language.
          type: string
          nullable: true
          example: http://intercom.test/help/section/name
        icon:
          description: The icon of the section.
          type: string
          nullable: true
          example: book-bookmark
        order:
          description: >-
            The order of the section in relation to others sections within a
            collection. Values go from `0`` upwards. `0`` is the default if
            there's no order.
          type: integer
          example: 1
        parent_id:
          description: The id of the parent section.
          oneOf:
            - title: Integer
              type: integer
            - title: String
              type: string
          example: 6871119
        default_locale:
          description: >-
            The default locale of the help center. This field is only returned
            for multilingual help centers.
          type: string
          example: en
        translated_content:
          nullable: true
          $ref: '#/components/schemas/group_translated_content'
    section_list:
      title: Sections
      description: This will return a list of Sections for the App.
      type: object
      properties:
        type:
          description: The type of the object - `list`.
          type: string
          enum:
            - list
          example: list
        pages:
          $ref: '#/components/schemas/cursor_pages'
        total_count:
          description: A count of the total number of sections.
          type: integer
          example: 12
        data:
          description: An array of section objects
          type: array
          items:
            $ref: '#/components/schemas/section'
    segment:
      title: Segment
      description: A segment is a group of your contacts defined by the rules that you set.
      type: object
      x-tags:
        - Segments
      properties:
        type:
          description: The type of object.
          type: string
          enum:
            - segment
          example: segment
        id:
          description: The unique identifier representing the segment.
          type: string
          example: 56203d253cba154d39010062
        name:
          description: The name of the segment.
          type: string
          example: Active
        created_at:
          description: The time the segment was created.
          type: integer
          example: 1394621988
        updated_at:
          description: The time the segment was updated.
          type: integer
          example: 1394622004
        person_type:
          description: 'Type of the contact: contact (lead) or user.'
          type: string
          enum:
            - contact
            - user
          example: contact
        count:
          description: >-
            The number of items in the user segment. It's returned when
            `include_count=true` is included in the request.
          type: integer
          example: 3
          nullable: true
    segment_list:
      title: Segment List
      description: >-
        This will return a list of Segment Objects. The result may also have a
        pages object if the response is paginated.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - segment.list
          example: segment.list
        segments:
          description: A list of Segment objects
          type: array
          items:
            $ref: '#/components/schemas/segment'
        pages:
          description: >-
            A pagination object, which may be empty, indicating no further pages
            to fetch.
          type: object
    single_filter_search_request:
      type: object
      properties:
        field:
          description: The Intercom defined id representing the company.
          type: string
          example: custom_attributes.social_network
        operator:
          description: The Intercom defined id representing the company.
          type: string
          enum:
            - '='
            - '!='
            - IN
            - NIN
            - <
            - '>'
            - '~'
            - '!~'
            - ^
            - $
          example: '='
        value:
          description: The Intercom defined id representing the company.
          type: string
          example: facebook
    sla_applied:
      title: Applied SLA
      description: >
        The SLA Applied object contains the details for which SLA has been
        applied to this conversation.

        Important: if there are any canceled sla_events for the conversation -
        meaning an SLA has been manually removed from a conversation, the
        sla_status will always be returned as null.
      type: object
      nullable: true
      properties:
        type:
          description: object type
          type: string
          example: conversation_sla_summary
        sla_name:
          description: The name of the SLA as given by the teammate when it was created.
          type: string
          example: ''
        sla_status:
          description: |-
            SLA statuses:
                        - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.
                        - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.
                        - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.
          type: string
          enum:
            - hit
            - missed
            - cancelled
            - active
          example: hit
    snooze_conversation_request:
      title: Snooze Conversation Request
      description: Payload of the request to snooze a conversation
      type: object
      properties:
        message_type:
          type: string
          enum:
            - snoozed
          example: snoozed
        admin_id:
          description: The id of the admin who is performing the action.
          type: string
          example: '5017691'
        snoozed_until:
          description: The time you want the conversation to reopen.
          type: integer
          format: timestamp
          example: 1673609604
      required:
        - message_type
        - admin_id
        - snoozed_until
    social_profile:
      title: Social Profile
      description: >-
        A Social Profile allows you to label your contacts, companies, and
        conversations and list them using that Social Profile.
      type: object
      properties:
        type:
          description: value is "social_profile"
          type: string
          example: social_profile
        name:
          description: The name of the Social media profile
          type: string
          example: Facebook
        url:
          description: The name of the Social media profile
          type: string
          format: uri
          example: http://twitter.com/th1sland
    starting_after_paging:
      title: StartingAfterPaging
      type: object
      nullable: true
      properties:
        page:
          type: integer
          example: 2
        starting_after:
          type: string
          example: >-
            1HaSB+xrOyyMXAkS/c1RteCL7BzOzTvYjmjakgTergIH31eoe2v4/sbLsJWP\nIncfQLD3ouPkZlCwJ86F\n
    subscription_type:
      title: Subscription Types
      description: >-
        A subscription type lets customers easily opt out of non-essential
        communications without missing what's important to them.
      type: object
      x-tags:
        - Subscription Types
      properties:
        type:
          description: The type of the object - subscription
          type: string
          example: subscription
        id:
          description: The unique identifier representing the subscription type.
          type: string
          example: '123456'
        state:
          description: The state of the subscription type.
          type: string
          enum:
            - live
            - draft
            - archived
          example: live
        default_translation:
          $ref: '#/components/schemas/translation'
        translations:
          description: >-
            An array of translations objects with the localised version of the
            subscription type in each available locale within your translation
            settings.
          type: array
          items:
            $ref: '#/components/schemas/translation'
        consent_type:
          description: Describes the type of consent.
          type: string
          enum:
            - opt_out
            - opt_in
          example: opt_in
        content_types:
          description: >-
            The message types that this subscription supports - can contain
            `email` or `sms_message`.
          type: array
          items:
            type: string
            enum:
              - email
              - sms_message
            example: email
    subscription_type_list:
      title: Subscription Types
      description: A list of subscription type objects.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - list
          example: list
        data:
          description: A list of subscription type objects associated with the workspace .
          type: array
          items:
            $ref: '#/components/schemas/subscription_type'
    tag:
      title: Tag
      description: >-
        A tag allows you to label your contacts, companies, and conversations
        and list them using that tag.
      type: object
      x-tags:
        - Tags
      properties:
        type:
          description: value is "tag"
          type: string
          example: tag
        id:
          description: The id of the tag
          type: string
          example: '123456'
        name:
          description: The name of the tag
          type: string
          example: Test tag
        applied_at:
          description: The time when the tag was applied to the object
          type: integer
          format: date-time
          example: 1663597223
        applied_by:
          $ref: '#/components/schemas/reference'
    tag_company_request:
      title: Tag Company Request Payload
      description: You can tag a single company or a list of companies.
      type: object
      properties:
        name:
          description: The name of the tag, which will be created if not found.
          type: string
          example: Independent
        companies:
          description: >-
            The id or company_id of the company can be passed as input
            parameters.
          type: array
          items:
            properties:
              id:
                description: The Intercom defined id representing the company.
                type: string
                example: 531ee472cce572a6ec000006
              company_id:
                description: The company id you have defined for the company.
                type: string
                example: '6'
      required:
        - name
        - companies
    tag_list:
      title: Tags
      description: A list of tags objects in the workspace.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - list
          example: list
        data:
          description: A list of tags objects associated with the workspace .
          type: array
          items:
            $ref: '#/components/schemas/tag'
    tag_multiple_users_request:
      title: Tag Users Request Payload
      description: You can tag a list of users.
      type: object
      properties:
        name:
          description: The name of the tag, which will be created if not found.
          type: string
          example: Independent
        users:
          type: array
          items:
            properties:
              id:
                description: The Intercom defined id representing the user.
                type: string
                example: 5f7f0d217289f8d2f4262080
      required:
        - name
        - users
    team:
      title: Team
      description: Teams are groups of admins in Intercom.
      type: object
      x-tags:
        - Teams
      properties:
        type:
          description: Value is always "team"
          type: string
          example: team
        id:
          description: The id of the team
          type: string
          example: '814865'
        name:
          description: The name of the team
          type: string
          example: Example Team
        admin_ids:
          description: The list of admin IDs that are a part of the team.
          type: array
          example:
            - 493881
          items:
            type: integer
        admin_priority_level:
          $ref: '#/components/schemas/admin_priority_level'
    team_list:
      title: Team List
      description: This will return a list of team objects for the App.
      type: object
      properties:
        type:
          description: The type of the object
          type: string
          enum:
            - team.list
          example: team.list
        teams:
          description: A list of team objects
          type: array
          items:
            $ref: '#/components/schemas/team'
    team_priority_level:
      title: Team Priority Level
      description: Admin priority levels for teams
      type: object
      nullable: true
      properties:
        primary_team_ids:
          description: The primary team ids for the team
          type: array
          nullable: true
          example:
            - 814865
          items:
            type: integer
        secondary_team_ids:
          description: The secondary team ids for the team
          type: array
          nullable: true
          example:
            - 493881
          items:
            type: integer
    ticket:
      title: Ticket
      description: Tickets are how you track requests from your users.
      type: object
      x-tags:
        - Tickets
      nullable: true
      properties:
        type:
          description: Always ticket
          type: string
          enum:
            - ticket
          default: ticket
          example: ticket
        id:
          description: The unique identifier for the ticket which is given by Intercom.
          type: string
          example: '1295'
        ticket_id:
          description: >-
            The ID of the Ticket used in the Intercom Inbox and Messenger. Do
            not use ticket_id for API queries.
          type: string
          example: '1390'
        ticket_attributes:
          $ref: '#/components/schemas/ticket_custom_attributes'
        ticket_state:
          description: The state the ticket is currenly in
          type: string
          enum:
            - submitted
            - in_progress
            - waiting_on_customer
            - resolved
          example: submitted
        ticket_state_internal_label:
          description: >-
            The state the ticket is currently in, in a human readable form -
            visible in Intercom
          type: string
        ticket_state_external_label:
          description: >-
            The state the ticket is currently in, in a human readable form -
            visible to customers, in the messenger, email and tickets portal.
          type: string
        ticket_type:
          $ref: '#/components/schemas/ticket_type'
        contacts:
          $ref: '#/components/schemas/ticket_contacts'
        admin_assignee_id:
          description: The id representing the admin assigned to the ticket.
          type: string
          example: '1295'
        team_assignee_id:
          description: The id representing the team assigned to the ticket.
          type: string
          example: '1295'
        created_at:
          description: The time the ticket was created as a UTC Unix timestamp.
          type: integer
          format: date-time
          example: 1663597223
        updated_at:
          description: The last time the ticket was updated as a UTC Unix timestamp.
          type: integer
          format: date-time
          example: 1663597260
        ticket_parts:
          $ref: '#/components/schemas/ticket_parts'
        is_shared:
          description: Whether or not the ticket is shared with the customer.
          type: boolean
          example: true
    ticket_contacts:
      title: Contacts
      description: The list of contacts affected by a ticket.
      type: object
      x-tags:
        - Tickets
      properties:
        type:
          description: always contact.list
          type: string
          enum:
            - contact.list
          example: contact.list
        contacts:
          description: The list of contacts affected by this ticket.
          type: array
          items:
            $ref: '#/components/schemas/contact_reference'
    ticket_custom_attributes:
      title: Ticket Attributes
      description: >-
        An object containing the different attributes associated to the ticket
        as key-value pairs. For the default title and description attributes,
        the keys are `_default_title_` and `_default_description_`.
      type: object
      additionalProperties:
        anyOf:
          - type: string
            nullable: true
          - type: number
          - type: boolean
          - type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
          - $ref: '#/components/schemas/file_attribute'
      example:
        name: example
        question: Can I have some help?
    ticket_note:
      title: A Ticket Part representing a note
      description: A Ticket Part representing a note in the ticket
      type: object
      properties:
        type:
          description: Always ticket_part
          type: string
          example: ticket_part
          enum:
            - ticket_part
        id:
          description: The id representing the note.
          type: string
          example: '3'
        part_type:
          description: Always note
          type: string
          example: note
          enum:
            - note
        body:
          description: The message body, which may contain HTML.
          type: string
          nullable: true
          example: <p>Okay!</p>
        created_at:
          description: The time the note was created.
          type: integer
          format: date-time
          example: 1663597223
        updated_at:
          description: The last time the note was updated.
          type: integer
          format: date-time
          example: 1663597260
        author:
          $ref: '#/components/schemas/ticket_part_author'
        attachments:
          title: Ticket part attachments
          description: A list of attachments for the part.
          type: array
          items:
            $ref: '#/components/schemas/part_attachment'
        redacted:
          description: Whether or not the ticket part has been redacted.
          type: boolean
          example: false
    ticket_part:
      title: Ticket Part
      description: A Ticket Part represents a message in the ticket.
      type: object
      x-tags:
        - Tickets
      properties:
        type:
          description: Always ticket_part
          type: string
          example: ticket_part
        id:
          description: The id representing the ticket part.
          type: string
          example: '3'
        part_type:
          description: The type of ticket part.
          type: string
          example: comment
        body:
          description: The message body, which may contain HTML.
          type: string
          nullable: true
          example: <p>Okay!</p>
        previous_ticket_state:
          description: The previous state of the ticket.
          type: string
          enum:
            - submitted
            - in_progress
            - waiting_on_customer
            - resolved
          example: submitted
        ticket_state:
          description: The state of the ticket.
          type: string
          enum:
            - submitted
            - in_progress
            - waiting_on_customer
            - resolved
          example: submitted
        created_at:
          description: The time the ticket part was created.
          type: integer
          format: date-time
          example: 1663597223
        updated_at:
          description: The last time the ticket part was updated.
          type: integer
          format: date-time
          example: 1663597260
        assigned_to:
          description: >-
            The id of the admin that was assigned the ticket by this ticket_part
            (null if there has been no change in assignment.)
          $ref: '#/components/schemas/reference'
          nullable: true
        author:
          $ref: '#/components/schemas/ticket_part_author'
        attachments:
          title: Ticket part attachments
          description: A list of attachments for the part.
          type: array
          items:
            $ref: '#/components/schemas/part_attachment'
        external_id:
          description: The external id of the ticket part
          type: string
          nullable: true
          example: abcd1234
        redacted:
          description: Whether or not the ticket part has been redacted.
          type: boolean
          example: false
    ticket_part_author:
      title: Ticket part author
      description: >-
        The author that wrote or triggered the part. Can be a bot, admin, team
        or user.
      type: object
      properties:
        type:
          type: string
          enum:
            - admin
            - bot
            - team
        id:
          description: The id of the author
          type: string
          example: '274'
        name:
          description: The name of the author
          type: string
          nullable: true
          example: Operator
        email:
          description: The email of the author
          type: string
          format: email
          example: operator+abcd1234@intercom.io
    ticket_parts:
      title: Ticket Parts
      description: >-
        A list of Ticket Part objects for each note and event in the ticket.
        There is a limit of 500 parts.
      type: object
      properties:
        type:
          description: ''
          type: string
          enum:
            - ticket_part.list
          example: ticket_part.list
        ticket_parts:
          title: Tickt Parts
          description: >-
            A list of Ticket Part objects for each ticket. There is a limit of
            500 parts.
          type: array
          items:
            $ref: '#/components/schemas/ticket_part'
        total_count:
          description: ''
          type: integer
          example: 2
    ticket_request_custom_attributes:
      title: Ticket Attributes
      description: >-
        The attributes set on the ticket. When setting the default title and
        description attributes, the attribute keys that should be used are
        `_default_title_` and `_default_description_`. When setting ticket type
        attributes of the list attribute type, the key should be the attribute
        name and the value of the attribute should be the list item id,
        obtainable by [listing the ticket type](ref:get_ticket-types). For
        example, if the ticket type has an attribute called `priority` of type
        `list`, the key should be `priority` and the value of the attribute
        should be the guid of the list item (e.g.
        `de1825a0-0164-4070-8ca6-13e22462fa7e`).
      type: object
      additionalProperties:
        anyOf:
          - type: string
            nullable: true
          - type: number
          - type: boolean
          - type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
      example:
        name: example
        question: Can I have some help?
    ticket_type:
      title: Ticket Type
      description: >-
        A ticket type, used to define the data fields to be captured in a
        ticket.
      type: object
      x-tags:
        - Tickets
      nullable: true
      properties:
        description:
          description: The description of the ticket type
          type: string
          example: A bug that has been reported.
        type:
          description: >-
            String representing the object's type. Always has the value
            `ticket_type`.
          type: string
          example: ticket_type
        id:
          description: The id representing the ticket type.
          type: string
          example: '1295'
        name:
          description: The name of the ticket type
          type: string
          example: Bug
        icon:
          description: The icon of the ticket type
          type: string
          example: 🐞
        workspace_id:
          description: The id of the workspace that the ticket type belongs to.
          type: string
          example: ecahpwf5
        ticket_type_attributes:
          $ref: '#/components/schemas/ticket_type_attribute_list'
        archived:
          description: Whether the ticket type is archived or not.
          type: boolean
          example: false
        created_at:
          description: The date and time the ticket type was created.
          type: integer
          format: timestamp
        updated_at:
          description: The date and time the ticket type was last updated.
          type: integer
          format: timestamp
    ticket_type_attribute:
      title: Ticket Type Attribute
      description: >-
        Ticket type attribute, used to define each data field to be captured in
        a ticket.
      type: object
      nullable: true
      properties:
        description:
          description: The description of the ticket type attribute
          type: string
          example: Bug title.
        type:
          description: >-
            String representing the object's type. Always has the value
            `ticket_type_attribute`.
          type: string
          example: ticket_type_attribute
        id:
          description: The id representing the ticket type attribute.
          type: string
          example: '1'
        workspace_id:
          description: The id of the workspace that the ticket type attribute belongs to.
          type: string
          example: ecahpwf5
        name:
          description: The name of the ticket type attribute
          type: string
          example: Title
        data_type:
          description: >-
            The type of the data attribute (allowed values: "string list integer
            decimal boolean datetime files")
          type: string
          example: string
        input_options:
          description: Input options for the attribute
          type: object
          example: 'multiline: true'
        order:
          description: The order of the attribute against other attributes
          type: integer
          example: 1
        required_to_create:
          description: Whether the attribute is required or not for teammates.
          type: boolean
          default: false
          example: false
        required_to_create_for_contacts:
          description: Whether the attribute is required or not for contacts.
          type: boolean
          default: false
          example: false
        visible_on_create:
          description: Whether the attribute is visible or not to teammates.
          type: boolean
          default: true
          example: false
        visible_to_contacts:
          description: Whether the attribute is visible or not to contacts.
          type: boolean
          default: true
          example: false
        default:
          description: Whether the attribute is built in or not.
          type: boolean
          example: true
        ticket_type_id:
          description: The id of the ticket type that the attribute belongs to.
          type: integer
          example: 42
        archived:
          description: Whether the ticket type attribute is archived or not.
          type: boolean
          example: false
        created_at:
          description: The date and time the ticket type attribute was created.
          type: integer
          format: timestamp
        updated_at:
          description: The date and time the ticket type attribute was last updated.
          type: integer
          format: timestamp
    ticket_type_attribute_list:
      title: Ticket Type Attributes
      description: A list of attributes associated with a given ticket type.
      type: object
      properties:
        type:
          description: >-
            String representing the object's type. Always has the value
            `ticket_type_attributes.list`.
          type: string
        ticket_type_attributes:
          description: >-
            A list of ticket type attributes associated with a given ticket
            type.
          type: array
          items:
            $ref: '#/components/schemas/ticket_type_attribute'
    ticket_type_list:
      title: Ticket Types
      description: A list of ticket types associated with a given workspace.
      type: object
      properties:
        type:
          description: >-
            String representing the object's type. Always has the value
            `ticket_type.list`.
          type: string
        ticket_types:
          description: A list of ticket_types associated with a given workspace.
          type: array
          items:
            $ref: '#/components/schemas/ticket_type'
    translation:
      title: Translation
      description: >-
        A translation object contains the localised details of a subscription
        type.
      type: object
      properties:
        description:
          description: The localised description of the subscription type.
          type: string
          example: Offers, product and feature announcements
        name:
          description: The localised name of the subscription type.
          type: string
          example: Announcements
        locale:
          description: >-
            The two character identifier for the language of the translation
            object.
          type: string
          example: en
    untag_company_request:
      title: Untag Company Request Payload
      description: You can tag a single company or a list of companies.
      type: object
      properties:
        name:
          description: The name of the tag which will be untagged from the company
          type: string
          example: Independent
        companies:
          description: >-
            The id or company_id of the company can be passed as input
            parameters.
          type: array
          items:
            properties:
              id:
                description: The Intercom defined id representing the company.
                type: string
                example: 531ee472cce572a6ec000006
              company_id:
                description: The company id you have defined for the company.
                type: string
                example: '6'
              untag:
                description: Always set to true
                type: boolean
                example: true
      required:
        - name
        - companies
    update_article_request:
      title: Update Article Request Payload
      description: You can Update an Article
      type: object
      nullable: true
      properties:
        title:
          description: >-
            The title of the article.For multilingual articles, this will be the
            title of the default language's content.
          type: string
          example: Thanks for everything
        description:
          description: >-
            The description of the article. For multilingual articles, this will
            be the description of the default language's content.
          type: string
          example: Description of the Article
        body:
          description: >-
            The content of the article. For multilingual articles, this will be
            the body of the default language's content.
          type: string
          example: <p>This is the body in html</p>
        author_id:
          description: >-
            The id of the author of the article. For multilingual articles, this
            will be the id of the author of the default language's content. Must
            be a teammate on the help center's workspace.
          type: integer
          example: 1295
        state:
          description: >-
            Whether the article will be `published` or will be a `draft`.
            Defaults to draft. For multilingual articles, this will be the state
            of the default language's content.
          type: string
          enum:
            - published
            - draft
          example: draft
        parent_id:
          description: >-
            The id of the article's parent collection or section. An article
            without this field stands alone.
          type: string
          example: '18'
        parent_type:
          description: The type of parent, which can either be a `collection` or `section`.
          type: string
          example: collection
        translated_content:
          $ref: '#/components/schemas/article_translated_content'
    update_collection_request:
      title: Update Collection Request Payload
      description: You can update a collection
      type: object
      properties:
        description:
          description: >-
            The description of the collection. For multilingual collections,
            this will be the description of the default language's content.
          type: string
          example: English description
        name:
          description: >-
            The name of the collection. For multilingual collections, this will
            be the name of the default language's content.
          type: string
          example: collection 51
        translated_content:
          nullable: true
          $ref: '#/components/schemas/group_translated_content'
    update_contact_request:
      title: Update Contact Request Payload
      description: You can update a contact
      type: object
      properties:
        role:
          description: The role of the contact.
          type: string
        external_id:
          description: A unique identifier for the contact which is given to Intercom
          type: string
        email:
          description: The contacts email
          type: string
          example: jdoe@example.com
        phone:
          description: The contacts phone
          type: string
          nullable: true
          example: '+353871234567'
        name:
          description: The contacts name
          type: string
          nullable: true
          example: John Doe
        avatar:
          description: An image URL containing the avatar of a contact
          type: string
          nullable: true
          example: https://www.example.com/avatar_image.jpg
        signed_up_at:
          description: The time specified for when a contact signed up
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        last_seen_at:
          description: >-
            The time when the contact was last seen (either where the Intercom
            Messenger was installed or when specified manually)
          type: integer
          format: date-time
          nullable: true
          example: 1571672154
        owner_id:
          description: >-
            The id of an admin that has been assigned account ownership of the
            contact
          type: integer
          nullable: true
          example: 123
        unsubscribed_from_emails:
          description: Whether the contact is unsubscribed from emails
          type: boolean
          nullable: true
          example: true
        custom_attributes:
          description: The custom attributes which are set for the contact
          type: object
          nullable: true
    update_conversation_request:
      title: Update Conversation Request
      description: Payload of the request to update a conversation
      type: object
      properties:
        read:
          description: Mark a conversation as read within Intercom.
          type: boolean
          example: true
        custom_attributes:
          $ref: '#/components/schemas/custom_attributes'
    update_data_attribute_request:
      title: Update Data Attribute Request
      description: ''
      type: object
      properties:
        description:
          description: The readable description you see in the UI for the attribute.
          type: string
          example: My Data Attribute Description
        archived:
          description: Whether the attribute is to be archived or not.
          type: boolean
          example: false
        options:
          description: >-
            To create list attributes. Provide a set of hashes with `value` as
            the key of the options you want to make. `data_type` must be
            `string`.
          type: array
          items:
            type: string
          example:
            - option1
            - option2
        messenger_writable:
          description: Can this attribute be updated by the Messenger
          type: boolean
          example: false
    update_section_request:
      title: Update Section Request Payload
      description: You can update a Section
      type: object
      properties:
        name:
          description: >-
            The name of the collection. For multilingual collections, this will
            be the name of the default language's content.
          type: string
          example: Section 51
        parent_id:
          description: The id for the collection this section will be within.
          type: integer
          example: 18
        translated_content:
          nullable: true
          $ref: '#/components/schemas/group_translated_content'
    update_ticket_request:
      title: Update Ticket Request Payload
      description: You can update a Ticket
      type: object
      properties:
        ticket_attributes:
          description: The attributes set on the ticket.
          type: object
          example:
            title: example
            description: having a problem
        state:
          description: The state of the ticket.
          type: string
          enum:
            - in_progress
            - waiting_on_customer
            - resolved
          example: submitted
        is_shared:
          description: Specify whether the ticket is visible to users.
          type: boolean
          example: true
        assignment:
          type: object
          properties:
            admin_id:
              description: The ID of the admin performing the action.
              type: string
              example: '123'
            assignee_id:
              description: >-
                The ID of the admin or team to which the ticket is assigned. Set
                this 0 to unassign it.
              type: string
              example: '123'
    update_ticket_type_attribute_request:
      title: Update Ticket Type Attribute Request Payload
      description: You can update a Ticket Type Attribute
      type: object
      properties:
        description:
          description: >-
            The description of the attribute presented to the teammate or
            contact
          type: string
          example: Priority level of the bug
        name:
          description: The name of the ticket type attribute
          type: string
          example: Bug Priority
        required_to_create:
          description: >-
            Whether the attribute is required to be filled in when teammates are
            creating the ticket in Inbox.
          type: boolean
          default: false
          example: false
        required_to_create_for_contacts:
          description: >-
            Whether the attribute is required to be filled in when contacts are
            creating the ticket in Messenger.
          type: boolean
          default: false
          example: false
        visible_on_create:
          description: >-
            Whether the attribute is visible to teammates when creating a ticket
            in Inbox.
          type: boolean
          default: true
          example: true
        visible_to_contacts:
          description: >-
            Whether the attribute is visible to contacts when creating a ticket
            in Messenger.
          type: boolean
          default: true
          example: true
        multiline:
          description: >-
            Whether the attribute allows multiple lines of text (only applicable
            to string attributes)
          type: boolean
          example: false
        list_items:
          description: >-
            A comma delimited list of items for the attribute value (only
            applicable to list attributes)
          type: string
          example: Low Priority,Medium Priority,High Priority
        allow_multiple_values:
          description: >-
            Whether the attribute allows multiple files to be attached to it
            (only applicable to file attributes)
          type: boolean
          example: false
        archived:
          description: >-
            Whether the attribute should be archived and not shown during
            creation of the ticket (it will still be present on previously
            created tickets)
          type: boolean
          example: false
    update_ticket_type_request:
      title: Update Ticket Type Request Payload
      description: >
        The request payload for updating a ticket type.

        You can copy the `icon` property for your ticket type from [Twemoji
        Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
      type: object
      nullable: true
      properties:
        description:
          description: The description of the ticket type.
          type: string
          example: A bug has been occured
        name:
          description: The name of the ticket type.
          type: string
          example: Bug
        icon:
          description: The icon of the ticket type.
          type: string
          example: 🐞
          default: 🎟️
        archived:
          description: The archived status of the ticket type.
          type: boolean
          example: false
        is_internal:
          description: >-
            Whether the tickets associated with this ticket type are intended
            for internal use only or will be shared with customers. This is
            currently a limited attribute.
          type: boolean
          example: false
          default: false
    update_visitor_request:
      title: Update Visitor Request Payload
      description: Update an existing visitor.
      type: object
      properties:
        id:
          description: A unique identified for the visitor which is given by Intercom.
          type: string
          example: 8a88a590-e
        user_id:
          description: A unique identified for the visitor which is given by you.
          type: string
          example: '123'
        name:
          description: The visitor's name.
          type: string
          example: Christian Bale
        custom_attributes:
          description: The custom attributes which are set for the visitor.
          type: object
          additionalProperties:
            type: string
          example:
            paid_subscriber: true
            monthly_spend: 155.5
            team_mates: 9
      anyOf:
        - required:
            - id
        - required:
            - user_id
    visitor:
      title: Visitor
      description: >-
        Visitors are useful for representing anonymous people that have not yet
        been identified. They usually represent website visitors. Visitors are
        not visible in Intercom platform. The Visitors resource provides methods
        to fetch, update, convert and delete.
      type: object
      nullable: true
      properties:
        tags:
          type: object
          properties:
            tags:
              type: array
              items:
                properties:
                  type:
                    description: The type of the object
                    type: string
                    enum:
                      - tag
                    example: tag
                  id:
                    description: The id of the tag.
                    type: string
                    example: '8482'
                  name:
                    description: The name of the tag.
                    type: string
                    example: tag_name
            type:
              description: The type of the object
              type: string
              enum:
                - tag.list
              example: tag.list
        type:
          description: Value is 'visitor'
          type: string
          default: visitor
          example: visitor
        id:
          description: The Intercom defined id representing the Visitor.
          type: string
          example: 530370b477ad7120001d
        user_id:
          description: Automatically generated identifier for the Visitor.
          type: string
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
        anonymous:
          description: Identifies if this visitor is anonymous.
          type: boolean
          example: false
        email:
          description: The email of the visitor.
          type: string
          format: email
          example: jane.doe@example.com
        phone:
          description: The phone number of the visitor.
          type: string
          nullable: true
          example: 555-555-5555
        name:
          description: The name of the visitor.
          type: string
          nullable: true
          example: Jane Doe
        pseudonym:
          description: The pseudonym of the visitor.
          type: string
          nullable: true
          example: Red Duck from Dublin
        avatar:
          type: object
          properties:
            type:
              description: ''
              type: string
              default: avatar
              example: avatar
            image_url:
              description: This object represents the avatar associated with the visitor.
              type: string
              format: uri
              nullable: true
              example: https://example.com/avatar.png
        app_id:
          description: The id of the app the visitor is associated with.
          type: string
          example: hfi1bx4l
        companies:
          type: object
          properties:
            type:
              description: The type of the object
              type: string
              enum:
                - company.list
              example: company.list
            companies:
              type: array
              items:
                $ref: '#/components/schemas/company'
        location_data:
          type: object
          properties:
            type:
              description: ''
              type: string
              default: location_data
              example: location_data
            city_name:
              description: The city name of the visitor.
              type: string
              example: Dublin
            continent_code:
              description: The continent code of the visitor.
              type: string
              example: EU
            country_code:
              description: The country code of the visitor.
              type: string
              example: IRL
            country_name:
              description: The country name of the visitor.
              type: string
              example: Ireland
            postal_code:
              description: The postal code of the visitor.
              type: string
              example: D02 N960
            region_name:
              description: The region name of the visitor.
              type: string
              example: Leinster
            timezone:
              description: The timezone of the visitor.
              type: string
              example: Europe/Dublin
        las_request_at:
          description: The time the Lead last recorded making a request.
          type: integer
          example: 1663597260
        created_at:
          description: The time the Visitor was added to Intercom.
          type: integer
          example: 1663597223
        remote_created_at:
          description: The time the Visitor was added to Intercom.
          type: integer
          example: 1663597223
        signed_up_at:
          description: The time the Visitor signed up for your product.
          type: integer
          example: 1663597223
        updated_at:
          description: The last time the Visitor was updated.
          type: integer
          example: 1663597260
        session_count:
          description: The number of sessions the Visitor has had.
          type: integer
          example: 1
        social_profiles:
          type: object
          properties:
            type:
              description: The type of the object
              type: string
              enum:
                - social_profile.list
              example: social_profile.list
            social_profiles:
              type: array
              items:
                type: string
        owner_id:
          description: The id of the admin that owns the Visitor.
          type: string
          nullable: true
          example: '5169261'
        unsubscribed_from_emails:
          description: Whether the Visitor is unsubscribed from emails.
          type: boolean
          example: false
        marked_email_as_spam:
          description: Identifies if this visitor has marked an email as spam.
          type: boolean
          example: false
        has_hard_bounced:
          description: Identifies if this visitor has had a hard bounce.
          type: boolean
          example: false
        segments:
          type: object
          properties:
            type:
              description: The type of the object
              type: string
              enum:
                - segment.list
              example: segment.list
            segments:
              type: array
              items:
                type: string
        custom_attributes:
          description: The custom attributes you have set on the Visitor.
          type: object
          additionalProperties:
            type: string
        referrer:
          description: The referer of the visitor.
          type: string
          nullable: true
          example: https://www.google.com/
        utm_campaign:
          description: The utm_campaign of the visitor.
          type: string
          nullable: true
          example: intercom-link
        utm_content:
          description: The utm_content of the visitor.
          type: string
          nullable: true
          example: banner
        utm_medium:
          description: The utm_medium of the visitor.
          type: string
          nullable: true
          example: email
        utm_source:
          description: The utm_source of the visitor.
          type: string
          nullable: true
          example: Intercom
        utm_term:
          description: The utm_term of the visitor.
          type: string
          nullable: true
          example: messenger
        do_not_track:
          description: Identifies if this visitor has do not track enabled.
          type: boolean
          nullable: true
          example: false
    visitor_deleted_object:
      title: Visitor Deleted Object
      description: Response returned when an object is deleted
      type: object
      properties:
        id:
          description: The unique identifier for the visitor which is given by Intercom.
          type: string
          example: 530370b477ad7120001d
        type:
          description: The type of object which was deleted
          type: string
          enum:
            - visitor
          example: visitor
        user_id:
          description: Automatically generated identifier for the Visitor.
          type: string
          example: 8a88a590-e1c3-41e2-a502-e0649dbf721c
    AdminsSetAdminAwayRequest:
      type: object
      required:
        - away_mode_enabled
        - away_mode_reassign
      properties:
        away_mode_enabled:
          description: Set to "true" to change the status of the admin to away.
          type: boolean
          example: true
          default: true
        away_mode_reassign:
          description: >-
            Set to "true" to assign any new conversation replies to your default
            inbox.
          type: boolean
          example: false
          default: false
    CompaniesAttachContactToRequest:
      type: object
      required:
        - id
      properties:
        id:
          description: The unique identifier for the company which is given by Intercom
          type: string
          example: 58a430d35458202d41b1e65b
    NotesAddNoteToContactRequest:
      type: object
      required:
        - body
      properties:
        body:
          description: The text of the note.
          type: string
          example: New note
        contact_id:
          description: The unique identifier of a given contact.
          type: string
          example: '123'
        admin_id:
          description: The unique identifier of a given admin.
          type: string
          example: '123'
    SubscriptionTypesAddSubscriptionToContactRequest:
      type: object
      required:
        - id
        - consent_type
      properties:
        id:
          description: >-
            The unique identifier for the subscription which is given by
            Intercom
          type: string
          example: '37846'
        consent_type:
          description: The consent_type of a subscription, opt_out or opt_in.
          type: string
          example: opt_in
    TagsAddTagToContactRequest:
      type: object
      required:
        - id
      properties:
        id:
          description: The unique identifier for the tag which is given by Intercom
          type: string
          example: '7522907'
    ContactsUpdateContactRequest:
      oneOf:
        - $ref: '#/components/schemas/update_contact_request'
    ContactsCreateNewContactRequest:
      oneOf:
        - $ref: '#/components/schemas/create_contact_request'
    TagsAddTagToConversationRequest:
      type: object
      required:
        - id
        - admin_id
      properties:
        id:
          description: The unique identifier for the tag which is given by Intercom
          type: string
          example: '7522907'
        admin_id:
          description: The unique identifier for the admin which is given by Intercom.
          type: string
          example: '780'
    TagsRemoveFromConversationRequest:
      type: object
      required:
        - admin_id
      properties:
        admin_id:
          description: The unique identifier for the admin which is given by Intercom.
          type: string
          example: '123'
    ConversationsManageConversationRequest:
      oneOf:
        - $ref: '#/components/schemas/close_conversation_request'
        - $ref: '#/components/schemas/snooze_conversation_request'
        - $ref: '#/components/schemas/open_conversation_request'
        - $ref: '#/components/schemas/assign_conversation_request'
    TagsCreateOrUpdateTagRequest:
      oneOf:
        - $ref: '#/components/schemas/create_or_update_tag_request'
        - $ref: '#/components/schemas/tag_company_request'
        - $ref: '#/components/schemas/untag_company_request'
        - $ref: '#/components/schemas/tag_multiple_users_request'
    SwitchDeflectPhoneCallsResponse:
      type: object
      properties:
        error_key:
          type: string
          example: sms_failed
        message:
          type: string
          example: SMS was not sent due to an unknown error
      example:
        error_key: sms_failed
        message: SMS was not sent due to an unknown error
    SwitchDeflectPhoneCalls422Response:
      type: object
      properties:
        error_key:
          type: string
          example: some_error
      example:
        error_key: some_error
    TicketsUpdateTicketByIdResponse:
      type: object
      properties:
        type:
          type: string
          example: error.list
        request_id:
          type: string
          example: 7277cfdc-7edc-4448-95f2-761f4c35ae29
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: assignee_not_found
              message:
                type: string
                example: Assignee not found
      example:
        type: error.list
        request_id: 7277cfdc-7edc-4448-95f2-761f4c35ae29
        errors:
          - code: assignee_not_found
            message: Assignee not found
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
