openapi: 3.0.3
info:
  title: Dixa API
  description: >-
    Dixa enables companies to deliver customer service as it is meant to be. We
    help customer service leaders to create effortless experiences for customers
    and teams that unlock loyalty. 

    Dixa's Conversational Customer Service Platform combines powerful AI with a
    human touch to deliver a highly-personalized service experience that scales.
    Our dedicated customer success team ensures you are up and running quickly.
    Dixa powers more than 30 million conversations a year and is trusted by
    leading brands such as Interflora, On, Wise, Deezer, Rapha, Too Good to Go,
    Hello Print, and Wistia. Learn more by visiting dixa.com.
  version: v1
servers:
  - url: https://dev.dixa.io
tags:
  - name: Conversations
  - name: Agents
  - name: End Users
  - name: Teams
  - name: Tags
  - name: Analytics
  - name: Webhooks
  - name: Queues
  - name: Anonymization
  - name: Custom Attributes
  - name: Internal Notes
  - name: Contact Endpoints
  - name: Ratings
  - name: Messages
  - name: Search
paths:
  /v1/analytics/metrics:
    get:
      tags:
        - Analytics
      summary: Metrics Catalogue
      operationId: Analytics_listMetrics
      description: >-
        This endpoint lists all available metric IDs that can be used to fetch
        data in Get Metric Data
      parameters:
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The catalogue of metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricsOutput'
              example:
                data:
                  - description: >-
                      (Number of satisfied customers (4 and 5)/ Number of survey
                      responses) x 100 = % of satisfied customers
                    id: csat
                    filters:
                      - description: Used to filter by the agent_id
                        filterAttribute: agent_id
                      - description: Used to filter by the queue_id
                        filterAttribute: queue_id
                      - description: Used to filter by the channel
                        filterAttribute: channel
                      - description: Used to filter by the initial_direction
                        filterAttribute: initial_direction
                      - description: Used to filter by the tag_id
                        filterAttribute: tag_id
                      - description: Used to filter by the contact_point
                        filterAttribute: contact_point
                    aggregations:
                      - description: Calculated Percentage
                        measure: Percentage
                    relatedRecordIds:
                      - ratings
                  - description: Closed conversation data
                    id: closed_conversations
                    filters:
                      - description: Used to filter by the queue_id
                        filterAttribute: queue_id
                      - description: Used to filter by the channel
                        filterAttribute: channel
                      - description: Used to filter by the initial_direction
                        filterAttribute: initial_direction
                      - description: Used to filter by the tag_id
                        filterAttribute: tag_id
                      - description: Used to filter by the contact_point
                        filterAttribute: contact_point
                    aggregations:
                      - description: Conversation closed count
                        measure: Count
                    relatedRecordIds:
                      - closed_conversations
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Analytics
      summary: Get Metric Data
      operationId: Analytics_getMetricData
      description: Get data of a specific metric (aggregated)
      requestBody:
        description: >-
          The available request filters and aggregations for fetching the metric
          data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMetricDataInput'
            example:
              id: closed_conversationsX
              periodFilter:
                value:
                  _type: PreviousWeek
                _type: Preset
              filters:
                - attribute: channel
                  values:
                    - email
              aggregations:
                - Count
              timezone: Europe/Copenhagen
        required: true
      responses:
        '200':
          description: The metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricDataOutput'
              example:
                data:
                  id: closed_conversationsX
                  aggregates:
                    - value: 42
                      measure: Count
                      _type: LongAggregateValue
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/analytics/metrics/{metricId}:
    get:
      tags:
        - Analytics
      summary: Metric Description
      operationId: Analytics_getMetricDescription
      description: >-
        This endpoint lists all available properties of a metric to use for
        querying its data
      parameters:
        - name: metricId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The metric properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricOutput'
              example:
                data:
                  description: >-
                    (Number of satisfied customers (4 and 5)/ Number of survey
                    responses) x 100 = % of satisfied customers
                  id: csatX
                  filters:
                    - description: Used to filter by the agent_id
                      filterAttribute: agent_id
                    - description: Used to filter by the queue_id
                      filterAttribute: queue_id
                    - description: Used to filter by the channel
                      filterAttribute: channel
                    - description: Used to filter by the initial_direction
                      filterAttribute: initial_direction
                    - description: Used to filter by the tag_id
                      filterAttribute: tag_id
                    - description: Used to filter by the contact_point
                      filterAttribute: contact_point
                  aggregations:
                    - description: Calculated Percentage
                      measure: Percentage
                  relatedRecordIds:
                    - ratings
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/analytics/filter/{filterAttribute}:
    get:
      tags:
        - Analytics
      summary: Filter values
      operationId: Analytics_filterValues
      description: >-
        Get possible values to be used with a given filter attribute. Filter
        attributes are not metric or record specific, so one filter attribute
        can be used with multiple metrics/records. When a filter value is not
        relevant for a specific metric/record, it is simply ignored.
      parameters:
        - name: filterAttribute
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: >-
            The possible filter values to be used when fetching metrics or
            records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFilterValuesOutput'
              example:
                data:
                  - value: CALLBACK
                    label: Callback
                  - value: CONTACT_FORM
                    label: Contact Form
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/analytics/records:
    get:
      tags:
        - Analytics
      summary: Metric Records Catalogue
      operationId: Analytics_listRecords
      description: >-
        This endpoint lists all available record IDs that can be used to fetch
        data in Get Metric Records Data
      parameters:
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The catalogue of metric records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricRecordsOutput'
              example:
                data:
                  - description: Conversation Ratings
                    id: ratings
                    filters:
                      - description: Used to filter by the agent_id
                        filterAttribute: agent_id
                      - description: Used to filter by the queue_id
                        filterAttribute: queue_id
                      - description: Used to filter by the channel
                        filterAttribute: channel
                      - description: Used to filter by the initial_direction
                        filterAttribute: initial_direction
                      - description: Used to filter by the tag_id
                        filterAttribute: tag_id
                      - description: Used to filter by the contact_point
                        filterAttribute: contact_point
                    relatedMetricIds:
                      - csat
                    fieldsMetadata:
                      - description: Conversation ID
                        field: conversation_id
                        nullable: false
                      - description: The agent assigned to the conversation
                        field: agent_id
                        nullable: true
                      - description: >-
                          The queue which the conversation was part of when the
                          conversation was offered
                        field: queue_id
                        nullable: true
                  - description: Closed conversation data
                    id: closed_conversationsX
                    filters:
                      - description: Used to filter by the queue_id
                        filterAttribute: queue_id
                      - description: Used to filter by the channel
                        filterAttribute: channel
                      - description: Used to filter by the initial_direction
                        filterAttribute: initial_direction
                      - description: Used to filter by the tag_id
                        filterAttribute: tag_id
                      - description: Used to filter by the contact_point
                        filterAttribute: contact_point
                    relatedMetricIds:
                      - closed_conversations
                    fieldsMetadata:
                      - description: Timestamp of when the conversation was closed
                        field: closed_at
                        nullable: false
                      - description: Conversation ID
                        field: conversation_id
                        nullable: false
                      - description: The agent closing the conversation
                        field: agent_id
                        nullable: true
                      - description: >-
                          The queue which the conversation was part of when the
                          conversation was closed
                        field: queue_id
                        nullable: true
                      - description: >-
                          User closing the conversation (Agent, Enduser or
                          Unknown)
                        field: closed_by
                        nullable: false
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Analytics
      summary: Get Metric Records Data
      operationId: Analytics_getMetricRecordsData
      description: Get data of specific metric records (unaggregated)
      parameters:
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
      requestBody:
        description: The available request filters for fetching the metric records data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMetricRecordsDataInput'
            example:
              id: closed_conversationsX
              periodFilter:
                value:
                  _type: PreviousWeek
                _type: Preset
              filters:
                - attribute: initial_direction
                  values:
                    - INBOUND
              timezone: Europe/Copenhagen
        required: true
      responses:
        '200':
          description: The metric records data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricRecordsDataOutput'
              examples:
                No Value Metric Records Data Example:
                  value:
                    data:
                      - primaryTimestampField:
                          name: created_at
                          timestamp: '2023-04-21T10:23:14.293Z'
                        fields:
                          - name: csid
                            field:
                              value: 184472
                              _type: LongField
                          - name: initial_direction
                            field:
                              value: INBOUND
                              label: Inbound
                              _type: StringField
                          - name: initial_channel
                            field:
                              value: PSTN_PHONE
                              label: Phone
                              _type: StringField
                          - name: contact_point
                            field:
                              value: '+4511223344'
                              label: '+4511223344'
                              _type: StringField
                      - primaryTimestampField:
                          name: created_at
                          timestamp: '2023-04-21T10:24:04.259Z'
                        fields:
                          - name: csid
                            field:
                              value: 184473
                              _type: LongField
                          - name: initial_direction
                            field:
                              value: INBOUND
                              label: Inbound
                              _type: StringField
                          - name: initial_channel
                            field:
                              value: EMAIL
                              label: Email
                              _type: StringField
                          - name: contact_point
                            field:
                              value: dixa@email.com
                              label: dixa@email.com
                              _type: StringField
                Metric Records Data Example:
                  value:
                    data:
                      - primaryTimestampField:
                          name: created_at
                          timestamp: '2023-04-21T10:23:01.293Z'
                        value:
                          value: 4
                          _type: LongField
                        fields:
                          - name: csid
                            field:
                              value: 184474
                              _type: LongField
                          - name: current_channel
                            field:
                              value: EMAIL
                              label: Email
                              _type: StringField
                          - name: queue
                            field:
                              value: 220ffe6a-3040-4ece-ae3a-c4c6d63ff3cc
                              label: Example queue
                              _type: UUIDField
                      - primaryTimestampField:
                          name: created_at
                          timestamp: '2023-04-21T10:23:04.930Z'
                        value:
                          value: 5
                          _type: LongField
                        fields:
                          - name: csid
                            field:
                              value: 184475
                              _type: LongField
                          - name: current_channel
                            field:
                              value: CONTACT_FORM
                              label: Contact form
                              _type: StringField
                          - name: queue
                            field:
                              value: 57582f31-4fce-4435-b489-e1c7f190a92f
                              label: Example queue 2
                              _type: UUIDField
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey, Invalid value for: body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/analytics/records/{recordId}:
    get:
      tags:
        - Analytics
      summary: Metric Record Description
      operationId: Analytics_getRecordProperties
      description: >-
        This endpoint lists all available properties of a record to use for
        querying its data
      parameters:
        - name: recordId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The metric record properties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMetricRecordOutput'
              example:
                data:
                  description: Conversation Ratings
                  id: ratingsX
                  filters:
                    - description: Used to filter by the agent_id
                      filterAttribute: agent_id
                    - description: Used to filter by the queue_id
                      filterAttribute: queue_id
                    - description: Used to filter by the channel
                      filterAttribute: channel
                    - description: Used to filter by the initial_direction
                      filterAttribute: initial_direction
                    - description: Used to filter by the tag_id
                      filterAttribute: tag_id
                    - description: Used to filter by the contact_point
                      filterAttribute: contact_point
                  relatedMetricIds:
                    - csat
                  fieldsMetadata:
                    - description: Conversation ID
                      field: conversation_id
                      nullable: false
                    - description: The agent assigned to the conversation
                      field: agent_id
                      nullable: true
                    - description: >-
                        The queue which the conversation was part of when the
                        conversation was offered
                      field: queue_id
                      nullable: true
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/agents/presence:
    get:
      tags:
        - Agents
      summary: List presence
      operationId: Agents_listPresence
      description: List the presence status for all agents/admins in an organization.
      responses:
        '200':
          description: The list of presence status for all agents/admins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsListPresenceResponse'
              example:
                - userId: d31a73fc-d67b-49ec-9534-1f36a0c4c906
                  requestTime: '2021-12-01T12:46:35.935'
                  lastSeen: '2021-12-01T12:46:35.935'
                  presenceStatus: Working
                  connectionStatus: Online
                  activeChannels:
                    - Email
                    - FacebookMessenger
                - userId: 8026cb51-184b-424f-8686-c6bc7bcf88eb
                  requestTime: '2021-12-01T12:46:35.935'
                  lastSeen: '2021-12-01T12:46:35.935'
                  presenceStatus: Working
                  connectionStatus: Online
                  activeChannels:
                    - Email
                    - FacebookMessenger
                    - PstnPhone
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/agents:
    get:
      tags:
        - Agents
      summary: List agents
      operationId: Agents_list
      description: >-
        Lists all agents/admins in an organization. It is possible to filter by
        one of the mutually exclusive parameters: email or phone number. In case
        both are provided, an error is returned.
      parameters:
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
        - description: The agent/admin email filter
          name: email
          in: query
          required: false
          schema:
            type: string
        - description: The agent/admin phone number filter
          name: phone
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of agents/admins
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAgentsOutput'
              example:
                data:
                  - id: 93b885ad-fe0d-3089-8df6-34904fd59f71
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Agent 0
                    email: agent.0@example.org
                    avatarUrl: https://files.dixa.io/public/image_0_id
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    roles:
                      - Agent
                  - id: 55a54008-ad1b-3589-aa21-0d2629c1df41
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Agent 1
                    email: agent.1@example.org
                    avatarUrl: https://files.dixa.io/public/image_1_id
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    roles:
                      - Agent
                  - id: 9e688c58-a548-3b8e-af69-c9e1005ad0bf
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Agent 2
                    email: agent.2@example.org
                    avatarUrl: https://files.dixa.io/public/image_2_id
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    roles:
                      - Agent
                  - id: 86666835-06aa-3d90-8bbd-5a74ac4edf68
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Agent 3
                    email: agent.3@example.org
                    avatarUrl: https://files.dixa.io/public/image_3_id
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    roles:
                      - Agent
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey, Invalid value for: query parameter email, Invalid value
            for: query parameter phone, Duplicate phone number, Duplicate email
            address, Invalid filters: Cannot provide both phone number and email
            address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    put:
      tags:
        - Agents
      summary: Update agents
      operationId: Agents_updateBulk
      description: Bulk update agents/admins.
      requestBody:
        description: The list of agent/admin update actions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsUpdateBulkRequest'
            example:
              - id: 434ce9f5-14c8-4be1-a0a8-f755010deb9b
                displayName: Alice Brown
                phoneNumber: '+551155256325'
                additionalEmails: []
                additionalPhoneNumbers: []
                firstName: Alice
                lastName: Brown
                middleNames: []
                avatarUrl: http://avatar.url
        required: false
      responses:
        '200':
          description: The list of update action outcomes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateAgentOutput'
              example:
                data:
                  - data:
                      id: 4d2ab456-8510-4a35-b266-e502160d5177
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Alice Brown
                      email: alice@brown.com
                      avatarUrl: https://files.dixa.io/public/image_id
                      phoneNumber: '+551155256325'
                      additionalEmails:
                        - alice@secondary.email
                      additionalPhoneNumbers:
                        - '+5566778899'
                      firstName: Alice
                      lastName: Brown
                      middleNames: []
                      roles:
                        - Agent
                    _type: BulkActionSuccess
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Agents
      summary: Create agent
      operationId: Agents_createAgent
      description: Create an agent.
      requestBody:
        description: The agent's details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentInput'
            example:
              displayName: Alice Brown
              email: alice@brown.com
              phoneNumber: '+551155256325'
              additionalEmails:
                - alice@secondary.email
              additionalPhoneNumbers:
                - '+5566778899'
              firstName: Alice
              lastName: Brown
              middleNames: []
              avatarUrl: http://avatar.url
        required: true
      responses:
        '201':
          description: The created agent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOutput'
              example:
                data:
                  id: 4d2ab456-8510-4a35-b266-e502160d5177X
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  avatarUrl: https://files.dixa.io/public/image_id
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  roles:
                    - Agent
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body, Validation failure during agent creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    patch:
      tags:
        - Agents
      summary: Patch agents
      operationId: Agents_bulkPatch
      description: Bulk patch agents/admins.
      requestBody:
        description: List of agent/admin patch actions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsBulkPatchRequest'
            example:
              - id: 434ce9f5-14c8-4be1-a0a8-f755010deb9bX
                displayName: AB
                additionalEmails: []
                additionalPhoneNumbers: []
                middleNames: []
              - id: 434ce9f5-14c8-4be1-a0a8-f755010deb9c
                displayName: JB
                additionalEmails: []
                additionalPhoneNumbers: []
                middleNames: []
        required: false
      responses:
        '200':
          description: The list of patch action outcomes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateAgentOutput'
              example:
                data:
                  - data:
                      id: 4d2ab456-8510-4a35-b266-e502160d5177X
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: AB
                      email: jb@example.org
                      avatarUrl: https://files.dixa.io/public/image_id
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      roles:
                        - Agent
                    _type: BulkActionSuccess
                  - error:
                      id: 434ce9f5-14c8-4be1-a0a8-f755010deb9cX
                      message: Agent not found
                      _type: NotFound
                    _type: BulkActionFailure
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/agents/{agentId}/teams:
    get:
      tags:
        - Agents
      summary: List teams
      operationId: Agents_listTeams
      description: List the teams in which the agent/admin is a member.
      parameters:
        - description: The agent/admin id
          name: agentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The list of teams in which the agent/admin is a member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTeamsOutput'
              example:
                data:
                  - id: e8ecd53b-2f6c-4471-a3a0-34d94caff8c8
                  - id: 4d2ab456-8510-4a35-b266-e502160d5177X
        '400':
          description: >-
            Invalid value for: path parameter agentId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/agents/{agentId}/presence:
    get:
      tags:
        - Agents
      summary: Get presence
      operationId: Agents_getPresence
      description: Get the presence status for an agent/admin.
      parameters:
        - description: The agent/admin id
          name: agentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The agent/admin presence status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPresenceOutput'
              example:
                data:
                  userId: ec7f7e7b-b437-32ce-8681-45f71d37b53c
                  requestTime: '2021-12-01T12:46:35.935'
                  lastSeen: '2021-12-01T12:46:35.935'
                  presenceStatus: Working
                  connectionStatus: Online
                  activeChannels:
                    - Email
                    - FacebookMessenger
        '400':
          description: >-
            Invalid value for: path parameter agentId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/agents/bulk:
    post:
      tags:
        - Agents
      summary: Create agents
      operationId: Agents_createBulk
      description: Create agents in bulk.
      requestBody:
        description: The list of agent's details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAgentsInput'
            example:
              data:
                - displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails: []
                  additionalPhoneNumbers: []
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  avatarUrl: http://avatar.url
        required: true
      responses:
        '201':
          description: The created agents
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAgentsOutput'
              example:
                data:
                  - data:
                      id: 93b885ad-fe0d-3089-8df6-34904fd59f71X
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Agent 0
                      email: agent.0@example.org
                      avatarUrl: https://files.dixa.io/public/image_0_id
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      roles:
                        - Agent
                    _type: BulkActionSuccess
                  - data:
                      id: 55a54008-ad1b-3589-aa21-0d2629c1df41X
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Agent 1
                      email: agent.1@example.org
                      avatarUrl: https://files.dixa.io/public/image_1_id
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      roles:
                        - Agent
                    _type: BulkActionSuccess
                  - data:
                      id: 9e688c58-a548-3b8e-af69-c9e1005ad0bfX
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Agent 2
                      email: agent.2@example.org
                      avatarUrl: https://files.dixa.io/public/image_2_id
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      roles:
                        - Agent
                    _type: BulkActionSuccess
                  - data:
                      id: 86666835-06aa-3d90-8bbd-5a74ac4edf68X
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Agent 3
                      email: agent.3@example.org
                      avatarUrl: https://files.dixa.io/public/image_3_id
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      roles:
                        - Agent
                    _type: BulkActionSuccess
                  - error:
                      id: e8ecd53b-2f6c-4471-a3a0-34d94caff8c8X
                      message: >-
                        Create Agent [userId=...] in [orgId=...] failed with
                        [errors=...]
                      _type: Validation
                    _type: BulkActionFailure
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/agents/{agentId}:
    get:
      tags:
        - Agents
      summary: Get agent
      operationId: Agents_getById
      description: Get an agent/admin by id.
      parameters:
        - description: The agent/admin id
          name: agentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The agent/admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOutput'
              example:
                data:
                  id: 4d2ab456-8510-4a35-b266-e502160d5177X
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  avatarUrl: https://files.dixa.io/public/image_id
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  roles:
                    - Agent
        '400':
          description: >-
            Invalid value for: path parameter agentId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    put:
      tags:
        - Agents
      summary: Update agent
      operationId: Agents_updateAgentAdmin
      description: Update an agent/admin.
      parameters:
        - description: The agent id
          name: agentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The updated details for an agent/admin
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAgentInput'
            example:
              displayName: Alice Brown
              phoneNumber: '+551155256325'
              additionalEmails: []
              additionalPhoneNumbers: []
              firstName: Alice
              lastName: Brown
              middleNames:
                - Julia
              avatarUrl: http://avatar.url
        required: true
      responses:
        '200':
          description: The updated agent/admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOutput'
              example:
                data:
                  id: 4d2ab456-8510-4a35-b266-e502160d5177X
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  avatarUrl: https://files.dixa.io/public/image_id
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames:
                    - Julia
                  roles:
                    - Agent
        '400':
          description: >-
            Invalid value for: path parameter agentId, Invalid value extracted
            from request context, Invalid value for: body, Validation failure
            during update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    delete:
      tags:
        - Agents
      summary: Delete agent
      operationId: Agents_downgradeAgent
      description: Downgrade an agent/admin to become an end user.
      parameters:
        - description: The agent/admin id
          name: agentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The agent/admin was successfully downgraded to end user
        '400':
          description: >-
            Invalid value for: path parameter agentId, Invalid value extracted
            from request context, Validation failure during delete processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
    patch:
      tags:
        - Agents
      summary: Patch agent
      operationId: Agents_updateAdmin
      description: Patch an agent/admin.
      parameters:
        - description: The agent/admin id
          name: agentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The agent/admin patch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAgentInput'
            example:
              displayName: Alice Brown
              additionalEmails: []
              additionalPhoneNumbers: []
              firstName: Alice
              lastName: Brown
              middleNames: []
              avatarUrl: http://avatar.url
        required: true
      responses:
        '200':
          description: The patched agent/admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentOutput'
              example:
                data:
                  id: 4d2ab456-8510-4a35-b266-e502160d5177X
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  avatarUrl: https://files.dixa.io/public/image_id
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  roles:
                    - Agent
        '400':
          description: >-
            Invalid value for: path parameter agentId, Invalid value extracted
            from request context, Invalid value for: body, Validation failure
            during update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/endusers:
    get:
      tags:
        - End Users
      summary: List end users
      operationId: EndUsers_list
      description: >-
        Lists all end users in an organization. It is possible to filter by one
        of the mutually exclusive parameters: email or phone number. In case
        both are provided, an error is returned.
      parameters:
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
        - description: Filter by the contact's email
          name: email
          in: query
          required: false
          schema:
            type: string
        - description: Filter by the contact's phone number
          name: phone
          in: query
          required: false
          schema:
            type: string
        - description: Filter by the contact's external id
          name: externalId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of end users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndUsersOutput'
              example:
                data:
                  - id: 93b885ad-fe0d-3089-8df6-34904fd59f71X
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Enduser 0
                    email: enduser.0@example.org
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    avatarUrl: https://files.dixa.io/public/image_0_id
                    externalId: '#12345678'
                    customAttributes:
                      - id: ec7f7e7b-b437-32ce-8681-45f71d37b53c
                        name: My Attribute 0
                        identifier: my_attribute_0
                        value: My Attribute Value 0
                  - id: 55a54008-ad1b-3589-aa21-0d2629c1df41X
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Enduser 1
                    email: enduser.1@example.org
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    avatarUrl: https://files.dixa.io/public/image_1_id
                    externalId: '#12345678'
                    customAttributes:
                      - id: 8bb6c178-3864-3f96-91cc-6a4de6c51709
                        name: My Attribute 1
                        identifier: my_attribute_1
                        value: My Attribute Value 1
                  - id: 9e688c58-a548-3b8e-af69-c9e1005ad0bfX
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Enduser 2
                    email: enduser.2@example.org
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    avatarUrl: https://files.dixa.io/public/image_2_id
                    externalId: '#12345678'
                    customAttributes:
                      - id: 06eca1b4-37c7-304c-83ce-6546c8110110
                        name: My Attribute 2
                        identifier: my_attribute_2
                        value: My Attribute Value 2
                  - id: 86666835-06aa-3d90-8bbd-5a74ac4edf68X
                    createdAt: '2020-12-16T09:41:43Z'
                    displayName: Enduser 3
                    email: enduser.3@example.org
                    additionalEmails: []
                    additionalPhoneNumbers: []
                    middleNames: []
                    avatarUrl: https://files.dixa.io/public/image_3_id
                    externalId: '#12345678'
                    customAttributes:
                      - id: 89e74e64-0b8c-3625-ba29-de0616794d5d
                        name: My Attribute 3
                        identifier: my_attribute_3
                        value: My Attribute Value 3
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey, Invalid value for: query parameter email, Invalid value
            for: query parameter phone, Invalid value for: query parameter
            externalId, Duplicate phone number, Duplicate email address, Invalid
            filters: Cannot provide more than one filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    put:
      tags:
        - End Users
      summary: Update end users
      operationId: EndUsers_bulkUpdate
      description: Bulk update end users.
      requestBody:
        description: List of end user update actions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateEndUsersInput'
            example:
              data:
                - id: d4826125-559f-496f-ad71-a0340f0cae06
                  displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames:
                    - J.
                  avatarUrl: http://avatar.url
                  externalId: '#12345678'
        required: true
      responses:
        '200':
          description: The updated end users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkUpdateEndUsersOutput'
              example:
                data:
                  - data:
                      id: 434ce9f5-14c8-4be1-a0a8-f755010deb9bX
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Alice Brown
                      email: alice@brown.com
                      phoneNumber: '+551155256325'
                      additionalEmails:
                        - alice@secondary.email
                      additionalPhoneNumbers:
                        - '+5566778899'
                      firstName: Alice
                      lastName: Brown
                      middleNames:
                        - J.
                      avatarUrl: https://files.dixa.io/public/image_id
                      externalId: '#12345678'
                      customAttributes:
                        - id: 4baa78bc-4815-4122-9c99-f71cd742d37b
                          name: My Attribute
                          identifier: my_attribute
                          value: My Attribute Value
                    _type: BulkActionSuccess
                  - error:
                      id: 8fe8f4c3-7bc6-4767-924a-d9afa7ac7009
                      message: >-
                        Updating EndUser
                        [id:8fe8f4c3-7bc6-4767-924a-d9afa7ac7009] failed with
                        [errors:PhoneNumberExists]
                      _type: Validation
                    _type: BulkActionFailure
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - End Users
      summary: Create end user
      operationId: EndUsers_createUser
      description: Create an end user.
      requestBody:
        description: The end user's details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndUserInput'
            example:
              displayName: Alice Brown
              email: alice@brown.com
              phoneNumber: '+551155256325'
              additionalEmails:
                - alice@secondary.email
              additionalPhoneNumbers:
                - '+5566778899'
              firstName: Alice
              lastName: Brown
              middleNames: []
              avatarUrl: http://avatar.url
              externalId: '#12345678'
        required: true
      responses:
        '201':
          description: The created end user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndUserOutput'
              example:
                data:
                  id: 434ce9f5-14c8-4be1-a0a8-f755010deb9bX
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  avatarUrl: https://files.dixa.io/public/image_id
                  externalId: '#12345678'
                  customAttributes:
                    - id: 4baa78bc-4815-4122-9c99-f71cd742d37bX
                      name: My Attribute
                      identifier: my_attribute
                      value: My Attribute Value
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body, Validation failure during enduser creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    patch:
      tags:
        - End Users
      summary: Patch end users
      operationId: EndUsers_bulkPatch
      description: Bulk patch end users.
      requestBody:
        description: List of end user patch actions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkPatchEndUsersInput'
            example:
              data:
                - id: 43b1fe06-a7c4-4f34-8e48-b0559e6acdb9
                  displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  avatarUrl: http://avatar.url
                  externalId: '#12345678'
        required: true
      responses:
        '200':
          description: The patched end users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkPatchEndUsersOutput'
              example:
                data:
                  - data:
                      id: 434ce9f5-14c8-4be1-a0a8-f755010deb9bX
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Alice Brown
                      email: alice@brown.com
                      phoneNumber: '+551155256325'
                      additionalEmails:
                        - alice@secondary.email
                      additionalPhoneNumbers:
                        - '+5566778899'
                      firstName: Alice
                      lastName: Brown
                      middleNames: []
                      avatarUrl: https://files.dixa.io/public/image_id
                      externalId: '#12345678'
                      customAttributes:
                        - id: 4baa78bc-4815-4122-9c99-f71cd742d37bX
                          name: My Attribute
                          identifier: my_attribute
                          value: My Attribute Value
                    _type: BulkActionSuccess
                  - error:
                      id: ace11abb-4ed0-42bd-9e3b-4ef6db58e0aa
                      message: >-
                        Updating EndUser
                        [id=ace11abb-4ed0-42bd-9e3b-4ef6db58e0aa] in
                        [org=b86a1842-437c-4c55-ac4b-0a9cd2f44dfb] failed with
                        [errors=PhoneNumberExists]
                      _type: Validation
                    _type: BulkActionFailure
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/endusers/bulk:
    post:
      tags:
        - End Users
      summary: Create end users
      operationId: EndUsers_createBulkUser
      description: Create end users.
      requestBody:
        description: The list of end user details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEndUsersInput'
            example:
              data:
                - displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails: []
                  additionalPhoneNumbers: []
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  avatarUrl: http://avatar.url
                  externalId: '#12345678'
        required: true
      responses:
        '201':
          description: The created end users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEndUsersOutput'
              example:
                data:
                  - data:
                      id: 93b885ad-fe0d-3089-8df6-34904fd59f71X
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Enduser 0
                      email: enduser.0@example.org
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      avatarUrl: https://files.dixa.io/public/image_0_id
                      externalId: '#12345678'
                      customAttributes:
                        - id: ec7f7e7b-b437-32ce-8681-45f71d37b53cX
                          name: My Attribute 0
                          identifier: my_attribute_0
                          value: My Attribute Value 0
                    _type: BulkActionSuccess
                  - data:
                      id: 55a54008-ad1b-3589-aa21-0d2629c1df41X
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Enduser 1
                      email: enduser.1@example.org
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      avatarUrl: https://files.dixa.io/public/image_1_id
                      externalId: '#12345678'
                      customAttributes:
                        - id: 8bb6c178-3864-3f96-91cc-6a4de6c51709X
                          name: My Attribute 1
                          identifier: my_attribute_1
                          value: My Attribute Value 1
                    _type: BulkActionSuccess
                  - data:
                      id: 9e688c58-a548-3b8e-af69-c9e1005ad0bfX
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Enduser 2
                      email: enduser.2@example.org
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      avatarUrl: https://files.dixa.io/public/image_2_id
                      externalId: '#12345678'
                      customAttributes:
                        - id: 06eca1b4-37c7-304c-83ce-6546c8110110X
                          name: My Attribute 2
                          identifier: my_attribute_2
                          value: My Attribute Value 2
                    _type: BulkActionSuccess
                  - data:
                      id: 86666835-06aa-3d90-8bbd-5a74ac4edf68X
                      createdAt: '2020-12-16T09:41:43Z'
                      displayName: Enduser 3
                      email: enduser.3@example.org
                      additionalEmails: []
                      additionalPhoneNumbers: []
                      middleNames: []
                      avatarUrl: https://files.dixa.io/public/image_3_id
                      externalId: '#12345678'
                      customAttributes:
                        - id: 89e74e64-0b8c-3625-ba29-de0616794d5dX
                          name: My Attribute 3
                          identifier: my_attribute_3
                          value: My Attribute Value 3
                    _type: BulkActionSuccess
                  - error:
                      id: 1b6d1e11-0626-414e-906a-b80a384cfef0
                      message: >-
                        Create EndUser [userId=...] in [orgId=...] failed with
                        [errors=...]
                      _type: Validation
                    _type: BulkActionFailure
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/endusers/{userId}:
    get:
      tags:
        - End Users
      summary: Get end user
      operationId: EndUsers_getUserById
      description: Get an end user by id.
      parameters:
        - description: The end user id
          name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The end user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEndUserOutput'
              example:
                data:
                  id: 434ce9f5-14c8-4be1-a0a8-f755010deb9bX
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  avatarUrl: https://files.dixa.io/public/image_id
                  externalId: '#12345678'
                  customAttributes:
                    - id: 4baa78bc-4815-4122-9c99-f71cd742d37bX
                      name: My Attribute
                      identifier: my_attribute
                      value: My Attribute Value
        '400':
          description: >-
            Invalid value for: path parameter userId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    put:
      tags:
        - End Users
      summary: Update end user
      operationId: EndUsers_updateUserById
      description: Update an end user.
      parameters:
        - description: The end user id
          name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The updated details for an end user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEndUserInput'
            example:
              displayName: Alice Brown
              email: alice@brown.com
              phoneNumber: '+551155256325'
              additionalEmails:
                - alice@secondary.email
              additionalPhoneNumbers:
                - '+5566778899'
              firstName: Alice
              lastName: Brown
              middleNames:
                - J.
              avatarUrl: http://avatar.url
              externalId: '#12345678'
        required: true
      responses:
        '200':
          description: The updated end user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateEndUserOutput'
              example:
                data:
                  id: 434ce9f5-14c8-4be1-a0a8-f755010deb9bX
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames:
                    - J.
                  avatarUrl: https://files.dixa.io/public/image_id
                  externalId: '#12345678'
                  customAttributes:
                    - id: 4baa78bc-4815-4122-9c99-f71cd742d37bX
                      name: My Attribute
                      identifier: my_attribute
                      value: My Attribute Value
        '400':
          description: >-
            Invalid value for: path parameter userId, Invalid value extracted
            from request context, Invalid value for: body, Validation failure
            during update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    patch:
      tags:
        - End Users
      summary: Patch end user
      operationId: EndUsers_updateUser
      description: Patch an end user.
      parameters:
        - description: The end user id to be patched
          name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The end user patch
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEndUserInput'
            example:
              displayName: Alice Brown
              email: alice@brown.com
              phoneNumber: '+551155256325'
              additionalEmails:
                - alice@secondary.email
              additionalPhoneNumbers:
                - '+5566778899'
              firstName: Alice
              lastName: Brown
              middleNames: []
              avatarUrl: http://avatar.url
              externalId: '#12345678'
        required: true
      responses:
        '200':
          description: The patched end user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchEndUserOutput'
              example:
                data:
                  id: 434ce9f5-14c8-4be1-a0a8-f755010deb9bX
                  createdAt: '2020-12-16T09:41:43Z'
                  displayName: Alice Brown
                  email: alice@brown.com
                  phoneNumber: '+551155256325'
                  additionalEmails:
                    - alice@secondary.email
                  additionalPhoneNumbers:
                    - '+5566778899'
                  firstName: Alice
                  lastName: Brown
                  middleNames: []
                  avatarUrl: https://files.dixa.io/public/image_id
                  externalId: '#12345678'
                  customAttributes:
                    - id: 4baa78bc-4815-4122-9c99-f71cd742d37bX
                      name: My Attribute
                      identifier: my_attribute
                      value: My Attribute Value
        '400':
          description: >-
            Invalid value for: path parameter userId, Invalid value extracted
            from request context, Invalid value for: body, Validation failure
            during update
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/endusers/{userId}/anonymize:
    patch:
      tags:
        - End Users
        - Anonymization
      summary: Anonymize end user
      operationId: EndUsers_anonymizeUser
      description: Request the anonymization of an end user.
      parameters:
        - description: The id of the end user to anonymize
          name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: >-
            Whether to force close all the conversations initiated by the end
            user, if any are found in a non closed state.
          name: force
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '202':
          description: The end user's anonymization request status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymizeEntityOutput'
              example:
                data:
                  id: 6bf55369-a670-4e6b-9f70-ecdb9913549f
                  entityType: UserAnonymizationType
                  _type: User
                  initiatedAt: 2021-12-01T12:46:36.581Z[GMT]
                  targetEntityId: f28fafd6-2e42-4441-943c-388a8e0ef433
                  requestedBy: 2b01e4c9-0c3a-47d4-9462-cd5a1a4687f5
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v1/endusers/{userId}/custom-attributes:
    patch:
      tags:
        - End Users
        - Custom Attributes
      summary: Patch end user custom attributes
      operationId: EndUsers_updateCustomAttributes
      description: Patch custom attributes of an end user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: >-
          The custom attributes of an end user to be patched. This should map
          the custom attribute id to the desired attribute value. Format:
          Map[UUID, Option[AttributeValue].
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map_UUID_Option_AttributeValue'
            example:
              274e5a2c-be0d-42c0-b725-3dd533729f68: abcdef
              befae0d9-9679-42b9-af76-e76f64e28429:
                - example1
                - example2
        required: true
      responses:
        '200':
          description: The patched end user attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchEndUserCustomAttributesOutput'
              example:
                data:
                  - id: 274e5a2c-be0d-42c0-b725-3dd533729f68
                    name: End user attribute
                    identifier: end_user_attribute
                    value: abcdef
                  - id: befae0d9-9679-42b9-af76-e76f64e28429
                    name: End user attribute 2
                    identifier: end_user_attribute_2
                    value:
                      - example1
                      - example2
        '400':
          description: >-
            Invalid value for: path parameter userId, Invalid value extracted
            from request context, Invalid value for: body, Invalid input for
            patching
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '401':
          description: >-
            The user who issued the access token used in the request is not
            authorized to perform the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                message: User is unauthorized to perform an underlying operation
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
  /v1/endusers/{userId}/conversations:
    get:
      tags:
        - End Users
      summary: List end user conversations
      operationId: EndUsers_listConversations
      description: >-
        Lists conversations requested by an end user. <br/> Note: Custom
        attributes are not part of the response at this point. If you need to
        get custom attributes for a conversation use the [GET
        /conversations/{conversationId}](../Conversations/#tag/Conversations/operation/getConversationsConversationid)
        endpoint
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of conversations requested by an EndUser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEndUserConversationsOutput'
              example:
                data:
                  - id: 1
                    requesterId: 9deb936b-52e5-4c44-828d-4c8d48fe0c7e
                    channel: WidgetChat
                    createdAt: '2020-12-16T09:41:43Z'
                    direction: Outbound
                    state: Open
                    stateUpdatedAt: '2020-12-16T09:41:43Z'
                    assignment:
                      agentId: 0e4d0ead-dc69-470a-9b3a-e7eb16a56453
                      assignedAt: '2020-12-16T11:00:34Z'
                    queue:
                      id: cd87b232-64c8-4ad5-b81a-6f9233352d97
                      queuedAt: '2020-12-16T10:40:40Z'
                    browserInfo:
                      version: 91.0.4472.114
                      name: Chrome 9
                      ipAddress: 127.0.0.1
                      originatingUrl: http://localhost:3000/
                    language: en
                    link:
                      parentId: 1234
                      _type: SideConversation
                    _type: ChatConversation
        '400':
          description: >-
            Invalid value for: path parameter userId, Invalid value extracted
            from request context, Invalid value for: query parameter pageLimit,
            Invalid value for: query parameter pageKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/teams:
    get:
      tags:
        - Teams
      summary: List teams
      operationId: Teams_listAll
      description: Lists all teams in an organization.
      responses:
        '200':
          description: The list of teams in an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamsOutput'
              example:
                data:
                  - id: 005e7108-c85c-41d1-a945-4a8dc58c4399
                    name: Team A
                  - id: 83cc3c21-9d28-4250-b6ea-b3a6333c5c73
                    name: Team B
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Teams
      summary: Create team
      operationId: Teams_createTeam
      description: Create a team.
      requestBody:
        description: The team name
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamInput'
            example:
              name: Team A
        required: true
      responses:
        '201':
          description: The created team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamOutput'
              example:
                data:
                  id: 005e7108-c85c-41d1-a945-4a8dc58c4399X
                  name: Team A
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/teams/{teamId}/agents:
    get:
      tags:
        - Teams
      summary: List members
      operationId: Teams_listMembers
      description: Lists all agents/admins in a team.
      parameters:
        - description: The team id
          name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of agents/admins in the specified team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTeamMembersOutput'
              example:
                data:
                  - id: e8333378-62ed-4062-93b5-fadae6f41175
                    name: Agent A
                    email: aa@example.org
                  - id: 40735745-9fde-4b6d-8941-e82e4e6d5001
                    name: Agent B
                    email: ab@example.org
        '400':
          description: >-
            Invalid value for: path parameter teamId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    delete:
      tags:
        - Teams
      summary: Remove members
      operationId: Teams_removeMembers
      description: Remove agents/admins from a team.
      parameters:
        - description: The team id
          name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: List of agent/admin ids to remove from the specified team
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAgentsFromTeamInput'
            example:
              agentIds:
                - a8080cf3-9d55-41dd-a8ef-b02414399e7a
                - d53dbec1-e79c-4736-b9a1-15f6dce71ed4
        required: true
      responses:
        '204':
          description: The agents/admins were successfully removed from the team
        '400':
          description: >-
            Invalid value for: path parameter teamId, Invalid value extracted
            from request context, Invalid value for: body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    patch:
      tags:
        - Teams
      summary: Add members
      operationId: Teams_addMembers
      description: Add agents/admins to a team.
      parameters:
        - description: The team id
          name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: List of agent/admin ids to add to the specified team
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentsToTeamInput'
            example:
              agentIds:
                - 912d5148-6918-4420-b23a-8584b896c8ae
                - a8080cf3-9d55-41dd-a8ef-b02414399e7a
        required: true
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Invalid value for: path parameter teamId, Invalid value extracted
            from request context, Invalid value for: body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/teams/{teamId}/presence:
    get:
      tags:
        - Teams
      summary: List presence
      operationId: Teams_listPresenceStatus
      description: List the presence status of all agents/admins in a team.
      parameters:
        - description: The team id
          name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: List of agents/admins presence status in the specified team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPresenceOutput'
              example:
                data:
                  - userId: d53dbec1-e79c-4736-b9a1-15f6dce71ed4
                    requestTime: '2021-12-01T12:46:35.935'
                    lastSeen: '2021-12-01T12:46:35.935'
                    presenceStatus: Working
                    connectionStatus: Online
                    activeChannels:
                      - Email
                      - FacebookMessenger
                  - userId: e8ecd53b-2f6c-4471-a3a0-34d94caff8c8
                    requestTime: '2021-12-01T12:46:35.935'
                    lastSeen: '2021-12-01T12:46:35.935'
                    presenceStatus: Working
                    connectionStatus: Online
                    activeChannels:
                      - Email
                      - FacebookMessenger
        '400':
          description: >-
            Invalid value for: path parameter teamId, Invalid value extracted
            from request context, Invalid value for: query parameter pageLimit,
            Invalid value for: query parameter pageKey
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/teams/{teamId}:
    get:
      tags:
        - Teams
      summary: Get team
      operationId: Teams_getById
      description: Get a team by id.
      parameters:
        - description: The team id
          name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeamOutput'
              example:
                data:
                  id: 005e7108-c85c-41d1-a945-4a8dc58c4399X
                  name: Team A
        '400':
          description: >-
            Invalid value for: path parameter teamId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
    delete:
      tags:
        - Teams
      summary: Delete team
      operationId: Teams_removeTeam
      description: Delete a team.
      parameters:
        - description: The team id
          name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The team was successfully deleted
        '400':
          description: >-
            Invalid value for: path parameter teamId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/anonymize:
    patch:
      tags:
        - Conversations
        - Anonymization
      summary: Anonymize conversation
      operationId: Conversations_anonymizeConversation
      description: Request the anonymization of a conversation.
      parameters:
        - description: the id of the conversation to anonymize
          name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: >-
            Whether to force close the conversation if it is found in a non
            closed state.
          name: force
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '202':
          description: The conversation's anonymization request status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymizeEntityOutput'
              example:
                data:
                  id: 87bac308-e49f-4134-84cc-96b868f1e1e4
                  entityType: ConversationAnonymizationType
                  _type: Conversation
                  initiatedAt: 2021-12-01T12:46:36.581Z[GMT]
                  targetEntityId: '10749'
                  requestedBy: b165fdaa-51d6-44b0-bfcd-5f431d623fa7
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: query parameter
            force
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v1/conversations/{conversationId}/messages/{messageId}/anonymize:
    patch:
      tags:
        - Conversations
        - Anonymization
      summary: Anonymize message
      operationId: Conversations_anonymizeMessage
      description: Request the anonymization of a single message in a conversation.
      parameters:
        - description: the id of the conversation in which the message belongs
          name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: the id of the message to anonymize
          name: messageId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: The message's anonymization request status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymizeEntityOutput'
              example:
                data:
                  id: b165fdaa-51d6-44b0-bfcd-5f431d623fa7
                  entityType: MessageAnonymizationType
                  _type: Message
                  initiatedAt: 2021-12-01T12:46:36.581Z[GMT]
                  targetEntityId: 10749_1b9adc49-62f7-4056-a9c0-c18c1f25afdb
                  requestedBy: 4c7af391-b7fd-4560-9d82-b3464eef8776
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value for:
            path parameter messageId, Invalid value extracted from request
            context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
        '409':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conflict'
        '500':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
  /v1/conversations/{conversationId}/close:
    put:
      tags:
        - Conversations
      summary: Close conversation
      operationId: Conversations_markClosed
      description: Mark a conversation as closed by providing its id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: An optional agent/admin to close the conversation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseConversationInput'
            example:
              userId: 5a556159-9c21-4f3e-a44f-d323deb80d16
        required: false
      responses:
        '204':
          description: The conversation was successfully closed
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body, User not
            found, User is not agent/admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
  /v1/conversations/{conversationId}/reopen:
    put:
      tags:
        - Conversations
      summary: Reopen conversation
      operationId: Conversations_reopenConversation
      description: >-
        Reopen a conversation and offer it in the same queue. Falls back to the
        default organization queue if the conversation has no target queue.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: An optional agent/admin to reopen the conversation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReopenConversationInput'
            example:
              userId: a53b25da-f676-4c52-acac-58c9280aa23d
        required: false
      responses:
        '204':
          description: >-
            The conversation was successfully reopened and offered in the same
            queue
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body, User not
            found, User is not agent/admin
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/transfer/queue:
    put:
      tags:
        - Conversations
      summary: Transfer conversation
      operationId: Conversations_transferQueue
      description: Transfer a conversation to a target queue.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Transfer conversation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferConversationInput'
            example:
              queueId: 92f8d193-b26f-4a62-86a3-bb03ee0915e9
              userId: a53b25da-f676-4c52-acac-58c9280aa23d
        required: true
      responses:
        '204':
          description: The conversation was successfully transferred to the target queue
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body, User not
            found, User is not agent/admin, Queue does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/notes/bulk:
    post:
      tags:
        - Conversations
        - Internal Notes
      summary: Add internal notes
      operationId: Conversations_addInternalNotes
      description: >-
        Create internal notes in a conversation by providing the conversation
        id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The list of internal notes to create for a conversation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateInternalNoteInput'
            examples:
              Input with two internal notes created for the same conversation:
                value:
                  data:
                    - message: A sample note
                      agentId: a53b25da-f676-4c52-acac-58c9280aa23d
                      createdAt: 2021-12-01T12:46:36.581Z[GMT]
                    - message: Another sample note
        required: true
      responses:
        '200':
          description: The created internal notes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCreateNoteOutput'
              examples:
                A list of internal notes created successfully and error message for others which failed:
                  value:
                    data:
                      - data:
                          id: eb31acbb-13f9-4ce7-abd3-44dd86266741
                          authorId: 5e8a300e-787e-47cd-af53-fc1ccc37933d
                          createdAt: 2021-12-01T12:46:36.581Z[GMT]
                          csid: 9456
                          message: A sample note
                        _type: BulkActionSuccess
                      - error:
                          message: An agent with id:... cannot be found in org.
                        _type: BulkActionFailure
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/notes:
    get:
      tags:
        - Conversations
        - Internal Notes
      summary: List internal notes
      operationId: Conversations_listInternalNotes
      description: >-
        Get all internal notes for a particular conversation by providing the
        conversation id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: >-
            List of internal notes for a conversation sorted from oldest to
            newest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInternalNotesOutput'
              example:
                data:
                  - id: 3346b99c-8128-4276-ac40-5f30c959e5e7
                    authorId: c68f42a5-1453-497a-940f-ff36ed4f1631
                    createdAt: '2021-01-20T09:00:00Z'
                    csid: 7392
                    message: A note to remember
                  - id: 22b8e6b6-4576-4dc0-ab05-60f81e8b0708
                    authorId: 124d54bb-92d6-41c9-a675-788d6a8c821e
                    createdAt: '2021-01-22T12:00:00Z'
                    csid: 7392
                    message: A note to forget
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Conversations
        - Internal Notes
      summary: Add internal note
      operationId: Conversations_addInternalNote
      description: >-
        Create an internal note in a conversation by providing the conversation
        id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The internal note to create for a conversation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInternalNoteInput'
            examples:
              Input with createdAt:
                value:
                  message: A sample note
                  agentId: a53b25da-f676-4c52-acac-58c9280aa23d
                  createdAt: 2021-12-01T12:46:36.581Z[GMT]
              Input without createdAt:
                value:
                  message: Another sample note
        required: true
      responses:
        '200':
          description: The created internal note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateNoteOutput'
              examples:
                created internal note:
                  value:
                    data:
                      id: eb31acbb-13f9-4ce7-abd3-44dd86266741X
                      authorId: 5e8a300e-787e-47cd-af53-fc1ccc37933d
                      createdAt: 2021-12-01T12:46:36.581Z[GMT]
                      csid: 9456
                      message: A sample note
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body, Agent was
            not found, Invalid date format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/rating:
    get:
      tags:
        - Conversations
        - Ratings
      summary: List rating
      operationId: Conversations_listRating
      description: >-
        Get the ratings for a particular conversation by providing the
        conversation id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of ratings for a conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConversationRatingsOutput'
              example:
                data:
                  - id: 33cf4e5e-9ce9-461c-b668-be9b712b717c
                    ratingScore: 4
                    ratingType: Csat
                    ratingComment: Super good!
                    conversationChannel: PstnPhone
                    agentId: a53b25da-f676-4c52-acac-58c9280aa23d
                    userId: 6d0c5791-e40a-46d4-bba1-1364ce4578ed
                    ratingStatus: Offered
                    language: English
                    timestamps: {}
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/activitylog:
    get:
      tags:
        - Conversations
      summary: List organization activity log
      operationId: Conversations_listOrganizationActivityLog
      description: List all activity logs for an organization.
      parameters:
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Starting date-time filter with ISO 8601 format:
            yyyy-MM-dd'T'HH:mm:sss'Z'
          name: fromDatetime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: >-
            Ending date-time filter with ISO 8601 format:
            yyyy-MM-dd'T'HH:mm:sss'Z'
          name: toDatetime
          in: query
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: The full list of activity logs for an organization with pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListActivityLogOutput'
              example:
                data:
                  - id: d85a7bd7-79da-4f10-b021-12e4c2c20024
                    conversationId: 1
                    activityTimestamp: 2021-12-01T12:46:36.581Z[GMT]
                    activityType: ConversationAssignedActivityType
                    _type: ConversationAssigned
                    author:
                      id: a53b25da-f676-4c52-acac-58c9280aa23d
                      name: Dale Cooper
                      email: dc@dixa.com
                      phoneNumber: '+4534343434'
                  - id: 324d0108-31b7-4678-8862-c8780a297f8f
                    conversationId: 2
                    activityTimestamp: 2021-12-01T12:46:36.581Z[GMT]
                    activityType: ConversationAssignedActivityType
                    _type: ConversationAssigned
                    author:
                      id: 67ff39b6-b1ee-4d5f-91ee-168d4668c4ba
                      name: Bob Ross
                      email: br@dixa.com
                      phoneNumber: '+4532323232'
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey, Invalid value for: query parameter fromDatetime, Invalid
            value for: query parameter toDatetime, Validation failure when
            retrieving data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/flows:
    get:
      tags:
        - Conversations
      summary: List flows
      operationId: Conversations_listFlows
      description: List all conversations flows in an organization.
      parameters:
        - description: >-
            An optional ConversationChannel can be specified to filter the
            flows. If not provided, the default channel is PstnPhone. Possible
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger, Email,
            ContactForm, Callback, PstnPhone, Messenger]
          name: channel
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of conversation flows
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFlowsOutput'
              example:
                data:
                  - id: d546e9a8-82c2-409f-b688-e9199ea69f83
                    name: Default call flow
                    channel: PstnPhone
                    contactEndpointId: '+559912443333'
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter channel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/tags/{tagId}:
    put:
      tags:
        - Conversations
        - Tags
      summary: Tag conversation
      operationId: Conversations_tagConversation
      description: Tag a conversation. You may only use active tags to tag conversations.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tagId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The conversation was successfully tagged
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value for:
            path parameter tagId, Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    delete:
      tags:
        - Conversations
        - Tags
      summary: Untag conversation
      operationId: Conversations_untagConversation
      description: >-
        Untag a conversation. You may remove active or inactive tags from a
        conversation.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: tagId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The conversation was successfully untagged
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value for:
            path parameter tagId, Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/tags:
    get:
      tags:
        - Conversations
        - Tags
      summary: List tags
      operationId: Conversations_listTags
      description: >-
        Get the tags for a particular conversation by providing the conversation
        id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of tags for a conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationTagsOutput'
              example:
                data:
                  - id: b794a74a-625b-4303-8237-9b11668a9605
                    name: example
                    state: Active
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/messages:
    get:
      tags:
        - Conversations
        - Messages
      summary: List messages
      operationId: Conversations_listMessages
      description: >-
        Get all messages for a particular conversation by providing the
        conversation id. Note that messages in `ContactForm` conversations can
        have attributes of `"_type": "EmailAttributes"` if they are created
        through a webform, or `"_type": "ContactFormAttributes"` when created
        through a chat widget.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of messages for a conversation sorted from oldest to newest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMessagesOutput'
              example:
                data:
                  - id: 11b95893-0514-4606-a5d8-1880172b3a55
                    authorId: 41646d42-edc0-493e-ac7b-814d9ff40a2e
                    externalId: '13244'
                    createdAt: 2021-12-01T12:46:36.581Z[GMT]
                    attributes:
                      emailContent:
                        content:
                          value: Hello
                          _type: Text
                        _type: Regular
                      from:
                        email: some-help@email.dixa.io
                        name: Help
                      to:
                        - email: someone@somecompany.com
                          name: Some One
                      cc: []
                      bcc: []
                      isAutoReply: false
                      inlineImages: []
                      attachments:
                        - url: >-
                            https://files.dixa.io/private/something/attachment/attachment-1
                          prettyName: Picture
                      direction: Outbound
                      originalContentUrl:
                        url: >-
                          https://files.dixa.io/private/something/email_original_data/a1b2c3d4
                      _type: EmailAttributes
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
    post:
      tags:
        - Conversations
      summary: Add message
      operationId: Conversations_addMessage
      description: >-
        Add a message to a conversation. For inbound messages the author is
        assumed to be the requester of the conversation (end user). For outbound
        messages the author is specified using the agentId field. Currently
        Email, WidgetChat and Messenger channels are supported.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: The message to be added to a conversation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMessageInput'
            example:
              content:
                value: I need some help!
                _type: Html
              attachments:
                - url: http://attachment.url
                  prettyName: Filename
              _type: Inbound
        required: true
      responses:
        '200':
          description: The added message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMessageOutput'
              example:
                data:
                  content:
                    value: An amazing message
                    _type: Html
                  direction: Outbound
                  authorId: bac5a02c-15b3-44da-ae1e-ab7b9db4aa89
                  messageId: 87bac308-e49f-4134-84cc-96b868f1e1e4
                  createdAt: '2021-06-09T08:18:37.284Z'
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body, Invalid
            input for Message, Failure to download attachment, Duplicate
            externalId, Unsupported ConversationChannel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations:
    post:
      tags:
        - Conversations
      summary: Create conversation
      operationId: Conversations_createNewConversation
      description: >-
        Create a conversation. For inbound messages the author is assumed to be
        the requester of the conversation (end user). For outbound messages the
        author is specified using the agentId field.
      requestBody:
        description: The conversation to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConversationInput'
            example:
              requesterId: 9c2a2cce-699f-4a72-89d9-fda5bc8dec8b
              emailIntegrationId: my-integration@email.dixa.io
              subject: 'order #123'
              message:
                content:
                  value: My order hasn't shipped
                  _type: Text
                attachments: []
                _type: Inbound
              language: en
              _type: Email
        required: true
      responses:
        '201':
          description: The id of the created conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateConversationOutput'
              example:
                data:
                  id: 100
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body, Invalid input for Message, Failure to download attachment,
            Duplicate externalId, Unsupported ConversationChannel
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/custom-attributes:
    patch:
      tags:
        - Conversations
        - Custom Attributes
      summary: Patch conversation custom attributes
      operationId: Conversations_updateCustomAttributes
      description: Patch custom attributes of a conversation
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: >-
          The custom attributes of an conversation to be patched. This should
          map the custom attribute id to the desired attribute value. Format:
          Map[UUID, Option[AttributeValue].
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Map_UUID_Option_AttributeValue'
            example:
              2f5515b6-7e98-4f4d-9010-bfd2a27d4f35: '012345'
              e14708a6-eed9-495c-9d88-c72331e9e247:
                - str1
                - str2
        required: true
      responses:
        '200':
          description: The patched conversation attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchConversationCustomAttributesOutput'
              example:
                data:
                  - id: 2f5515b6-7e98-4f4d-9010-bfd2a27d4f35
                    name: Conversation attribute
                    identifier: conversation_attribute
                    value: '012345'
                  - id: e14708a6-eed9-495c-9d88-c72331e9e247
                    name: Conversation attribute 2
                    identifier: conversation_attribute_2
                    value:
                      - str1
                      - str2
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body, Invalid
            input for patching
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '401':
          description: >-
            The user who issued the access token used in the request is not
            authorized to perform the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                message: User is unauthorized to perform an underlying operation
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
  /v1/conversations/{conversationId}/claim:
    put:
      tags:
        - Conversations
      summary: Claim conversation
      operationId: Conversations_claimConversation
      description: >-
        Claim a conversation for a given agent. To avoid taking over assigned
        conversations, set the `force` paremeter to false
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimConversationInput'
            example:
              agentId: 5a556159-9c21-4f3e-a44f-d323deb80d16
              force: false
        required: true
      responses:
        '204':
          description: The conversation was successfully claimed
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context, Invalid value for: body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/activitylog:
    get:
      tags:
        - Conversations
      summary: List activity log
      operationId: Conversations_getActivityLog
      description: >-
        Get the activity log for a conversation by providing the conversation
        id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Activity log entries for a conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityLogOutput'
              example:
                data:
                  - id: fca291e5-8670-41bd-b502-842fd9542e27
                    conversationId: 1
                    activityTimestamp: 2021-12-01T12:46:36.581Z[GMT]
                    activityType: ConversationAssignedActivityType
                    _type: ConversationAssigned
                    author:
                      id: a53b25da-f676-4c52-acac-58c9280aa23dX
                      name: Dale Cooper
                      email: dc@dixa.com
                      phoneNumber: '+4534343434'
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}:
    get:
      tags:
        - Conversations
      summary: Get conversation
      operationId: Conversations_getById
      description: Get a conversation by id.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The conversation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConversationOutput'
              example:
                data:
                  id: 1
                  requesterId: d58c8b1c-85ad-4678-a6c8-7442945f3836
                  channel: WidgetChat
                  createdAt: '2020-12-16T09:41:43Z'
                  direction: Outbound
                  state: Open
                  stateUpdatedAt: '2020-12-16T09:41:43Z'
                  assignment:
                    agentId: 0e4d0ead-dc69-470a-9b3a-e7eb16a56453
                    assignedAt: '2020-12-16T11:00:34Z'
                  queue:
                    id: cd87b232-64c8-4ad5-b81a-6f9233352d97X
                    queuedAt: '2020-12-16T10:40:40Z'
                  browserInfo:
                    version: 91.0.4472.114
                    name: Chrome 9
                    ipAddress: 127.0.0.1
                    originatingUrl: http://localhost:3000/
                  language: en
                  link:
                    parentId: 1234
                    _type: SideConversation
                  customAttributes:
                    - id: e14708a6-eed9-495c-9d88-c72331e9e247X
                      name: My Attribute
                      identifier: my_attribute
                      value: My Attribute Value
                  _type: ChatConversation
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/conversations/{conversationId}/linked:
    get:
      tags:
        - Conversations
      summary: List linked conversations
      operationId: Conversations_listLinked
      description: >-
        Lists all linked child conversations for the given conversation ID, such
        as transcripts and side conversations.
      parameters:
        - name: conversationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The list of conversations requested by an EndUser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLinkedConversationsOutput'
              example:
                data:
                  - id: 12341
                    requesterId: 7bcf1f2d-70c0-4f87-8c5b-bed2c8b247e9
                    channel: WidgetChat
                    createdAt: '2022-07-26T12:09:21Z'
                    direction: Inbound
                    state: Open
                    stateUpdatedAt: '2022-07-26T12:12:53Z'
                    assignment:
                      agentId: 01107a2e-4ff0-4a87-bb48-a19af298394d
                      assignedAt: '2022-07-26T12:12:53Z'
                    queue:
                      id: 6b9087b3-9ab7-4af4-936d-3290996faedb
                      queuedAt: '2022-07-26T12:09:54Z'
                    toEmail: something@email.dixa.com
                    fromEmail: some.one@somewhere.com
                    integrationEmail: something@email.dixa.com
                    language: en
                    subject: Important Request
                    link:
                      parentId: 1234
                      _type: SideConversation
                    _type: EmailConversation
        '400':
          description: >-
            Invalid value for: path parameter conversationId, Invalid value
            extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/queues:
    get:
      tags:
        - Queues
      summary: List queues
      operationId: Queues_listAll
      description: List all queues in an organization.
      responses:
        '200':
          description: The list of queues in an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueuesOutput'
              example:
                data:
                  - id: 497d2cb4-6b48-4fa2-99d2-21c2a5bad79f
                    name: MyCorp main queue
                    isDefault: true
                    organizationId: 927d4b48-966b-45a3-8d7c-c6ad64f877b0
                    queueThresholds:
                      SlaPercentage: 10
                    slaCalculationMethod: AbandonedIgnored
                    offerTimeout: 10
                    offeringAlgorithm: OneAtATimeRandom
                    memberListType: SkillBased
                    usages:
                      queueId: 497d2cb4-6b48-4fa2-99d2-21c2a5bad79f
                      usages:
                        WidgetChat:
                          - c6f50127-7f0a-418f-943e-c62b96d8a742
                          - b2ac94ac-379a-4f24-995a-6473809eef6b
                        PstnPhone:
                          - '+4589977790'
                        Email:
                          - info@mycorp.dixa.io
                    wrapupTimeout: 10
                    priority: 1
                    offerAbandonedConversations: false
                    doNotOfferTimeouts:
                      WidgetChat: 1
                    isDoNotOfferEnabled: true
                    isPreferredAgentEnabled: false
                    preferredAgentTimeouts:
                      WhatsApp: 300
                      Voicemail: 300
                      WidgetChat: 300
                      FacebookMessenger: 300
                      Email: 43200
                      ContactForm: 43200
                      Callback: 300
                      PstnPhone: 300
                    preferredAgentOfflineTimeout: 500
                    personalAgentOfflineTimeout: 500
                  - id: 921a6e00-0845-417e-9c67-f7cb872d45f0
                    name: MyCorp email queue
                    isDefault: true
                    organizationId: 927d4b48-966b-45a3-8d7c-c6ad64f877b0
                    queueThresholds:
                      SlaPercentage: 10
                    slaCalculationMethod: AbandonedIgnored
                    offerTimeout: 10
                    offeringAlgorithm: OneAtATimeRandom
                    memberListType: SkillBased
                    usages:
                      queueId: 921a6e00-0845-417e-9c67-f7cb872d45f0
                      usages:
                        Email:
                          - info@mycorp.dixa.io
                    wrapupTimeout: 10
                    priority: 1
                    offerAbandonedConversations: false
                    doNotOfferTimeouts:
                      WidgetChat: 1
                    isDoNotOfferEnabled: true
                    isPreferredAgentEnabled: false
                    preferredAgentOfflineTimeout: 500
                    personalAgentOfflineTimeout: 500
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Queues
      summary: Create queue
      operationId: Queues_createQueue
      description: Create a queue.
      requestBody:
        description: The details for creating a queue
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQueueInput'
            example:
              request:
                name: MyCorp main queue
                callFunctionality: false
                isDefault: true
                queueThresholds:
                  WaitingConversations: 10
                offerTimeout: 10
                offerAlgorithm: AllAtOnce
                wrapupTimeout: 10
                priority: 1
                offerAbandonedConversations: false
                doNotOfferTimeouts:
                  WidgetChat: 1
                isDoNotOfferEnabled: true
                preferredAgentTimeouts:
                  WhatsApp: 300
                  Voicemail: 300
                  WidgetChat: 300
                  FacebookMessenger: 300
                  Email: 43200
                  ContactForm: 43200
                  Callback: 300
                  PstnPhone: 300
                isPreferredAgentEnabled: false
                preferredAgentOfflineTimeout: 500
                personalAgentOfflineTimeout: 500
        required: true
      responses:
        '201':
          description: The created queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQueueOutput'
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/queues/{queueId}/members:
    get:
      tags:
        - Queues
      summary: List agents
      operationId: Queues_listMembers
      description: >-
        List all agents/admins that are members of a queue by providing the
        queue id.
      parameters:
        - name: queueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of the agents/admins that are members of a queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueMembersOutput'
              example:
                data:
                  - agentId: e96647c1-f697-4328-868a-19f828a6ee46
                    priority: 1
                  - agentId: 95dfa97e-dbf5-4bfc-be64-1f834baebd4e
                    priority: 2
        '400':
          description: >-
            Invalid value for: path parameter queueId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    delete:
      tags:
        - Queues
      summary: Remove agents
      operationId: Queues_removeMembersBulk
      description: Bulk remove agents/admins from the specified queue.
      parameters:
        - name: queueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: >-
          The list of agents/admins to be removed from the queue. Up to 10
          members can be specified.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkQueueEndpointInput'
            example:
              agentIds:
                - 743c3781-c882-4352-a1fa-fe5d7a673cfd
                - cad2f234-8cec-4cd8-96e9-a6491a0176da
        required: true
      responses:
        '204':
          description: The bulk operation succeeded
        '400':
          description: >-
            Invalid value for: path parameter queueId, Invalid value extracted
            from request context, Invalid value for: body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    patch:
      tags:
        - Queues
      summary: Assign agents
      operationId: Queues_assignMembers
      description: Assign one or more agents/admins to a given queue.
      parameters:
        - name: queueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The list of agents/admins to be added to the queue
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkQueueEndpointInput'
            example:
              agentIds:
                - c31e5e3f-1d5f-4442-83df-fd7bddd59da4
                - 26ae145b-8644-4fa5-aa56-7b3dcacbe2d4
        required: true
      responses:
        '200':
          description: The list of patch action outcomes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkQueueEndpointOutput'
              example:
                data:
                  - data: b41558f2-3807-44ef-8abf-a73d5ef68ff6
                    _type: BulkActionSuccess
                  - error:
                      id: 914a6e19-cab7-41a7-b41b-517e0ed56161
                      message: User not found
                      _type: NotFound
                    _type: BulkActionFailure
                  - error:
                      id: 7fecdb7e-9e37-45ef-be5e-0c14d6687aa0
                      message: Member is neither Agent or Admin
                      _type: Validation
                    _type: BulkActionFailure
        '400':
          description: >-
            Invalid value for: path parameter queueId, Invalid value extracted
            from request context, Invalid value for: body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/queues/{queueId}:
    get:
      tags:
        - Queues
      summary: Get queue
      operationId: Queues_getById
      description: Get a queue by id.
      parameters:
        - name: queueId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQueueByIdOutput'
              example:
                data:
                  id: 0bf82493-ae46-4c49-aa29-0422136269be
                  name: MyCorp main queue
                  isDefault: true
                  organizationId: 3de6c0f1-5e84-4d29-9ce9-84033983d4e6
                  queueThresholds:
                    SlaPercentage: 10
                  slaCalculationMethod: AbandonedIgnored
                  offerTimeout: 10
                  offeringAlgorithm: OneAtATimeRandom
                  memberListType: SkillBased
                  usages:
                    queueId: 0bf82493-ae46-4c49-aa29-0422136269be
                    usages:
                      WidgetChat:
                        - c6f50127-7f0a-418f-943e-c62b96d8a742
                        - b2ac94ac-379a-4f24-995a-6473809eef6b
                      PstnPhone:
                        - '+4589977790'
                      Email:
                        - info@mycorp.dixa.io
                  wrapupTimeout: 10
                  priority: 1
                  offerAbandonedConversations: false
                  doNotOfferTimeouts:
                    WidgetChat: 1
                  isDoNotOfferEnabled: true
                  isPreferredAgentEnabled: false
                  preferredAgentTimeouts:
                    WhatsApp: 300
                    Voicemail: 300
                    WidgetChat: 300
                    FacebookMessenger: 300
                    Email: 43200
                    ContactForm: 43200
                    Callback: 300
                    PstnPhone: 300
                  preferredAgentOfflineTimeout: 500
                  personalAgentOfflineTimeout: 500
        '400':
          description: >-
            Invalid value for: path parameter queueId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/tags:
    get:
      tags:
        - Tags
      summary: List tags
      operationId: Tags_list
      description: List all tags in an organization.
      responses:
        '200':
          description: The list of tags in an organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsOutput'
              example:
                data:
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
                  - id: b794a74a-625b-4303-8237-9b11668a9605X
                    name: example
                    state: Active
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Tags
      summary: Create tag
      operationId: Tags_createTag
      description: Create a tag.
      requestBody:
        description: The tag details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagInput'
            example:
              name: test
              color: '#000000'
        required: true
      responses:
        '200':
          description: >-
            The created tag or an existing tag with the same name. Note that the
            tag is not updated to match the input in case it already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTagOutput'
              example:
                data:
                  id: b794a74a-625b-4303-8237-9b11668a9605X
                  name: example
                  state: Active
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/tags/{tagId}:
    get:
      tags:
        - Tags
      summary: Get tag
      operationId: Tags_getById
      description: Get a tag by id.
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagOutput'
              example:
                data:
                  id: b794a74a-625b-4303-8237-9b11668a9605X
                  name: example
                  state: Active
        '400':
          description: >-
            Invalid value for: path parameter tagId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/tags/{tagId}/deactivate:
    patch:
      tags:
        - Tags
      summary: Deactivate tag
      operationId: Tags_deactivateTag
      description: Deactivate a tag.
      parameters:
        - description: The tag id
          name: tagId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The tag was successfully deactivated
        '400':
          description: >-
            Invalid value for: path parameter tagId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/tags/{tagId}/activate:
    patch:
      tags:
        - Tags
      summary: Activate tag
      operationId: Tags_activateTag
      description: Activate a tag.
      parameters:
        - description: The tag id
          name: tagId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The tag was successfully activated
        '400':
          description: >-
            Invalid value for: path parameter tagId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/anonymization/request/{requestId}:
    get:
      tags:
        - Anonymization
      summary: Get anonymization status
      operationId: Anonymization_getStatus
      description: >-
        Retrieve an anonymization request submitted earlier (user or
        conversation).
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The anonymization request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymizeEntityOutput'
              example:
                data:
                  id: 062f0b37-4de0-40f2-95a4-641435cb2869
                  entityType: UserAnonymizationType
                  _type: User
                  initiatedAt: 2021-12-01T12:46:36.581Z[GMT]
                  targetEntityId: da9db703-4a7a-4f44-8a6a-c03b179b8ae2
                  requestedBy: bac5a02c-15b3-44da-ae1e-ab7b9db4aa89
        '400':
          description: >-
            Invalid value for: path parameter requestId, Invalid value extracted
            from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '401':
          description: >-
            The user who issued the access token used in the request is not
            authorized to perform the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                message: User is unauthorized to perform an underlying operation
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/anonymization:
    post:
      tags:
        - Anonymization
      summary: Anonymize entity
      operationId: Anonymization_entityAnonymize
      description: >-
        Anonymize the requested entity (user or conversation). For a
        conversation to be successfully anonymized, it should be in the status
        `closed`. Otherwise, it requires `forceAnonymization` parameter set to
        `true` in the input body. NOTE: This endpoint is deprecated. Prefer
        using the anonymization endpoints of specific resources instead.
      requestBody:
        description: A request to anonymize an entity in the system (user or conversation).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnonymizeEntityInput'
            example:
              entityId: a53b25da-f676-4c52-acac-58c9280aa23d
              _type: User
        required: true
      responses:
        '200':
          description: The anonymization request status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnonymizeEntityOutput'
              example:
                data:
                  id: a53b25da-f676-4c52-acac-58c9280aa23dX
                  entityType: UserAnonymizationType
                  _type: User
                  initiatedAt: 2021-12-01T12:46:36.581Z[GMT]
                  targetEntityId: 6292b720-9dbd-4ff7-8942-f4e917cc1520
                  requestedBy: 062f0b37-4de0-40f2-95a4-641435cb2869
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body, The entityId doesn't match the expected format for the
            specified type, The entity type is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
      deprecated: true
  /v1/contact-endpoints/{contactEndpointId}:
    get:
      tags:
        - Contact Endpoints
      summary: Get contact endpoint
      operationId: ContactEndpoints_getById
      description: Get contact endpoint by id (email or phone number).
      parameters:
        - name: contactEndpointId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The requested contact endpoint
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactPointByIdOutput'
              example:
                data:
                  address: some@email.com
                  senderOverride: otheremail@mail.dk
                  name: Special email flow
                  _type: EmailEndpoint
        '400':
          description: >-
            Invalid value extracted from request context, The contactEndpointId
            is neither a valid email nor a valid E.164 phone number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
  /v1/contact-endpoints:
    get:
      tags:
        - Contact Endpoints
      summary: List contact endpoints
      operationId: ContactEndpoints_listAll
      description: List all available contact endpoints in an organization.
      parameters:
        - description: >-
            An optional contact type can be specified to filter the contact
            endpoints. If not provided, all types are listed. Possible values:
            [EmailEndpoint, TelephonyEndpoint]
          name: _type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The list of available contact endpoints
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactPointsOutput'
              example:
                data:
                  - number: '+4531434343'
                    functionality:
                      - VoiceInbound
                      - VoiceOutbound
                    name: DK Sms
                    _type: TelephonyEndpoint
                  - address: some@email.com
                    senderOverride: otheremail@mail.dk
                    name: Special email flow
                    _type: EmailEndpoint
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter _type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/custom-attributes:
    get:
      tags:
        - Custom Attributes
      summary: List custom attributes definitions
      operationId: CustomAttributes_listDefinitions
      description: List all custom attributes in an organization.
      responses:
        '200':
          description: The list of configured custom attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomAttributesDefinitionsOutput'
              example:
                data:
                  - description: Id of the parcel
                    id: c43fc767-f89b-443a-9c98-90f53f940bd7
                    entityType: Conversation
                    identifier: parcel_id
                    label: Parcel ID
                    inputDefinition:
                      placeholder: '1234'
                      _type: Text
                    createdAt: 2023-01-01T08:23:54.246Z[GMT]
                    updatedAt: 2023-01-11T12:25:23.837Z[GMT]
                    isRequired: false
                    isArchived: false
                    isDeactivated: false
                  - description: Reason for contacting
                    id: db5f673b-1c40-41e7-b71f-caab342f0607
                    entityType: Conversation
                    identifier: contact_reason
                    label: Contact Reason
                    inputDefinition:
                      options:
                        - id: 5e2be744-cc2b-4bda-8c76-feb7b28f2970
                          label: Payment
                          value: payment
                          nestedOptions:
                            - id: 666de4d5-0c6e-421c-a25e-d53073070af4
                              label: Card
                              value: card
                              nestedOptions: []
                              isDeactivated: false
                            - id: db26964a-5a88-4689-ad34-8a5f21cd9cd6
                              label: Bank Transfer
                              value: bank_transfer
                              nestedOptions: []
                              isDeactivated: false
                          isDeactivated: false
                        - id: 05d43b25-32a4-49e2-97c0-8723dc73f7bb
                          label: Access
                          value: access
                          nestedOptions: []
                          isDeactivated: false
                      _type: Select
                    createdAt: 2023-01-05T06:42:31.532Z[GMT]
                    isRequired: true
                    isArchived: false
                    isDeactivated: false
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/search/conversations:
    get:
      tags:
        - Search
        - Conversations
      summary: Search conversations
      operationId: Search_conversationsContainingText
      description: Search for conversations containing a particular text.
      parameters:
        - description: >-
            Maximum number of results per page. May be used in combination with
            pageKey to change the number of results in between page requests.
          name: pageLimit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: >-
            Base64 encoded form of pagination query parameters. Do not try to
            construct or change programmatically as the internal structure may
            change without notice.
          name: pageKey
          in: query
          required: false
          schema:
            type: string
        - description: The text by which to search conversations
          name: query
          in: query
          required: true
          schema:
            type: string
            minLength: 1
          example: cancel my order
        - description: Return only exact matches. This value is false by default.
          name: exactMatch
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: The search results for the searched parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchOutput'
              example:
                data:
                  - id: 1234
                    highlights:
                      subject:
                        - <em class="highlight">Cancel my order</em>
                    innerHits:
                      - id: dadcaea0-4135-4e8a-a5bf-05d4658facba
                        highlight:
                          text: >-
                            I want to <em class="highlight">cancel my order</em>
                            as soon as possible
                    _type: ConversationSearchHit
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            query parameter pageLimit, Invalid value for: query parameter
            pageKey, Invalid value for: query parameter query, Invalid value
            for: query parameter exactMatch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '401':
          description: >-
            The user who issued the access token used in the request is not
            authorized to perform the operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                message: User is unauthorized to perform an underlying operation
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/webhooks/{webhookSubscriptionId}:
    get:
      tags:
        - Webhooks
      summary: Webhook Subscription
      operationId: Webhooks_getSubscriptionById
      description: Get a Webhook Subscription by ID.
      parameters:
        - name: webhookSubscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The Webhook Subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhookSubscriptionOutput'
              example:
                data:
                  id: cb452b81-6748-40ab-af85-6559b371bc5d
                  name: Dashboard Integration
                  subscribedEvents:
                    - ConversationCreated
                    - ConversationClosed
                  url: https://example.webhook/dashboard_integration
                  headers:
                    Authorization: Basic d2ViaG9va191c2VyOndlYmhvb2tfcGFzc3dvcmQ=
                  secretKey: >-
                    4g4h988p468g785965b780684bde5546c52gge658d76b4q33fb69c526ea4bdbc
                  enabled: true
                  createdAt: '2023-08-01T09:30:15Z'
                  createdBy: e979cc3b-17b2-4850-b049-13c758763d1c
                  updatedAt: '2023-08-02T15:09:30Z'
                  updatedBy: 64b777c3-eb82-49fb-bb3e-294afb5d840c
        '400':
          description: >-
            Invalid value for: path parameter webhookSubscriptionId, Invalid
            value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    delete:
      tags:
        - Webhooks
      summary: Delete Webhook Subscription
      operationId: Webhooks_deleteSubscription
      description: Delete a Webhook Subscription.
      parameters:
        - name: webhookSubscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The Webhook Subscription was successfully deleted
        '400':
          description: >-
            Invalid value for: path parameter webhookSubscriptionId, Invalid
            value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal failure during request processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    patch:
      tags:
        - Webhooks
      summary: Patch Webhook Subscription
      operationId: Webhooks_updateSubscription
      description: Patch a Webhook Subscription.
      parameters:
        - name: webhookSubscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The Webhook Subscription fields to be patched
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWebhookSubscriptionInput'
            example:
              name: New name
              events:
                - ConversationNoteAdded
              authorization:
                value: >-
                  eyDoiGciOqGYUzI1NiJ4.eyJ0eQJRUapoYXBpIiwib4JxA5lkIjoiNTVmMmE6MmItYjU4NF33MDMxLTk2NTktOTE2M.qPoOZoQYDn4rn-akaLmVFka15JAV7TF6QT8UHOUTIy0
                _type: TokenAuth
        required: true
      responses:
        '200':
          description: The patched Webhook Subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchWebhookSubscriptionOutput'
              example:
                data:
                  id: cb452b81-6748-40ab-af85-6559b371bc5dX
                  name: New name
                  subscribedEvents:
                    - ConversationNoteAdded
                  url: https://example.webhook/dashboard_integration
                  headers:
                    Authorization: >-
                      Bearer
                      eyDoiGciOqGYUzI1NiJ4.eyJ0eQJRUapoYXBpIiwib4JxA5lkIjoiNTVmMmE6MmItYjU4NF33MDMxLTk2NTktOTE2M.qPoOZoQYDn4rn-akaLmVFka15JAV7TF6QT8UHOUTIy0
                  secretKey: >-
                    4g4h988p468g785965b780684bde5546c52gge658d76b4q33fb69c526ea4bdbc
                  enabled: true
                  createdAt: '2023-08-01T09:30:15Z'
                  createdBy: e979cc3b-17b2-4850-b049-13c758763d1c
                  updatedAt: '2023-08-02T15:09:30Z'
                  updatedBy: 64b777c3-eb82-49fb-bb3e-294afb5d840c
        '400':
          description: >-
            Invalid value for: path parameter webhookSubscriptionId, Invalid
            value extracted from request context, Invalid value for: body,
            Validation failure during Webhook Subscription patching
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/webhooks:
    get:
      tags:
        - Webhooks
      summary: List all Webhook Subscriptions
      operationId: Webhooks_listSubscriptions
      description: List of all Webhook Subscriptions in an organization.
      responses:
        '200':
          description: The List of Webhook Subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWebhookSubscriptionsEndpointOutput'
              example:
                data:
                  - id: cb452b81-6748-40ab-af85-6559b371bc5dX
                    name: Dashboard Integration
                    subscribedEvents:
                      - ConversationCreated
                      - ConversationClosed
                    url: https://example.webhook/dashboard_integration
                    headers:
                      Authorization: Basic d2ViaG9va191c2VyOndlYmhvb2tfcGFzc3dvcmQ=
                    secretKey: >-
                      4g4h988p468g785965b780684bde5546c52gge658d76b4q33fb69c526ea4bdbc
                    enabled: true
                    createdAt: '2023-08-01T09:30:15Z'
                    createdBy: e979cc3b-17b2-4850-b049-13c758763d1c
                    updatedAt: '2023-08-02T15:09:30Z'
                    updatedBy: 64b777c3-eb82-49fb-bb3e-294afb5d840c
        '400':
          description: Invalid value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
    post:
      tags:
        - Webhooks
      summary: Create Webhook Subscription
      operationId: Webhooks_createSubscription
      description: Create a Webhook Subscription.
      requestBody:
        description: The Webhook Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookSubscriptionInput'
            example:
              name: Dashboard Integration
              events:
                - ConversationCreated
                - ConversationClosed
              url: https://example.webhook/dashboard_integration
              authorization:
                username: webhook_user
                password: webhook_password
                _type: BasicAuth
              enabled: true
        required: true
      responses:
        '201':
          description: The created Webhook Subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWebhookSubscriptionOutput'
              example:
                data:
                  id: cb452b81-6748-40ab-af85-6559b371bc5dX
                  name: Dashboard Integration
                  subscribedEvents:
                    - ConversationCreated
                    - ConversationClosed
                  url: https://example.webhook/dashboard_integration
                  headers:
                    Authorization: Basic d2ViaG9va191c2VyOndlYmhvb2tfcGFzc3dvcmQ=
                  secretKey: >-
                    4g4h988p468g785965b780684bde5546c52gge658d76b4q33fb69c526ea4bdbc
                  enabled: true
                  createdAt: '2023-08-01T09:30:15Z'
                  createdBy: e979cc3b-17b2-4850-b049-13c758763d1c
                  updatedAt: '2023-08-02T15:09:30Z'
                  updatedBy: 64b777c3-eb82-49fb-bb3e-294afb5d840c
        '400':
          description: >-
            Invalid value extracted from request context, Invalid value for:
            body, Validation failure during Webhook Subscription creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Decoding failure in request
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/webhooks/{webhookSubscriptionId}/delivery-status:
    get:
      tags:
        - Webhooks
      summary: Webhook Subscription Last Delivery Statuses
      operationId: Webhooks_getDeliveryStatus
      description: Get the latest delivery statuses of a Webhook Subscription.
      parameters:
        - name: webhookSubscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The Latest Delivery Statuses of a Webhook Subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhookLastDeliveryStatusOutput'
              example:
                data:
                  - event: ConversationCreated
                    deliveryStatus:
                      deliveryTimestamp: '2023-09-15T12:00:00.000Z'
                      success: true
                      responseCode: 200
                      responseText: OK
                      _type: DeliveryDetail
                  - event: ConversationClosed
                    deliveryStatus:
                      _type: NoRecentDelivery
        '400':
          description: >-
            Invalid value for: path parameter webhookSubscriptionId, Invalid
            value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
  /v1/webhooks/{webhookSubscriptionId}/delivery-status/logs/{event}:
    get:
      tags:
        - Webhooks
      summary: Webhook Subscription Event Logs
      operationId: Webhooks_getDeliveryStatusLogs
      description: Get the latest Webhook Subscription Event logs.
      parameters:
        - name: webhookSubscriptionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: event
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The Webhook Subscription Event Logs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhookEventDeliveryLogsOutput'
              example:
                data:
                  - deliveryDetail:
                      deliveryTimestamp: '2023-09-15T12:00:00.000Z'
                      success: true
                      responseCode: 200
                      responseText: OK
                    payload: >-
                      { "event_id": "8967e0c6-fe64-4105-bf71-14ae0c256gg4",
                      "event_fqn": "CONVERSATION_NOTE_ADDED", "event_version":
                      "1", "event_timestamp": "2023-09-15T12:00:00.000Z",
                      "organization": { "id":
                      "g1b15dq2-bba8-48a8-a92e-852014a166r9", "name": "Your Org
                      Name" }, "data": { "conversation": { "csid": 1234,
                      "channel": "WIDGET_CHAT", "status": "OPEN", "direction":
                      "INBOUND", "queue": { "id":
                      "b5b10483-7d28-4dea-bf8d-0d88cc3bd7cc", "name": "Your
                      Queue" }, "contact_point": "Your Contact Point",
                      "requester": { "id":
                      "ec4a2b65-0403-42b3-b054-8998325fd8ac", "name": "Test
                      Requester", "email": "test@example.com", "phone": null,
                      "roles": [ "Enduser" ] }, "assignee": { "id":
                      "cccb8520-e24f-43bf-8344-49d07665d854", "name": "An
                      Agent", "email": "agent@yourcompany.com", "phone":
                      "+4511223344", "roles": [ "Admin", "TeamLead",
                      "SystemAdmin", "Agent" ] }, "subject": null, "tags": [],
                      "created_at": "2023-09-01T12:00:00.000Z" }, "note_id":
                      "ac951357-5189-4707-add7-616af55698q7", "text": "Some Note
                      Added", "created_at": "2023-09-15T12:00:00.000Z",
                      "author": { "id": "cccb8520-e24f-43bf-8344-49d07665d854",
                      "name": "An Agent", "email": "agent@yourcompany.com",
                      "phone": "+4511223344", "roles": [ "Admin", "TeamLead",
                      "SystemAdmin", "Agent" ] } } }
                  - deliveryDetail:
                      deliveryTimestamp: '2023-09-15T08:00:00.000Z'
                      success: true
                      responseCode: 200
                      responseText: OK
                    payload: >-
                      { "event_id": "9963e0c6-fe64-4105-bf71-14ae0c123hh5",
                      "event_fqn": "CONVERSATION_NOTE_ADDED", "event_version":
                      "1", "event_timestamp": "2023-09-15T08:00:00.000Z",
                      "organization": { "id":
                      "g1b15dq2-bba8-48a8-a92e-852014a166r9", "name": "Your Org
                      Name" }, "data": { "conversation": { "csid": 1234,
                      "channel": "WIDGET_CHAT", "status": "OPEN", "direction":
                      "INBOUND", "queue": { "id":
                      "b5b10483-7d28-4dea-bf8d-0d88cc3bd7cc", "name": "Your
                      Queue" }, "contact_point": "Your Contact Point",
                      "requester": { "id":
                      "ec4a2b65-0403-42b3-b054-8998325fd8ac", "name": "Test
                      Requester", "email": "test@example.com", "phone": null,
                      "roles": [ "Enduser" ] }, "assignee": { "id":
                      "cccb8520-e24f-43bf-8344-49d07665d854", "name": "An
                      Agent", "email": "agent@yourcompany.com", "phone":
                      "+4511223344", "roles": [ "Admin", "TeamLead",
                      "SystemAdmin", "Agent" ] }, "subject": null, "tags": [],
                      "created_at": "2023-09-01T12:00:00.000Z" }, "note_id":
                      "ac951357-5189-4707-add7-616af55698q7", "text": "First
                      Note", "created_at": "2023-09-15T08:00:00.000Z", "author":
                      { "id": "cccb8520-e24f-43bf-8344-49d07665d854", "name":
                      "An Agent", "email": "agent@yourcompany.com", "phone":
                      "+4511223344", "roles": [ "Admin", "TeamLead",
                      "SystemAdmin", "Agent" ] } } }
        '400':
          description: >-
            Invalid value for: path parameter webhookSubscriptionId, Invalid
            value extracted from request context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                message: Invalid value in request
        '404':
          description: An entity in this request could not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                message: The requested resource could not be found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                message: >-
                  There was an internal server error while processing the
                  request
components:
  schemas:
    ActivityLogAttribute:
      oneOf:
        - $ref: '#/components/schemas/ConversationAssignedAttribute'
        - $ref: '#/components/schemas/ConversationAutoReplySentAttribute'
        - $ref: '#/components/schemas/ConversationClaimedAttribute'
        - $ref: '#/components/schemas/ConversationCreatedAttribute'
        - $ref: '#/components/schemas/ConversationEndUserReplacedAttribute'
        - $ref: '#/components/schemas/ConversationLanguageUpdatedAttribute'
        - $ref: '#/components/schemas/ConversationOfferedAttribute'
        - $ref: '#/components/schemas/ConversationRatedAttribute'
        - $ref: '#/components/schemas/ConversationRatingOfferedAttribute'
        - $ref: '#/components/schemas/ConversationRatingScheduledAttribute'
        - $ref: '#/components/schemas/ConversationReservedAttribute'
        - $ref: '#/components/schemas/ConversationTransferredAttribute'
        - $ref: '#/components/schemas/ConversationUnassignedAttribute'
        - $ref: '#/components/schemas/MessageAddedAttribute'
        - $ref: '#/components/schemas/NoteAddedAttribute'
        - $ref: '#/components/schemas/TagAddedAttribute'
        - $ref: '#/components/schemas/TagRemovedAttribute'
    ActivityLogEntry:
      required:
        - id
        - conversationId
        - activityTimestamp
        - activityType
        - _type
      type: object
      properties:
        id:
          type: string
          format: uuid
        conversationId:
          type: integer
          format: int32
        activityTimestamp:
          type: string
          format: date-time
        activityType:
          $ref: '#/components/schemas/DeprecatedActivityLogType'
        _type:
          description: >-
            values: [ConversationRatingScheduled, ConversationOfferAccepted,
            ConversationPending, ConversationRatingUnscheduled,
            ConversationOfferRejected, ConversationEndUserReplaced, NoteAdded,
            FollowupExpired, ConversationRated, TagAdded,
            ConversationOfferTimeout, MessageAddedByCustomer,
            ConversationCreatedByCustomer, ConversationCreatedByAgent,
            TransferFailed, TransferSuccessful, ConversationOffered,
            ConversationUnassigned, TagRemoved, TransferInitiated,
            ConversationClaimed, ConversationReopened, ConversationClosed,
            ConversationLanguageUpdated, FollowupAdded,
            ConversationAutoreplySent, ConversationReserved,
            ConversationAssigned, ConversationRatingOffered,
            ConversationRatingCancelled, MessageAddedByAgent, FollowupRemoved]
          type: string
        author:
          $ref: '#/components/schemas/ActivityLogUser'
        attributes:
          $ref: '#/components/schemas/ActivityLogAttribute'
    ActivityLogUser:
      required:
        - id
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    Agent:
      required:
        - id
        - createdAt
        - displayName
        - email
      type: object
      properties:
        id:
          description: Unique identifier for the agent
          type: string
          format: uuid
        createdAt:
          description: Time when the agent was created
          type: string
          format: date-time
        displayName:
          description: The agent's display name
          type: string
        email:
          description: The agent's primary email address
          type: string
        avatarUrl:
          description: The url from which to load the agent's avatar
          type: string
        phoneNumber:
          description: The agent's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the agent
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the agent
          type: array
          items:
            type: string
        firstName:
          description: The agent's first name
          type: string
        lastName:
          description: The agent's last name
          type: string
        middleNames:
          description: The agent's middle names
          type: array
          items:
            type: string
        roles:
          description: The agent's roles
          type: array
          items:
            description: 'values: [Agent, SystemAdmin, TeamLead, Admin]'
            type: string
    AgentOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Agent'
    AgentTeamsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    AgentsToTeamInput:
      type: object
      properties:
        agentIds:
          type: array
          items:
            type: string
            format: uuid
    AggregateMetadata:
      required:
        - measure
      type: object
      properties:
        description:
          type: string
        measure:
          description: 'values: [Min, Max, Sum, Count, Percentage, StdDev, Average]'
          type: string
    AggregateValue:
      oneOf:
        - $ref: '#/components/schemas/DoubleAggregateValue'
        - $ref: '#/components/schemas/LongAggregateValue'
    AnonymizationRequestStatus:
      required:
        - id
        - entityType
        - _type
        - initiatedAt
        - targetEntityId
        - requestedBy
      type: object
      properties:
        id:
          type: string
          format: uuid
        entityType:
          $ref: '#/components/schemas/DeprecatedAnonymizationType'
        _type:
          description: 'values: [Conversation, Message, User]'
          type: string
        initiatedAt:
          type: string
          format: date-time
        targetEntityId:
          type: string
        requestedBy:
          type: string
          format: uuid
        processedAt:
          type: string
          format: date-time
    AnonymizeEntityInput:
      required:
        - entityId
      type: object
      properties:
        entityId:
          type: string
        entityType:
          $ref: '#/components/schemas/DeprecatedAnonymizationType'
        forceAnonymization:
          type: boolean
        _type:
          description: 'values: [Conversation, Message, User]'
          type: string
    AnonymizeEntityOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AnonymizationRequestStatus'
    AnonymizedConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
        - anonymizedAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        anonymizedAt:
          type: string
          format: date-time
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    Assignment:
      required:
        - agentId
        - assignedAt
      type: object
      properties:
        agentId:
          type: string
          format: uuid
        assignedAt:
          type: string
          format: date-time
    Attributes:
      oneOf:
        - $ref: '#/components/schemas/CallRecordingAttributes'
        - $ref: '#/components/schemas/ChatAttributes'
        - $ref: '#/components/schemas/ContactFormAttributes'
        - $ref: '#/components/schemas/EmailAttributes'
        - $ref: '#/components/schemas/FacebookMessengerAttributes'
        - $ref: '#/components/schemas/GenericAttributes'
        - $ref: '#/components/schemas/PhoneAttributes'
        - $ref: '#/components/schemas/SmsAttributes'
        - $ref: '#/components/schemas/TwitterAttributes'
        - $ref: '#/components/schemas/WhatsAppAttributes'
    BadRequest:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    BasicAuth:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    BooleanField:
      required:
        - value
      type: object
      properties:
        value:
          type: boolean
    BrowserInfo:
      required:
        - name
      type: object
      properties:
        version:
          type: string
        name:
          type: string
        ipAddress:
          type: string
        originatingUrl:
          type: string
    BulkActionFailure_BulkError_Agent:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/BulkError'
    BulkActionFailure_BulkError_EndUser:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/BulkError'
    BulkActionFailure_BulkError_UUID:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/BulkError'
    BulkActionFailure_ErrorResponse_InternalNoteData:
      required:
        - error
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse'
    BulkActionOutcome_BulkError_Agent:
      oneOf:
        - $ref: '#/components/schemas/BulkActionFailure_BulkError_Agent'
        - $ref: '#/components/schemas/BulkActionSuccess_BulkError_Agent'
    BulkActionOutcome_BulkError_EndUser:
      oneOf:
        - $ref: '#/components/schemas/BulkActionFailure_BulkError_EndUser'
        - $ref: '#/components/schemas/BulkActionSuccess_BulkError_EndUser'
    BulkActionOutcome_BulkError_UUID:
      oneOf:
        - $ref: '#/components/schemas/BulkActionFailure_BulkError_UUID'
        - $ref: '#/components/schemas/BulkActionSuccess_BulkError_UUID'
    BulkActionOutcome_ErrorResponse_InternalNoteData:
      oneOf:
        - $ref: >-
            #/components/schemas/BulkActionFailure_ErrorResponse_InternalNoteData
        - $ref: >-
            #/components/schemas/BulkActionSuccess_ErrorResponse_InternalNoteData
    BulkActionSuccess_BulkError_Agent:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Agent'
    BulkActionSuccess_BulkError_EndUser:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EndUser'
    BulkActionSuccess_BulkError_UUID:
      required:
        - data
      type: object
      properties:
        data:
          type: string
          format: uuid
    BulkActionSuccess_ErrorResponse_InternalNoteData:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InternalNoteData'
    BulkCreateInternalNoteInput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreateInternalNoteInput'
    BulkCreateNoteOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: >-
              #/components/schemas/BulkActionOutcome_ErrorResponse_InternalNoteData
    BulkError:
      oneOf:
        - $ref: '#/components/schemas/EmptyPatchSet'
        - $ref: '#/components/schemas/ErrorResponse'
        - $ref: '#/components/schemas/Infrastructure'
        - $ref: '#/components/schemas/Integrity'
        - $ref: '#/components/schemas/NotFound1'
        - $ref: '#/components/schemas/Validation'
    BulkPatchAgentInput:
      required:
        - id
      type: object
      properties:
        id:
          description: Unique identifier for the agent
          type: string
        displayName:
          description: The agent's display name
          type: string
        phoneNumber:
          description: The agent's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the agent
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the agent
          type: array
          items:
            type: string
        firstName:
          description: The agent's first name
          type: string
        lastName:
          description: The agent's last name
          type: string
        middleNames:
          description: The agent's middle names
          type: array
          items:
            type: string
        avatarUrl:
          description: The url from which to load the agent's avatar
          type: string
    BulkPatchEndUserInput:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        additionalEmails:
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        middleNames:
          type: array
          items:
            type: string
        avatarUrl:
          type: string
        externalId:
          type: string
    BulkPatchEndUsersInput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkPatchEndUserInput'
    BulkPatchEndUsersOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionOutcome_BulkError_EndUser'
    BulkQueueEndpointInput:
      type: object
      properties:
        agentIds:
          type: array
          items:
            type: string
            format: uuid
    BulkQueueEndpointOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionOutcome_BulkError_UUID'
    BulkUpdateAgentInput:
      required:
        - id
        - displayName
      type: object
      properties:
        id:
          description: Unique identifier for the agent
          type: string
        displayName:
          description: The agent's display name
          type: string
        phoneNumber:
          description: The agent's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the agent
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the agent
          type: array
          items:
            type: string
        firstName:
          description: The agent's first name
          type: string
        lastName:
          description: The agent's last name
          type: string
        middleNames:
          description: The agent's middle names
          type: array
          items:
            type: string
        avatarUrl:
          description: The url from which to load the agent's avatar
          type: string
    BulkUpdateAgentOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionOutcome_BulkError_Agent'
    BulkUpdateEndUserInput:
      required:
        - id
        - displayName
      type: object
      properties:
        id:
          type: string
          format: uuid
        displayName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        additionalEmails:
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        middleNames:
          type: array
          items:
            type: string
        avatarUrl:
          type: string
        externalId:
          type: string
    BulkUpdateEndUsersInput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkUpdateEndUserInput'
    BulkUpdateEndUsersOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionOutcome_BulkError_EndUser'
    CallRecordingAttributes:
      required:
        - recording
      type: object
      properties:
        duration:
          type: integer
          format: int32
        recording:
          type: string
    Callback:
      required:
        - requesterId
        - direction
        - contactEndpointId
        - queueId
      type: object
      properties:
        requesterId:
          type: string
          format: uuid
        direction:
          description: 'values: [Inbound, Outbound]'
          type: string
        contactEndpointId:
          type: string
        queueId:
          type: string
          format: uuid
    Chat:
      required:
        - requesterId
        - widgetId
        - message
      type: object
      properties:
        requesterId:
          type: string
          format: uuid
        widgetId:
          type: string
          format: uuid
        message:
          $ref: '#/components/schemas/CreateMessageInput'
        browserInfo:
          $ref: '#/components/schemas/BrowserInfo'
        language:
          type: string
    ChatAttributes:
      required:
        - isAutomated
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
        isAutomated:
          type: boolean
    ChatConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        browserInfo:
          $ref: '#/components/schemas/BrowserInfo'
        language:
          type: string
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    ClaimConversationInput:
      required:
        - agentId
      type: object
      properties:
        agentId:
          description: The id of the agent who is claiming the conversation
          type: string
          format: uuid
        force:
          description: >-
            Set as false to avoid taking over the conversation if it is already
            assigned to an agent
          type: boolean
    CloseConversationInput:
      type: object
      properties:
        userId:
          type: string
          format: uuid
    Conflict:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    ContactEndpoint:
      oneOf:
        - $ref: '#/components/schemas/EmailEndpoint'
        - $ref: '#/components/schemas/TelephonyEndpoint'
    ContactForm:
      required:
        - requesterId
        - emailIntegrationId
        - subject
        - message
      type: object
      properties:
        requesterId:
          type: string
          format: uuid
        emailIntegrationId:
          type: string
        subject:
          type: string
        message:
          $ref: '#/components/schemas/CreateMessageInput'
        language:
          type: string
    ContactFormAttributes:
      required:
        - isAutoReply
      type: object
      properties:
        emailContent:
          $ref: '#/components/schemas/EmailContent'
        from:
          $ref: '#/components/schemas/EmailContact'
        replyDefaultToEmails:
          type: array
          items:
            $ref: '#/components/schemas/EmailContact'
        to:
          type: array
          items:
            $ref: '#/components/schemas/EmailContact'
        cc:
          type: array
          items:
            $ref: '#/components/schemas/EmailContact'
        bcc:
          type: array
          items:
            $ref: '#/components/schemas/EmailContact'
        isAutoReply:
          type: boolean
        inlineImages:
          type: array
          items:
            $ref: '#/components/schemas/File'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
        deliveryFailureReason:
          type: string
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        originalContentUrl:
          $ref: '#/components/schemas/File'
    ContactFormConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
        - fromEmail
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        fromEmail:
          type: string
        toEmail:
          type: string
        integrationEmail:
          type: string
        language:
          type: string
        subject:
          type: string
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    Content:
      oneOf:
        - $ref: '#/components/schemas/Html'
        - $ref: '#/components/schemas/Text'
    Conversation:
      oneOf:
        - $ref: '#/components/schemas/AnonymizedConversation'
        - $ref: '#/components/schemas/ChatConversation'
        - $ref: '#/components/schemas/ContactFormConversation'
        - $ref: '#/components/schemas/EmailConversation'
        - $ref: '#/components/schemas/FacebookMessengerConversation'
        - $ref: '#/components/schemas/GenericConversation'
        - $ref: '#/components/schemas/MessengerConversation'
        - $ref: '#/components/schemas/PstnPhoneConversation'
        - $ref: '#/components/schemas/SmsConversation'
        - $ref: '#/components/schemas/TwitterConversation'
        - $ref: '#/components/schemas/WhatsAppConversation'
    ConversationAnonymizationType:
      type: object
    ConversationAssignedActivityType:
      type: object
    ConversationAssignedAttribute:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
        agentName:
          type: string
    ConversationAutoReplySentAttribute:
      required:
        - templateName
      type: object
      properties:
        templateName:
          type: string
    ConversationAutoreplySentActivityType:
      type: object
    ConversationClaimedActivityType:
      type: object
    ConversationClaimedAttribute:
      type: object
      properties:
        claimedFromLabel:
          type: string
        claimedFromType:
          type: string
    ConversationClosedActivityType:
      type: object
    ConversationCreatedAttribute:
      type: object
      properties:
        subject:
          type: string
    ConversationCreatedByAgentActivityType:
      type: object
    ConversationCreatedByCustomerActivityType:
      type: object
    ConversationEndUserReplacedActivityType:
      type: object
    ConversationEndUserReplacedAttribute:
      required:
        - oldUser
        - newUser
      type: object
      properties:
        oldUser:
          $ref: '#/components/schemas/ActivityLogUser'
        newUser:
          $ref: '#/components/schemas/ActivityLogUser'
    ConversationFlow:
      required:
        - id
        - name
        - channel
        - contactEndpointId
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        contactEndpointId:
          type: string
    ConversationLanguageUpdatedActivityType:
      type: object
    ConversationLanguageUpdatedAttribute:
      required:
        - language
      type: object
      properties:
        language:
          type: string
    ConversationLink:
      oneOf:
        - $ref: '#/components/schemas/EmailForward'
        - $ref: '#/components/schemas/FollowUp'
        - $ref: '#/components/schemas/SideConversation'
    ConversationOfferAcceptedActivityType:
      type: object
    ConversationOfferRejectedActivityType:
      type: object
    ConversationOfferTimeoutActivityType:
      type: object
    ConversationOfferedActivityType:
      type: object
    ConversationOfferedAttribute:
      type: object
      properties:
        agentNames:
          type: array
          items:
            type: string
        queueLabel:
          type: string
    ConversationPendingActivityType:
      type: object
    ConversationRatedActivityType:
      type: object
    ConversationRatedAttribute:
      required:
        - agent
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/ActivityLogUser'
        score:
          type: integer
          format: int32
        message:
          type: string
    ConversationRating:
      required:
        - id
        - ratingType
        - conversationChannel
        - userId
        - ratingStatus
        - timestamps
      type: object
      properties:
        id:
          type: string
        ratingScore:
          type: integer
          format: int32
        ratingType:
          description: 'values: [Csat, ThumbsUpOrDown]'
          type: string
        ratingComment:
          type: string
        conversationChannel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        agentId:
          type: string
        userId:
          type: string
        ratingStatus:
          description: 'values: [Unscheduled, Offered, Rated, Scheduled, Cancelled]'
          type: string
        language:
          type: string
        timestamps:
          $ref: '#/components/schemas/Map_String'
    ConversationRatingCancelledActivityType:
      type: object
    ConversationRatingOfferedActivityType:
      type: object
    ConversationRatingOfferedAttribute:
      required:
        - agent
        - user
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/ActivityLogUser'
        user:
          $ref: '#/components/schemas/ActivityLogUser'
    ConversationRatingScheduledActivityType:
      type: object
    ConversationRatingScheduledAttribute:
      required:
        - ratingScheduledTime
      type: object
      properties:
        ratingScheduledTime:
          type: string
    ConversationRatingUnscheduledActivityType:
      type: object
    ConversationReopenedActivityType:
      type: object
    ConversationReservedAttribute:
      required:
        - agent
        - queueId
        - queueName
        - reservationType
        - validUntil
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/ActivityLogUser'
        queueId:
          type: string
        queueName:
          type: string
        reservationType:
          type: string
        validUntil:
          type: string
    ConversationReservedType:
      type: object
    ConversationResponse:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    ConversationSearchHit:
      required:
        - id
        - highlights
      type: object
      properties:
        id:
          description: Identifier of a Conversation where a match was found
          type: integer
          format: int64
        highlights:
          $ref: '#/components/schemas/Map_Vector_String'
        innerHits:
          description: List of sub-entities (such as Messages) where a match was found
          type: array
          items:
            $ref: '#/components/schemas/ConversationSearchInnerHit'
    ConversationSearchInnerHit:
      required:
        - id
        - highlight
      type: object
      properties:
        id:
          description: >-
            Identifier of a sub-entity (such as a Message) where a match was
            found
          type: string
        highlight:
          $ref: '#/components/schemas/Map_String'
    ConversationTagsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ConversationTransferredAttribute:
      required:
        - transferType
        - destinationType
        - destinationId
      type: object
      properties:
        transferType:
          type: string
        destinationType:
          type: string
        destinationId:
          type: string
        destinationLabel:
          type: string
        reason:
          type: string
    ConversationUnassignedActivityType:
      type: object
    ConversationUnassignedAttribute:
      required:
        - agent
      type: object
      properties:
        agent:
          $ref: '#/components/schemas/ActivityLogUser'
    CreateAgentInput:
      required:
        - displayName
        - email
      type: object
      properties:
        displayName:
          description: The agent's display name
          type: string
        email:
          description: The agent's primary email address
          type: string
        phoneNumber:
          description: The agent's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the agent
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the agent
          type: array
          items:
            type: string
        firstName:
          description: The agent's first name
          type: string
        lastName:
          description: The agent's last name
          type: string
        middleNames:
          description: The agent's middle names
          type: array
          items:
            type: string
        avatarUrl:
          description: The url from which to load the agent's avatar
          type: string
    CreateAgentsInput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreateAgentInput'
    CreateAgentsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionOutcome_BulkError_Agent'
    CreateConversationInput:
      oneOf:
        - $ref: '#/components/schemas/Callback'
        - $ref: '#/components/schemas/Chat'
        - $ref: '#/components/schemas/ContactForm'
        - $ref: '#/components/schemas/Email'
        - $ref: '#/components/schemas/Sms'
    CreateConversationOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConversationResponse'
    CreateEndUserInput:
      type: object
      properties:
        displayName:
          description: The contact's display name
          type: string
        email:
          description: The contact's primary email address
          type: string
        phoneNumber:
          description: The contact's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the contact
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the contact
          type: array
          items:
            type: string
        firstName:
          description: The contact's first name
          type: string
        lastName:
          description: The contact's last name
          type: string
        middleNames:
          description: The contact's middle names
          type: array
          items:
            type: string
        avatarUrl:
          description: The url from which to load the contact's avatar
          type: string
        externalId:
          description: Custom external identifier for the contact
          type: string
    CreateEndUserOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EndUser'
    CreateEndUsersInput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreateEndUserInput'
    CreateEndUsersOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BulkActionOutcome_BulkError_EndUser'
    CreateInternalNoteInput:
      required:
        - message
      type: object
      properties:
        message:
          type: string
        agentId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
    CreateMessageInput:
      oneOf:
        - $ref: '#/components/schemas/Inbound'
        - $ref: '#/components/schemas/Outbound'
    CreateMessageOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateMessageOutputData'
    CreateMessageOutputData:
      required:
        - content
        - direction
        - authorId
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        authorId:
          type: string
          format: uuid
        externalId:
          type: string
        messageId:
          type: string
          format: uuid
        createdAt:
          type: string
    CreateNoteOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InternalNoteData'
    CreateOrUpdateQueueRequest:
      required:
        - name
        - callFunctionality
        - isDefault
        - isDoNotOfferEnabled
      type: object
      properties:
        name:
          type: string
        callFunctionality:
          type: boolean
        isDefault:
          type: boolean
        queueThresholds:
          $ref: '#/components/schemas/Map_QueueThreshold_Int'
        offerTimeout:
          type: integer
          format: int32
        offerAlgorithm:
          description: >-
            values: [AgentPriorityOneAtATimeRandom, AllAtOnce,
            AgentPriorityLongestIdle, AgentPriorityAllAtOnce, LongestIdle,
            OneAtATimeRandom]
          type: string
        wrapupTimeout:
          type: integer
          format: int32
        priority:
          type: integer
          format: int32
        offerAbandonedConversations:
          type: boolean
        doNotOfferTimeouts:
          $ref: '#/components/schemas/Map_ConversationChannel_Int'
        isDoNotOfferEnabled:
          type: boolean
        preferredAgentTimeouts:
          $ref: '#/components/schemas/Map_ConversationChannel_Int'
        isPreferredAgentEnabled:
          type: boolean
        preferredAgentOfflineTimeout:
          type: integer
          format: int32
        personalAgentOfflineTimeout:
          type: integer
          format: int32
    CreateQueueInput:
      required:
        - request
      type: object
      properties:
        request:
          $ref: '#/components/schemas/CreateOrUpdateQueueRequest'
    CreateQueueOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Queue1'
    CreateTagInput:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        color:
          type: string
    CreateTagOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Tag'
    CreateTeamInput:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    CreateTeamOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Team1'
    CreateWebhookSubscriptionInput:
      required:
        - name
        - url
        - authorization
      type: object
      properties:
        name:
          description: The Webhook Subscription name
          type: string
        events:
          description: >-
            The set of events this Webhook Subscription subscribes to. Allowed
            values: [ConversationPending, AgentUnbannedEnduser,
            ConversationMessageAdded, ConversationTagAdded, AgentBannedIp,
            ConversationAssigned, ConversationPendingExpired,
            ConversationTransferred, ConversationEnqueued, ConversationCreated,
            ConversationUnassigned, ConversationOpen, ConversationAbandoned,
            ConversationClosed, ConversationNoteAdded, AgentBannedEnduser,
            ConversationEndUserReplaced, AgentUnbannedIp,
            ConversationTagRemoved, ConversationRated]
          type: array
          items:
            description: >-
              values: [ConversationPending, AgentUnbannedEnduser,
              ConversationMessageAdded, ConversationTagAdded, AgentBannedIp,
              ConversationAssigned, ConversationPendingExpired,
              ConversationTransferred, ConversationEnqueued,
              ConversationCreated, ConversationUnassigned, ConversationOpen,
              ConversationAbandoned, ConversationClosed, ConversationNoteAdded,
              AgentBannedEnduser, ConversationEndUserReplaced, AgentUnbannedIp,
              ConversationTagRemoved, ConversationRated]
            type: string
        url:
          description: URL of the server that the webhook request should be sent to
          type: string
        authorization:
          $ref: '#/components/schemas/WebhookAuthorization'
        enabled:
          description: >-
            Defines whether this Webhook Subscription is enabled or disabled.
            Default is `true`
          type: boolean
    CreateWebhookSubscriptionOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookSubscription'
    CustomAttribute:
      required:
        - id
        - name
        - identifier
        - value
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        identifier:
          type: string
        value:
          description: >-
            AttributeValue values: String[] if the type of the custom attribute
            is Select or String if the type of the custom attribute is Text
          oneOf:
            - type: array
              items:
                type: string
            - type: string
    CustomAttributeDefinition:
      required:
        - id
        - entityType
        - identifier
        - label
        - inputDefinition
        - createdAt
        - isRequired
        - isArchived
        - isDeactivated
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          format: uuid
        entityType:
          description: 'values: [Contact, Conversation]'
          type: string
        identifier:
          type: string
        label:
          type: string
        inputDefinition:
          $ref: '#/components/schemas/CustomAttributeInputDefinition'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        isRequired:
          type: boolean
        isArchived:
          type: boolean
        isDeactivated:
          type: boolean
    CustomAttributeInputDefinition:
      oneOf:
        - $ref: '#/components/schemas/Select'
        - $ref: '#/components/schemas/Text1'
    DeleteAgentsFromTeamInput:
      type: object
      properties:
        agentIds:
          type: array
          items:
            type: string
            format: uuid
    DeliveryDetail:
      required:
        - deliveryTimestamp
        - success
        - responseCode
        - responseText
      type: object
      properties:
        deliveryTimestamp:
          type: string
        success:
          type: boolean
        responseCode:
          type: integer
          format: int32
        responseText:
          type: string
    DeliveryStatus:
      oneOf:
        - $ref: '#/components/schemas/DeliveryDetail'
        - $ref: '#/components/schemas/NoRecentDelivery'
    DeprecatedActivityLogType:
      description: Replaced by _type field
      deprecated: true
      oneOf:
        - $ref: '#/components/schemas/ConversationAssignedActivityType'
        - $ref: '#/components/schemas/ConversationAutoreplySentActivityType'
        - $ref: '#/components/schemas/ConversationClaimedActivityType'
        - $ref: '#/components/schemas/ConversationClosedActivityType'
        - $ref: '#/components/schemas/ConversationCreatedByAgentActivityType'
        - $ref: '#/components/schemas/ConversationCreatedByCustomerActivityType'
        - $ref: '#/components/schemas/ConversationEndUserReplacedActivityType'
        - $ref: '#/components/schemas/ConversationLanguageUpdatedActivityType'
        - $ref: '#/components/schemas/ConversationOfferAcceptedActivityType'
        - $ref: '#/components/schemas/ConversationOfferRejectedActivityType'
        - $ref: '#/components/schemas/ConversationOfferTimeoutActivityType'
        - $ref: '#/components/schemas/ConversationOfferedActivityType'
        - $ref: '#/components/schemas/ConversationPendingActivityType'
        - $ref: '#/components/schemas/ConversationRatedActivityType'
        - $ref: '#/components/schemas/ConversationRatingCancelledActivityType'
        - $ref: '#/components/schemas/ConversationRatingOfferedActivityType'
        - $ref: '#/components/schemas/ConversationRatingScheduledActivityType'
        - $ref: '#/components/schemas/ConversationRatingUnscheduledActivityType'
        - $ref: '#/components/schemas/ConversationReopenedActivityType'
        - $ref: '#/components/schemas/ConversationReservedType'
        - $ref: '#/components/schemas/ConversationUnassignedActivityType'
        - $ref: '#/components/schemas/FollowupAddedActivityType'
        - $ref: '#/components/schemas/FollowupExpiredActivityType'
        - $ref: '#/components/schemas/FollowupRemovedActivityType'
        - $ref: '#/components/schemas/MessageAddedByAgentActivityType'
        - $ref: '#/components/schemas/MessageAddedByCustomerActivityType'
        - $ref: '#/components/schemas/NoteAddedActivityType'
        - $ref: '#/components/schemas/TagAddedActivityType'
        - $ref: '#/components/schemas/TagRemovedActivityType'
        - $ref: '#/components/schemas/TransferFailedActivityType'
        - $ref: '#/components/schemas/TransferInitiatedActivityType'
        - $ref: '#/components/schemas/TransferSuccessfulActivityType'
        - $ref: '#/components/schemas/UnknownActivityType'
    DeprecatedAnonymizationType:
      description: Replaced by _type field
      deprecated: true
      oneOf:
        - $ref: '#/components/schemas/ConversationAnonymizationType'
        - $ref: '#/components/schemas/MessageAnonymizationType'
        - $ref: '#/components/schemas/UnknownAnonymizationType'
        - $ref: '#/components/schemas/UserAnonymizationType'
    DoubleAggregateValue:
      required:
        - value
        - measure
      type: object
      properties:
        value:
          type: number
          format: double
        measure:
          description: 'values: [Min, Max, Sum, Percentage, StdDev, Average]'
          type: string
    DoubleField:
      required:
        - value
      type: object
      properties:
        value:
          type: number
          format: double
    Email:
      required:
        - requesterId
        - emailIntegrationId
        - subject
        - message
      type: object
      properties:
        requesterId:
          type: string
          format: uuid
        emailIntegrationId:
          type: string
        subject:
          type: string
        message:
          $ref: '#/components/schemas/CreateMessageInput'
        language:
          type: string
    EmailAttributes:
      required:
        - from
        - isAutoReply
      type: object
      properties:
        emailContent:
          $ref: '#/components/schemas/EmailContent'
        from:
          $ref: '#/components/schemas/EmailContact'
        to:
          type: array
          items:
            $ref: '#/components/schemas/EmailContact'
        cc:
          type: array
          items:
            $ref: '#/components/schemas/EmailContact'
        bcc:
          type: array
          items:
            $ref: '#/components/schemas/EmailContact'
        isAutoReply:
          type: boolean
        inlineImages:
          type: array
          items:
            $ref: '#/components/schemas/File'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
        deliveryFailureReason:
          type: string
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        originalContentUrl:
          $ref: '#/components/schemas/File'
    EmailContact:
      required:
        - email
      type: object
      properties:
        email:
          type: string
        name:
          type: string
    EmailContent:
      oneOf:
        - $ref: '#/components/schemas/Regular'
        - $ref: '#/components/schemas/TooLarge'
    EmailConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
        - toEmail
        - fromEmail
        - integrationEmail
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        toEmail:
          type: string
        fromEmail:
          type: string
        integrationEmail:
          type: string
        language:
          type: string
        subject:
          type: string
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    EmailEndpoint:
      required:
        - address
      type: object
      properties:
        address:
          type: string
        senderOverride:
          type: string
        name:
          type: string
    EmailForward:
      required:
        - parentId
      type: object
      properties:
        parentId:
          type: integer
          format: int64
    EmptyPatchSet:
      required:
        - id
        - message
      type: object
      properties:
        id:
          type: string
        message:
          type: string
    EndUser:
      required:
        - id
        - createdAt
      type: object
      properties:
        id:
          description: Unique identifier for the contact
          type: string
          format: uuid
        createdAt:
          description: Time when the contact was created
          type: string
          format: date-time
        displayName:
          description: The contact's display name
          type: string
        email:
          description: The contact's primary email address
          type: string
        phoneNumber:
          description: The contact's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the contact
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the contact
          type: array
          items:
            type: string
        firstName:
          description: The contact's first name
          type: string
        lastName:
          description: The contact's last name
          type: string
        middleNames:
          description: The contact's middle names
          type: array
          items:
            type: string
        avatarUrl:
          description: The url from which to load the contact's avatar
          type: string
        externalId:
          description: Custom external identifier for the contact
          type: string
        customAttributes:
          description: Custom attributes for the contact
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    EventDeliveryLog:
      required:
        - deliveryDetail
        - payload
      type: object
      properties:
        deliveryDetail:
          $ref: '#/components/schemas/DeliveryDetail'
        payload:
          type: string
    EventDeliveryStatus:
      required:
        - event
        - deliveryStatus
      type: object
      properties:
        event:
          description: >-
            values: [ConversationPending, AgentUnbannedEnduser,
            ConversationMessageAdded, ConversationTagAdded, AgentBannedIp,
            ConversationAssigned, ConversationPendingExpired,
            ConversationTransferred, ConversationEnqueued, ConversationCreated,
            ConversationUnassigned, ConversationOpen, ConversationAbandoned,
            ConversationClosed, ConversationNoteAdded, AgentBannedEnduser,
            ConversationEndUserReplaced, AgentUnbannedIp,
            ConversationTagRemoved, ConversationRated]
          type: string
        deliveryStatus:
          $ref: '#/components/schemas/DeliveryStatus'
    FacebookMessengerAttributes:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
    FacebookMessengerConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    Field:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        field:
          $ref: '#/components/schemas/FieldType'
    FieldMetadata:
      required:
        - field
        - description
        - nullable
      type: object
      properties:
        description:
          type: string
        field:
          type: string
        nullable:
          type: boolean
    FieldType:
      oneOf:
        - $ref: '#/components/schemas/BooleanField'
        - $ref: '#/components/schemas/DoubleField'
        - $ref: '#/components/schemas/InstantField'
        - $ref: '#/components/schemas/IntField'
        - $ref: '#/components/schemas/ListField'
        - $ref: '#/components/schemas/LongField'
        - $ref: '#/components/schemas/StringField'
        - $ref: '#/components/schemas/TimestampField'
        - $ref: '#/components/schemas/UUIDField'
    File:
      required:
        - url
      type: object
      properties:
        url:
          description: url
          type: string
        prettyName:
          type: string
    Filter:
      required:
        - attribute
      type: object
      properties:
        attribute:
          type: string
        values:
          type: array
          items:
            type: string
    FilterMetadata:
      required:
        - filterAttribute
      type: object
      properties:
        description:
          type: string
        filterAttribute:
          type: string
    FilterValue:
      required:
        - value
      type: object
      properties:
        value:
          type: string
        label:
          type: string
    FollowUp:
      required:
        - parentId
      type: object
      properties:
        parentId:
          type: integer
          format: int64
    FollowupAddedActivityType:
      type: object
    FollowupExpiredActivityType:
      type: object
    FollowupRemovedActivityType:
      type: object
    GenericAttributes:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
    GenericConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        fromContactPointId:
          type: string
        toContactPointId:
          type: string
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    GetActivityLogOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLogEntry'
    GetContactPointByIdOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ContactEndpoint'
    GetConversationOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Conversation'
    GetEndUserOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EndUser'
    GetFilterValuesOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/FilterValue'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    GetMetricDataInput:
      required:
        - id
        - periodFilter
        - timezone
      type: object
      properties:
        id:
          type: string
        periodFilter:
          $ref: '#/components/schemas/PeriodFilter'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        aggregations:
          type: array
          items:
            description: 'values: [Min, Max, Sum, Count, Percentage, StdDev, Average]'
            type: string
        timezone:
          type: string
    GetMetricDataOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MetricData'
    GetMetricOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MetricMetadata'
    GetMetricRecordOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MetricRecordMetadata'
    GetMetricRecordsDataInput:
      required:
        - id
        - periodFilter
        - timezone
      type: object
      properties:
        id:
          type: string
        periodFilter:
          $ref: '#/components/schemas/PeriodFilter'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        timezone:
          type: string
    GetMetricRecordsDataOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricRecord'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    GetMetricRecordsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricRecordMetadata'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    GetMetricsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MetricMetadata'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    GetQueueByIdOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Queue1'
    GetTagOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Tag'
    GetWebhookEventDeliveryLogsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EventDeliveryLog'
    GetWebhookLastDeliveryStatusOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EventDeliveryStatus'
    GetWebhookSubscriptionOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookSubscription'
    Html:
      required:
        - value
      type: object
      properties:
        value:
          type: string
    Inbound:
      required:
        - content
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
        integrationEmail:
          description: >-
            Internal email address registered for the integration with format:
            \<email-address\>@email.dixa.io
          type: string
        externalId:
          description: Client generated identifier for external reference
          type: string
    Infrastructure:
      required:
        - id
        - message
      type: object
      properties:
        id:
          type: string
        message:
          type: string
    InstantField:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          format: date-time
    IntField:
      required:
        - value
      type: object
      properties:
        value:
          type: integer
          format: int32
    Integrity:
      required:
        - id
        - message
      type: object
      properties:
        id:
          type: string
        message:
          type: string
    InternalNoteData:
      required:
        - id
        - authorId
        - createdAt
        - csid
        - message
      type: object
      properties:
        id:
          type: string
          format: uuid
        authorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        csid:
          type: integer
          format: int64
        message:
          type: string
    Interval:
      required:
        - start
        - end
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    ListActivityLogOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ActivityLogEntry'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    ListAgentsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    ListContactPointsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ContactEndpoint'
    ListConversationRatingsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConversationRating'
    ListCustomAttributesDefinitionsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeDefinition'
    ListEndUserConversationsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Conversation'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    ListEndUsersOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EndUser'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    ListField:
      type: object
      properties:
        values:
          type: array
          items:
            $ref: '#/components/schemas/PrimitiveField'
    ListFlowsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ConversationFlow'
    ListInternalNotesOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InternalNoteData'
    ListLinkedConversationsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Conversation'
    ListMessagesOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    ListPresenceOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserPresence'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    ListQueuesOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Queue1'
    ListTagsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    ListTeamMembersOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
    ListTeamsOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Team1'
    ListWebhookSubscriptionsEndpointOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookSubscription'
    LongAggregateValue:
      required:
        - value
        - measure
      type: object
      properties:
        value:
          type: integer
          format: int64
        measure:
          description: 'values: [Count]'
          type: string
    LongField:
      required:
        - value
      type: object
      properties:
        value:
          type: integer
          format: int64
    Map_ConversationChannel_Int:
      description: >-
        values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger, Twitter,
        Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
      type: object
      additionalProperties:
        type: integer
        format: int32
    Map_ConversationChannel_Set_String:
      description: >-
        values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger, Twitter,
        Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    Map_QueueThreshold_Int:
      description: >-
        values: [SlaTimeLimit, AvailableAgents, LongestWait, SlaPercentage,
        WaitingConversations]
      type: object
      additionalProperties:
        type: integer
        format: int32
    Map_String:
      type: object
      additionalProperties:
        type: string
    Map_UUID_Option_AttributeValue:
      type: object
      additionalProperties:
        description: >-
          AttributeValue values: String[] if the type of the custom attribute is
          Select or String if the type of the custom attribute is Text
        oneOf:
          - type: array
            items:
              type: string
          - type: string
    Map_Vector_String:
      description: >-
        Snippet of text where a match was found. Matched text will be wrapped in
        \<em\> tags.
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    Message:
      required:
        - id
        - authorId
        - createdAt
        - attributes
      type: object
      properties:
        id:
          type: string
          format: uuid
        authorId:
          type: string
          format: uuid
        externalId:
          type: string
        createdAt:
          type: string
          format: date-time
        attributes:
          $ref: '#/components/schemas/Attributes'
    MessageAddedAttribute:
      required:
        - messageId
      type: object
      properties:
        messageId:
          type: string
        fromEndpoint:
          type: string
        avatarUrl:
          type: string
    MessageAddedByAgentActivityType:
      type: object
    MessageAddedByCustomerActivityType:
      type: object
    MessageAnonymizationType:
      type: object
    MessengerConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        language:
          type: string
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    MetricData:
      required:
        - id
      type: object
      properties:
        id:
          type: string
        aggregates:
          type: array
          items:
            $ref: '#/components/schemas/AggregateValue'
    MetricMetadata:
      required:
        - id
      type: object
      properties:
        description:
          description: Relevant information about the metric
          type: string
        id:
          description: The metric ID
          type: string
        filters:
          description: List of available filters that can be used when fetching metric data
          type: array
          items:
            $ref: '#/components/schemas/FilterMetadata'
        aggregations:
          description: >-
            List of available aggregations that can be used when fetching metric
            data
          type: array
          items:
            $ref: '#/components/schemas/AggregateMetadata'
        relatedRecordIds:
          description: List of record IDs used to compose the metric
          type: array
          items:
            type: string
    MetricRecord:
      required:
        - primaryTimestampField
      type: object
      properties:
        primaryTimestampField:
          $ref: '#/components/schemas/TimestampField'
        value:
          $ref: '#/components/schemas/FieldType'
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    MetricRecordMetadata:
      required:
        - id
        - description
      type: object
      properties:
        description:
          description: Relevant information about the record
          type: string
        id:
          description: The record ID
          type: string
        filters:
          description: List of available filters that can be used when fetching record data
          type: array
          items:
            $ref: '#/components/schemas/FilterMetadata'
        relatedMetricIds:
          description: List of metric IDs that make use of this record
          type: array
          items:
            type: string
        fieldsMetadata:
          description: Information about the individual record fields
          type: array
          items:
            $ref: '#/components/schemas/FieldMetadata'
    NoAuth:
      type: object
    NoRecentDelivery:
      type: object
    NotFound:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    NotFound1:
      required:
        - id
        - message
      type: object
      properties:
        id:
          type: string
        message:
          type: string
    NoteAddedActivityType:
      type: object
    NoteAddedAttribute:
      required:
        - message
      type: object
      properties:
        message:
          type: string
        avatarUrl:
          type: string
    Outbound:
      required:
        - content
        - agentId
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        agentId:
          type: string
          format: uuid
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
        integrationEmail:
          type: string
        externalId:
          type: string
        cc:
          type: array
          items:
            type: string
            format: uuid
        bcc:
          type: array
          items:
            type: string
            format: uuid
    PaginationLinks:
      type: object
      properties:
        previous:
          description: url
          type: string
        next:
          description: url
          type: string
    PatchAgentInput:
      type: object
      properties:
        displayName:
          description: The agent's display name
          type: string
        phoneNumber:
          description: The agent's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the agent
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the agent
          type: array
          items:
            type: string
        firstName:
          description: The agent's first name
          type: string
        lastName:
          description: The agent's last name
          type: string
        middleNames:
          description: The agent's middle names
          type: array
          items:
            type: string
        avatarUrl:
          description: The url from which to load the agent's avatar
          type: string
    PatchConversationCustomAttributesOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    PatchEndUserCustomAttributesOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    PatchEndUserInput:
      type: object
      properties:
        displayName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        additionalEmails:
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        middleNames:
          type: array
          items:
            type: string
        avatarUrl:
          type: string
        externalId:
          type: string
    PatchEndUserOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EndUser'
    PatchWebhookSubscriptionInput:
      type: object
      properties:
        name:
          description: The Webhook Subscription name
          type: string
        events:
          description: >-
            The set of events this Webhook Subscription subscribes to. Allowed
            values: [ConversationPending, AgentUnbannedEnduser,
            ConversationMessageAdded, ConversationTagAdded, AgentBannedIp,
            ConversationAssigned, ConversationPendingExpired,
            ConversationTransferred, ConversationEnqueued, ConversationCreated,
            ConversationUnassigned, ConversationOpen, ConversationAbandoned,
            ConversationClosed, ConversationNoteAdded, AgentBannedEnduser,
            ConversationEndUserReplaced, AgentUnbannedIp,
            ConversationTagRemoved, ConversationRated]
          type: array
          items:
            description: >-
              values: [ConversationPending, AgentUnbannedEnduser,
              ConversationMessageAdded, ConversationTagAdded, AgentBannedIp,
              ConversationAssigned, ConversationPendingExpired,
              ConversationTransferred, ConversationEnqueued,
              ConversationCreated, ConversationUnassigned, ConversationOpen,
              ConversationAbandoned, ConversationClosed, ConversationNoteAdded,
              AgentBannedEnduser, ConversationEndUserReplaced, AgentUnbannedIp,
              ConversationTagRemoved, ConversationRated]
            type: string
        url:
          description: URL of the server that the webhook request should be sent to
          type: string
        authorization:
          $ref: '#/components/schemas/WebhookAuthorization'
        enabled:
          description: Defines whether this Webhook Subscription is enabled or disabled
          type: boolean
    PatchWebhookSubscriptionOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookSubscription'
    PeriodFilter:
      oneOf:
        - $ref: '#/components/schemas/Interval'
        - $ref: '#/components/schemas/Preset'
    PhoneAttributes:
      required:
        - from
        - to
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        duration:
          type: integer
          format: int32
    Preset:
      required:
        - value
      type: object
      properties:
        value:
          description: >-
            values: [PreviousQuarter, ThisWeek, PreviousWeek, Yesterday, Today,
            ThisMonth, PreviousMonth, ThisQuarter, ThisYear]
          type: string
    PrimitiveField:
      oneOf:
        - $ref: '#/components/schemas/BooleanField'
        - $ref: '#/components/schemas/DoubleField'
        - $ref: '#/components/schemas/InstantField'
        - $ref: '#/components/schemas/IntField'
        - $ref: '#/components/schemas/LongField'
        - $ref: '#/components/schemas/StringField'
        - $ref: '#/components/schemas/UUIDField'
    PstnPhoneConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    Queue:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        queuedAt:
          type: string
          format: date-time
    Queue1:
      required:
        - id
        - name
        - isDefault
        - organizationId
        - queueThresholds
        - slaCalculationMethod
        - doNotOfferTimeouts
        - isDoNotOfferEnabled
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isDefault:
          type: boolean
        organizationId:
          type: string
        queueThresholds:
          $ref: '#/components/schemas/Map_QueueThreshold_Int'
        slaCalculationMethod:
          description: 'values: [AbandonedIgnored]'
          type: string
        offerTimeout:
          type: integer
          format: int32
        offeringAlgorithm:
          description: >-
            values: [AgentPriorityOneAtATimeRandom, AllAtOnce,
            AgentPriorityLongestIdle, AgentPriorityAllAtOnce, LongestIdle,
            OneAtATimeRandom]
          type: string
        memberListType:
          description: 'values: [Default, SkillBased]'
          type: string
        usages:
          $ref: '#/components/schemas/QueueUsages'
        wrapupTimeout:
          type: integer
          format: int32
        priority:
          type: integer
          format: int32
        offerAbandonedConversations:
          type: boolean
        doNotOfferTimeouts:
          $ref: '#/components/schemas/Map_ConversationChannel_Int'
        isDoNotOfferEnabled:
          type: boolean
        isPreferredAgentEnabled:
          type: boolean
        preferredAgentTimeouts:
          $ref: '#/components/schemas/Map_ConversationChannel_Int'
        preferredAgentOfflineTimeout:
          type: integer
          format: int32
        personalAgentOfflineTimeout:
          type: integer
          format: int32
    QueueMember:
      required:
        - agentId
      type: object
      properties:
        agentId:
          type: string
        priority:
          type: integer
          format: int32
    QueueMembersOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/QueueMember'
    QueueUsages:
      required:
        - queueId
        - usages
      type: object
      properties:
        queueId:
          type: string
        usages:
          $ref: '#/components/schemas/Map_ConversationChannel_Set_String'
    Regular:
      required:
        - content
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
    ReopenConversationInput:
      type: object
      properties:
        userId:
          type: string
          format: uuid
    SearchHit:
      oneOf:
        - $ref: '#/components/schemas/ConversationSearchHit'
    SearchOutput:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchHit'
        meta:
          $ref: '#/components/schemas/PaginationLinks'
    Select:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
    SelectOption:
      required:
        - id
        - label
        - value
        - isDeactivated
      type: object
      properties:
        id:
          type: string
          format: uuid
        label:
          type: string
        value:
          type: string
        nestedOptions:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
        isDeactivated:
          type: boolean
    ServerError:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    SideConversation:
      required:
        - parentId
      type: object
      properties:
        parentId:
          type: integer
          format: int64
    Sms:
      required:
        - requesterId
        - contactEndpointId
        - message
      type: object
      properties:
        requesterId:
          type: string
          format: uuid
        contactEndpointId:
          description: SMS enabled provisioned phone number in valid E.164 format
          type: string
        message:
          $ref: '#/components/schemas/CreateMessageInput'
    SmsAttributes:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
    SmsConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        fromNumber:
          type: string
        toNumber:
          type: string
        queue:
          $ref: '#/components/schemas/Queue'
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    StringField:
      required:
        - value
      type: object
      properties:
        value:
          type: string
        label:
          type: string
    Tag:
      required:
        - id
        - name
        - state
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        color:
          type: string
        state:
          description: 'values: [Active, Inactive]'
          type: string
    TagAddedActivityType:
      type: object
    TagAddedAttribute:
      required:
        - tag
      type: object
      properties:
        tag:
          type: string
    TagRemovedActivityType:
      type: object
    TagRemovedAttribute:
      required:
        - tag
      type: object
      properties:
        tag:
          type: string
    Team:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
    Team1:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    TeamMember:
      required:
        - id
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    TelephonyEndpoint:
      required:
        - number
      type: object
      properties:
        number:
          type: string
        functionality:
          type: array
          items:
            description: 'values: [Sms, VoiceInbound, VoiceOutbound]'
            type: string
        name:
          type: string
    Text:
      required:
        - value
      type: object
      properties:
        value:
          type: string
    Text1:
      type: object
      properties:
        placeholder:
          type: string
    TimestampField:
      required:
        - name
        - timestamp
      type: object
      properties:
        name:
          type: string
        timestamp:
          type: string
          format: date-time
    TokenAuth:
      required:
        - value
      type: object
      properties:
        value:
          description: >-
            Token value. It will be added in the headers of the request as:
            'Authorization': 'Bearer \<value\>'
          type: string
    TooLarge:
      required:
        - file
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
    TransferConversationInput:
      required:
        - queueId
      type: object
      properties:
        queueId:
          description: The target queue for the conversation transfer
          type: string
          format: uuid
        userId:
          description: >-
            An optional agent/admin to originate the transfer of the
            conversation
          type: string
          format: uuid
    TransferFailedActivityType:
      type: object
    TransferInitiatedActivityType:
      type: object
    TransferSuccessfulActivityType:
      type: object
    TwitterAttributes:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
    TwitterConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
        - conversationType
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        conversationType:
          description: 'values: [DirectMessage, Tweet]'
          type: string
        contactPointTwitterId:
          type: string
        endUserTwitterId:
          type: string
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    UUIDField:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          format: uuid
        label:
          type: string
    Unauthorized:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    UnknownActivityType:
      type: object
    UnknownAnonymizationType:
      type: object
    UpdateAgentInput:
      required:
        - displayName
      type: object
      properties:
        displayName:
          description: The agent's display name
          type: string
        phoneNumber:
          description: The agent's primary phone number
          type: string
        additionalEmails:
          description: Additional email addresses for the agent
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          description: Additional phone numbers for the agent
          type: array
          items:
            type: string
        firstName:
          description: The agent's first name
          type: string
        lastName:
          description: The agent's last name
          type: string
        middleNames:
          description: The agent's middle names
          type: array
          items:
            type: string
        avatarUrl:
          description: The url from which to load the agent's avatar
          type: string
    UpdateEndUserInput:
      required:
        - displayName
      type: object
      properties:
        displayName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        additionalEmails:
          type: array
          items:
            type: string
        additionalPhoneNumbers:
          type: array
          items:
            type: string
        firstName:
          type: string
        lastName:
          type: string
        middleNames:
          type: array
          items:
            type: string
        avatarUrl:
          type: string
        externalId:
          type: string
    UpdateEndUserOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EndUser'
    UserAnonymizationType:
      type: object
    UserPresence:
      required:
        - userId
        - requestTime
        - connectionStatus
      type: object
      properties:
        userId:
          type: string
        requestTime:
          type: string
        lastSeen:
          type: string
        presenceStatus:
          description: 'values: [Away, Working]'
          type: string
        connectionStatus:
          description: 'values: [Offline, Online]'
          type: string
        activeChannels:
          type: array
          items:
            description: >-
              values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
              Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
            type: string
    UserPresenceOutput:
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserPresence'
    Validation:
      required:
        - message
      type: object
      properties:
        id:
          type: string
        message:
          type: string
    WebhookAuthorization:
      description: >-
        Authorization to be added as a header in the webhook request. Can be
        either, Basic auth, added as 'Basic
        base64encoded(\<username\>:\<password\>)', Token auth, added as 'Bearer
        \<token value\>', or no auth
      oneOf:
        - $ref: '#/components/schemas/BasicAuth'
        - $ref: '#/components/schemas/NoAuth'
        - $ref: '#/components/schemas/TokenAuth'
    WebhookSubscription:
      required:
        - id
        - name
        - url
        - headers
        - secretKey
        - enabled
        - createdAt
        - createdBy
        - updatedAt
        - updatedBy
      type: object
      properties:
        id:
          description: The Webhook Subscription ID
          type: string
          format: uuid
        name:
          description: The Webhook Subscription name
          type: string
        subscribedEvents:
          description: The set of events this Webhook Subscription is subscribed to
          type: array
          items:
            description: >-
              values: [ConversationPending, AgentUnbannedEnduser,
              ConversationMessageAdded, ConversationTagAdded, AgentBannedIp,
              ConversationAssigned, ConversationPendingExpired,
              ConversationTransferred, ConversationEnqueued,
              ConversationCreated, ConversationUnassigned, ConversationOpen,
              ConversationAbandoned, ConversationClosed, ConversationNoteAdded,
              AgentBannedEnduser, ConversationEndUserReplaced, AgentUnbannedIp,
              ConversationTagRemoved, ConversationRated]
            type: string
        url:
          description: URL of the server that the webhook request should be sent to
          type: string
        headers:
          $ref: '#/components/schemas/Webhook_Headers_Map_String_String'
        secretKey:
          description: Dixa generated secret key, used to sign the requests
          type: string
        enabled:
          description: Defines whether this Webhook Subscription is enabled or disabled
          type: boolean
        createdAt:
          description: Date when this Webhook Subscription was created
          type: string
          format: date-time
        createdBy:
          description: The ID of the user who created this Webhook Subscription
          type: string
          format: uuid
        updatedAt:
          description: Date when this Webhook Subscription was last updated
          type: string
          format: date-time
        updatedBy:
          description: The ID of the user who last updated this Webhook Subscription
          type: string
          format: uuid
    Webhook_Headers_Map_String_String:
      description: The headers that will be added to the webhook request
      type: object
      additionalProperties:
        type: string
    WhatsAppAttributes:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/Content'
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/File'
    WhatsAppConversation:
      required:
        - id
        - requesterId
        - channel
        - createdAt
      type: object
      properties:
        id:
          type: integer
          format: int64
        requesterId:
          type: string
          format: uuid
        channel:
          description: >-
            values: [WhatsApp, Voicemail, WidgetChat, FacebookMessenger,
            Twitter, Email, ContactForm, Callback, PstnPhone, Sms, Messenger]
          type: string
        createdAt:
          type: string
          format: date-time
        direction:
          description: 'values: [Inbound, Internal, Outbound]'
          type: string
        state:
          description: 'values: [AwaitingPending, Closed, Open, Pending]'
          type: string
        stateUpdatedAt:
          type: string
          format: date-time
        assignment:
          $ref: '#/components/schemas/Assignment'
        queue:
          $ref: '#/components/schemas/Queue'
        link:
          $ref: '#/components/schemas/ConversationLink'
        customAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttribute'
    AgentsBulkPatchRequest:
      type: array
      items:
        $ref: '#/components/schemas/BulkPatchAgentInput'
    AgentsUpdateBulkRequest:
      type: array
      items:
        $ref: '#/components/schemas/BulkUpdateAgentInput'
    AgentsListPresenceResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserPresence'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: Authorization
      in: header
security:
  - ApiKeyAuth: []
