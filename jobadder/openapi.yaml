openapi: 3.0.1
info:
  title: JobAdder API
  description: "# Getting Started\r\n\r\n## Authentication\r\n\r\nJobAdder uses the OAuth 2.0 authorization code flow to issue API access tokens on behalf of users.\r\n\r\nAt a high-level, this flow has the following steps:\r\n\r\n- Your application directs the browser to the JobAdder authorization page.\r\n- The user authenticates and approves your application's request.\r\n- The user is redirected back to your application with an authorization code in the query string.\r\n- Your application sends this code to JobAdder to exchange for an API access token and optionally a refresh token.\r\n- Your application can now use these tokens to call the JobAdder API on behalf of the user.\r\n\r\n&nbsp;\r\n### 1. Redirect to the JobAdder authorization URL.\r\n\r\nYour application should redirect the user to the authorization URL\r\n\r\n```\r\nhttps://id.jobadder.com/connect/authorize\r\n```\r\n\r\nThe following query parameters should be passed with the GET request:\r\n\r\n| parameter     | description                                                                       |\r\n|:--------------|:----------------------------------------------------------------------------------|\r\n| response_type | **code** (required)                                                               |\r\n| client_id     | issued when you created your application (required)                               |\r\n| scope         | permissions to request, see [Scopes](https://api.jobadder.com) (required)  |\r\n| redirect_uri  | URL to redirect back to (required)                                                | \r\n| state         | unique string to be passed back (optional)                                        |\r\n\r\nThe **scope** parameter is a space-separated list of OAuth scopes indicating the desired access.\r\nSee [Scopes](https://api.jobadder.com) for the complete list of scopes.\r\n\r\nThe **redirect_uri** parameter must match one of the URLs specified when the client_id was issued.\r\n\r\nThe **state** parameter can be provided to carry through server-specific state. For example, you can use\r\nthis to help prevent forgery attacks.\r\n\r\nThe user will be presented with a login screen, and then a confirmation screen where they will grant your\r\napplication access to their JobAdder data.\r\n\r\n&nbsp;\r\n### 2. Receive an authorization code from JobAdder.\r\n\r\nAfter a successful login, the authorization server will redirect to the URL specified in step 1 passing \r\nthe following parameters passed with the GET request:\r\n\r\n| parameter     | description                           |\r\n|:--------------|:--------------------------------------|\r\n| code          | a temporary authorization code        | \r\n| state         | the unique string specified in step 1 |\r\n\r\nIf you passed a **state** parameter in step 1 then at this point you should compare the state parameter\r\nfrom this request with the state parameter from the request in step 1. If the states don't match then\r\nthe request may have been created by an unknown third party and you should abort the process.\r\n\r\nIf your request for access is denied by the user then the user will be redirected to the URL specified in step 1\r\nwith the following query parameters passed with the GET request:\r\n\r\n| parameter     | value         |\r\n|:--------------|:--------------|\r\n| error         | access_denied | \r\n\r\n&nbsp;\r\n### 3. Exchange the authorization code for an access token.\r\n\r\nThe authorization code received in step 2 will remain valid for 5 minutes and should be exchanged for an \r\naccess token. To do this, submit a POST request to the token URL:\r\n\r\n```\r\nhttps://id.jobadder.com/connect/token\r\n```\r\n\r\nThe following  parameters should be included in the POST request:\r\n\r\n| parameter     | description                                                     |\r\n|:--------------|:----------------------------------------------------------------|\r\n| client_id     | issued when you created your application (required)             |\r\n| client_secret | issued when you created your application (required)             |\r\n| grant_type    | **authorization_code** (required)                               |\r\n| code          | the temporary authorization code received in step 2 (required)  |\r\n| redirect_uri  | the URL specified in step 1 (required)                          |\r\n\r\nThis request will return a JSON response containing the access token, for example\r\n\r\n```json\r\n{\r\n  access_token: \"31ff7431b4c1dde02e386122702f5460\",\r\n  expires_in: 3600,\r\n  token_type: \"Bearer\",\r\n  refresh_token: \"e7672885d6da2db1e56d200dd292c801\",\r\n  api: \"https://api.jobadder.com/v2\"\r\n}\r\n```\r\n\r\n| parameter     | description                                                                           |\r\n|:--------------|:--------------------------------------------------------------------------------------|\r\n| access_token  | token to be used as the Bearer token in the Authorization header of all API requests  |\r\n| expires_in    | expiration time of the access token in seconds since the response was generated       |\r\n| refresh_token | token to be used to request new access tokens                                         |\r\n| api           | The base URL to use for API access                                                    |\r\n\r\n&nbsp;\r\n### 4. Exchange a refresh token for an access token.\r\n\r\nThe access token has a limited lifetime (currently 60 minutes). \r\nIf your application requested the **offline_access** scope (in step 1) then it is possible to gain \r\nextended access to the user's data by requesting a new access token using the refresh token.\r\nTo do this, submit a POST request to the token URL:\r\n\r\n```\r\nhttps://id.jobadder.com/connect/token\r\n```\r\n\r\nThe following  parameters should be included in the POST request:\r\n\r\n| parameter     | description                                         |\r\n|:--------------|:----------------------------------------------------|\r\n| client_id     | issued when you created your application (required) |\r\n| client_secret | issued when you created your application (required) |\r\n| grant_type    | **refresh_token** (required)                        |\r\n| refresh_token | the refresh token returned in step 3                |\r\n\r\nThis request will return a JSON response containing a new access token and request token.\r\n```json\r\n{\r\n  access_token: \"d2534958b2d3b9e3b0e16c98f91f0184\",\r\n  expires_in: 3600,\r\n  token_type: \"Bearer\",\r\n  refresh_token: \"e1b495fa69c9bdacbc7e5dd535d4564f\",\r\n  api: \"https://api.jobadder.com/v2\"\r\n}\r\n```\r\n\r\n&nbsp;\r\n## Scopes\r\n\r\nScopes allow you to clearly specify the type of information your application will access and the level of access it will need.\r\n\r\nIt's a good idea to limit the scopes that you request to the bare minimum so that users will feel confident with your application when granting access to their data.\r\n\r\n\r\n| scope | description |\r\n|:------|:------------|\r\n| **read** | View JobAdder data |\r\n| **write** | Manage JobAdder data |\r\n| **read_candidate** | View candidates |\r\n| **write_candidate** | Manage candidates |\r\n| **read_candidate_note** | View candidate notes |\r\n| **write_candidate_note** | Manage candidate notes |\r\n| **manage_candidate_custom** | Manage candidate custom fields |\r\n| **read_company** | View companies |\r\n| **write_company** | Manage companies |\r\n| **read_company_note** | View company notes |\r\n| **write_company_note** | Manage company notes |\r\n| **manage_company_custom** | Manage company custom fields |\r\n| **read_contact** | View contacts |\r\n| **write_contact** | Manage contacts |\r\n| **read_contact_note** | View contact notes |\r\n| **write_contact_note** | Manage contact notes |\r\n| **manage_contact_custom** | Manage contact custom fields |\r\n| **read_jobad** | View job ads |\r\n| **write_jobad** | Manage job ads |\r\n| **read_jobapplication** | View job applications |\r\n| **write_jobapplication** | Manage job applications |\r\n| **read_jobapplication_note** | View job application notes |\r\n| **write_jobapplication_note** | Manage job application notes |\r\n| **manage_jobapplication_custom** | Manage job application custom fields |\r\n| **read_interview** | View job interviews |\r\n| **write_interview** | Manage job interviews |\r\n| **read_job** | View jobs |\r\n| **write_job** | Manage jobs |\r\n| **read_job_note** | View job notes |\r\n| **write_job_note** | Manage job notes |\r\n| **manage_job_custom** | Manage job custom fields |\r\n| **read_placement** | View placements |\r\n| **write_placement** | Manage placements |\r\n| **read_placement_note** | View placement notes |\r\n| **write_placement_note** | Manage placement notes |\r\n| **manage_placement_custom** | Manage placement custom fields |\r\n| **read_requisition** | View requisitions |\r\n| **write_requisition** | Manage requisitions |\r\n| **read_requisition_note** | View requisition notes |\r\n| **write_requisition_note** | Manage requisition notes |\r\n| **read_float** | View floats |\r\n| **read_submission** | View submissions |\r\n| **read_note** | View notes |\r\n| **write_note** | Manage notes |\r\n| **read_folder** | View folders |\r\n| **write_folder** | Manage folders |\r\n| **read_user** | View users |\r\n| **read_usergroup** | View user groups |\r\n| **read_usertask** | View user tasks |\r\n| **partner_jobboard** | View active job ads and submit job applications |\r\n| **partner_ui_action** | Add partner actions to JobAdder |\r\n| **offline_access** | Access JobAdder data for an extended period of time, must always be combined with other scopes |\r\n\r\n\r\n&nbsp;\r\n# Webhooks\r\n\r\nThe JobAdder API supports webhooks for event notification using the [Webhook API](#tag/Webhook-API:Webhooks).\r\n\r\nThe order of webhook notifications are not guaranteed, and idempotency may lead to duplicate notifications.\r\n\r\n&nbsp;\r\n## Notification messages\r\n\r\nWhen an event occurs, JobAdder will issue an HTTP POST to the URL you specified on your webhook.\r\n\r\n```json\r\n{\r\n  \"apiVersion\": 2,\r\n  \"event\": \"placement_approved\",\r\n  \"eventId\": \"00000000-0000-0000-0000-000000000000\",\r\n  \"eventDate\": \"2019-01-01T09:00:00Z\",\r\n  \"eventUser\": {},\r\n  \"eventData\": {},\r\n  <event details>\r\n}\r\n```\r\n\r\n&nbsp;\r\n## Events\r\n\r\nAll events require the **offline_access** scope, along with the scopes relevant to the event.\r\n\r\n| event name                      | required scopes                                   |\r\n|:--------------------------------|:--------------------------------------------------|\r\n| job_status_changed              | read or read_job                                  |\r\n| job_invoice_sent                | read or read_job                                  |\r\n| job_partner_action              | read or read_job, partner_ui_action               |\r\n| jobad_posted                    | read or read_jobad                                |\r\n| jobad_expired                   | read or read_jobad                                |\r\n| jobad_partner_action            | read or read_jobad, partner_ui_action             |\r\n| candidate_status_changed        | read or read_candidate                            |\r\n| candidate_updated               | read or read_candidate                            |\r\n| candidate_partner_action        | read or read_candidate, partner_ui_action         |\r\n| jobapplication_status_changed   | read or read_jobapplication                       |\r\n| jobapplication_partner_action   | read or read_jobapplication, partner_ui_action    |\r\n| placement_approved              | read or read_placement                            |\r\n| placement_status_changed        | read or read_placement                            |\r\n| placement_partner_action        | read or read_placement, partner_ui_action         |\r\n| company_status_changed          | read or read_company                              |\r\n| company_partner_action          | read or read_company, partner_ui_action           |\r\n| contact_status_changed          | read or read_contact                              |\r\n| contact_partner_action          | read or read_contact, partner_ui_action           |\r\n| interview_scheduled             | read or read_interview                            |\r\n| interview_evaluation_submitted  | read or read_interview                            |\r\n| folder_job_added                | read or read_job, read or read_folder             |\r\n| folder_job_removed              | read or read_job, read or read_folder             |\r\n| folder_candidate_added          | read or read_candidate, read or read_folder       |\r\n| folder_candidate_removed        | read or read_candidate, read or read_folder       |\r\n| folder_jobapplication_added     | read or read_jobapplication, read or read_folder  |\r\n| folder_jobapplication_removed   | read or read_jobapplication, read or read_folder  |\r\n| folder_placement_added          | read or read_placement, read or read_folder       |\r\n| folder_placement_removed        | read or read_placement, read or read_folder       |\r\n| folder_company_added            | read or read_company, read or read_folder         |\r\n| folder_company_removed          | read or read_company, read or read_folder         |\r\n| folder_contact_added            | read or read_contact, read or read_folder         |\r\n| folder_contact_removed          | read or read_contact, read or read_folder         |\r\n| folder_updated                  | read or read_folder                               |\r\n| user_suspended                  | read or read_user                                 |\r\n\r\n&nbsp;\r\n# Release Notes\r\n\r\n### Upcoming changes\r\n\r\n| eta | description |\r\n| :-- | :---------- |\r\n\r\n### Recent changes\r\n\r\n| date       | description                                                                                                         |\r\n| :--------- | :------------------------------------------------------------------------------------------------------------------ |\r\n| 2023-08-21 | Add Createdbyintegration option to [Add Candidate Note](https://api.jobadder.com)                                | \r\n| 2023-08-10 | Add UpdateAt filter to [Find interviews](https://api.jobadder.com)                                                 | \r\n| 2023-07-10 | Add DateOfBirth filter to [Find candidates](https://api.jobadder.com)                                              | \r\n| 2023-06-13 | Add location in find Jobs endpoint                                                                                  | \r\n| 2023-06-01 | folder_updated, user_suspended webhook events                                                                       |\r\n| 2022-11-23 | Folders API optimized and added embedMode and embed option.                                                         |\r\n| 2022-08-18 | Added updatedAt filter to all entity Activities API endpoint                                                        |\r\n| 2022-08-15 | [Find Notes](https://api.jobadder.com) - new filter (entityType)                                                        |\r\n| 2022-06-14 | Added Job invoices endpoints                                                                                        |\r\n| 2022-06-14 | Added JobInvoiceSent Webhook event                                                                                  |\r\n| 2022-05-16 | Add OwnerStatus query param to FindFolder api                                                                       |\r\n| 2022-05-09 | CRUD endpoints for Rate Card (Astute)                                                                               |\r\n| 2022-03-31 | Added CandidateUpdated Webhook event                                                                                |\r\n| 2022-03-07 | Update Notes query supports more embed options                                                                      |\r\n| 2022-02-22 | Add or remove entities in folder                                                                                    |\r\n| 2022-01-17 | Update GET Requisition to include Requisition Form ID                                                               |\r\n| 2022-01-17 | [Get all Requisition Forms and Fields](https://api.jobadder.com) endpoint added                               |\r\n| 2022-01-05 | Add temp time and week data in get Placement endpoint                                                               |\r\n| 2021-11-25 | Add new endpoint to Candidate for attachments                                                                       |\r\n| 2021-11-18 | FIX: Retrieve payroll billings did not filter correctly by provider (applicable for FT360 users only)               |\r\n| 2021-11-12 | Add temp time and week data in get Job endpoint                                                                     |\r\n| 2021-11-05 | Add unsubscribed field to Candidates and Contacts (get, create, update) related endpoints                           |\r\n| 2021-10-30 | Update file upload whitelist to allow .csv uploads                                                                  |\r\n| 2021-10-30 | Update Requisition Attachment [DELETE](https://api.jobadder.com) param attachmentType to attachmentId |\r\n| 2021-10-30 | Update Requisition Attachment [GET](https://api.jobadder.com) param attachmentType to attachmentId       |\r\n| 2021-10-30 | [Get all Requisition Attachments](https://api.jobadder.com) endpoint added                           |\r\n| 2021-10-28 | Add Candidate ExternalID for payroll billing fields (applicable for FT360 users only)                               |\r\n| 2021-09-27 | Add new endpoint to Candidate for payroll billing fields (applicable for FT360 users only)                          |\r\n| 2021-08-27 | FIX: write_interview returns invalid_scope in auth request                                                          |\r\n| 2021-07-29 | FIX: Update a placement did not update billing details                                                              |\r\n| 2021-07-29 | FIX: Update a candidate did not update mobile number in the candidate header                                        |\r\n| 2021-07-29 | FIX: Find contacts not finding mobile numbers                                                                       |\r\n| 2021-07-29 | FIX: Candidate Upload Attachment - Add a single attachment incorrectly flagged                                      |\r\n| 2021-07-29 | Add date of birth, emergency contact and phone fields to Candidate (get, create, update) related endpoints          |\r\n| 2021-07-29 | Add legal name field to Companies (get, create, update) related endpoints                                           |\r\n| 2021-07-29 | [Find Candidates](https://api.jobadder.com) - new filter (location)                                                |\r\n| 2021-07-29 | Add Other Apply URLs in Job Ad (get) endpoint                                                                       |\r\n| 2021-04-15 | Rate Calculator (update, get) related endpoints                                                                     |\r\n| 2021-03-15 | Tasks (create, update, get, delete) related endpoints                                                               |\r\n| 2021-03-15 | Interviews (create, update, delete) related endpoints                                                               |\r\n| 2021-01-11 | [Find Candidates](https://api.jobadder.com) - new filters (current position, city, state)                          |\r\n| 2021-01-11 | Create Pending Candidates when using [/candidates/](https://api.jobadder.com)                                        |\r\n| 2020-11-10 | Activities (create, find) related endpoints                                                                         |\r\n| 2019-09-23 | FIX: Status change note generation sometimes included an incorrect user name in the note content                    |\r\n| 2019-07-04 | FIX: [Find webhooks](https://api.jobadder.com) events query parameter was not filtering the results                  |\r\n| 2019-06-11 | [Candidate skill coding](https://api.jobadder.com)                                                             |\r\n| 2019-06-03 | Additional deleted record endpoints                                                                                 |\r\n| 2019-06-03 | embed=self query parameter to embed full details in results returned by key endpoints                               |\r\n| 2019-05-26 | [embed=self](https://api.jobadder.com) query parameter to embed full details and related resources on candidates   |\r\n| 2019-05-26 | [/candidates/deleted](https://api.jobadder.com) endpoint added to list recently deleted candidates              |\r\n| 2019-05-26 | [/contacts/deleted](https://api.jobadder.com) endpoint added to list recently deleted contacts                    |\r\n| 2019-05-25 | jobad_posted webhook event                                                                                          |\r\n| 2019-05-25 | jobad_expired webhook event                                                                                         |\r\n| 2019-05-16 | Optional authorization header on webhook events                                                                     |\r\n| 2019-05-16 | Interview evaluation endpoints                                                                                      |\r\n| 2019-05-16 | interview_evaluation_submitted webhook event                                                                        |\r\n| 2019-05-16 | Interview endpoints for related entities                                                                            |\r\n| 2019-05-09 | [/interviews](#tag/Interview-API:Interviews) endpoint added to list scheduled internal and external interviews      |\r\n| 2019-05-09 | interview_scheduled webhook event                                                                                   |\r\n"
  version: v2
  x-logo:
    url: /v2/docs/logo.svg
    altText: JobAdder API
    href: /v2/docs
  x-api-status-urls: false
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: /v2
tags:
  - name: Contact API:Contacts
    x-displayName: Contacts
  - name: Candidate API:Lists
    x-displayName: Lists
  - name: Placement API:Placements
    x-displayName: Placements
  - name: Company API:Companies
    x-displayName: Companies
  - name: User Task API:Tasks
    x-displayName: Tasks
  - name: Candidate API:Candidates
    x-displayName: Candidates
  - name: Candidate API:Attachments
    x-displayName: Attachments
  - name: Candidate API:Activities
    x-displayName: Activities
  - name: Company API:Activities
    x-displayName: Activities
  - name: Contact API:Activities
    x-displayName: Activities
  - name: Contact API:Lists
    x-displayName: Lists
  - name: Job API:Jobs
    x-displayName: Jobs
  - name: Job API:Activities
    x-displayName: Activities
  - name: Job API:Lists
    x-displayName: Lists
  - name: Job Application API:Activities
    x-displayName: Activities
  - name: Job Application API:Lists
    x-displayName: Lists
  - name: Placement API:Activities
    x-displayName: Activities
  - name: Placement API:Lists
    x-displayName: Lists
  - name: Company API:Addresses
    x-displayName: Addresses
  - name: Company API:Attachments
    x-displayName: Attachments
  - name: Company API:Lists
    x-displayName: Lists
  - name: Contact API:Attachments
    x-displayName: Attachments
  - name: Interview API:Evaluations
    x-displayName: Evaluations
  - name: Job API:Attachments
    x-displayName: Attachments
  - name: Job Application API:Job Applications
    x-displayName: Job Applications
  - name: Job Application API:Interviews
    x-displayName: Interviews
  - name: Partner Action API:Actions
    x-displayName: Actions
  - name: Placement API:Attachments
    x-displayName: Attachments
  - name: Requisition API:Requisitions
    x-displayName: Requisitions
  - name: Webhook API:Webhooks
    x-displayName: Webhooks
  - name: Candidate API:Photo
    x-displayName: Photo
  - name: Candidate API:Skills
    x-displayName: Skills
  - name: Company API:Logo
    x-displayName: Logo
  - name: Company API:Workflows
    x-displayName: Workflows
  - name: Job Ad API:Job Ads
    x-displayName: Job Ads
  - name: Job API:Job Applications
    x-displayName: Job Applications
  - name: Job API:Payroll Billing
    x-displayName: Payroll Billing
  - name: Job Application API:Attachments
    x-displayName: Attachments
  - name: Job Application API:Review
    x-displayName: Review
  - name: Note API:Notes
    x-displayName: Notes
  - name: Partner Action API:Candidates
    x-displayName: Candidates
  - name: Partner Action API:Companies
    x-displayName: Companies
  - name: Partner Action API:Contacts
    x-displayName: Contacts
  - name: Partner Action API:Job Ads
    x-displayName: Job Ads
  - name: Partner Action API:Job Applications
    x-displayName: Job Applications
  - name: Partner Action API:Jobs
    x-displayName: Jobs
  - name: Partner Action API:Placements
    x-displayName: Placements
  - name: Requisition API:Attachments
    x-displayName: Attachments
  - name: Requisition API:Approval
    x-displayName: Approval
  - name: User API:Users
    x-displayName: Users
  - name: Candidate API:Availability
    x-displayName: Availability
  - name: Candidate API:Videos
    x-displayName: Videos
  - name: Candidate API:Job Applications
    x-displayName: Job Applications
  - name: Candidate API:Notes
    x-displayName: Notes
  - name: Candidate API:UserTasks
    x-displayName: UserTasks
  - name: Company API:Notes
    x-displayName: Notes
  - name: Company API:UserTasks
    x-displayName: UserTasks
  - name: Contact API:Notes
    x-displayName: Notes
  - name: Contact API:UserTasks
    x-displayName: UserTasks
  - name: Folder API:Folders
    x-displayName: Folders
  - name: Interview API:Interviews
    x-displayName: Interviews
  - name: Job API:Notes
    x-displayName: Notes
  - name: Job API:UserTasks
    x-displayName: UserTasks
  - name: Job Application API:Videos
    x-displayName: Videos
  - name: Job Application API:UserTasks
    x-displayName: UserTasks
  - name: Placement API:Notes
    x-displayName: Notes
  - name: Placement API:UserTasks
    x-displayName: UserTasks
  - name: Requisition API:Notes
    x-displayName: Notes
  - name: Candidate API:Placements
    x-displayName: Placements
  - name: Candidate API:Payroll Billing
    x-displayName: Payroll Billing
  - name: Candidate Float API:Floats
    x-displayName: Floats
  - name: Candidate Submission API:Submissions
    x-displayName: Submissions
  - name: Company API:Jobs
    x-displayName: Jobs
  - name: Company API:Placements
    x-displayName: Placements
  - name: Contact API:Jobs
    x-displayName: Jobs
  - name: Job Ad API:Job Applications
    x-displayName: Job Applications
  - name: Job API:Placements
    x-displayName: Placements
  - name: Job API:Invoices
    x-displayName: Invoices
  - name: Job Application API:Notes
    x-displayName: Notes
  - name: Job Board API:Job Boards
    x-displayName: Job Boards
  - name: Job Board API:Job Ads
    x-displayName: Job Ads
  - name: Job Board API:Job Applications
    x-displayName: Job Applications
  - name: Note API:Attachments
    x-displayName: Attachments
  - name: Requisition API:Lists
    x-displayName: Lists
  - name: Search API:Search
    x-displayName: Search
  - name: User Group API:Groups
    x-displayName: Groups
  - name: User Office API:Offices
    x-displayName: Offices
  - name: Candidate API:Floats
    x-displayName: Floats
  - name: Candidate API:Interviews
    x-displayName: Interviews
  - name: Candidate API:Submissions
    x-displayName: Submissions
  - name: Candidate API:Privacy
    x-displayName: Privacy
  - name: Category API:Categories
    x-displayName: Categories
  - name: Company API:Skills
    x-displayName: Skills
  - name: Company API:Contacts
    x-displayName: Contacts
  - name: Company API:Requisitions
    x-displayName: Requisitions
  - name: Company API:Floats
    x-displayName: Floats
  - name: Company API:Submissions
    x-displayName: Submissions
  - name: Contact API:Interviews
    x-displayName: Interviews
  - name: Contact API:Skills
    x-displayName: Skills
  - name: Job API:Submissions
    x-displayName: Submissions
  - name: Location API:Countries
    x-displayName: Countries
  - name: Location API:Locations
    x-displayName: Locations
  - name: Placement API:Timesheets
    x-displayName: Timesheets
  - name: User API:Tasks
    x-displayName: Tasks
  - name: User API:Interviews
    x-displayName: Interviews
  - name: User API:Groups
    x-displayName: Groups
  - name: User Group API:Users
    x-displayName: Users
  - name: User Office API:Users
    x-displayName: Users
  - name: Work Type API:Work Types
    x-displayName: Work Types
paths:
  /jobboards:
    get:
      tags:
        - Job Board API:Job Boards
      summary: Find job boards
      operationId: JobBoardApiJobBoards_findJobBoards
      security:
        - jobadder_identity:
            - read
            - read_jobad
            - partner_jobboard
      parameters:
        - description: Job Board Id
          name: BoardId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: List of job boards matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobBoardListModel'
      x-apiName: Job Board API
      x-apiGroup: Job Boards
      x-apiOrder: 1
  /jobboards/{boardId}:
    get:
      tags:
        - Job Board API:Job Boards
      summary: Get a job board
      operationId: JobBoardApiJobBoards_getBoard
      security:
        - jobadder_identity:
            - read
            - read_jobad
            - partner_jobboard
      parameters:
        - name: boardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job board details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobBoardModel'
        '404':
          description: Requested job board was not found
      x-apiName: Job Board API
      x-apiGroup: Job Boards
      x-apiOrder: 1
  /jobboards/{boardId}/ads:
    get:
      tags:
        - Job Board API:Job Ads
      summary: Find job ads
      operationId: JobBoardApiJobAds_listJobAds
      security:
        - jobadder_identity:
            - read
            - read_jobad
            - partner_jobboard
      parameters:
        - description: ''
          name: boardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: AdId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Portal.HotJob
          in: query
          schema:
            type: boolean
        - name: Portal.Value
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Portal.ValueId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Portal.Template
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for job ads posted at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PostedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for job ads updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for job ads expiring at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: ExpiresAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: ```description```, ```portal.fields```"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job ads matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobBoardJobAdListRepresentation'
      x-apiName: Job Board API
      x-apiGroup: Job Ads
      x-apiOrder: 2
  /jobboards/{boardId}/ads/{adId}:
    get:
      tags:
        - Job Board API:Job Ads
      summary: Get a job ad
      operationId: JobBoardApiJobAds_getJobAd
      security:
        - jobadder_identity:
            - read
            - read_jobad
            - partner_jobboard
      parameters:
        - description: ''
          name: boardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job ad details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobBoardJobAdRepresentation'
        '404':
          description: Requested job ad was not found
      x-apiName: Job Board API
      x-apiGroup: Job Ads
      x-apiOrder: 2
  /jobboards/{boardId}/ads/{adId}/applications:
    post:
      tags:
        - Job Board API:Job Applications
      summary: Submit a job application
      operationId: JobBoardApiJobApplications_submitJobApplication
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
            - partner_jobboard
      parameters:
        - description: Job Board Id
          name: boardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitJobApplicationCommand'
      responses:
        '200':
          description: Job application attachment links
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmittedJobApplicationModel'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job Board API
      x-apiGroup: Job Applications
      x-apiOrder: 3
  /jobboards/{boardId}/ads/{adId}/applications/{applicationId}/{attachmentType}:
    post:
      tags:
        - Job Board API:Job Applications
      summary: Submit job application documents
      operationId: JobBoardApiJobApplications_submitJobApplicationDocuments
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
            - partner_jobboard
      description: "Add a resume, cover letter or related document to a previously submitted job application.<br />\r\nDocuments can be added for a duration of 5 minutes after submitting the job application."
      parameters:
        - description: Job Board Id
          name: boardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: ''
          name: attachmentType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubmitCandidateAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/JobBoardApiJobApplicationsSubmitJobApplicationDocumentsRequest
      responses:
        '202':
          description: Accepted
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job Board API
      x-apiGroup: Job Applications
      x-apiOrder: 3
  /jobs:
    get:
      tags:
        - Job API:Jobs
      summary: Find jobs
      operationId: JobApiJobs_getList
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Job Id
          name: JobId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job title
          name: JobTitle
          in: query
          schema:
            type: string
        - description: Companies by Id
          name: Company.CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Company name
          name: Company.Name
          in: query
          schema:
            type: string
        - description: Alias for company.companyId
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Contact Id
          name: ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Unique identifier for partner actions
          name: PartnerAction.ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: PartnerAction.Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Include partner actions at a specific stage
          name: PartnerAction.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PartnerAction.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Job status
          name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Search for active/open jobs
          name: Active
          in: query
          schema:
            type: boolean
        - description: Search for the user's favourite jobs
          name: UserFavourite
          in: query
          schema:
            type: boolean
        - description: Search in specific folders
          name: FolderId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: User Id - search for jobs by owner or associated recruiter
          name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for jobs by owner
          name: OwnerUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search jobs by associated recruiters
          name: RecruiterUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for jobs created by the specified user(s)
          name: CreatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for jobs created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: User Id - search for jobs last updated by the specified user(s)
          name: UpdatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for jobs updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: User Id - search for jobs last closed by the specified user(s)
          name: ClosedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for jobs closed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: ClosedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: jobTitle, status.name, createdAt, updatedAt, closedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: recruiters, statistics, partnerActions"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, notes, applications"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of jobs matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderListRepresentation'
      x-apiName: Job API
      x-apiGroup: Jobs
      x-apiOrder: 1
    post:
      tags:
        - Job API:Jobs
      summary: Add a job
      operationId: JobApiJobs_createJobPost
      security:
        - jobadder_identity:
            - write
            - write_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobOrderCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderRepresentation'
      x-apiName: Job API
      x-apiGroup: Jobs
      x-apiOrder: 1
  /jobs/{jobId}:
    get:
      tags:
        - Job API:Jobs
      summary: Get a job
      operationId: JobApiJobs_getJobById
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Embed related resources.<br />\r\nResources available to embed are: applications, notes"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested job details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderRepresentation'
        '404':
          description: Requested job was not found
      x-apiName: Job API
      x-apiGroup: Jobs
      x-apiOrder: 1
    put:
      tags:
        - Job API:Jobs
      summary: Update a job
      operationId: JobApiJobs_updateJobById
      security:
        - jobadder_identity:
            - write
            - write_job
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobOrderCommand'
      responses:
        '200':
          description: Job was successfully updated
        '404':
          description: Job was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: Jobs
      x-apiOrder: 1
  /jobs/{jobId}/applications:
    get:
      tags:
        - Job API:Job Applications
      summary: Get job applications
      operationId: JobApiJobApplications_getJobApplications
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: offset
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            The maximum number of entries to return.<br />Setting to 0 will
            return only the total count of matching resources.
          name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of applications for the specified job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Job API
      x-apiGroup: Job Applications
      x-apiOrder: 10
    post:
      tags:
        - Job API:Job Applications
      summary: Add candidates to a job
      operationId: JobApiJobApplications_addCandidatesToJob
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobOrderCandidateCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
        '409':
          description: Candidate already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: Job Applications
      x-apiOrder: 10
  /jobs/{jobId}/applications/active:
    get:
      tags:
        - Job API:Job Applications
      summary: Get active job applications
      operationId: JobApiJobApplications_getActive
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: offset
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            The maximum number of entries to return.<br />Setting to 0 will
            return only the total count of matching resources.
          name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of active applications for the specified job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Job API
      x-apiGroup: Job Applications
      x-apiOrder: 10
  /jobs/{jobId}/applications/submit:
    post:
      tags:
        - Job API:Job Applications
      summary: Submit a candidate to an evergreen job
      operationId: JobApiJobApplications_submitCandidate
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitJobOrderCandidateCommand'
      responses:
        '200':
          description: Job application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationRepresentation'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: Job Applications
      x-apiOrder: 10
  /jobs/{jobId}/attachments:
    get:
      tags:
        - Job API:Attachments
      summary: Find attachments
      operationId: JobApiAttachments_find
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment types to include
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JobOrderAttachmentType'
        - description: Find the latest version of each attachment type
          name: Latest
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job attachments matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderAttachmentListRepresentation'
      x-apiName: Job API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /jobs/{jobId}/attachments/{attach}:
    get:
      tags:
        - Job API:Attachments
      summary: Get an attachment
      operationId: JobApiAttachments_getAttachment
      security:
        - jobadder_identity:
            - read
            - read_job
      description: >-
        Get a job attachment.<br />Setting the Accept header will attempt a file
        conversion.
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested job attachment
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/JobApiAttachmentsGetAttachmentResponse'
        '404':
          description: Requested job attachment was not found
      x-apiName: Job API
      x-apiGroup: Attachments
      x-apiOrder: 20
    post:
      tags:
        - Job API:Attachments
      summary: Add a single attachment
      operationId: JobApiAttachments_addSingleAttachment
      security:
        - jobadder_identity:
            - write
            - write_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: attach
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/JobOrderAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApiAttachmentsAddSingleAttachmentRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderAttachmentRepresentation'
        '404':
          description: Job was not found
      x-apiName: Job API
      x-apiGroup: Attachments
      x-apiOrder: 20
    put:
      tags:
        - Job API:Attachments
      summary: Update attachment details
      operationId: JobApiAttachments_updateDetails
      security:
        - jobadder_identity:
            - write
            - write_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobOrderAttachmentCommand'
      responses:
        '204':
          description: NoContent
        '404':
          description: Attachment was not found
      x-apiName: Job API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /jobs/{jobId}/submissions:
    get:
      tags:
        - Job API:Submissions
      summary: Get all submissions
      operationId: JobApiSubmissions_getAll
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of candidate submissions for the requested job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionListRepresentation'
      x-apiName: Job API
      x-apiGroup: Submissions
      x-apiOrder: 20
  /jobs/{jobId}/placements:
    get:
      tags:
        - Job API:Placements
      summary: Get all placements
      operationId: JobApiPlacements_getAll
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of placements for the specified job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Job API
      x-apiGroup: Placements
      x-apiOrder: 30
  /jobs/{jobId}/placements/approved:
    get:
      tags:
        - Job API:Placements
      summary: Get approved placements
      operationId: JobApiPlacements_getApprovedPlacements
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of approved placements for the specified job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Job API
      x-apiGroup: Placements
      x-apiOrder: 30
  /jobs/{jobId}/status:
    put:
      tags:
        - Job API:Jobs
      summary: Set a job status
      operationId: JobApiJobs_updateStatus
      security:
        - jobadder_identity:
            - write
            - write_job
      description: Change the job status and add an optional note
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetJobOrderStatusCommand'
      responses:
        '200':
          description: Job status was successfully updated
        '202':
          description: Job status already assigned
        '404':
          description: Job was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: Jobs
      x-apiOrder: 60
  /jobs/{jobId}/notes:
    get:
      tags:
        - Job API:Notes
      summary: Get job notes
      operationId: JobApiNotes_getJobNotes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_job_note
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes for the specified job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Job API
      x-apiGroup: Notes
      x-apiOrder: 90
    post:
      tags:
        - Job API:Notes
      summary: Add a note
      operationId: JobApiNotes_addNote
      security:
        - jobadder_identity:
            - write
            - write_note
            - write_job_note
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobOrderNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
        '404':
          description: Job was not found
      x-apiName: Job API
      x-apiGroup: Notes
      x-apiOrder: 90
  /jobs/{jobId}/activities:
    post:
      tags:
        - Job API:Activities
      summary: Add a job activity
      operationId: JobApiActivities_addJobActivity
      security:
        - jobadder_identity:
            - write
            - write_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobOrderActivityCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderActivityModel'
        '404':
          description: Job was not found
      x-apiName: Job API
      x-apiGroup: Activities
      x-apiOrder: 100
    get:
      tags:
        - Job API:Activities
      summary: Get job activities
      operationId: JobApiActivities_getJobActivities
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of job activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderActivitySummaryListModel'
      x-apiName: Job API
      x-apiGroup: Activities
      x-apiOrder: 100
  /jobs/{jobId}/activities/{activityId}:
    get:
      tags:
        - Job API:Activities
      summary: Get a job activity
      operationId: JobApiActivities_getActivity
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Activity Id
          name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested job activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderActivityRepresentation'
        '404':
          description: Requested job activity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: Activities
      x-apiOrder: 100
  /jobs/{jobId}/invoices:
    get:
      tags:
        - Job API:Invoices
      summary: Get job invoices
      operationId: JobApiInvoices_getJobInvoices
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of job invoices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderInvoiceListModel'
        '404':
          description: Requested job's invoices were not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: Invoices
      x-apiOrder: 100
  /jobs/{jobId}/invoices/{invoiceId}:
    get:
      tags:
        - Job API:Invoices
      summary: Get a job invoice
      operationId: JobApiInvoices_getJobInvoice
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Invoice Id
          name: invoiceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderRetainedInvoiceRepresentation'
        '404':
          description: Requested job invoice was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: Invoices
      x-apiOrder: 100
  /jobs/{jobId}/usertasks:
    post:
      tags:
        - Job API:UserTasks
      summary: Add a job user task
      operationId: JobApiUserTasks_addTask
      security:
        - jobadder_identity:
            - write
            - write_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobOrderUserTaskCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderUserTaskModel'
        '404':
          description: Job was not found
      x-apiName: Job API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /jobs/{jobId}/usertasks/{taskId}:
    get:
      tags:
        - Job API:UserTasks
      summary: Get a job user task
      operationId: JobApiUserTasks_getTask
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested job user task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderUserTaskRepresentation'
        '404':
          description: Requested job user task was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: UserTasks
      x-apiOrder: 100
    put:
      tags:
        - Job API:UserTasks
      summary: Update a job user task
      operationId: JobApiUserTasks_updateTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobOrderUserTaskCommand'
      responses:
        '200':
          description: Job user task was successfully updated
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderUserTaskModel'
        '404':
          description: Job user task was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /jobs/{jobOrderId}/ratecard:
    get:
      tags:
        - Job API:Payroll Billing
      summary: Get the Rate Card ID for passed Job Order ID
      operationId: JobApiPayrollBilling_getRateCardId
      security:
        - jobadder_identity:
            - read
            - read_job
      description: Applicable to RateCalc generated RateCardID for Astute Payroll
      parameters:
        - description: Job Order Id
          name: jobOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job rate card id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderRateCardModel'
        '404':
          description: Requested job rate card id was not found
      x-apiName: Job API
      x-apiGroup: Payroll Billing
      x-apiOrder: 100
    delete:
      tags:
        - Job API:Payroll Billing
      summary: Remove the Rate Card ID for passed Job Order ID
      operationId: JobApiPayrollBilling_removeRateCardId
      security:
        - jobadder_identity:
            - write
            - write_job
      description: Applicable to RateCalc generated RateCardID for Astute Payroll
      parameters:
        - description: Job Order Id
          name: jobOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: NoContent
        '404':
          description: Requested job rate card id was not found
      x-apiName: Job API
      x-apiGroup: Payroll Billing
      x-apiOrder: 100
  /jobs/{jobOrderId}/ratecard/{rateCardId}:
    post:
      tags:
        - Job API:Payroll Billing
      summary: Add the Rate Card ID for passed Job Order ID
      operationId: JobApiPayrollBilling_addRateCard
      security:
        - jobadder_identity:
            - write
            - write_job
      description: Applicable to RateCalc generated RateCardID for Astute Payroll
      parameters:
        - description: Job Order Id
          name: jobOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Rate Card ID generated by RateCalc
          name: rateCardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderRateCardModel'
        '404':
          description: Job Order was not found
      x-apiName: Job API
      x-apiGroup: Payroll Billing
      x-apiOrder: 100
    put:
      tags:
        - Job API:Payroll Billing
      summary: Update the Rate Card ID for passed Job Order ID
      operationId: JobApiPayrollBilling_updateRateCardId
      security:
        - jobadder_identity:
            - write
            - write_job
      description: Applicable to RateCalc generated RateCardID for Astute Payroll
      parameters:
        - description: Job Order Id
          name: jobOrderId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Rate Card ID generated by RateCalc
          name: rateCardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderRateCardModel'
        '404':
          description: Job Order Rate Card was not found
      x-apiName: Job API
      x-apiGroup: Payroll Billing
      x-apiOrder: 100
  /jobs/activities:
    get:
      tags:
        - Job API:Activities
      summary: Find job activities
      operationId: JobApiActivities_findJobActivities
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: "Search for activities performed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for activities updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job activities matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderActivityListRepresentation'
      x-apiName: Job API
      x-apiGroup: Activities
      x-apiOrder: 100
  /jobs/activitysettings:
    get:
      tags:
        - Job API:Activities
      summary: Get all job activity settings definitions
      operationId: JobApiActivities_getAllActivitySettings
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - name: query
          in: query
          schema:
            $ref: '#/components/schemas/FindJobOrderActivitySettingsQuery'
      responses:
        '200':
          description: List of job activity settings definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderActivitySettingsListModel'
      x-apiName: Job API
      x-apiGroup: Activities
      x-apiOrder: 100
  /jobs/activitysettings/{settingId}:
    get:
      tags:
        - Job API:Activities
      summary: Get job activity setting with details
      operationId: JobApiActivities_getActivitySettingDetails
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Activity Setting Id
          name: settingId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Job activity settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderActivitySettingModel'
        '404':
          description: Requested job activity settings were not found
      x-apiName: Job API
      x-apiGroup: Activities
      x-apiOrder: 100
  /jobs/deleted:
    get:
      tags:
        - Job API:Jobs
      summary: Recently deleted jobs
      operationId: JobApiJobs_getDeletedJobs
      security:
        - jobadder_identity:
            - read
            - read_job
      description: Provides a list of jobs recently (last 14 days) deleted from JobAdder.
      responses:
        '200':
          description: List of recently deleted jobs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedJobOrderListModel'
      x-apiName: Job API
      x-apiGroup: Jobs
      x-apiOrder: 100
  /jobs/fields/custom:
    get:
      tags:
        - Job API:Lists
      summary: Get all custom fields
      operationId: JobApiLists_customFieldsGet
      security:
        - jobadder_identity:
            - read
            - read_job
      responses:
        '200':
          description: List of job custom field definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldListRepresentation'
      x-apiName: Job API
      x-apiGroup: Lists
      x-apiOrder: 100
  /jobs/fields/custom/{fieldId}:
    get:
      tags:
        - Job API:Lists
      summary: Get a custom field
      operationId: JobApiLists_customFieldGet
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested job custom field definition was not found
      x-apiName: Job API
      x-apiGroup: Lists
      x-apiOrder: 100
  /jobs/fields/custom/custom/{fieldId}:
    put:
      tags:
        - Job API:Lists
      summary: Modify custom field list values
      operationId: JobApiLists_modifyFieldValues
      security:
        - jobadder_identity:
            - manage_job_custom
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetJobOrderCustomFieldListValuesCommand'
      responses:
        '200':
          description: Updated job custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested job custom field definition was not found
      x-apiName: Job API
      x-apiGroup: Lists
      x-apiOrder: 100
  /jobs/lists/attachmentcategory:
    get:
      tags:
        - Job API:Attachments
      summary: Get all attachment categories
      operationId: JobApiAttachments_getAllAttachmentCategories
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Optionally filter to specific attachment types
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JobOrderAttachmentType'
      responses:
        '200':
          description: List of job attachment categories
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JobOrderAttachmentCategoryListRepresentation
      x-apiName: Job API
      x-apiGroup: Attachments
      x-apiOrder: 100
  /jobs/lists/notetype:
    get:
      tags:
        - Job API:Notes
      summary: Get all note types
      operationId: JobApiNotes_getAllNoteTypes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_job_note
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of note type definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteTypeListRepresentation'
      x-apiName: Job API
      x-apiGroup: Notes
      x-apiOrder: 100
  /jobs/lists/source:
    get:
      tags:
        - Job API:Lists
      summary: Get all job sources
      operationId: JobApiLists_getAllSources
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of job sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Job API
      x-apiGroup: Lists
      x-apiOrder: 100
  /jobs/lists/status:
    get:
      tags:
        - Job API:Lists
      summary: Get all status definitions
      operationId: JobApiLists_getAllStatusDefinitions
      parameters:
        - name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Name
          in: query
          schema:
            type: string
        - name: Active
          in: query
          schema:
            type: boolean
        - name: Default
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of job status definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusListRepresentation'
      x-apiName: Job API
      x-apiGroup: Lists
      x-apiOrder: 100
  /jobs/lists/status/{statusId}:
    get:
      tags:
        - Job API:Lists
      summary: Get a status definition
      operationId: JobApiLists_getStatusDefinition
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job status definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusRepresentation'
        '404':
          description: Requested job status definition was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusRepresentation'
      x-apiName: Job API
      x-apiGroup: Lists
      x-apiOrder: 100
  /requisitions:
    get:
      tags:
        - Requisition API:Requisitions
      summary: Find requisitions
      operationId: RequisitionApiRequisitions_findRequisitions
      security:
        - jobadder_identity:
            - read
            - read_requisition
      parameters:
        - description: Requisition Id
          name: RequisitionId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Company Id
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/RequisitionStatus'
        - name: HiringManager.ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: HiringManager.Name
          in: query
          schema:
            type: string
        - description: Find requisitions by approver contact id
          name: Approver.ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Approver.Name
          in: query
          schema:
            type: string
        - description: >-
            Find requisitions pending approval by contacts specified in
            approver.contactId
          name: Approver.Pending
          in: query
          schema:
            type: boolean
        - description: User Id - search for requisitions by owner or associated recruiter
          name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for requisitions by owner
          name: OwnerUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for requisitions by associated recruiters
          name: RecruiterUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for jobs created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for jobs updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: jobTitle, status, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: workflow"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Linked resources to embed in the results<br />\r\nResources available are: self, notes"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of requisitions matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionListRepresentation'
      x-apiName: Requisition API
      x-apiGroup: Requisitions
      x-apiOrder: 1
    post:
      tags:
        - Requisition API:Requisitions
      summary: Add a requisition
      operationId: RequisitionApiRequisitions_addNewRequisition
      security:
        - jobadder_identity:
            - write
            - write_requisition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequisitionCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionRepresentation'
      x-apiName: Requisition API
      x-apiGroup: Requisitions
      x-apiOrder: 1
  /requisitions/{requisitionId}:
    get:
      tags:
        - Requisition API:Requisitions
      summary: Get a requisition
      operationId: RequisitionApiRequisitions_getRequisitionById
      security:
        - jobadder_identity:
            - read
            - read_requisition
      parameters:
        - description: Requisition Id
          name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Embed related resources.<br />\r\nResources available to embed are: notes"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested requisition details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionRepresentation'
        '404':
          description: Requested requisition was not found
      x-apiName: Requisition API
      x-apiGroup: Requisitions
      x-apiOrder: 1
    put:
      tags:
        - Requisition API:Requisitions
      summary: Update a requisition
      operationId: RequisitionApiRequisitions_updateRequisitionById
      security:
        - jobadder_identity:
            - write
            - write_requisition
      parameters:
        - description: Requisition Id
          name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRequisitionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Requisition API
      x-apiGroup: Requisitions
      x-apiOrder: 1
    delete:
      tags:
        - Requisition API:Requisitions
      summary: Remove a requisition
      operationId: RequisitionApiRequisitions_removeRequisitionById
      security:
        - jobadder_identity:
            - write
            - write_requisition
      parameters:
        - name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: NoContent
      x-apiName: Requisition API
      x-apiGroup: Requisitions
      x-apiOrder: 1
  /requisitions/{requisitionId}/attachments:
    get:
      tags:
        - Requisition API:Attachments
      summary: Get all attachments
      operationId: RequisitionApiAttachments_getAll
      security:
        - jobadder_identity:
            - read
            - read_requisition
      parameters:
        - name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of requisition attachments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteAttachmentListRepresentation'
      x-apiName: Requisition API
      x-apiGroup: Attachments
      x-apiOrder: 10
  /requisitions/{requisitionId}/attachments/{attachmentId}:
    get:
      tags:
        - Requisition API:Attachments
      summary: Get an attachment
      operationId: RequisitionApiAttachments_getAttachment
      security:
        - jobadder_identity:
            - read
            - read_requisition
      parameters:
        - description: Requisition Id
          name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attachmentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Requested requisition attachment
          content:
            application/octet-stream:
              schema:
                $ref: >-
                  #/components/schemas/RequisitionApiAttachmentsGetAttachmentResponse
        '404':
          description: Requisition attachment was not found
      x-apiName: Requisition API
      x-apiGroup: Attachments
      x-apiOrder: 10
    delete:
      tags:
        - Requisition API:Attachments
      summary: Remove an attachment
      operationId: RequisitionApiAttachments_removeAttachment
      security:
        - jobadder_identity:
            - write
            - write_requisition
      parameters:
        - description: Requisition Id
          name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: attachmentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: NoContent
        '404':
          description: Requisition attachment was not found
      x-apiName: Requisition API
      x-apiGroup: Attachments
      x-apiOrder: 10
  /requisitions/{requisitionId}/attachments/{attachmentType}:
    post:
      tags:
        - Requisition API:Attachments
      summary: Add an attachment
      operationId: RequisitionApiAttachments_addAttachment
      security:
        - jobadder_identity:
            - write
            - write_requisition
      parameters:
        - description: Requisition Id
          name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: attachmentType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RequisitionAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/RequisitionApiAttachmentsAddAttachmentRequest
      responses:
        '201':
          description: Created
        '404':
          description: Requisition was not found
      x-apiName: Requisition API
      x-apiGroup: Attachments
      x-apiOrder: 10
  /requisitions/{requisitionId}/approve:
    put:
      tags:
        - Requisition API:Approval
      summary: Approve a requisition
      operationId: RequisitionApiApproval_requisitionApprove
      security:
        - jobadder_identity:
            - write
            - write_requisition
      parameters:
        - name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApproveRequisitionCommand'
      responses:
        '202':
          description: Accepted
        '404':
          description: Requisition was not found
      x-apiName: Requisition API
      x-apiGroup: Approval
      x-apiOrder: 20
  /requisitions/{requisitionId}/history:
    get:
      tags:
        - Requisition API:Approval
      summary: Get approval history
      operationId: RequisitionApiApproval_getHistory
      security:
        - jobadder_identity:
            - read
            - read_requisition
      parameters:
        - description: Requisition Id
          name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: offset
          in: query
          schema:
            type: integer
            format: int32
        - description: ''
          name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested requisition approval history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionHistoryModel'
      x-apiName: Requisition API
      x-apiGroup: Approval
      x-apiOrder: 20
  /requisitions/{requisitionId}/reject:
    put:
      tags:
        - Requisition API:Approval
      summary: Reject a requisition
      operationId: RequisitionApiApproval_rejectRequisition
      security:
        - jobadder_identity:
            - write
            - write_requisition
      parameters:
        - name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectRequisitionCommand'
      responses:
        '202':
          description: Accepted
        '404':
          description: Requisition was not found
      x-apiName: Requisition API
      x-apiGroup: Approval
      x-apiOrder: 20
  /requisitions/{requisitionId}/submit:
    put:
      tags:
        - Requisition API:Approval
      summary: Submit a requisition for approval
      operationId: RequisitionApiApproval_submitForApproval
      security:
        - jobadder_identity:
            - write
            - write_requisition
      parameters:
        - name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitRequisitionCommand'
      responses:
        '202':
          description: Accepted
        '404':
          description: Requisition was not found
      x-apiName: Requisition API
      x-apiGroup: Approval
      x-apiOrder: 20
  /requisitions/{requisitionId}/notes:
    get:
      tags:
        - Requisition API:Notes
      summary: Get requisition notes
      operationId: RequisitionApiNotes_getNotes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_requisition_note
      parameters:
        - description: Requisition Id
          name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes for the specified requisition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Requisition API
      x-apiGroup: Notes
      x-apiOrder: 90
    post:
      tags:
        - Requisition API:Notes
      summary: Add a requisition note
      operationId: RequisitionApiNotes_addNote
      security:
        - jobadder_identity:
            - write
            - write_note
            - write_requisition_note
      parameters:
        - name: requisitionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRequisitionNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
        '404':
          description: Requisition was not found
      x-apiName: Requisition API
      x-apiGroup: Notes
      x-apiOrder: 90
  /requisitions/forms:
    get:
      tags:
        - Requisition API:Notes
      summary: Get all requisition forms and fields
      operationId: RequisitionApiNotes_getAllFormsAndFields
      security:
        - jobadder_identity:
            - read
            - read_requisition
      responses:
        '200':
          description: List of requisition forms and fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionFormListRepresentation'
      x-apiName: Requisition API
      x-apiGroup: Notes
      x-apiOrder: 90
  /requisitions/fields/custom:
    get:
      tags:
        - Requisition API:Lists
      summary: Get all custom fields
      operationId: RequisitionApiLists_getAllCustomFields
      security:
        - jobadder_identity:
            - read
            - read_requisition
      responses:
        '200':
          description: List of requisition custom field definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldListRepresentation'
      x-apiName: Requisition API
      x-apiGroup: Lists
      x-apiOrder: 100
  /requisitions/fields/custom/{fieldId}:
    get:
      tags:
        - Requisition API:Lists
      summary: Get a custom field
      operationId: RequisitionApiLists_getFieldById
      security:
        - jobadder_identity:
            - read
            - read_requisition
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested requisition custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested requisition custom field definition was not found
      x-apiName: Requisition API
      x-apiGroup: Lists
      x-apiOrder: 100
  /jobads:
    get:
      tags:
        - Job Ad API:Job Ads
      summary: Find job ads
      operationId: JobAdApiJobAds_find
      security:
        - jobadder_identity:
            - read
            - read_jobad
      parameters:
        - description: Unique identifier for partner actions
          name: PartnerAction.ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: PartnerAction.Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Include partner actions at a specific stage
          name: PartnerAction.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PartnerAction.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: self,applications,partnerActions"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, applications"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job ads matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAdListRepresentation'
      x-apiName: Job Ad API
      x-apiGroup: Job Ads
      x-apiOrder: 1
    post:
      tags:
        - Job Ad API:Job Ads
      summary: Add a draft job ad
      operationId: JobAdApiJobAds_createDraftJobAd
      security:
        - jobadder_identity:
            - write
            - write_jobad
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobAdDraftCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAdRepresentation'
      x-apiName: Job Ad API
      x-apiGroup: Job Ads
      x-apiOrder: 1
  /jobads/{adId}:
    get:
      tags:
        - Job Ad API:Job Ads
      summary: Get a job ad
      operationId: JobAdApiJobAds_getJobAd
      security:
        - jobadder_identity:
            - read
            - read_jobad
      parameters:
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Embed related resources.<br />\r\nResources available to embed are: applications"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested job ad details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAdRepresentation'
        '404':
          description: Requested job ad was not found
      x-apiName: Job Ad API
      x-apiGroup: Job Ads
      x-apiOrder: 1
    put:
      tags:
        - Job Ad API:Job Ads
      summary: Update a draft job ad
      operationId: JobAdApiJobAds_updateDraftJobAd
      security:
        - jobadder_identity:
            - write
            - write_jobad
      parameters:
        - name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobAdDraftCommand'
      responses:
        '200':
          description: OK
        '204':
          description: NoContent
      x-apiName: Job Ad API
      x-apiGroup: Job Ads
      x-apiOrder: 1
  /jobads/{adId}/applications:
    get:
      tags:
        - Job Ad API:Job Applications
      summary: Get job applications
      operationId: JobAdApiJobApplications_listApplications
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of applications for the specified job ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Job Ad API
      x-apiGroup: Job Applications
      x-apiOrder: 10
  /jobads/{adId}/applications/active:
    get:
      tags:
        - Job Ad API:Job Applications
      summary: Get active job applications
      operationId: JobAdApiJobApplications_getActiveJobApplications
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of active applications for the specified job ad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Job Ad API
      x-apiGroup: Job Applications
      x-apiOrder: 10
  /candidates:
    get:
      tags:
        - Candidate API:Candidates
      summary: Find candidates
      operationId: CandidateApiCandidates_getCandidates
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Candidate name
          name: Name
          in: query
          schema:
            type: string
        - description: Candidate email
          name: Email
          in: query
          schema:
            type: string
        - description: Candidate phone or mobile number
          name: Phone
          in: query
          schema:
            type: string
        - description: Current Position
          name: CurrentPosition
          in: query
          schema:
            type: string
        - description: City
          name: City
          in: query
          schema:
            type: string
        - description: State
          name: State
          in: query
          schema:
            type: string
        - description: Location (city and/or state)
          name: Location
          in: query
          schema:
            type: string
        - description: >-
            Candidate date of birth available ([ISO
            full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6))
          name: DateOfBirth
          in: query
          schema:
            type: string
            format: date-time
        - description: Search for key-words within the latest candidate resume
          name: Keywords
          in: query
          schema:
            type: string
        - description: Unique identifier for partner actions
          name: PartnerAction.ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: PartnerAction.Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Include partner actions at a specific stage
          name: PartnerAction.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PartnerAction.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Candidate status
          name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search candidates by associated recruiters
          name: RecruiterUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Search in specific folders
          name: FolderId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: "Search for candidates created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for candidates updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nDefault sort order is by candidateID in ascending order\r\nFields available for sorting are: firstName, lastName, status.name, candidateId, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: recruiters, statistics"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, applications, placements, skills, notes"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of candidates matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Candidates
      x-apiOrder: 1
    post:
      tags:
        - Candidate API:Candidates
      summary: Add a candidate
      operationId: CandidateApiCandidates_addNewCandidate
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Duplicate override code from the header of an earlier 409 response
          name: X-Allow-Duplicates
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCandidateCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateRepresentation'
        '409':
          description: Candidate with this email already exists
          headers:
            X-Allow-Duplicates:
              description: Duplicate override code to allow a duplicate resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Candidates
      x-apiOrder: 1
  /candidates/{candidateId}:
    get:
      tags:
        - Candidate API:Candidates
      summary: Get a candidate
      operationId: CandidateApiCandidates_getById
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Embed related resources.<br />\r\nResources available to embed are: skills, notes, applications, placements"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested candidate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateRepresentation'
        '404':
          description: Requested candidate was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Candidates
      x-apiOrder: 1
    put:
      tags:
        - Candidate API:Candidates
      summary: Update a candidate
      operationId: CandidateApiCandidates_updateById
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Duplicate override code from the header of an earlier 409 response
          name: X-Allow-Duplicates
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCandidateCommand'
      responses:
        '200':
          description: Candidate was successfully updated
        '404':
          description: Candidate was not found
        '409':
          description: Candidate with this email already exists
          headers:
            X-Allow-Duplicates:
              description: Duplicate override code to allow a duplicate resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Candidates
      x-apiOrder: 1
  /candidates/{candidateId}/photo:
    head:
      tags:
        - Candidate API:Photo
      summary: Get photo headers
      operationId: CandidateApiPhoto_getHeaders
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the width specified by w
          name: w
          in: query
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the height specified by h
          name: h
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: Photo version, can be used for cache validation
              schema:
                type: string
        '404':
          description: Requested candidate photo was not found
      x-apiName: Candidate API
      x-apiGroup: Photo
      x-apiOrder: 2
    get:
      tags:
        - Candidate API:Photo
      summary: Get a photo
      operationId: CandidateApiPhoto_getImage
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the width specified by w
          name: w
          in: query
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the height specified by h
          name: h
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested candidate photo
          headers:
            ETag:
              description: Photo version, can be used for cache validation
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CandidateApiPhotoGetImageResponse'
        '404':
          description: Requested candidate photo was not found
      x-apiName: Candidate API
      x-apiGroup: Photo
      x-apiOrder: 2
    put:
      tags:
        - Candidate API:Photo
      summary: Update a photo
      operationId: CandidateApiPhoto_updatePhoto
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CandidateApiPhotoUpdatePhotoRequest'
      responses:
        '204':
          description: NoContent
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Photo
      x-apiOrder: 2
    delete:
      tags:
        - Candidate API:Photo
      summary: Remove a photo
      operationId: CandidateApiPhoto_removePhoto
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: NoContent
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Photo
      x-apiOrder: 2
  /candidates/{candidateId}/availability:
    get:
      tags:
        - Candidate API:Availability
      summary: Get availability
      operationId: CandidateApiAvailability_getAvailability
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Availability for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateAvailabilityListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Availability
      x-apiOrder: 3
  /candidates/{candidateId}/availability/weekly:
    put:
      tags:
        - Candidate API:Availability
      summary: Update weekly availability
      operationId: CandidateApiAvailability_updateWeeklyAvailability
      security:
        - jobadder_identity:
            - write
            - write_candidate
      description: Set the candidates availability schedule for a single week
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCandidateAvailabilityByWeekCommand'
      responses:
        default:
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Availability
      x-apiOrder: 3
    delete:
      tags:
        - Candidate API:Availability
      summary: Remove weekly availability
      operationId: CandidateApiAvailability_removeWeeklyAvailability
      security:
        - jobadder_identity:
            - write
            - write_candidate
      description: Remove the candidates availability schedule for a single week
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: >-
            Remove availability for the week (beginning Sunday) containing the
            specified date
          name: WeekOf
          in: query
          required: true
          schema:
            type: string
            properties:
              timeOfDay:
                format: time
            format: date-time
        - description: >-
            Remove availability in following weeks. Previous/past recurring
            schedules will be terminated prior to this schedule, all existing
            future overlapping schedules will be cancelled.
          name: Recurring
          in: query
          schema:
            type: boolean
        - description: Optional end date of repeating availability removal
          name: Until
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '204':
          description: NoContent
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Availability
      x-apiOrder: 3
  /candidates/{candidateId}/videos:
    get:
      tags:
        - Candidate API:Videos
      summary: Get all videos
      operationId: CandidateApiVideos_getAll
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of candidate videos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateVideoListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Videos
      x-apiOrder: 5
  /candidates/{candidateId}/videos/{videoType}:
    get:
      tags:
        - Candidate API:Videos
      summary: Get a recent video
      operationId: CandidateApiVideos_getRecentVideo
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: videoType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CandidateVideoType'
      responses:
        '200':
          description: Requested candidate video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateVideoRepresentation'
        '404':
          description: Requested candidate video was not found
      x-apiName: Candidate API
      x-apiGroup: Videos
      x-apiOrder: 5
    post:
      tags:
        - Candidate API:Videos
      summary: Add a video
      operationId: CandidateApiVideos_addNewVideo
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: videoType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CandidateVideoType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCandidateVideoCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateVideoModel'
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Videos
      x-apiOrder: 5
  /candidates/{candidateId}/skills:
    get:
      tags:
        - Candidate API:Skills
      summary: Get skills
      operationId: CandidateApiSkills_getCandidateSkills
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of skills for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Skills
      x-apiOrder: 10
    put:
      tags:
        - Candidate API:Skills
      summary: Update skills
      operationId: CandidateApiSkills_updateCandidateSkills
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCandidateSkillsCommand'
      responses:
        '200':
          description: List of skills for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Skills
      x-apiOrder: 10
    post:
      tags:
        - Candidate API:Skills
      summary: Remove skills
      operationId: CandidateApiSkills_removeSkill
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCandidateSkillsCommand'
      responses:
        '200':
          description: List of skills for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Skills
      x-apiOrder: 10
  /candidates/{candidateId}/skills/{categoryId}:
    delete:
      tags:
        - Candidate API:Skills
      summary: Remove a category
      operationId: CandidateApiSkills_removeCategory
      security:
        - jobadder_identity:
            - write
            - write_candidate
      description: Remove a single category and all associated sub-categories and skills
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of skills for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Skills
      x-apiOrder: 10
  /candidates/{candidateId}/attachments:
    get:
      tags:
        - Candidate API:Attachments
      summary: Find candidate attachments
      operationId: CandidateApiAttachments_findCandidateAttachments
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment types to include
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CandidateAttachmentType'
        - description: Search by attachment category
          name: Category
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Find the latest version of each attachment type
          name: Latest
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of candidate attachments matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateAttachmentListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /candidates/{candidateId}/attachments/{attach}:
    get:
      tags:
        - Candidate API:Attachments
      summary: Get an attachment
      operationId: CandidateApiAttachments_getAttachment
      security:
        - jobadder_identity:
            - read
            - read_candidate
      description: >-
        Get a candidate attachment.<br />Setting the Accept header will attempt
        a file conversion.
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested candidate attachment
          content:
            application/octet-stream:
              schema:
                $ref: >-
                  #/components/schemas/CandidateApiAttachmentsGetAttachmentResponse
        '404':
          description: Requested candidate attachment was not found
      x-apiName: Candidate API
      x-apiGroup: Attachments
      x-apiOrder: 20
    post:
      tags:
        - Candidate API:Attachments
      summary: Add a single attachment
      operationId: CandidateApiAttachments_addSingleAttachment
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Type of attachment being added
          name: attach
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubmitCandidateAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/CandidateApiAttachmentsAddSingleAttachmentRequest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateAttachmentRepresentation'
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Attachments
      x-apiOrder: 20
    put:
      tags:
        - Candidate API:Attachments
      summary: Update attachment details
      operationId: CandidateApiAttachments_updateDetails
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCandidateAttachmentCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateAttachmentRepresentation'
        '404':
          description: Attachment was not found
      x-apiName: Candidate API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /candidates/attachments:
    get:
      tags:
        - Candidate API:Attachments
      summary: Find attachments
      operationId: CandidateApiAttachments_findAttachments
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Attachment types to include
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CandidateAttachmentType'
        - description: Search by attachment category
          name: Category
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for candidate attachment created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for candidate attachment updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for candidate attachment expiring in the specified date range\r\n([ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date.\r\nSpecify multiple parameters to search for a range."
          name: ExpiryDate
          in: query
          schema:
            type: array
            items:
              type: string
              properties:
                date:
                  format: date
        - description: "Embed related resources.<br />\r\nResources available to embed are: candidate"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of candidate attachments matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateAttachmentListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /candidates/{candidateId}/floats:
    get:
      tags:
        - Candidate API:Floats
      summary: Get all floats
      operationId: CandidateApiFloats_getAllFloats
      security:
        - jobadder_identity:
            - read
            - read_float
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of floats for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Floats
      x-apiOrder: 50
  /candidates/{candidateId}/applications:
    get:
      tags:
        - Candidate API:Job Applications
      summary: Get job applications
      operationId: CandidateApiJobApplications_getAll
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      description: This will include both active and complete/closed job applications
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: offset
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            The maximum number of entries to return.<br />Setting to 0 will
            return only the total count of matching resources.
          name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of job applications for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Job Applications
      x-apiOrder: 51
    post:
      tags:
        - Candidate API:Job Applications
      summary: Add jobs to a candidate
      operationId: CandidateApiJobApplications_addCandidateJob
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCandidateJobOrderCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
        '409':
          description: Job application already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Job Applications
      x-apiOrder: 51
  /candidates/{candidateId}/applications/active:
    get:
      tags:
        - Candidate API:Job Applications
      summary: Get active job applications
      operationId: CandidateApiJobApplications_listActive
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: offset
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            The maximum number of entries to return.<br />Setting to 0 will
            return only the total count of matching resources.
          name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of active job applications for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Job Applications
      x-apiOrder: 51
  /candidates/{candidateId}/interviews:
    get:
      tags:
        - Candidate API:Interviews
      summary: Get all Interviews
      operationId: CandidateApiInterviews_getAll
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of Interviews for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Interviews
      x-apiOrder: 53
  /candidates/{candidateId}/submissions:
    get:
      tags:
        - Candidate API:Submissions
      summary: Get all submissions
      operationId: CandidateApiSubmissions_getAll
      security:
        - jobadder_identity:
            - read
            - read_submission
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of submissions for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Submissions
      x-apiOrder: 54
  /candidates/{candidateId}/placements:
    get:
      tags:
        - Candidate API:Placements
      summary: Get all placements
      operationId: CandidateApiPlacements_getAll
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of placements for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Placements
      x-apiOrder: 55
  /candidates/{candidateId}/placements/approved:
    get:
      tags:
        - Candidate API:Placements
      summary: Get all approved placements
      operationId: CandidateApiPlacements_getAllApproved
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of approved placements for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Placements
      x-apiOrder: 55
  /candidates/{candidateId}/status:
    put:
      tags:
        - Candidate API:Candidates
      summary: Set a candidate status
      operationId: CandidateApiCandidates_updateStatusAndNote
      security:
        - jobadder_identity:
            - write
            - write_candidate
      description: Change the candidate status and add an optional note
      parameters:
        - name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCandidateStatusCommand'
      responses:
        '200':
          description: Candidate status was successfully updated
        '202':
          description: Candidate status already assigned
        '404':
          description: Candidate was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Candidates
      x-apiOrder: 60
  /candidates/{candidateId}/notes:
    get:
      tags:
        - Candidate API:Notes
      summary: Get candidate notes
      operationId: CandidateApiNotes_getAll
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_candidate_note
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes for the specified candidate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Notes
      x-apiOrder: 90
    post:
      tags:
        - Candidate API:Notes
      summary: Add a note
      operationId: CandidateApiNotes_addNote
      security:
        - jobadder_identity:
            - write
            - write_note
            - write_candidate_note
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCandidateNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Notes
      x-apiOrder: 90
  /candidates/{candidateId}/privacy:
    delete:
      tags:
        - Candidate API:Privacy
      summary: Remove a candidate at their request
      operationId: CandidateApiPrivacy_removeAtRequest
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: NoContent
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Privacy
      x-apiOrder: 99
  /candidates/{candidateId}/activities:
    post:
      tags:
        - Candidate API:Activities
      summary: Add a candidate activity
      operationId: CandidateApiActivities_addCandidateActivity
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCandidateActivityCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateActivityModel'
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: Activities
      x-apiOrder: 100
    get:
      tags:
        - Candidate API:Activities
      summary: Get candidate activities
      operationId: CandidateApiActivities_getAll
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of candidate activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateActivitySummaryListModel'
      x-apiName: Candidate API
      x-apiGroup: Activities
      x-apiOrder: 100
  /candidates/{candidateId}/activities/{activityId}:
    get:
      tags:
        - Candidate API:Activities
      summary: Get a candidate activity
      operationId: CandidateApiActivities_getActivity
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Activity Id
          name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested candidate activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateActivityRepresentation'
        '404':
          description: Requested candidate activity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Activities
      x-apiOrder: 100
  /candidates/{candidateId}/payrollbilling:
    get:
      tags:
        - Candidate API:Payroll Billing
      summary: Get a candidate payroll billing
      operationId: CandidateApiPayrollBilling_get
      security:
        - jobadder_identity:
            - read
            - read_candidate
      description: Applicable to FT360 enabled accounts only
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested candidate payroll billing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidatePayrollBillingModel'
        '404':
          description: Requested candidate payroll billing was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Payroll Billing
      x-apiOrder: 100
  /candidates/{candidateId}/usertasks:
    post:
      tags:
        - Candidate API:UserTasks
      summary: Add a candidate user task
      operationId: CandidateApiUserTasks_addTask
      security:
        - jobadder_identity:
            - write
            - write_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCandidateUserTaskCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateUserTaskModel'
        '404':
          description: Candidate was not found
      x-apiName: Candidate API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /candidates/{candidateId}/usertasks/{taskId}:
    get:
      tags:
        - Candidate API:UserTasks
      summary: Get a candidate user task
      operationId: CandidateApiUserTasks_getCandidateUserTask
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested candidate user task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateUserTaskRepresentation'
        '404':
          description: Requested candidate user task was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: UserTasks
      x-apiOrder: 100
    put:
      tags:
        - Candidate API:UserTasks
      summary: Update a candidate user task
      operationId: CandidateApiUserTasks_updateUserTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCandidateUserTaskCommand'
      responses:
        '200':
          description: Candidate user task was successfully updated
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateUserTaskModel'
        '404':
          description: Candidate user task was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /candidates/activities:
    get:
      tags:
        - Candidate API:Activities
      summary: Find candidate activities
      operationId: CandidateApiActivities_findCandidateActivities
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: "Search for activities performed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for activities updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of candidate activities matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateActivityListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Activities
      x-apiOrder: 100
  /candidates/activitysettings:
    get:
      tags:
        - Candidate API:Activities
      summary: Get all candidate activity settings definitions
      operationId: CandidateApiActivities_getAllActivitySettings
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: query
          in: query
          schema:
            $ref: '#/components/schemas/FindCandidateActivitySettingsQuery'
      responses:
        '200':
          description: List of candidate activity settings definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateActivitySettingsListModel'
      x-apiName: Candidate API
      x-apiGroup: Activities
      x-apiOrder: 100
  /candidates/activitysettings/{settingId}:
    get:
      tags:
        - Candidate API:Activities
      summary: Get candidate activity settings with details
      operationId: CandidateApiActivities_getCandidateActivitySettings
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Activity Setting Id
          name: settingId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Candidate activity settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateActivitySettingModel'
        '404':
          description: Requested candidate activity settings were not found
      x-apiName: Candidate API
      x-apiGroup: Activities
      x-apiOrder: 100
  /candidates/deleted:
    get:
      tags:
        - Candidate API:Candidates
      summary: Recently deleted candidates
      operationId: CandidateApiCandidates_getRecentDeletions
      security:
        - jobadder_identity:
            - read
            - read_candidate
      description: "Provides a list of candidates recently (last 14 days) deleted from JobAdder, allowing the management\r\nof referenced data for local privacy law compliance (e.g. GDPR)."
      responses:
        '200':
          description: List of recently deleted candidates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedCandidateListModel'
      x-apiName: Candidate API
      x-apiGroup: Candidates
      x-apiOrder: 100
  /candidates/fields/custom:
    get:
      tags:
        - Candidate API:Lists
      summary: Get all candidate custom field definitions
      operationId: CandidateApiLists_getCustomFields
      security:
        - jobadder_identity:
            - read
            - read_candidate
      responses:
        '200':
          description: List of candidate custom field definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
  /candidates/fields/custom/{fieldId}:
    get:
      tags:
        - Candidate API:Lists
      summary: Get a custom field definition
      operationId: CandidateApiLists_getCustomFieldDefinition
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested candidate custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested candidate custom field definition was not found
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
    put:
      tags:
        - Candidate API:Lists
      summary: Modify custom field list values
      operationId: CandidateApiLists_modifyCustomFieldValues
      security:
        - jobadder_identity:
            - manage_candidate_custom
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCandidateCustomFieldListValuesCommand'
      responses:
        '200':
          description: Updated candidate custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested candidate custom field definition was not found
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
  /candidates/lists/attachmentcategory:
    get:
      tags:
        - Candidate API:Attachments
      summary: Get all attachment categories
      operationId: CandidateApiAttachments_getAllAttachmentCategories
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - description: Optionally filter to specific attachment types
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CandidateAttachmentType'
      responses:
        '200':
          description: List of candidate attachment categories
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CandidateAttachmentCategoryListRepresentation
      x-apiName: Candidate API
      x-apiGroup: Attachments
      x-apiOrder: 100
  /candidates/lists/notetype:
    get:
      tags:
        - Candidate API:Notes
      summary: Get all note types
      operationId: CandidateApiNotes_getAllNoteTypes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_candidate_note
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of candidate note type definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteTypeListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Notes
      x-apiOrder: 100
  /candidates/lists/rating:
    get:
      tags:
        - Candidate API:Lists
      summary: Get internal ratings
      operationId: CandidateApiLists_getInternalRatings
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of candidate internal ratings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
  /candidates/lists/salutation:
    get:
      tags:
        - Candidate API:Lists
      summary: Get salutations (honorifics/titles)
      operationId: CandidateApiLists_getSalutations
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of candidate salutations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
  /candidates/lists/source:
    get:
      tags:
        - Candidate API:Lists
      summary: Get all candidate sources
      operationId: CandidateApiLists_getAllSources
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of candidate sources
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
  /candidates/lists/status:
    get:
      tags:
        - Candidate API:Lists
      summary: Get all status definitions
      operationId: CandidateApiLists_getStatusDefinitions
      security:
        - jobadder_identity:
            - read
            - read_candidate
      parameters:
        - name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Name
          in: query
          schema:
            type: string
        - name: Active
          in: query
          schema:
            type: boolean
        - name: Default
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of candidate status definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusListRepresentation'
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
  /candidates/lists/status/{statusId}:
    get:
      tags:
        - Candidate API:Lists
      summary: Get a status definition
      operationId: CandidateApiLists_getStatusDefinition
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested candidate status definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusRepresentation'
        '404':
          description: Requested candidate status definition was not found
      x-apiName: Candidate API
      x-apiGroup: Lists
      x-apiOrder: 100
  /candidates/payrollbilling:
    get:
      tags:
        - Candidate API:Payroll Billing
      summary: Find payroll billings
      operationId: CandidateApiPayrollBilling_findPayrollBillings
      security:
        - jobadder_identity:
            - read
            - read_candidate
      description: Applicable to FT360 enabled accounts only
      parameters:
        - description: Candidate Ids
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: List of candidates payroll billing matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidatePayrollBillingListModel'
        '400':
          description: >-
            Requested list of candidates payroll billing exceeds the limit of
            500 records
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Candidate API
      x-apiGroup: Payroll Billing
      x-apiOrder: 100
  /floats:
    get:
      tags:
        - Candidate Float API:Floats
      summary: Find floats
      operationId: CandidateFloatApiFloats_getFloatsList
      security:
        - jobadder_identity:
            - read
            - read_float
      parameters:
        - description: Float Id
          name: FloatId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: Candidate Id
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Company Id
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for floats created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for floats updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of candidate floats matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatListRepresentation'
      x-apiName: Candidate Float API
      x-apiGroup: Floats
      x-apiOrder: 100
  /floats/{floatId}:
    get:
      tags:
        - Candidate Float API:Floats
      summary: Get a float
      operationId: CandidateFloatApiFloats_getFloatById
      security:
        - jobadder_identity:
            - read
            - read_float
      parameters:
        - name: floatId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested candidate float details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatRepresentation'
        '404':
          description: Requested candidate float was not found
      x-apiName: Candidate Float API
      x-apiGroup: Floats
      x-apiOrder: 100
  /submissions:
    get:
      tags:
        - Candidate Submission API:Submissions
      summary: Find submissions
      operationId: CandidateSubmissionApiSubmissions_getAll
      security:
        - jobadder_identity:
            - read
            - read_submission
      parameters:
        - name: SubmissionId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: JobId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for submissions created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for submissions updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of candidate submissions matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionListRepresentation'
      x-apiName: Candidate Submission API
      x-apiGroup: Submissions
      x-apiOrder: 100
  /submissions/{submissionId}:
    get:
      tags:
        - Candidate Submission API:Submissions
      summary: Get a submission
      operationId: CandidateSubmissionApiSubmissions_get
      security:
        - jobadder_identity:
            - read
            - read_submission
      parameters:
        - description: Submission Id
          name: submissionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested candidate submission details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionRepresentation'
        '404':
          description: Requested candidate submission was not found
      x-apiName: Candidate Submission API
      x-apiGroup: Submissions
      x-apiOrder: 100
  /applications:
    get:
      tags:
        - Job Application API:Job Applications
      summary: Find job applications
      operationId: JobApplicationApiJobApplications_listJobApplications
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Application Id
          name: ApplicationId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: Candidate Id
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job Id
          name: JobId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job Ad Id
          name: AdId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job application status
          name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: JobTitle
          in: query
          schema:
            type: string
        - description: Search for active job applications
          name: Active
          in: query
          schema:
            type: boolean
        - description: Search for rejected job applications
          name: Rejected
          in: query
          schema:
            type: boolean
        - description: Search for job applications at the specified review stage.
          name: Review.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/JobApplicationReviewStage'
        - description: >-
            Search for job applications submitted for review by the specified
            users.
          name: Review.UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: >-
            Search for job applications submitted for review to the specified
            hiring manager contacts
          name: Review.ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for job applications submitted for review at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: Review.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for job applications reviewed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: Review.ReviewedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Search for key words within the applicant's resume
          name: Keywords
          in: query
          schema:
            type: string
        - description: Unique identifier for partner actions
          name: PartnerAction.ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: PartnerAction.Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Include partner actions at a specific stage
          name: PartnerAction.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PartnerAction.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Search in specific folders
          name: FolderId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: "Search for job applications created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: >-
            User Id - search for job applications last updated by the specified
            user(s)
          name: UpdatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for job applications updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: createdAt, status.name, review.stage, review.submittedAt, review.reviewedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: partnerActions"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job applications matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Job Applications
      x-apiOrder: 1
  /applications/{applicationId}:
    get:
      tags:
        - Job Application API:Job Applications
      summary: Get a job application
      operationId: JobApplicationApiJobApplications_getApplication
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested job application details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationRepresentation'
        '404':
          description: Requested job application was not found
      x-apiName: Job Application API
      x-apiGroup: Job Applications
      x-apiOrder: 1
    put:
      tags:
        - Job Application API:Job Applications
      summary: Update a job application
      operationId: JobApplicationApiJobApplications_updateStatusAndCustomFields
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      description: Update job application status and custom fields
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationCommand'
      responses:
        '200':
          description: Job application was successfully updated
        '204':
          description: Job application was successfully updated
        '404':
          description: Job application was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job Application API
      x-apiGroup: Job Applications
      x-apiOrder: 1
  /applications/{applicationId}/videos:
    get:
      tags:
        - Job Application API:Videos
      summary: Get all videos
      operationId: JobApplicationApiVideos_getAll
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of job application videos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateVideoListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Videos
      x-apiOrder: 5
  /applications/{applicationId}/videos/{videoType}:
    get:
      tags:
        - Job Application API:Videos
      summary: Get a recent video
      operationId: JobApplicationApiVideos_getRecentVideo
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: videoType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CandidateVideoType'
      responses:
        '200':
          description: Requested job application video
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateVideoRepresentation'
        '404':
          description: Requested job application video was not found
      x-apiName: Job Application API
      x-apiGroup: Videos
      x-apiOrder: 5
    post:
      tags:
        - Job Application API:Videos
      summary: Add a video
      operationId: JobApplicationApiVideos_addVideo
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: ''
          name: videoType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CandidateVideoType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobApplicationVideoCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateVideoModel'
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Videos
      x-apiOrder: 5
  /applications/{applicationId}/attachments:
    get:
      tags:
        - Job Application API:Attachments
      summary: Find attachments
      operationId: JobApplicationApiAttachments_getAll
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Attachment types to include
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CandidateAttachmentType'
        - description: Search by attachment label
          name: Category
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job application attachments matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateAttachmentListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /applications/{applicationId}/attachments/{attach}:
    get:
      tags:
        - Job Application API:Attachments
      summary: Get an attachment
      operationId: JobApplicationApiAttachments_getAttachment
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      description: >-
        Get a job application attachment.<br />Setting the Accept header will
        attempt a file conversion.
      parameters:
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested job application attachment
          content:
            application/octet-stream:
              schema:
                $ref: >-
                  #/components/schemas/JobApplicationApiAttachmentsGetAttachmentResponse
        '404':
          description: Requested job application attachment was not found
      x-apiName: Job Application API
      x-apiGroup: Attachments
      x-apiOrder: 20
    post:
      tags:
        - Job Application API:Attachments
      summary: Add a single attachment
      operationId: JobApplicationApiAttachments_addAttachment
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: ''
          name: attach
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubmitCandidateAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/JobApplicationApiAttachmentsAddAttachmentRequest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateAttachmentRepresentation'
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Attachments
      x-apiOrder: 20
    put:
      tags:
        - Job Application API:Attachments
      summary: Update attachment details
      operationId: JobApplicationApiAttachments_updateAttachmentDetails
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationAttachmentCommand'
      responses:
        '204':
          description: NoContent
        '404':
          description: Attachment was not found
      x-apiName: Job Application API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /applications/{applicationId}/review:
    post:
      tags:
        - Job Application API:Review
      summary: Submit a job application for review
      operationId: JobApplicationApiReview_submitForReview
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewSubmitJobApplicationCommand'
      responses:
        '202':
          description: Accepted
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Review
      x-apiOrder: 30
    put:
      tags:
        - Job Application API:Review
      summary: Mark a job application as viewed by the hiring manager
      operationId: JobApplicationApiReview_markAsViewed
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewViewJobApplicationCommand'
      responses:
        '202':
          description: Accepted
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Review
      x-apiOrder: 30
  /applications/{applicationId}/review/accept:
    put:
      tags:
        - Job Application API:Review
      summary: Accept a job application
      operationId: JobApplicationApiReview_acceptApplication
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewAcceptJobApplicationCommand'
      responses:
        '202':
          description: Accepted
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Review
      x-apiOrder: 30
  /applications/{applicationId}/review/reject:
    put:
      tags:
        - Job Application API:Review
      summary: Reject a job application
      operationId: JobApplicationApiReview_rejectApplication
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRejectJobApplicationCommand'
      responses:
        '202':
          description: Accepted
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Review
      x-apiOrder: 30
  /applications/{applicationId}/interviews:
    get:
      tags:
        - Job Application API:Interviews
      summary: Get all Interviews
      operationId: JobApplicationApiInterviews_getAllInterviews
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of Interviews for the specified job application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Interviews
      x-apiOrder: 31
  /applications/{applicationId}/interviews/external:
    post:
      tags:
        - Job Application API:Interviews
      summary: Create an external interview
      operationId: JobApplicationApiInterviews_createExternalInterview
      security:
        - jobadder_identity:
            - write
            - write_interview
      parameters:
        - description: Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobApplicationExternalInterviewCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewModel'
        '400':
          description: BadRequest
        '404':
          description: Application was not found
      x-apiName: Job Application API
      x-apiGroup: Interviews
      x-apiOrder: 31
  /applications/{applicationId}/interviews/external/{interviewId}:
    put:
      tags:
        - Job Application API:Interviews
      summary: Update an external interview
      operationId: JobApplicationApiInterviews_updateExternalInterview
      security:
        - jobadder_identity:
            - write
            - write_interview
      parameters:
        - description: Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Interview Id
          name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationInterviewCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewModel'
        '400':
          description: BadRequest
        '404':
          description: Interview was not found
      x-apiName: Job Application API
      x-apiGroup: Interviews
      x-apiOrder: 31
  /applications/{applicationId}/interviews/internal:
    post:
      tags:
        - Job Application API:Interviews
      summary: Create an internal interview
      operationId: JobApplicationApiInterviews_createInternalInterview
      security:
        - jobadder_identity:
            - write
            - write_interview
      parameters:
        - description: Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobApplicationInternalInterviewCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewModel'
        '400':
          description: BadRequest
        '404':
          description: Application was not found
      x-apiName: Job Application API
      x-apiGroup: Interviews
      x-apiOrder: 31
  /applications/{applicationId}/interviews/internal/{interviewId}:
    put:
      tags:
        - Job Application API:Interviews
      summary: Update an internal interview
      operationId: JobApplicationApiInterviews_updateInternalInterview
      security:
        - jobadder_identity:
            - write
            - write_interview
      parameters:
        - description: Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Interview Id
          name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationInterviewCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewModel'
        '400':
          description: BadRequest
        '404':
          description: Interview was not found
      x-apiName: Job Application API
      x-apiGroup: Interviews
      x-apiOrder: 31
  /applications/{applicationId}/status:
    put:
      tags:
        - Job Application API:Job Applications
      summary: Set a job application status
      operationId: JobApplicationApiJobApplications_updateStatusWithNote
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      description: Change the job application status and add an optional note
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetJobApplicationStatusCommand'
      responses:
        '200':
          description: Job application status was successfully updated
        '202':
          description: Job application status already assigned
        '404':
          description: Job application was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job Application API
      x-apiGroup: Job Applications
      x-apiOrder: 60
  /applications/{applicationId}/notes:
    get:
      tags:
        - Job Application API:Notes
      summary: Get job application notes
      operationId: JobApplicationApiNotes_getNotes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_jobapplication_note
      parameters:
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes for the specified job application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Notes
      x-apiOrder: 90
    post:
      tags:
        - Job Application API:Notes
      summary: Add a note
      operationId: JobApplicationApiNotes_addNote
      security:
        - jobadder_identity:
            - write
            - write_note
            - write_jobapplication_note
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobApplicationNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Notes
      x-apiOrder: 90
  /applications/{applicationId}/activities:
    post:
      tags:
        - Job Application API:Activities
      summary: Add a job application activity
      operationId: JobApplicationApiActivities_addActivity
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - description: Job application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobApplicationActivityCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationActivityModel'
        '404':
          description: Job application was not found
      x-apiName: Job Application API
      x-apiGroup: Activities
      x-apiOrder: 100
    get:
      tags:
        - Job Application API:Activities
      summary: Get job application activities
      operationId: JobApplicationApiActivities_getJobApplicationActivities
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Job application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of job application activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationActivitySummaryListModel'
      x-apiName: Job Application API
      x-apiGroup: Activities
      x-apiOrder: 100
  /applications/{applicationId}/activities/{activityId}:
    get:
      tags:
        - Job Application API:Activities
      summary: Get a job application activity
      operationId: JobApplicationApiActivities_getJobActivity
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Job application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Activity Id
          name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested job application activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationActivityRepresentation'
        '404':
          description: Requested job application activity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job Application API
      x-apiGroup: Activities
      x-apiOrder: 100
  /applications/{applicationId}/usertasks:
    post:
      tags:
        - Job Application API:UserTasks
      summary: Add an application user task
      operationId: JobApplicationApiUserTasks_addTask
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
      parameters:
        - description: Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddJobApplicationUserTaskCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationUserTaskModel'
        '404':
          description: Application was not found
      x-apiName: Job Application API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /applications/{applicationId}/usertasks/{taskId}:
    get:
      tags:
        - Job Application API:UserTasks
      summary: Get an application user task
      operationId: JobApplicationApiUserTasks_getTaskDetails
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested application user task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationUserTaskRepresentation'
        '404':
          description: Requested  application user task was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job Application API
      x-apiGroup: UserTasks
      x-apiOrder: 100
    put:
      tags:
        - Job Application API:UserTasks
      summary: Update an application user task
      operationId: JobApplicationApiUserTasks_updateTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationUserTaskCommand'
      responses:
        '200':
          description: Application user task was successfully updated
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationUserTaskModel'
        '404':
          description: Application user task was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Job Application API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /applications/activities:
    get:
      tags:
        - Job Application API:Activities
      summary: Find job application activities
      operationId: JobApplicationApiActivities_findJobApplicationActivities
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: "Search for activities performed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for activities updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job application activities matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationActivityListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Activities
      x-apiOrder: 100
  /applications/activitysettings:
    get:
      tags:
        - Job Application API:Activities
      summary: Get all job application activity settings definitions
      operationId: JobApplicationApiActivities_getAllActivitySettingsDefinitions
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - name: query
          in: query
          schema:
            $ref: '#/components/schemas/FindJobApplicationActivitySettingsQuery'
      responses:
        '200':
          description: List of job application activity settings definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationActivitySettingsListModel'
      x-apiName: Job Application API
      x-apiGroup: Activities
      x-apiOrder: 100
  /applications/activitysettings/{settingId}:
    get:
      tags:
        - Job Application API:Activities
      summary: Get job application activity settings with details
      operationId: JobApplicationApiActivities_getActivitySettings
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - description: Activity Setting Id
          name: settingId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Job application activity settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationActivitySettingModel'
        '404':
          description: Requested job application activity settings were not found
      x-apiName: Job Application API
      x-apiGroup: Activities
      x-apiOrder: 100
  /applications/deleted:
    get:
      tags:
        - Job Application API:Job Applications
      summary: Recently deleted job applications
      operationId: JobApplicationApiJobApplications_getRecentDeletions
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      description: "Provides a list of job applications recently (last 14 days) deleted from JobAdder, allowing the management\r\nof referenced data for local privacy law compliance (e.g. GDPR)."
      responses:
        '200':
          description: List of recently deleted job applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedJobApplicationListModel'
      x-apiName: Job Application API
      x-apiGroup: Job Applications
      x-apiOrder: 100
  /applications/fields/custom:
    get:
      tags:
        - Job Application API:Lists
      summary: Get all custom fields
      operationId: JobApplicationApiLists_getCustomFields
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      responses:
        '200':
          description: List of job application custom field definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Lists
      x-apiOrder: 100
  /applications/fields/custom/{fieldId}:
    get:
      tags:
        - Job Application API:Lists
      summary: Get a custom field
      operationId: JobApplicationApiLists_getCustomField
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job application custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested job application custom field definition was not found
      x-apiName: Job Application API
      x-apiGroup: Lists
      x-apiOrder: 100
  /applications/fields/custom/custom/{fieldId}:
    put:
      tags:
        - Job Application API:Lists
      summary: Modify custom field list values
      operationId: JobApplicationApiLists_modifyCustomFieldValues
      security:
        - jobadder_identity:
            - manage_jobapplication_custom
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SetJobApplicationCustomFieldListValuesCommand
      responses:
        '200':
          description: Updated job application custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested job application custom field definition was not found
      x-apiName: Job Application API
      x-apiGroup: Lists
      x-apiOrder: 100
  /applications/lists/status:
    get:
      tags:
        - Job Application API:Lists
      summary: Get all status definitions
      operationId: JobApplicationApiLists_getAllStatusDefinitions
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - name: Rejected
          in: query
          schema:
            type: boolean
        - name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Name
          in: query
          schema:
            type: string
        - name: Active
          in: query
          schema:
            type: boolean
        - name: Default
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of job application status definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationStatusListRepresentation'
      x-apiName: Job Application API
      x-apiGroup: Lists
      x-apiOrder: 100
  /applications/lists/status/{statusId}:
    get:
      tags:
        - Job Application API:Lists
      summary: Get a status definition
      operationId: JobApplicationApiLists_statusDefinitionGet
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested job application status definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationStatusRepresentation'
        '404':
          description: Requested job application status definition was not found
      x-apiName: Job Application API
      x-apiGroup: Lists
      x-apiOrder: 100
  /applications/lists/workflow:
    get:
      tags:
        - Job Application API:Lists
      summary: Get the job application workflow
      operationId: JobApplicationApiLists_getWorkflow
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
      parameters:
        - name: query
          in: query
          schema:
            $ref: '#/components/schemas/GetJobApplicationStatusByWorkflowListQuery'
      responses:
        '200':
          description: Job application workflow
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/JobApplicationStatusByWorkflowListRepresentation
      x-apiName: Job Application API
      x-apiGroup: Lists
      x-apiOrder: 100
  /placements:
    get:
      tags:
        - Placement API:Placements
      summary: Find placements
      operationId: PlacementApiPlacements_getAll
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Placement Id
          name: PlacementId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Placement Type
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PlacementType'
        - description: Unique identifier for partner actions
          name: PartnerAction.ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: PartnerAction.Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Include partner actions at a specific stage
          name: PartnerAction.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PartnerAction.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Placement status
          name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Candidate Id
          name: Candidate.CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Candidate name
          name: Candidate.Name
          in: query
          schema:
            type: string
        - description: Alias for candidate.candidateId
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Companies by Id
          name: Company.CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Company name
          name: Company.Name
          in: query
          schema:
            type: string
        - description: Alias for company.companyId
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job Id
          name: JobId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job Application Id
          name: ApplicationId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: "Search for placements starting in the specified date range\r\n([ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date.\r\nSpecify multiple parameters to search for a range."
          name: StartDate
          in: query
          schema:
            type: array
            items:
              type: string
              properties:
                date:
                  format: date
        - description: "Search for placements ending in the specified date range\r\n([ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date.\r\nSpecify multiple parameters to search for a range."
          name: EndDate
          in: query
          schema:
            type: array
            items:
              type: string
              properties:
                date:
                  format: date
        - description: Search in specific folders
          name: FolderId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: User Id - search for placements by owner or associated recruiter
          name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for placements by owner
          name: OwnerUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search placements by associated recruiters
          name: RecruiterUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for placements created by the specified user(s)
          name: CreatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for placements created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: >-
            User Id - search for placements last updated by the specified
            user(s)
          name: UpdatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for placements updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Search for approved placements
          name: Approved
          in: query
          schema:
            type: boolean
        - description: User Id - search for placements approved by the specified user(s)
          name: ApprovedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for placements approved at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: ApprovedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: >-
            Search for placements that have been flagged by the user for export
            to integration partners.
          name: Export
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FindPlacementByExport'
        - description: "Find placements with timesheets in the specified date range\r\n([ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date.\r\nSpecify multiple parameters to search for a range."
          name: Timesheet.Period
          in: query
          schema:
            type: array
            items:
              type: string
              properties:
                date:
                  format: date
        - description: "Additional fields to include with the results.\r\nFields available to include are: partnerActions"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, notes"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of placements matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 1
  /placements/{placementId}:
    get:
      tags:
        - Placement API:Placements
      summary: Get a placement
      operationId: PlacementApiPlacements_getById
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Embed related resources.<br />\r\nResources available to embed are: notes"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested placement details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementRepresentation'
        '404':
          description: Requested placement was not found
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 1
    put:
      tags:
        - Placement API:Placements
      summary: Update a placement
      operationId: PlacementApiPlacements_updatePlacement
      security:
        - jobadder_identity:
            - write
            - write_placement
      parameters:
        - name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlacementCommand'
      responses:
        '200':
          description: Placement was successfully updated
        '404':
          description: Placement was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 1
  /placements/{placementId}/attachments:
    get:
      tags:
        - Placement API:Attachments
      summary: Find attachments
      operationId: PlacementApiAttachments_find
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment types to include
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PlacementAttachmentType'
        - description: Find the latest version of each attachment type
          name: Latest
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of placement attachments matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementAttachmentListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /placements/{placementId}/attachments/{attach}:
    get:
      tags:
        - Placement API:Attachments
      summary: Get an attachment
      operationId: PlacementApiAttachments_get
      security:
        - jobadder_identity:
            - read
            - read_placement
      description: >-
        Get a placement attachment.<br />Setting the Accept header will attempt
        a file conversion.
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested placement attachment
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/PlacementApiAttachmentsGetResponse'
        '404':
          description: Requested placement attachment was not found
      x-apiName: Placement API
      x-apiGroup: Attachments
      x-apiOrder: 20
    post:
      tags:
        - Placement API:Attachments
      summary: Add a single attachment
      operationId: PlacementApiAttachments_addSingleAttachment
      security:
        - jobadder_identity:
            - write
            - write_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: attach
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PlacementAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/PlacementApiAttachmentsAddSingleAttachmentRequest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementAttachmentRepresentation'
        '404':
          description: Placement was not found
      x-apiName: Placement API
      x-apiGroup: Attachments
      x-apiOrder: 20
    put:
      tags:
        - Placement API:Attachments
      summary: Update attachment details
      operationId: PlacementApiAttachments_updateDetails
      security:
        - jobadder_identity:
            - write
            - write_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlacementAttachmentCommand'
      responses:
        '204':
          description: NoContent
        '404':
          description: Attachment was not found
      x-apiName: Placement API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /placements/{placementId}/status:
    put:
      tags:
        - Placement API:Placements
      summary: Set a placement status
      operationId: PlacementApiPlacements_setStatusNote
      security:
        - jobadder_identity:
            - write
            - write_placement
      description: Change the placement status and add an optional note
      parameters:
        - name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPlacementStatusCommand'
      responses:
        '200':
          description: Placement status was successfully updated
        '202':
          description: Placement status already assigned
        '404':
          description: Placement was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 60
  /placements/{placementId}/timesheets:
    get:
      tags:
        - Placement API:Timesheets
      summary: Get timesheets
      operationId: PlacementApiTimesheets_getTimesheets
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Get timesheets for a specific date range\r\n([ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with < or > to search dates before or after (inclusive) the specified date.\r\nSpecify multiple parameters to search for a range."
          name: period
          in: query
          schema:
            type: array
            items:
              type: string
              properties:
                date:
                  format: date
      responses:
        '200':
          description: List of timesheets for the specified placement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementTimesheetListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Timesheets
      x-apiOrder: 80
  /placements/{placementId}/notes:
    get:
      tags:
        - Placement API:Notes
      summary: Get placement notes
      operationId: PlacementApiNotes_getAll
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_placement_note
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes for the specified placement
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Notes
      x-apiOrder: 90
    post:
      tags:
        - Placement API:Notes
      summary: Add a note
      operationId: PlacementApiNotes_addNote
      security:
        - jobadder_identity:
            - write
            - write_note
            - write_placement_note
      parameters:
        - name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlacementNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
        '404':
          description: Placement was not found
      x-apiName: Placement API
      x-apiGroup: Notes
      x-apiOrder: 90
  /placements/{placementId}/activities:
    post:
      tags:
        - Placement API:Activities
      summary: Add a placement activity
      operationId: PlacementApiActivities_addNewActivity
      security:
        - jobadder_identity:
            - write
            - write_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlacementActivityCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementActivityModel'
        '404':
          description: Placement was not found
      x-apiName: Placement API
      x-apiGroup: Activities
      x-apiOrder: 100
    get:
      tags:
        - Placement API:Activities
      summary: Get placement activities
      operationId: PlacementApiActivities_getAll
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of placement activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementActivitySummaryListModel'
      x-apiName: Placement API
      x-apiGroup: Activities
      x-apiOrder: 100
  /placements/{placementId}/activities/{activityId}:
    get:
      tags:
        - Placement API:Activities
      summary: Get a placement activity
      operationId: PlacementApiActivities_getActivity
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Activity Id
          name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested placement activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementActivityRepresentation'
        '404':
          description: Requested placement activity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Placement API
      x-apiGroup: Activities
      x-apiOrder: 100
  /placements/{placementId}/usertasks:
    post:
      tags:
        - Placement API:UserTasks
      summary: Add a placement user task
      operationId: PlacementApiUserTasks_addTask
      security:
        - jobadder_identity:
            - write
            - write_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlacementUserTaskCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementUserTaskModel'
        '404':
          description: Placement was not found
      x-apiName: Placement API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /placements/{placementId}/usertasks/{taskId}:
    get:
      tags:
        - Placement API:UserTasks
      summary: Get a placement user task
      operationId: PlacementApiUserTasks_getTask
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested placement user task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementUserTaskRepresentation'
        '404':
          description: Requested placement user task was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Placement API
      x-apiGroup: UserTasks
      x-apiOrder: 100
    put:
      tags:
        - Placement API:UserTasks
      summary: Update a placement user task
      operationId: PlacementApiUserTasks_updateTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlacementUserTaskCommand'
      responses:
        '200':
          description: Placement user task was successfully updated
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementUserTaskModel'
        '404':
          description: Placement user task was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Placement API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /placements/activities:
    get:
      tags:
        - Placement API:Activities
      summary: Find placement activities
      operationId: PlacementApiActivities_find
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: "Search for activities performed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for activities updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of placement activities matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementActivityListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Activities
      x-apiOrder: 100
  /placements/activitysettings:
    get:
      tags:
        - Placement API:Activities
      summary: Get all placement activity settings definitions
      operationId: PlacementApiActivities_getAllActivitySettings
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: query
          in: query
          schema:
            $ref: '#/components/schemas/FindPlacementActivitySettingsQuery'
      responses:
        '200':
          description: List of Placement activity settings definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementActivitySettingsListModel'
      x-apiName: Placement API
      x-apiGroup: Activities
      x-apiOrder: 100
  /placements/activitysettings/{settingId}:
    get:
      tags:
        - Placement API:Activities
      summary: Get placement activity settings with details
      operationId: PlacementApiActivities_getDetails
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Activity Setting Id
          name: settingId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Placement activity settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementActivitySettingModel'
        '404':
          description: Requested placement activity settings were not found
      x-apiName: Placement API
      x-apiGroup: Activities
      x-apiOrder: 100
  /placements/deleted:
    get:
      tags:
        - Placement API:Placements
      summary: Recently deleted placements
      operationId: PlacementApiPlacements_getRecentlyDeleted
      security:
        - jobadder_identity:
            - read
            - read_placement
      description: >-
        Provides a list of placements recently (last 14 days) deleted from
        JobAdder.
      responses:
        '200':
          description: List of recently deleted placements
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedPlacementListModel'
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 100
  /placements/fields/custom:
    get:
      tags:
        - Placement API:Placements
      summary: Get all custom fields
      operationId: PlacementApiPlacements_getCustomFields
      security:
        - jobadder_identity:
            - read
            - read_placement
      responses:
        '200':
          description: List of placement custom field definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 100
  /placements/fields/custom/{fieldId}:
    get:
      tags:
        - Placement API:Placements
      summary: Get a custom field
      operationId: PlacementApiPlacements_getCustomField
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested placement custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested placement custom field definition was not found
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 100
  /placements/fields/custom/custom/{fieldId}:
    put:
      tags:
        - Placement API:Placements
      summary: Modify custom field list values
      operationId: PlacementApiPlacements_modifyCustomFieldListValues
      security:
        - jobadder_identity:
            - manage_placement_custom
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPlacementCustomFieldListValuesCommand'
      responses:
        '200':
          description: Updated placement custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested placement custom field definition was not found
      x-apiName: Placement API
      x-apiGroup: Placements
      x-apiOrder: 100
  /placements/lists/attachmentcategory:
    get:
      tags:
        - Placement API:Attachments
      summary: Get all attachment categories
      operationId: PlacementApiAttachments_getAllAttachmentCategories
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Optionally filter to specific attachment types
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PlacementAttachmentType'
      responses:
        '200':
          description: List of placement attachment categories
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlacementAttachmentCategoryListRepresentation
      x-apiName: Placement API
      x-apiGroup: Attachments
      x-apiOrder: 100
  /placements/lists/awards:
    get:
      tags:
        - Placement API:Lists
      summary: Get all awards
      operationId: PlacementApiLists_getAwards
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of placement award definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Placement API
      x-apiGroup: Lists
      x-apiOrder: 100
  /placements/lists/billingterms:
    get:
      tags:
        - Placement API:Lists
      summary: Get all billing terms
      operationId: PlacementApiLists_getAllBillingTerms
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of placement billing terms definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Placement API
      x-apiGroup: Lists
      x-apiOrder: 100
  /placements/lists/industrycodes:
    get:
      tags:
        - Placement API:Lists
      summary: Get all industry codes
      operationId: PlacementApiLists_getAllIndustryCodes
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of placement industry code definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Placement API
      x-apiGroup: Lists
      x-apiOrder: 100
  /placements/lists/notetype:
    get:
      tags:
        - Placement API:Notes
      summary: Get all note types
      operationId: PlacementApiNotes_getAllNoteTypes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_placement_note
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of placement note type definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteTypeListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Notes
      x-apiOrder: 100
  /placements/lists/paymenttypes:
    get:
      tags:
        - Placement API:Lists
      summary: Get all payment types
      operationId: PlacementApiLists_getPaymentTypes
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of placement payment type definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Placement API
      x-apiGroup: Lists
      x-apiOrder: 100
  /placements/lists/status:
    get:
      tags:
        - Placement API:Lists
      summary: Get all status definitions
      operationId: PlacementApiLists_getAllStatusDefinitions
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Name
          in: query
          schema:
            type: string
        - name: Active
          in: query
          schema:
            type: boolean
        - name: Default
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of placement status definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusListRepresentation'
      x-apiName: Placement API
      x-apiGroup: Lists
      x-apiOrder: 100
  /placements/lists/status/{statusId}:
    get:
      tags:
        - Placement API:Lists
      summary: Get a status definition
      operationId: PlacementApiLists_statusDefinitionGet
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested placement status definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusRepresentation'
        '404':
          description: Requested placement status definition was *not found*
      x-apiName: Placement API
      x-apiGroup: Lists
      x-apiOrder: 100
  /companies:
    get:
      tags:
        - Company API:Companies
      summary: Find companies
      operationId: CompanyApiCompanies_getAll
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company name
          name: Name
          in: query
          schema:
            type: string
        - description: Companies by Id
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Find subsidiaries of specified parent companies
          name: ParentId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Find parents of specified subsidiaries
          name: SubsidiaryId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Company status
          name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Unique identifier for partner actions
          name: PartnerAction.ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: PartnerAction.Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Include partner actions at a specific stage
          name: PartnerAction.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PartnerAction.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Search in specific folders
          name: FolderId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: User Id - search for companies created by the specified user(s)
          name: CreatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for companies created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: User Id - search for companies last updated by the specified user(s)
          name: UpdatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for companies updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: partnerActions"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, addresses, contacts, subsidiaries, skills, notes, jobs, placements, workflows"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of companies matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListRepresentation'
      x-apiName: Company API
      x-apiGroup: Companies
      x-apiOrder: 1
    post:
      tags:
        - Company API:Companies
      summary: Add a new company
      operationId: CompanyApiCompanies_addNewCompany
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Duplicate override code from the header of an earlier 409 response
          name: X-Allow-Duplicates
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCompanyCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyRepresentation'
        '409':
          description: Company with this name already exists
          headers:
            X-Allow-Duplicates:
              description: Duplicate override code to allow a duplicate resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Company API
      x-apiGroup: Companies
      x-apiOrder: 1
  /companies/{companyId}:
    get:
      tags:
        - Company API:Companies
      summary: Get a company
      operationId: CompanyApiCompanies_get
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Embed related resources.<br />\r\nResources available to embed are: addresses, contacts, subsidiaries, skills, notes, jobs, placements, workflows"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested company details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyRepresentation'
        '404':
          description: Requested company was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Company API
      x-apiGroup: Companies
      x-apiOrder: 1
    put:
      tags:
        - Company API:Companies
      summary: Update an existing company
      operationId: CompanyApiCompanies_updateExistingCompany
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Duplicate override code from the header of an earlier 409 response
          name: X-Allow-Duplicates
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyCommand'
      responses:
        '200':
          description: Company was successfully updated
        '404':
          description: Requested company was not found
        '409':
          description: Company with this name already exists
          headers:
            X-Allow-Duplicates:
              description: Duplicate override code to allow a duplicate resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Company API
      x-apiGroup: Companies
      x-apiOrder: 1
  /companies/{companyId}/logo:
    head:
      tags:
        - Company API:Logo
      summary: Get company logo headers
      operationId: CompanyApiLogo_getHeaders
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the logo to fit the width specified by w
          name: w
          in: query
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the logo to fit the height specified by h
          name: h
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: Logo version, can be used for cache validation
              schema:
                type: string
        '404':
          description: Requested company logo was not found
      x-apiName: Company API
      x-apiGroup: Logo
      x-apiOrder: 2
    get:
      tags:
        - Company API:Logo
      summary: Get a company logo
      operationId: CompanyApiLogo_get
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the logo to fit the width specified by w
          name: w
          in: query
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the logo to fit the height specified by h
          name: h
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested company logo
          headers:
            ETag:
              description: Logo version, can be used for cache validation
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/CompanyApiLogoGetResponse'
        '404':
          description: Requested company logo was not found
      x-apiName: Company API
      x-apiGroup: Logo
      x-apiOrder: 2
    put:
      tags:
        - Company API:Logo
      summary: Add or update a company logo
      operationId: CompanyApiLogo_updateLogo
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyApiLogoUpdateLogoRequest'
      responses:
        '204':
          description: NoContent
        '404':
          description: Company was not found
      x-apiName: Company API
      x-apiGroup: Logo
      x-apiOrder: 2
    delete:
      tags:
        - Company API:Logo
      summary: Remove a company logo
      operationId: CompanyApiLogo_removeLogo
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: NoContent
        '404':
          description: Company was not found
      x-apiName: Company API
      x-apiGroup: Logo
      x-apiOrder: 2
  /companies/{companyId}/addresses:
    get:
      tags:
        - Company API:Addresses
      summary: Get all addresses
      operationId: CompanyApiAddresses_getAll
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of addresses for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAddressListRepresentation'
      x-apiName: Company API
      x-apiGroup: Addresses
      x-apiOrder: 3
    post:
      tags:
        - Company API:Addresses
      summary: Add an address
      operationId: CompanyApiAddresses_addNewAddress
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: ''
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCompanyAddressCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAddressRepresentation'
        '404':
          description: Company not found
      x-apiName: Company API
      x-apiGroup: Addresses
      x-apiOrder: 3
  /companies/{companyId}/addresses/{addressId}:
    get:
      tags:
        - Company API:Addresses
      summary: Get an address
      operationId: CompanyApiAddresses_getAddress
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Address Id
          name: addressId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Requested company address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAddressRepresentation'
        '404':
          description: Requested company address was not found
      x-apiName: Company API
      x-apiGroup: Addresses
      x-apiOrder: 3
    put:
      tags:
        - Company API:Addresses
      summary: Update an address
      operationId: CompanyApiAddresses_updateAddress
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: ''
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: addressId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyAddressCommand'
      responses:
        '204':
          description: NoContent
        '404':
          description: Company address not found
      x-apiName: Company API
      x-apiGroup: Addresses
      x-apiOrder: 3
    delete:
      tags:
        - Company API:Addresses
      summary: Remove an address
      operationId: CompanyApiAddresses_removeAddress
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: ''
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: addressId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: NoContent
        '404':
          description: Company address not found
      x-apiName: Company API
      x-apiGroup: Addresses
      x-apiOrder: 3
  /companies/{companyId}/skills:
    get:
      tags:
        - Company API:Skills
      summary: Get company skills
      operationId: CompanyApiSkills_getCompanySkills
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of skills for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListRepresentation'
      x-apiName: Company API
      x-apiGroup: Skills
      x-apiOrder: 5
  /companies/{companyId}/subsidiaries:
    get:
      tags:
        - Company API:Companies
      summary: Get all subsidiaries for a company
      operationId: CompanyApiCompanies_getAllSubsidiaries
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of subsidiaries for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListRepresentation'
      x-apiName: Company API
      x-apiGroup: Companies
      x-apiOrder: 10
  /companies/{companyId}/contacts:
    get:
      tags:
        - Company API:Contacts
      summary: Get company contacts
      operationId: CompanyApiContacts_getAll
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of contacts for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactListRepresentation'
      x-apiName: Company API
      x-apiGroup: Contacts
      x-apiOrder: 11
  /companies/{companyId}/attachments:
    get:
      tags:
        - Company API:Attachments
      summary: Find attachments
      operationId: CompanyApiAttachments_list
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment types to include
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CompanyAttachmentType'
        - description: Find the latest version of each attachment type
          name: Latest
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of company attachments matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAttachmentListRepresentation'
      x-apiName: Company API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /companies/{companyId}/attachments/{attach}:
    get:
      tags:
        - Company API:Attachments
      summary: Get an attachment
      operationId: CompanyApiAttachments_getAttachment
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested company attachment
          content:
            application/octet-stream:
              schema:
                $ref: >-
                  #/components/schemas/CompanyApiAttachmentsGetAttachmentResponse
        '404':
          description: Requested company attachment was not found
      x-apiName: Company API
      x-apiGroup: Attachments
      x-apiOrder: 20
    post:
      tags:
        - Company API:Attachments
      summary: Add a single attachment
      operationId: CompanyApiAttachments_addSingleAttachment
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: attach
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CompanyAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/CompanyApiAttachmentsAddSingleAttachmentRequest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyAttachmentRepresentation'
        '404':
          description: Company was not found
      x-apiName: Company API
      x-apiGroup: Attachments
      x-apiOrder: 20
    put:
      tags:
        - Company API:Attachments
      summary: Update attachment details
      operationId: CompanyApiAttachments_updateDetails
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyAttachmentCommand'
      responses:
        '204':
          description: NoContent
        '404':
          description: Attachment was not found
      x-apiName: Company API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /companies/{companyId}/jobs:
    get:
      tags:
        - Company API:Jobs
      summary: Get all jobs for a company
      operationId: CompanyApiJobs_getAll
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of jobs for a company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderListRepresentation'
      x-apiName: Company API
      x-apiGroup: Jobs
      x-apiOrder: 60
  /companies/{companyId}/jobs/active:
    get:
      tags:
        - Company API:Jobs
      summary: Get all active/open jobs for a company
      operationId: CompanyApiJobs_getAllActiveJobs
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of active jobs for a company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderListRepresentation'
      x-apiName: Company API
      x-apiGroup: Jobs
      x-apiOrder: 60
  /companies/{companyId}/status:
    put:
      tags:
        - Company API:Companies
      summary: Set a company status
      operationId: CompanyApiCompanies_updateStatusWithNote
      security:
        - jobadder_identity:
            - write
            - write_company
      description: Change the company status and add an optional note
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCompanyStatusCommand'
      responses:
        '200':
          description: Company status was successfully updated
        '202':
          description: Company status already assigned
        '404':
          description: Company was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Company API
      x-apiGroup: Companies
      x-apiOrder: 60
  /companies/{companyId}/requisitions:
    get:
      tags:
        - Company API:Requisitions
      summary: Get all requisitions for a company
      operationId: CompanyApiRequisitions_getAll
      security:
        - jobadder_identity:
            - read
            - read_requisition
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of requisitions for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequisitionListRepresentation'
      x-apiName: Company API
      x-apiGroup: Requisitions
      x-apiOrder: 61
  /companies/{companyId}/floats:
    get:
      tags:
        - Company API:Floats
      summary: Get all floats for a company
      operationId: CompanyApiFloats_list
      security:
        - jobadder_identity:
            - read
            - read_float
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of candidates floats for a company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatListRepresentation'
      x-apiName: Company API
      x-apiGroup: Floats
      x-apiOrder: 70
  /companies/{companyId}/submissions:
    get:
      tags:
        - Company API:Submissions
      summary: Get all candidate submissions for a company
      operationId: CompanyApiSubmissions_getAllSubmissions
      security:
        - jobadder_identity:
            - read
            - read_submission
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of candidate submissions for the requested company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmissionListRepresentation'
      x-apiName: Company API
      x-apiGroup: Submissions
      x-apiOrder: 71
  /companies/{companyId}/placements:
    get:
      tags:
        - Company API:Placements
      summary: Get all approved and unapproved placements for a company
      operationId: CompanyApiPlacements_getAll
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of placements for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Company API
      x-apiGroup: Placements
      x-apiOrder: 75
  /companies/{companyId}/placements/approved:
    get:
      tags:
        - Company API:Placements
      summary: Get all approved placements for a company
      operationId: CompanyApiPlacements_getAllApproved
      security:
        - jobadder_identity:
            - read
            - read_placement
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of approved placements for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Company API
      x-apiGroup: Placements
      x-apiOrder: 75
  /companies/{companyId}/workflows/{workflowType}:
    get:
      tags:
        - Company API:Workflows
      summary: Get all company workflows
      operationId: CompanyApiWorkflows_getAll
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: 'Valid values: "Requisition"'
          name: workflowType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CompanyWorkflowType'
        - name: WorkflowId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Include
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FindCompanyWorkflowsInclude'
        - description: Embed related resources within the results.
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: List of company workflows
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyWorkflowListRepresentation'
      x-apiName: Company API
      x-apiGroup: Workflows
      x-apiOrder: 85
    post:
      tags:
        - Company API:Workflows
      summary: Add a company workflow
      operationId: CompanyApiWorkflows_addNewWorkflow
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: 'Valid values: "Requisition"'
          name: workflowType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CompanyWorkflowType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCompanyWorkflowCommand'
      responses:
        '201':
          description: Add a company workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyWorkflowRepresentation'
      x-apiName: Company API
      x-apiGroup: Workflows
      x-apiOrder: 85
  /companies/{companyId}/workflows/{workflowType}/{workflowId}:
    get:
      tags:
        - Company API:Workflows
      summary: Get a company workflow and approvers
      operationId: CompanyApiWorkflows_getApproverDetails
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: 'Valid values: "Requisition"'
          name: workflowType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CompanyWorkflowType'
        - description: Workflow Id
          name: workflowId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Get a company workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyWorkflowRepresentation'
      x-apiName: Company API
      x-apiGroup: Workflows
      x-apiOrder: 85
    put:
      tags:
        - Company API:Workflows
      summary: Update a company workflow
      operationId: CompanyApiWorkflows_updateWorkflow
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: 'Valid values: "Requisition"'
          name: workflowType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/CompanyWorkflowType'
        - description: Workflow Id
          name: workflowId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyWorkflowCommand'
      responses:
        '200':
          description: Updated a company workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyWorkflowRepresentation'
      x-apiName: Company API
      x-apiGroup: Workflows
      x-apiOrder: 85
  /companies/{companyId}/notes:
    get:
      tags:
        - Company API:Notes
      summary: Get company notes
      operationId: CompanyApiNotes_getAll
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_company_note
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes for the specified company
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Company API
      x-apiGroup: Notes
      x-apiOrder: 90
    post:
      tags:
        - Company API:Notes
      summary: Add a company note
      operationId: CompanyApiNotes_addNote
      security:
        - jobadder_identity:
            - write
            - write_note
            - write_company_note
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCompanyNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
        '404':
          description: Company was not found
      x-apiName: Company API
      x-apiGroup: Notes
      x-apiOrder: 90
  /companies/{companyId}/activities:
    post:
      tags:
        - Company API:Activities
      summary: Add a company activity
      operationId: CompanyApiActivities_addNewActivity
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCompanyActivityCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyActivityModel'
        '404':
          description: Company was not found
      x-apiName: Company API
      x-apiGroup: Activities
      x-apiOrder: 100
    get:
      tags:
        - Company API:Activities
      summary: Get company activities
      operationId: CompanyApiActivities_getCompanyActivities
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of company activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyActivitySummaryListModel'
      x-apiName: Company API
      x-apiGroup: Activities
      x-apiOrder: 100
  /companies/{companyId}/activities/{activityId}:
    get:
      tags:
        - Company API:Activities
      summary: Get a company activity
      operationId: CompanyApiActivities_getActivity
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Activity Id
          name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested company activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyActivityRepresentation'
        '404':
          description: Requested company activity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Company API
      x-apiGroup: Activities
      x-apiOrder: 100
  /companies/{companyId}/usertasks:
    post:
      tags:
        - Company API:UserTasks
      summary: Add a company user task
      operationId: CompanyApiUserTasks_addTask
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCompanyUserTaskCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserTaskModel'
        '404':
          description: Company was not found
      x-apiName: Company API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /companies/{companyId}/usertasks/{taskId}:
    get:
      tags:
        - Company API:UserTasks
      summary: Get a company user task
      operationId: CompanyApiUserTasks_getTask
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested company user task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserTaskRepresentation'
        '404':
          description: Requested company user task was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Company API
      x-apiGroup: UserTasks
      x-apiOrder: 100
    put:
      tags:
        - Company API:UserTasks
      summary: Update a company user task
      operationId: CompanyApiUserTasks_updateTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyUserTaskCommand'
      responses:
        '200':
          description: Company user task was successfully updated
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyUserTaskModel'
        '404':
          description: Company user task was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Company API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /companies/activities:
    get:
      tags:
        - Company API:Activities
      summary: Find company activities
      operationId: CompanyApiActivities_findCompanyActivities
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: "Search for activities performed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for activities updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of company activities matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyActivityListRepresentation'
      x-apiName: Company API
      x-apiGroup: Activities
      x-apiOrder: 100
  /companies/activitysettings:
    get:
      tags:
        - Company API:Activities
      summary: Get all company activity settings definitions
      operationId: CompanyApiActivities_getAllActivitySettings
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - name: query
          in: query
          schema:
            $ref: '#/components/schemas/FindCompanyActivitySettingsQuery'
      responses:
        '200':
          description: List of company activity settings definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyActivitySettingsListModel'
      x-apiName: Company API
      x-apiGroup: Activities
      x-apiOrder: 100
  /companies/activitysettings/{settingId}:
    get:
      tags:
        - Company API:Activities
      summary: Get Company activity settings with details
      operationId: CompanyApiActivities_getDetails
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Activity Setting Id
          name: settingId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Company activity settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyActivitySettingModel'
        '404':
          description: Requested company activity settings were not found
      x-apiName: Company API
      x-apiGroup: Activities
      x-apiOrder: 100
  /companies/deleted:
    get:
      tags:
        - Company API:Companies
      summary: Recently deleted companies
      operationId: CompanyApiCompanies_getRecentlyDeleted
      security:
        - jobadder_identity:
            - read
            - read_company
      description: >-
        Provides a list of companies recently (last 14 days) deleted from
        JobAdder.
      responses:
        '200':
          description: List of recently deleted companies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedCompanyListModel'
      x-apiName: Company API
      x-apiGroup: Companies
      x-apiOrder: 100
  /companies/fields/custom:
    get:
      tags:
        - Company API:Lists
      summary: Get the list of company custom fields
      operationId: CompanyApiLists_customFieldsList
      security:
        - jobadder_identity:
            - read
            - read_company
      responses:
        '200':
          description: List of company custom field definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldListRepresentation'
      x-apiName: Company API
      x-apiGroup: Lists
      x-apiOrder: 100
  /companies/fields/custom/{fieldId}:
    get:
      tags:
        - Company API:Lists
      summary: Get a company custom field
      operationId: CompanyApiLists_customFieldGet
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested company custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested company custom field definition was not found
      x-apiName: Company API
      x-apiGroup: Lists
      x-apiOrder: 100
    put:
      tags:
        - Company API:Lists
      summary: Modify custom field list values
      operationId: CompanyApiLists_modifyFieldValues
      security:
        - jobadder_identity:
            - manage_company_custom
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCompanyCustomFieldListValuesCommand'
      responses:
        '200':
          description: Updated company custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested company custom field definition was not found
      x-apiName: Company API
      x-apiGroup: Lists
      x-apiOrder: 100
  /companies/lists/attachmentcategory:
    get:
      tags:
        - Company API:Attachments
      summary: Get all attachment categories
      operationId: CompanyApiAttachments_getAllAttachmentCategories
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - description: Optionally filter to specific attachment types
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CompanyAttachmentType'
      responses:
        '200':
          description: List of company attachment categories
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyAttachmentCategoryListRepresentation
      x-apiName: Company API
      x-apiGroup: Attachments
      x-apiOrder: 100
  /companies/lists/notetype:
    get:
      tags:
        - Company API:Notes
      summary: Get a list of company note types
      operationId: CompanyApiNotes_getNoteTypes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_candidate_note
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of company note types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteTypeListRepresentation'
      x-apiName: Company API
      x-apiGroup: Notes
      x-apiOrder: 100
  /companies/lists/status:
    get:
      tags:
        - Company API:Lists
      summary: Get a list of company status definitions
      operationId: CompanyApiLists_getStatusDefinitions
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Name
          in: query
          schema:
            type: string
        - name: Active
          in: query
          schema:
            type: boolean
        - name: Default
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of company status definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusListRepresentation'
      x-apiName: Company API
      x-apiGroup: Lists
      x-apiOrder: 100
  /companies/lists/status/{statusId}:
    get:
      tags:
        - Company API:Lists
      summary: Get a company status
      operationId: CompanyApiLists_getStatus
      security:
        - jobadder_identity:
            - read
            - read_company
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested company status definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusRepresentation'
        '404':
          description: Requested company status definition was not found
      x-apiName: Company API
      x-apiGroup: Lists
      x-apiOrder: 100
  /contacts:
    get:
      tags:
        - Contact API:Contacts
      summary: Find contacts
      operationId: ContactApiContacts_getAll
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Contact Id
          name: ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Contact name
          name: Name
          in: query
          schema:
            type: string
        - description: Contact email
          name: Email
          in: query
          schema:
            type: string
        - description: Contact phone or mobile number
          name: Phone
          in: query
          schema:
            type: string
        - description: Company Id
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: HiringManager
          in: query
          schema:
            type: boolean
        - name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Unique identifier for partner actions
          name: PartnerAction.ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: PartnerAction.Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Include partner actions at a specific stage
          name: PartnerAction.Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: PartnerAction.SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Search in specific folders
          name: FolderId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: User Id - search for contacts created by the specified user(s)
          name: CreatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for contacts created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: User Id - search for contacts last updated by the specified user(s)
          name: UpdatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for contacts updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: partnerActions"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, skills, notes, jobs"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of contacts matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 1
    post:
      tags:
        - Contact API:Contacts
      summary: Add a new contact
      operationId: ContactApiContacts_addNewContact
      security:
        - jobadder_identity:
            - write
            - write_contact
      parameters:
        - description: Duplicate override code from the header of an earlier 409 response
          name: X-Allow-Duplicates
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRepresentation'
        '409':
          description: Contact with this email already exists
          headers:
            X-Allow-Duplicates:
              description: Duplicate override code to allow a duplicate resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 1
  /contacts/{contactId}:
    get:
      tags:
        - Contact API:Contacts
      summary: Get a contact
      operationId: ContactApiContacts_getById
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Embed related resources.<br />\r\nResources available to embed are: skills, notes, jobs"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested contact details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactRepresentation'
        '404':
          description: Requested contact was not found
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 1
    put:
      tags:
        - Contact API:Contacts
      summary: Update an existing contact
      operationId: ContactApiContacts_updateExistingContact
      security:
        - jobadder_identity:
            - write
            - write_contact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Duplicate override code from the header of an earlier 409 response
          name: X-Allow-Duplicates
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactCommand'
      responses:
        '200':
          description: Contact was successfully updated
        '404':
          description: Requested contact was not found
        '409':
          description: Contact with this email already exists
          headers:
            X-Allow-Duplicates:
              description: Duplicate override code to allow a duplicate resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 1
  /contacts/{contactId}/photo:
    head:
      tags:
        - Contact API:Contacts
      summary: Get a contact photo headers
      operationId: ContactApiContacts_getPhotoHeaders
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the width specified by w
          name: w
          in: query
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the height specified by g
          name: h
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          headers:
            ETag:
              description: Photo version, can be used for cache validation
              schema:
                type: string
        '404':
          description: Requested contact photo was not found
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 2
    get:
      tags:
        - Contact API:Contacts
      summary: Get a contact photo
      operationId: ContactApiContacts_getPhoto
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the width specified by w
          name: w
          in: query
          schema:
            type: integer
            format: int32
        - description: Reduce the size of the photo to fit the height specified by g
          name: h
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested contact photo
          headers:
            ETag:
              description: Photo version, can be used for cache validation
              schema:
                type: string
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ContactApiContactsGetPhotoResponse'
        '404':
          description: Requested contact photo was not found
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 2
    put:
      tags:
        - Contact API:Contacts
      summary: Update a contact photo
      operationId: ContactApiContacts_updatePhoto
      security:
        - jobadder_identity:
            - write
            - write_contact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContactApiContactsUpdatePhotoRequest'
      responses:
        '204':
          description: NoContent
        '404':
          description: Contact was not found
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 2
    delete:
      tags:
        - Contact API:Contacts
      summary: Remove photo
      operationId: ContactApiContacts_removePhoto
      security:
        - jobadder_identity:
            - write
            - write_contact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: NoContent
        '404':
          description: Contact was not found
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 2
  /contacts/{contactId}/jobs:
    get:
      tags:
        - Contact API:Jobs
      summary: Get all jobs for a contact
      operationId: ContactApiJobs_getAll
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of jobs for the specified contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Jobs
      x-apiOrder: 3
  /contacts/{contactId}/jobs/active:
    get:
      tags:
        - Contact API:Jobs
      summary: Get all active/open jobs for a contact
      operationId: ContactApiJobs_getActive
      security:
        - jobadder_identity:
            - read
            - read_job
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of active/open jobs for the specified contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Jobs
      x-apiOrder: 3
  /contacts/{contactId}/interviews:
    get:
      tags:
        - Contact API:Interviews
      summary: Get all Interviews
      operationId: ContactApiInterviews_getAll
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of Interviews for the specified contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Interviews
      x-apiOrder: 4
  /contacts/{contactId}/skills:
    get:
      tags:
        - Contact API:Skills
      summary: Get contact skills
      operationId: ContactApiSkills_getContactSkills
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of skills for the specified contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Skills
      x-apiOrder: 5
  /contacts/{contactId}/attachments:
    get:
      tags:
        - Contact API:Attachments
      summary: Find attachments
      operationId: ContactApiAttachments_find
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment types to include
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ContactAttachmentType'
        - description: Find the latest version of each attachment type
          name: Latest
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of contact attachments matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactAttachmentListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /contacts/{contactId}/attachments/{attach}:
    get:
      tags:
        - Contact API:Attachments
      summary: Get an attachment
      operationId: ContactApiAttachments_getAttachment
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested contact attachment
          content:
            application/octet-stream:
              schema:
                $ref: >-
                  #/components/schemas/ContactApiAttachmentsGetAttachmentResponse
        '404':
          description: Requested contact attachment was not found
      x-apiName: Contact API
      x-apiGroup: Attachments
      x-apiOrder: 20
    post:
      tags:
        - Contact API:Attachments
      summary: Add a single attachment
      operationId: ContactApiAttachments_addSingleAttachment
      security:
        - jobadder_identity:
            - write
            - write_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: ''
          name: attach
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContactAttachmentType'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/ContactApiAttachmentsAddSingleAttachmentRequest
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactAttachmentRepresentation'
        '404':
          description: Contact was not found
      x-apiName: Contact API
      x-apiGroup: Attachments
      x-apiOrder: 20
    put:
      tags:
        - Contact API:Attachments
      summary: Update attachment details
      operationId: ContactApiAttachments_updateDetails
      security:
        - jobadder_identity:
            - write
            - write_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Attachment Id
          name: attach
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactAttachmentCommand'
      responses:
        '204':
          description: NoContent
        '404':
          description: Attachment was not found
      x-apiName: Contact API
      x-apiGroup: Attachments
      x-apiOrder: 20
  /contacts/{contactId}/status:
    put:
      tags:
        - Contact API:Contacts
      summary: Set a contact status
      operationId: ContactApiContacts_updateStatusAndNote
      security:
        - jobadder_identity:
            - write
            - write_contact
      description: Change the contact status and add an optional note
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetContactStatusCommand'
      responses:
        '200':
          description: Contact status was successfully updated
        '202':
          description: Contact status already assigned
        '404':
          description: Contact was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 60
  /contacts/{contactId}/notes:
    get:
      tags:
        - Contact API:Notes
      summary: Get contact notes
      operationId: ContactApiNotes_getAll
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_contact_note
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes for the specified contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Notes
      x-apiOrder: 90
    post:
      tags:
        - Contact API:Notes
      summary: Add a contact note
      operationId: ContactApiNotes_addNewNote
      security:
        - jobadder_identity:
            - write
            - write_note
            - write_contact_note
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
        '404':
          description: Contact was not found
      x-apiName: Contact API
      x-apiGroup: Notes
      x-apiOrder: 90
  /contacts/{contactId}/activities:
    post:
      tags:
        - Contact API:Activities
      summary: Add a contact activity
      operationId: ContactApiActivities_addNewActivity
      security:
        - jobadder_identity:
            - write
            - write_company
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactActivityCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactActivityModel'
        '404':
          description: Contact was not found
      x-apiName: Contact API
      x-apiGroup: Activities
      x-apiOrder: 100
    get:
      tags:
        - Contact API:Activities
      summary: Get contact activities
      operationId: ContactApiActivities_getAll
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of contact activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactActivitySummaryListModel'
      x-apiName: Contact API
      x-apiGroup: Activities
      x-apiOrder: 100
  /contacts/{contactId}/activities/{activityId}:
    get:
      tags:
        - Contact API:Activities
      summary: Get a contact activity
      operationId: ContactApiActivities_getOneActivity
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Activity Id
          name: activityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested contact activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactActivityRepresentation'
        '404':
          description: Requested contact activity was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Contact API
      x-apiGroup: Activities
      x-apiOrder: 100
  /contacts/{contactId}/usertasks:
    post:
      tags:
        - Contact API:UserTasks
      summary: Add a contact user task
      operationId: ContactApiUserTasks_addNewTask
      security:
        - jobadder_identity:
            - write
            - write_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactUserTaskCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactUserTaskModel'
        '404':
          description: Contact was not found
      x-apiName: Contact API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /contacts/{contactId}/usertasks/{taskId}:
    get:
      tags:
        - Contact API:UserTasks
      summary: Get a contact user task
      operationId: ContactApiUserTasks_getTask
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested contact user task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactUserTaskRepresentation'
        '404':
          description: Requested contact user task was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Contact API
      x-apiGroup: UserTasks
      x-apiOrder: 100
    put:
      tags:
        - Contact API:UserTasks
      summary: Update a contact user task
      operationId: ContactApiUserTasks_updateTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactUserTaskCommand'
      responses:
        '200':
          description: Contact user task was successfully updated
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactUserTaskModel'
        '404':
          description: Contact user task was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Contact API
      x-apiGroup: UserTasks
      x-apiOrder: 100
  /contacts/activities:
    get:
      tags:
        - Contact API:Activities
      summary: Find contact activities
      operationId: ContactApiActivities_find
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: "Search for activities performed at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for activities updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: IncludeDetails
          in: query
          schema:
            type: boolean
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of contact activities matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactActivityListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Activities
      x-apiOrder: 100
  /contacts/activitysettings:
    get:
      tags:
        - Contact API:Activities
      summary: Get all contact activity settings definitions
      operationId: ContactApiActivities_getAllActivitySettings
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: query
          in: query
          schema:
            $ref: '#/components/schemas/FindContactActivitySettingsQuery'
      responses:
        '200':
          description: List of contact activity settings definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactActivitySettingsListModel'
      x-apiName: Contact API
      x-apiGroup: Activities
      x-apiOrder: 100
  /contacts/activitysettings/{settingId}:
    get:
      tags:
        - Contact API:Activities
      summary: Get contact activity settings with details
      operationId: ContactApiActivities_getDetails
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Activity Setting Id
          name: settingId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Contact activity settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactActivitySettingModel'
        '404':
          description: Requested contact activity settings were not found
      x-apiName: Contact API
      x-apiGroup: Activities
      x-apiOrder: 100
  /contacts/deleted:
    get:
      tags:
        - Contact API:Contacts
      summary: Recently deleted contacts
      operationId: ContactApiContacts_getRecentDeletions
      security:
        - jobadder_identity:
            - read
            - read_contact
      description: "Provides a list of contacts recently (last 14 days) deleted from JobAdder, allowing the management\r\nof referenced data for local privacy law compliance (e.g. GDPR)."
      responses:
        '200':
          description: List of recently deleted contacts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedContactListModel'
      x-apiName: Contact API
      x-apiGroup: Contacts
      x-apiOrder: 100
  /contacts/fields/custom:
    get:
      tags:
        - Contact API:Lists
      summary: Get the list of Contact custom fields
      operationId: ContactApiLists_customFieldsGet
      security:
        - jobadder_identity:
            - read
            - read_contact
      responses:
        '200':
          description: List of contact custom field definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Lists
      x-apiOrder: 100
  /contacts/fields/custom/{fieldId}:
    get:
      tags:
        - Contact API:Lists
      summary: Get a Contact custom field
      operationId: ContactApiLists_getCustomField
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested contact custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested contact custom field definition was not found
      x-apiName: Contact API
      x-apiGroup: Lists
      x-apiOrder: 100
  /contacts/fields/custom/custom/{fieldId}:
    put:
      tags:
        - Contact API:Lists
      summary: Modify custom field list values
      operationId: ContactApiLists_modifyCustomFieldListValues
      security:
        - jobadder_identity:
            - manage_contact_custom
      parameters:
        - name: fieldId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetContactCustomFieldListValuesCommand'
      responses:
        '200':
          description: Updated contact custom field definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldRepresentation'
        '404':
          description: Requested contact custom field definition was not found
      x-apiName: Contact API
      x-apiGroup: Lists
      x-apiOrder: 100
  /contacts/lists/attachmentcategory:
    get:
      tags:
        - Contact API:Attachments
      summary: Get all attachment categories
      operationId: ContactApiAttachments_getAllAttachmentCategories
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - description: Optionally filter to specific attachment types
          name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ContactAttachmentType'
      responses:
        '200':
          description: List of contact attachment categories
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContactAttachmentCategoryListRepresentation
      x-apiName: Contact API
      x-apiGroup: Attachments
      x-apiOrder: 100
  /contacts/lists/notetype:
    get:
      tags:
        - Contact API:Notes
      summary: Get a list of contact note types
      operationId: ContactApiNotes_getNoteTypes
      security:
        - jobadder_identity:
            - read
            - read_note
            - read_contact_note
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of contact note type definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteTypeListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Notes
      x-apiOrder: 100
  /contacts/lists/salutation:
    get:
      tags:
        - Contact API:Lists
      summary: Get salutations (honorifics/titles)
      operationId: ContactApiLists_getSalutations
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: Name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of contact salutations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NameModelListOf'
      x-apiName: Contact API
      x-apiGroup: Lists
      x-apiOrder: 100
  /contacts/lists/status:
    get:
      tags:
        - Contact API:Lists
      summary: Get a list of contact status definitions
      operationId: ContactApiLists_getStatusDefinitions
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: StatusId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Name
          in: query
          schema:
            type: string
        - name: Active
          in: query
          schema:
            type: boolean
        - name: Default
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of contact status definitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusListRepresentation'
      x-apiName: Contact API
      x-apiGroup: Lists
      x-apiOrder: 100
  /contacts/lists/status/{statusId}:
    get:
      tags:
        - Contact API:Lists
      summary: Get a contact status definition
      operationId: ContactApiLists_getStatusDefinition
      security:
        - jobadder_identity:
            - read
            - read_contact
      parameters:
        - name: statusId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested contact status definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusRepresentation'
        '404':
          description: Requested contact status definition was not found
      x-apiName: Contact API
      x-apiGroup: Lists
      x-apiOrder: 100
  /notes:
    get:
      tags:
        - Note API:Notes
      summary: Find notes
      operationId: NoteApiNotes_getAll
      security:
        - jobadder_identity:
            - read
            - read_note
      parameters:
        - description: Candidate Id
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Company Id
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Contact Id
          name: ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job Id
          name: JobId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Requisition Id
          name: RequisitionId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job Application Id
          name: ApplicationId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: Placement Id
          name: PlacementId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Filter notes by Entity Type.<br />\r\nEntity Type must be any of: candidate, contact, company, job, placement, requisition"
          name: EntityType
          in: query
          schema:
            type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, candidates, contacts, placements, jobs, jobapplications, companies, requisitions\r\nNote: embed=self everything is embeded by default"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Note Id
          name: NoteId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Note type
          name: Type
          in: query
          schema:
            type: array
            items:
              type: string
        - description: Reference value used to identify a note or group of notes
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for notes updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Sort the results by one or multiple fields, prefix with \"-\" to sort descending.<br />\r\nFields available for sorting are: type, createdAt, updatedAt"
          name: Sort
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.<br />\r\nFields available to include are: text"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of notes matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteListRepresentation'
      x-apiName: Note API
      x-apiGroup: Notes
      x-apiOrder: 1
    post:
      tags:
        - Note API:Notes
      summary: Add a note
      operationId: NoteApiNotes_createNote
      security:
        - jobadder_identity:
            - write
            - write_note
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNoteCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteModel'
      x-apiName: Note API
      x-apiGroup: Notes
      x-apiOrder: 1
  /notes/{noteId}:
    get:
      tags:
        - Note API:Notes
      summary: Get a note
      operationId: NoteApiNotes_getById
      security:
        - jobadder_identity:
            - read
            - read_note
      parameters:
        - description: Note Id
          name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Requested note details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteRepresentation'
        '404':
          description: Requested note was not found
      x-apiName: Note API
      x-apiGroup: Notes
      x-apiOrder: 1
    put:
      tags:
        - Note API:Notes
      summary: Update a note
      operationId: NoteApiNotes_updateById
      security:
        - jobadder_identity:
            - write
            - write_note
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteCommand'
      responses:
        '204':
          description: NoContent
        '404':
          description: Specified note was not found
      x-apiName: Note API
      x-apiGroup: Notes
      x-apiOrder: 1
  /notes/{noteId}/attachments:
    post:
      tags:
        - Note API:Attachments
      summary: Add a single attachment
      operationId: NoteApiAttachments_addSingleAttachment
      description: >-
        The file can be submitted either as multipart/form-data with a single
        part containing only the file, or as binary data
      parameters:
        - name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/NoteApiAttachmentsAddSingleAttachmentRequest
      responses:
        '201':
          description: Created
        '404':
          description: Note was not found
      x-apiName: Note API
      x-apiGroup: Attachments
      x-apiOrder: 10
  /notes/{noteId}/attachments/{attachmentId}:
    get:
      tags:
        - Note API:Attachments
      summary: Get a note attachment
      operationId: NoteApiAttachments_getAttachment
      parameters:
        - description: Note Id
          name: noteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Attachment Id
          name: attachmentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Requested note attachment
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/NoteApiAttachmentsGetAttachmentResponse'
        '404':
          description: Requested note attachment was not found
      x-apiName: Note API
      x-apiGroup: Attachments
      x-apiOrder: 10
  /folders:
    get:
      tags:
        - Folder API:Folders
      summary: Find folders
      operationId: FolderApiFolders_getAll
      security:
        - jobadder_identity:
            - read
            - read_folder
      parameters:
        - description: Folder Id
          name: FolderId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: Job Id
          name: JobId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Candidate Id
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Job Application Id
          name: ApplicationId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - description: Placement Id
          name: PlacementId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Company Id
          name: CompanyId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Contact Id
          name: ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: >-
            User Id - search for folders by owner or shared with the specified
            users
          name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for folders by owner
          name: OwnerUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search folders shared with the specified users
          name: SharedWithUserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Owner status
          name: OwnerStatus
          in: query
          schema:
            $ref: '#/components/schemas/FolderOwnerStatus'
        - description: "Search for folders created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for folders updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Additional fields to include with the results.\r\nFields available to include are: sharedWith"
          name: Fields
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, jobs, candidates, applications, contacts, companies, placements"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Determines what gets returned when embed option is one of self or candidates/contacts/etc.<br />\r\nResources available to embedMode are: id"
          name: EmbedMode
          in: query
          schema:
            type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of folders matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderListRepresentation'
      x-apiName: Folder API
      x-apiGroup: Folders
      x-apiOrder: 1
  /folders/{folderId}:
    get:
      tags:
        - Folder API:Folders
      summary: Get a folder
      operationId: FolderApiFolders_getFolder
      security:
        - jobadder_identity:
            - read
            - read_folder
      parameters:
        - description: Folder Id
          name: folderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: "Determines what gets returned when embed option is one of self or canddiates/contacts/etc.<br />\r\nResources available to embedMode are: id"
          name: EmbedMode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Requested folder details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderRepresentation'
        '404':
          description: Requested folder was not found
      x-apiName: Folder API
      x-apiGroup: Folders
      x-apiOrder: 1
    patch:
      tags:
        - Folder API:Folders
      summary: Add or remove entities in folder
      operationId: FolderApiFolders_modifyEntitiesInFolder
      security:
        - jobadder_identity:
            - write
            - write_folder
      description: >-
        Allows bulk adding or removing of entities (jobs, candidates,
        applications, placements, companies and contacts) for a specific folder
      parameters:
        - description: Folder Id
          name: folderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/FolderApiFoldersModifyEntitiesInFolderRequest
      responses:
        '204':
          description: NoContent
        '404':
          description: Specified folder was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Folder API
      x-apiGroup: Folders
      x-apiOrder: 1
  /users:
    get:
      tags:
        - User API:Users
      summary: Find users
      operationId: UserApiUsers_find
      security:
        - jobadder_identity:
            - read
            - read_user
      parameters:
        - name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: OfficeId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: GroupId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for users created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: User Id - search for jobs last updated by the specified user(s)
          name: UpdatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for users updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Include
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FindUsersInclude'
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of users matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRepresentation'
      x-apiName: User API
      x-apiGroup: Users
      x-apiOrder: 1
  /users/{userId}:
    get:
      tags:
        - User API:Users
      summary: Get a user
      operationId: UserApiUsers_getUserById
      security:
        - jobadder_identity:
            - read
            - read_user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRepresentation'
        '404':
          description: Requested user was not found
      x-apiName: User API
      x-apiGroup: Users
      x-apiOrder: 1
  /users/current:
    get:
      tags:
        - User API:Users
      summary: Get the current user
      operationId: UserApiUsers_getCurrentUser
      security:
        - jobadder_identity:
            - read
            - read_user
      responses:
        '200':
          description: Current user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRepresentation'
        '404':
          description: Current user was not found (huh?)
      x-apiName: User API
      x-apiGroup: Users
      x-apiOrder: 1
  /users/{userId}/photo:
    get:
      tags:
        - User API:Users
      summary: Get a user photo
      operationId: UserApiUsers_getUserPhoto
      security:
        - jobadder_identity:
            - read
            - read_user
      parameters:
        - description: User Id
          name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested user photo
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/UserApiUsersGetUserPhotoResponse'
        '404':
          description: Requested user photo was not found
      x-apiName: User API
      x-apiGroup: Users
      x-apiOrder: 2
  /users/{userId}/usertasks:
    get:
      tags:
        - User API:Tasks
      summary: Find user tasks
      operationId: UserApiTasks_getUserTasks
      security:
        - jobadder_identity:
            - read
            - read_usertask
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: "Search for tasks starting at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: StartAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Include
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FindUserTasksInclude'
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of user tasks matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTaskListRepresentation'
      x-apiName: User API
      x-apiGroup: Tasks
      x-apiOrder: 10
  /users/{userId}/interviews:
    get:
      tags:
        - User API:Interviews
      summary: Get all Interviews
      operationId: UserApiInterviews_getAll
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - description: User Id
          name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of interviews for the specified user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewListRepresentation'
      x-apiName: User API
      x-apiGroup: Interviews
      x-apiOrder: 11
  /users/{userId}/usergroups:
    get:
      tags:
        - User API:Groups
      summary: Get user groups
      operationId: UserApiGroups_getUserGroups
      security:
        - jobadder_identity:
            - read
            - read_usergroup
      parameters:
        - description: User Id
          name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of user groups that the specified user belongs to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupListRepresentation'
      x-apiName: User API
      x-apiGroup: Groups
      x-apiOrder: 20
  /usergroups:
    get:
      tags:
        - User Group API:Groups
      summary: Find groups
      operationId: UserGroupApiGroups_list
      security:
        - jobadder_identity:
            - read
            - read_usergroup
      parameters:
        - name: GroupId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of user groups matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupListRepresentation'
      x-apiName: User Group API
      x-apiGroup: Groups
      x-apiOrder: 100
  /usergroups/{groupId}:
    get:
      tags:
        - User Group API:Groups
      summary: Get a group
      operationId: UserGroupApiGroups_getGroup
      security:
        - jobadder_identity:
            - read
            - read_usergroup
      parameters:
        - description: Group Id
          name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested user group details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupRepresentation'
        '404':
          description: Requested user group was not found
      x-apiName: User Group API
      x-apiGroup: Groups
      x-apiOrder: 100
  /usergroups/{groupId}/users:
    get:
      tags:
        - User Group API:Users
      summary: Get users
      operationId: UserGroupApiUsers_getAll
      security:
        - jobadder_identity:
            - read
            - read_user
      parameters:
        - description: Group Id
          name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of users belonging to the specified user group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRepresentation'
      x-apiName: User Group API
      x-apiGroup: Users
      x-apiOrder: 100
  /useroffices:
    get:
      tags:
        - User Office API:Offices
      summary: Find user offices
      operationId: UserOfficeApiOffices_findUserOffices
      security:
        - jobadder_identity:
            - read
            - read_user
      parameters:
        - name: OfficeId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of user offices matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOfficeListRepresentation'
      x-apiName: User Office API
      x-apiGroup: Offices
      x-apiOrder: 100
  /useroffices/{officeId}:
    get:
      tags:
        - User Office API:Offices
      summary: Get a user office
      operationId: UserOfficeApiOffices_getUserOffice
      security:
        - jobadder_identity:
            - read
            - read_user
      parameters:
        - description: Office Id
          name: officeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Requested user office details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOfficeRepresentation'
        '404':
          description: Requested user office was not found
      x-apiName: User Office API
      x-apiGroup: Offices
      x-apiOrder: 100
  /useroffices/{officeId}/users:
    get:
      tags:
        - User Office API:Users
      summary: Get users
      operationId: UserOfficeApiUsers_getByOfficeId
      security:
        - jobadder_identity:
            - read
            - read_user
      parameters:
        - description: Office Id
          name: officeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: List of users belonging to the specified office
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListRepresentation'
      x-apiName: User Office API
      x-apiGroup: Users
      x-apiOrder: 100
  /usertasks:
    get:
      tags:
        - User Task API:Tasks
      summary: Find user tasks
      operationId: UserTaskApiTasks_getAll
      security:
        - jobadder_identity:
            - read
            - read_usertask
      parameters:
        - description: Search for tasks assigned to or owned by the specified users
          name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for tasks starting at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: StartAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: User Id - search for companies created by the specified user(s)
          name: CreatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for tasks created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: User Id - search for companies last updated by the specified user(s)
          name: UpdatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for tasks updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Include
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FindUserTasksInclude'
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of user tasks matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTaskListRepresentation'
      x-apiName: User Task API
      x-apiGroup: Tasks
      x-apiOrder: 10
    post:
      tags:
        - User Task API:Tasks
      summary: Create a user task
      operationId: UserTaskApiTasks_createTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserTaskCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTaskModel'
      x-apiName: User Task API
      x-apiGroup: Tasks
      x-apiOrder: 10
  /usertasks/{taskId}:
    get:
      tags:
        - User Task API:Tasks
      summary: Get a user task
      operationId: UserTaskApiTasks_getTask
      security:
        - jobadder_identity:
            - read
            - read_usertask
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Requested user task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTaskRepresentation'
      x-apiName: User Task API
      x-apiGroup: Tasks
      x-apiOrder: 10
    delete:
      tags:
        - User Task API:Tasks
      summary: Delete a user task
      operationId: UserTaskApiTasks_deleteTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: NoContent
        '404':
          description: User task was not found
      x-apiName: User Task API
      x-apiGroup: Tasks
      x-apiOrder: 10
    put:
      tags:
        - User Task API:Tasks
      summary: Update a user task
      operationId: UserTaskApiTasks_updateTask
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserTaskCommand'
      responses:
        '200':
          description: User task was successfully updated
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTaskModel'
        '404':
          description: User task was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: User Task API
      x-apiGroup: Tasks
      x-apiOrder: 10
  /usertasks/{taskId}/complete:
    put:
      tags:
        - User Task API:Tasks
      summary: Mark user task as complete
      operationId: UserTaskApiTasks_markComplete
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: NoContent
        '404':
          description: User task was not found
      x-apiName: User Task API
      x-apiGroup: Tasks
      x-apiOrder: 10
  /usertasks/{taskId}/incomplete:
    put:
      tags:
        - User Task API:Tasks
      summary: Mark user task as incomplete
      operationId: UserTaskApiTasks_markAsIncomplete
      security:
        - jobadder_identity:
            - write
            - write_usertask
      parameters:
        - description: Task Id
          name: taskId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: NoContent
        '404':
          description: User task was not found
      x-apiName: User Task API
      x-apiGroup: Tasks
      x-apiOrder: 10
  /interviews:
    get:
      tags:
        - Interview API:Interviews
      summary: Find interviews
      operationId: InterviewApiInterviews_find
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - name: InterviewId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: JobId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: User Id - search for internal/user interviewers
          name: UserId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Contact Id - search for external/contact interviewers
          name: ContactId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Candidate Id - search for interviewees by candidateId
          name: CandidateId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: Application Id - search for interviewees by applicationId
          name: ApplicationId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: Type
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InterviewType'
        - description: "Search for interviews starting at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: StartAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for interviews ending at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: EndAt
          in: query
          schema:
            type: array
            items:
              type: string
        - name: Location
          in: query
          schema:
            type: string
        - description: User Id - search for interviews created by the specified user(s)
          name: CreatedBy
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - description: "Search for interviews created at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: CreatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Search for interviews updated at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: UpdatedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: "Embed related resources.<br />\r\nResources available to embed are: self, evaluations"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of interviews matching the specified criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewListRepresentation'
      x-apiName: Interview API
      x-apiGroup: Interviews
      x-apiOrder: 1
  /interviews/{interviewId}:
    delete:
      tags:
        - Interview API:Interviews
      summary: Delete an interview
      operationId: InterviewApiInterviews_deleteInterviewById
      security:
        - jobadder_identity:
            - write
            - write_interview
      parameters:
        - description: Interview Id
          name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: NoContent
        '404':
          description: Interview was not found
      x-apiName: Interview API
      x-apiGroup: Interviews
      x-apiOrder: 1
  /interviews/{interviewId}/{applicationId}:
    get:
      tags:
        - Interview API:Interviews
      summary: Get an interview
      operationId: InterviewApiInterviews_getDetails
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - description: Interview Id
          name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - description: "Embed related resources.<br />\r\nResources available to embed are: evaluations"
          name: Embed
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Requested interview details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewRepresentation'
        '404':
          description: Requested interview was not found
      x-apiName: Interview API
      x-apiGroup: Interviews
      x-apiOrder: 1
  /interviews/{interviewId}/{applicationId}/evaluations:
    get:
      tags:
        - Interview API:Evaluations
      summary: Get interview evaluations
      operationId: InterviewApiEvaluations_getAll
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of interview evaluations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewEvaluationListRepresentation'
      x-apiName: Interview API
      x-apiGroup: Evaluations
      x-apiOrder: 2
  /interviews/{interviewId}/{applicationId}/evaluations/external/{contactId}:
    get:
      tags:
        - Interview API:Evaluations
      summary: Get an external/contact interview evaluation
      operationId: InterviewApiEvaluations_getExternalContactEvaluation
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: External/contact interview evaluation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewEvaluationRepresentation'
      x-apiName: Interview API
      x-apiGroup: Evaluations
      x-apiOrder: 2
    put:
      tags:
        - Interview API:Evaluations
      summary: Submit an external/contact interview evaluation
      operationId: InterviewApiEvaluations_submitExternalContactEvaluation
      security:
        - jobadder_identity:
            - write
            - write_interview
      parameters:
        - name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitInterviewEvaluationCommand'
      responses:
        '200':
          description: External/contact interview evaluation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewEvaluationRepresentation'
      x-apiName: Interview API
      x-apiGroup: Evaluations
      x-apiOrder: 2
  /interviews/{interviewId}/{applicationId}/evaluations/internal/{userId}:
    get:
      tags:
        - Interview API:Evaluations
      summary: Get an internal/user interview evaluation
      operationId: InterviewApiEvaluations_getUserInterviewEvaluation
      security:
        - jobadder_identity:
            - read
            - read_interview
      parameters:
        - name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Internal/user interview evaluation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewEvaluationRepresentation'
      x-apiName: Interview API
      x-apiGroup: Evaluations
      x-apiOrder: 2
    put:
      tags:
        - Interview API:Evaluations
      summary: Submit an internal/user interview evaluation
      operationId: InterviewApiEvaluations_submitUserInterviewEvaluation
      security:
        - jobadder_identity:
            - write
            - write_interview
      parameters:
        - name: interviewId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitInterviewEvaluationCommand'
      responses:
        '200':
          description: Internal/user interview evaluation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterviewEvaluationRepresentation'
      x-apiName: Interview API
      x-apiGroup: Evaluations
      x-apiOrder: 2
  /categories:
    get:
      tags:
        - Category API:Categories
      summary: Find categories
      operationId: CategoryApiCategories_getAll
      parameters:
        - name: CategoryId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Embed
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FindCategoriesEmbed'
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListRepresentation'
      x-apiName: Category API
      x-apiGroup: Categories
      x-apiOrder: 100
  /countries:
    get:
      tags:
        - Location API:Countries
      summary: Find countries
      operationId: LocationApiCountries_getAll
      parameters:
        - name: Code
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: List of countries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryListRepresentation'
      x-apiName: Location API
      x-apiGroup: Countries
      x-apiOrder: 100
  /locations:
    get:
      tags:
        - Location API:Locations
      summary: Find locations
      operationId: LocationApiLocations_getAll
      parameters:
        - name: LocationId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: Embed
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FindLocationsEmbed'
      responses:
        '200':
          description: List of locations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationListRepresentation'
      x-apiName: Location API
      x-apiGroup: Locations
      x-apiOrder: 100
  /worktypes:
    get:
      tags:
        - Work Type API:Work Types
      summary: Find work types
      operationId: WorkTypeApiWorkTypes_getAllWorkTypes
      parameters:
        - name: WorkTypeId
          in: query
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: List of work types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTypeListRepresentation'
      x-apiName: Work Type API
      x-apiGroup: Work Types
      x-apiOrder: 100
  /search/emailaddress:
    get:
      tags:
        - Search API:Search
      summary: Search by email address.
      operationId: SearchApiSearch_byEmailAddress
      security:
        - jobadder_identity:
            - read
            - read_candidate
            - read_contact
            - read_user
      description: Find candidates, contacts or users by email address.
      parameters:
        - description: Email address to search for.
          name: Email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Candidates, contacts or users matching the specified email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchedByEmailAddressModel'
      x-apiName: Search API
      x-apiGroup: Search
      x-apiOrder: 100
  /search/phonenumber:
    get:
      tags:
        - Search API:Search
      summary: Search by phone number.
      operationId: SearchApiSearch_byPhoneNumber
      security:
        - jobadder_identity:
            - read
            - read_candidate
            - read_contact
            - read_company
            - read_user
      description: Find candidates, contacts, companies or users by phone number.
      parameters:
        - description: >-
            [E.164 format phone number](https://en.wikipedia.org/wiki/E.164) to
            search for.
          name: E164
          in: query
          schema:
            type: string
      responses:
        '200':
          description: >-
            Candidates, contacts, companies or users matching the specified
            number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchedByPhoneNumberModel'
      x-apiName: Search API
      x-apiGroup: Search
      x-apiOrder: 100
  /partners/actions:
    get:
      tags:
        - Partner Action API:Actions
      summary: Find partner actions
      operationId: PartnerActionApiActions_listActions
      security:
        - jobadder_identity:
            - partner_ui_action
      parameters:
        - description: Type of action
          name: ActionType
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionType'
        - description: Unique identifier for partner actions
          name: ActionId
          in: query
          schema:
            type: array
            items:
              type: string
              format: uuid
        - description: Partner supplied unique reference for the action
          name: Reference
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: List of partner actions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerActionListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Actions
      x-apiOrder: 1
  /partners/actions/{act}:
    get:
      tags:
        - Partner Action API:Actions
      summary: Get a partner action
      operationId: PartnerActionApiActions_getAction
      security:
        - jobadder_identity:
            - partner_ui_action
      parameters:
        - description: Action Id
          name: act
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Requested partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerActionRepresentation'
        '404':
          description: Partner action was not found
      x-apiName: Partner Action API
      x-apiGroup: Actions
      x-apiOrder: 1
    post:
      tags:
        - Partner Action API:Actions
      summary: Add a partner action
      operationId: PartnerActionApiActions_addPartnerAction
      security:
        - jobadder_identity:
            - partner_ui_action
      parameters:
        - description: Action type. The type cannot be changed once assigned.
          name: act
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PartnerActionType'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPartnerActionCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerActionRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Actions
      x-apiOrder: 1
    put:
      tags:
        - Partner Action API:Actions
      summary: Update a partner action
      operationId: PartnerActionApiActions_updateAction
      security:
        - jobadder_identity:
            - partner_ui_action
      parameters:
        - description: Action Id
          name: act
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartnerActionCommand'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerActionRepresentation'
        '404':
          description: Partner action was not found
      x-apiName: Partner Action API
      x-apiGroup: Actions
      x-apiOrder: 1
    delete:
      tags:
        - Partner Action API:Actions
      summary: Delete a partner action
      operationId: PartnerActionApiActions_deleteAction
      security:
        - jobadder_identity:
            - partner_ui_action
      parameters:
        - description: Action Id
          name: act
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: NoContent
        '404':
          description: Partner action was not found
      x-apiName: Partner Action API
      x-apiGroup: Actions
      x-apiOrder: 1
  /partners/actions/{actionId}/applications:
    get:
      tags:
        - Partner Action API:Job Applications
      summary: Find job applications submitted to an action
      operationId: PartnerActionApiJobApplications_findSubmitted
      security:
        - jobadder_identity:
            - read
            - read_jobapplication
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Include partner actions at a specific stage
          name: Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job applications submitted to the specified partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Job Applications
      x-apiOrder: 51
  /partners/actions/{actionId}/applications/{applicationId}/complete:
    put:
      tags:
        - Partner Action API:Job Applications
      summary: Complete a job application action
      operationId: PartnerActionApiJobApplications_completeAction
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Job Applications
      x-apiOrder: 51
  /partners/actions/{actionId}/applications/{applicationId}/progress:
    put:
      tags:
        - Partner Action API:Job Applications
      summary: Update job application action progress
      operationId: PartnerActionApiJobApplications_updateProgress
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Job Applications
      x-apiOrder: 51
  /partners/actions/{actionId}/applications/{applicationId}/reject:
    put:
      tags:
        - Partner Action API:Job Applications
      summary: Reject a job application action
      operationId: PartnerActionApiJobApplications_rejectAction
      security:
        - jobadder_identity:
            - write
            - write_jobapplication
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Application Id
          name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobApplicationPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Job Applications
      x-apiOrder: 51
  /partners/actions/{actionId}/candidates:
    get:
      tags:
        - Partner Action API:Candidates
      summary: Find candidates submitted to an action
      operationId: PartnerActionApiCandidates_findSubmittedCandidates
      security:
        - jobadder_identity:
            - read
            - read_candidate
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Include partner actions at a specific stage
          name: Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of candidates submitted to the specified partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CandidateListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Candidates
      x-apiOrder: 51
  /partners/actions/{actionId}/candidates/{candidateId}/complete:
    put:
      tags:
        - Partner Action API:Candidates
      summary: Complete a candidate action
      operationId: PartnerActionApiCandidates_completeAction
      security:
        - jobadder_identity:
            - write
            - write_candidate
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCandidatePartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Candidates
      x-apiOrder: 51
  /partners/actions/{actionId}/candidates/{candidateId}/progress:
    put:
      tags:
        - Partner Action API:Candidates
      summary: Update candidate action progress
      operationId: PartnerActionApiCandidates_updateProgress
      security:
        - jobadder_identity:
            - write
            - write_candidate
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCandidatePartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Candidates
      x-apiOrder: 51
  /partners/actions/{actionId}/candidates/{candidateId}/reject:
    put:
      tags:
        - Partner Action API:Candidates
      summary: Reject a candidate action
      operationId: PartnerActionApiCandidates_rejectAction
      security:
        - jobadder_identity:
            - write
            - write_candidate
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Candidate Id
          name: candidateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCandidatePartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Candidates
      x-apiOrder: 51
  /partners/actions/{actionId}/companies:
    get:
      tags:
        - Partner Action API:Companies
      summary: Find companies submitted to an action
      operationId: PartnerActionApiCompanies_findSubmittedCompanies
      security:
        - jobadder_identity:
            - read
            - read_company
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Include partner actions at a specific stage
          name: Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of companies submitted to the specified partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Companies
      x-apiOrder: 51
  /partners/actions/{actionId}/companies/{companyId}/complete:
    put:
      tags:
        - Partner Action API:Companies
      summary: Complete a company action
      operationId: PartnerActionApiCompanies_completeAction
      security:
        - jobadder_identity:
            - write
            - write_company
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Companies
      x-apiOrder: 51
  /partners/actions/{actionId}/companies/{companyId}/progress:
    put:
      tags:
        - Partner Action API:Companies
      summary: Update company action progress
      operationId: PartnerActionApiCompanies_updateProgress
      security:
        - jobadder_identity:
            - write
            - write_company
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Companies
      x-apiOrder: 51
  /partners/actions/{actionId}/companies/{companyId}/reject:
    put:
      tags:
        - Partner Action API:Companies
      summary: Reject a company action
      operationId: PartnerActionApiCompanies_rejectAction
      security:
        - jobadder_identity:
            - write
            - write_company
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Company Id
          name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Companies
      x-apiOrder: 51
  /partners/actions/{actionId}/contacts:
    get:
      tags:
        - Partner Action API:Contacts
      summary: Find contacts submitted to an action
      operationId: PartnerActionApiContacts_findSubmittedContacts
      security:
        - jobadder_identity:
            - read
            - read_contact
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Include partner actions at a specific stage
          name: Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of contacts submitted to the specified partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Contacts
      x-apiOrder: 51
  /partners/actions/{actionId}/contacts/{contactId}/complete:
    put:
      tags:
        - Partner Action API:Contacts
      summary: Complete a contact action
      operationId: PartnerActionApiContacts_completeAction
      security:
        - jobadder_identity:
            - write
            - write_contact
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Contacts
      x-apiOrder: 51
  /partners/actions/{actionId}/contacts/{contactId}/progress:
    put:
      tags:
        - Partner Action API:Contacts
      summary: Update contact action progress
      operationId: PartnerActionApiContacts_updateProgress
      security:
        - jobadder_identity:
            - write
            - write_contact
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Contacts
      x-apiOrder: 51
  /partners/actions/{actionId}/contacts/{contactId}/reject:
    put:
      tags:
        - Partner Action API:Contacts
      summary: Reject a contact action
      operationId: PartnerActionApiContacts_rejectAction
      security:
        - jobadder_identity:
            - write
            - write_contact
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Contact Id
          name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Contacts
      x-apiOrder: 51
  /partners/actions/{actionId}/jobads:
    get:
      tags:
        - Partner Action API:Job Ads
      summary: Find job ads submitted to an action
      operationId: PartnerActionApiJobAds_findSubmittedJobAds
      security:
        - jobadder_identity:
            - read
            - read_jobad
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Include partner actions at a specific stage
          name: Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of job ads submitted to the specified partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobAdListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Job Ads
      x-apiOrder: 51
  /partners/actions/{actionId}/jobads/{adId}/complete:
    put:
      tags:
        - Partner Action API:Job Ads
      summary: Complete a job ad action
      operationId: PartnerActionApiJobAds_completeAction
      security:
        - jobadder_identity:
            - write
            - write_jobad
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobAdPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Job Ads
      x-apiOrder: 51
  /partners/actions/{actionId}/jobads/{adId}/progress:
    put:
      tags:
        - Partner Action API:Job Ads
      summary: Update job ad action progress
      operationId: PartnerActionApiJobAds_updateProgress
      security:
        - jobadder_identity:
            - write
            - write_jobad
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobAdPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Job Ads
      x-apiOrder: 51
  /partners/actions/{actionId}/jobads/{adId}/reject:
    put:
      tags:
        - Partner Action API:Job Ads
      summary: Reject a job ad action
      operationId: PartnerActionApiJobAds_rejectAction
      security:
        - jobadder_identity:
            - write
            - write_jobad
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Ad Id
          name: adId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobAdPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Job Ads
      x-apiOrder: 51
  /partners/actions/{actionId}/jobs:
    get:
      tags:
        - Partner Action API:Jobs
      summary: Find jobs submitted to an action
      operationId: PartnerActionApiJobs_findJobsSubmitted
      security:
        - jobadder_identity:
            - read
            - read_job
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Include partner actions at a specific stage
          name: Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of jobs submitted to the specified partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOrderListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Jobs
      x-apiOrder: 51
  /partners/actions/{actionId}/jobs/{jobId}/complete:
    put:
      tags:
        - Partner Action API:Jobs
      summary: Complete a job action
      operationId: PartnerActionApiJobs_completeJobAction
      security:
        - jobadder_identity:
            - write
            - write_job
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobOrderPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Jobs
      x-apiOrder: 51
  /partners/actions/{actionId}/jobs/{jobId}/progress:
    put:
      tags:
        - Partner Action API:Jobs
      summary: Update job action progress
      operationId: PartnerActionApiJobs_updateProgress
      security:
        - jobadder_identity:
            - write
            - write_job
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobOrderPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Jobs
      x-apiOrder: 51
  /partners/actions/{actionId}/jobs/{jobId}/reject:
    put:
      tags:
        - Partner Action API:Jobs
      summary: Reject a job action
      operationId: PartnerActionApiJobs_rejectJobAction
      security:
        - jobadder_identity:
            - write
            - write_job
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Job Id
          name: jobId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobOrderPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Jobs
      x-apiOrder: 51
  /partners/actions/{actionId}/placements:
    get:
      tags:
        - Partner Action API:Placements
      summary: Find placements submitted to an action
      operationId: PartnerActionApiPlacements_findSubmittedPlacements
      security:
        - jobadder_identity:
            - read
            - read_placement
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Include partner actions at a specific stage
          name: Stage
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartnerActionStage'
        - description: "Search for entities submitted to an action at a specific date and time \r\n(UTC assumed, [ISO date-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6)). \r\nPrefix with ```<``` or ```>``` to search dates before or after (inclusive) the specified date and time.\r\nSpecify multiple times to search for a range."
          name: SubmittedAt
          in: query
          schema:
            type: array
            items:
              type: string
        - description: The index of the first entry to return from the resource collection
          name: Offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: "The maximum number of entries to return.<br />\r\nSetting to 0 will return only the total count of matching resources."
          name: Limit
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: List of placements submitted to the specified partner action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlacementListRepresentation'
      x-apiName: Partner Action API
      x-apiGroup: Placements
      x-apiOrder: 51
  /partners/actions/{actionId}/placements/{placementId}/complete:
    put:
      tags:
        - Partner Action API:Placements
      summary: Complete a placement action
      operationId: PartnerActionApiPlacements_completePlacementAction
      security:
        - jobadder_identity:
            - write
            - write_placement
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlacementPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Placements
      x-apiOrder: 51
  /partners/actions/{actionId}/placements/{placementId}/progress:
    put:
      tags:
        - Partner Action API:Placements
      summary: Update placement action progress
      operationId: PartnerActionApiPlacements_updateProgress
      security:
        - jobadder_identity:
            - write
            - write_placement
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlacementPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Placements
      x-apiOrder: 51
  /partners/actions/{actionId}/placements/{placementId}/reject:
    put:
      tags:
        - Partner Action API:Placements
      summary: Reject a placement action
      operationId: PartnerActionApiPlacements_rejectPlacementAction
      security:
        - jobadder_identity:
            - write
            - write_placement
            - partner_ui_action
      parameters:
        - description: Action Id
          name: actionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Placement Id
          name: placementId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlacementPartnerActionCommand'
      responses:
        '204':
          description: NoContent
      x-apiName: Partner Action API
      x-apiGroup: Placements
      x-apiOrder: 51
  /webhooks:
    get:
      tags:
        - Webhook API:Webhooks
      summary: Find webhooks
      operationId: WebhookApiWebhooks_findWebhooks
      security:
        - jobadder_identity:
            - offline_access
      parameters:
        - name: Status
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WebhookStatus'
        - name: Events
          in: query
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EventName'
      responses:
        '200':
          description: List of webhooks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListRepresentation'
      x-apiName: Webhook API
      x-apiGroup: Webhooks
      x-apiOrder: 1
    post:
      tags:
        - Webhook API:Webhooks
      summary: Add a new webhook
      operationId: WebhookApiWebhooks_addNew
      security:
        - jobadder_identity:
            - offline_access
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddWebhookCommand'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRepresentation'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Webhook API
      x-apiGroup: Webhooks
      x-apiOrder: 1
  /webhooks/{webhookId}:
    get:
      tags:
        - Webhook API:Webhooks
      summary: Get a webhook
      operationId: WebhookApiWebhooks_getOne
      security:
        - jobadder_identity:
            - offline_access
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Requested webhook details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookRepresentation'
      x-apiName: Webhook API
      x-apiGroup: Webhooks
      x-apiOrder: 1
    put:
      tags:
        - Webhook API:Webhooks
      summary: Update an existing webhook
      operationId: WebhookApiWebhooks_updateExisting
      security:
        - jobadder_identity:
            - offline_access
      parameters:
        - name: webhookId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookCommand'
      responses:
        '200':
          description: Webhook was successfully updated
        '404':
          description: Webhook was not found
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-apiName: Webhook API
      x-apiGroup: Webhooks
      x-apiOrder: 1
    delete:
      tags:
        - Webhook API:Webhooks
      summary: Delete a webhook
      operationId: WebhookApiWebhooks_removeWebhook
      security:
        - jobadder_identity:
            - offline_access
      parameters:
        - description: Webhook Id
          name: webhookId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: NoContent
        '404':
          description: Webhook was not found
      x-apiName: Webhook API
      x-apiGroup: Webhooks
      x-apiOrder: 1
components:
  schemas:
    ActivityAnswerListModel:
      type: object
      properties:
        textAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityTextAnswerModel'
          nullable: true
        listValueAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityListValueAnswerModel'
          nullable: true
        dateRangeValueAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityDateRangeAnswerModel'
          nullable: true
        ratingValueAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityRatingAnswerModel'
          nullable: true
    ActivityDateRangeAnswerModel:
      type: object
      properties:
        questionId:
          type: integer
          format: int32
        startDate:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endDate:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    ActivityDateValueDetailModel:
      type: object
      properties:
        question:
          type: string
          nullable: true
        startDate:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endDate:
          type: string
          format: date-time
          nullable: true
    ActivityDetailListModel:
      type: object
      properties:
        textAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivitySingleValueDetailModel'
          nullable: true
        listValueAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityListValueDetailModel'
          nullable: true
        dateValueAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityDateValueDetailModel'
          nullable: true
        ratingValueAnswers:
          type: array
          items:
            $ref: '#/components/schemas/ActivityRatingValueDetailModel'
          nullable: true
    ActivityListValueAnswerModel:
      type: object
      properties:
        questionId:
          type: integer
          format: int32
        values:
          type: array
          items:
            type: string
          nullable: true
    ActivityListValueDetailModel:
      type: object
      properties:
        question:
          type: string
          nullable: true
        values:
          type: array
          items:
            type: string
          nullable: true
    ActivityQuestionModel:
      type: object
      properties:
        questionId:
          type: integer
          format: int32
        text:
          type: string
          nullable: true
        mandatory:
          type: boolean
        possibleValues:
          type: array
          items:
            type: string
          nullable: true
        questionAnswerType:
          type: string
          nullable: true
        minimumRating:
          type: integer
          format: int32
          nullable: true
        maximumRating:
          type: integer
          format: int32
          nullable: true
        conditionalAnswer:
          type: string
          nullable: true
        conditionalQuestions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityQuestionModel'
          nullable: true
    ActivityRatingAnswerModel:
      type: object
      properties:
        questionId:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
    ActivityRatingValueDetailModel:
      type: object
      properties:
        question:
          type: string
          nullable: true
        percentage:
          type: number
          format: double
    ActivitySingleValueDetailModel:
      type: object
      properties:
        question:
          type: string
          nullable: true
        answer:
          type: string
          nullable: true
    ActivityTextAnswerModel:
      type: object
      properties:
        questionId:
          type: integer
          format: int32
        text:
          type: string
          nullable: true
    AddCandidateActivityCommand:
      type: object
      properties:
        activitySettingId:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
          nullable: true
        answers:
          $ref: '#/components/schemas/ActivityAnswerListModel'
    AddCandidateCommand:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        firstName:
          maxLength: 50
          type: string
          nullable: true
        lastName:
          maxLength: 50
          type: string
          nullable: true
        email:
          maxLength: 100
          type: string
          nullable: true
        phone:
          maxLength: 50
          type: string
          nullable: true
        mobile:
          maxLength: 50
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          maxLength: 20
          type: string
          nullable: true
        statusId:
          description: Candidate status
          type: integer
          format: int32
          nullable: true
        rating:
          maxLength: 50
          type: string
          nullable: true
        source:
          description: Candidate source
          maxLength: 50
          type: string
          nullable: true
        seeking:
          $ref: '#/components/schemas/CandidateSeekingStatus'
        unsubscribed:
          type: boolean
        dateOfBirth:
          type: string
          format: date
          nullable: true
        emergencyContact:
          maxLength: 200
          type: string
          nullable: true
        emergencyPhone:
          maxLength: 40
          type: string
          nullable: true
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        address:
          $ref: '#/components/schemas/SubmitAddressModel'
        skillTags:
          maxLength: 100
          type: array
          items:
            type: string
          nullable: true
        employment:
          $ref: '#/components/schemas/SubmitEmploymentModel'
        availability:
          $ref: '#/components/schemas/SubmitCandidateAvailabilityModel'
        education:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCandidateEducationModel'
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        recruiterUserId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    AddCandidateJobOrderCommand:
      required:
        - jobId
      type: object
      properties:
        jobId:
          type: array
          items:
            type: integer
            format: int32
        source:
          maxLength: 100
          type: string
          nullable: true
    AddCandidateNoteCommand:
      required:
        - text
      type: object
      properties:
        type:
          description: Note type
          maxLength: 50
          type: string
          nullable: true
        text:
          description: Note content
          minLength: 1
          type: string
        applicationId:
          description: Optional list of related job applications to link to the note
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        createdByIntegration:
          description: >-
            When set to true, it indicates that the note is created by
            integration as a part of some automation workflows, not by a
            specific user
          type: boolean
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddCandidateUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    AddCandidateVideoCommand:
      required:
        - url
      type: object
      properties:
        url:
          description: Video URL
          type: string
          format: uri
        reference:
          description: "Optional unique reference for this video type, if specified then an existing video \r\nwith the same type and reference will be updated if found."
          maxLength: 200
          type: string
          nullable: true
    AddCompanyActivityCommand:
      type: object
      properties:
        activitySettingId:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
          nullable: true
        answers:
          $ref: '#/components/schemas/ActivityAnswerListModel'
    AddCompanyAddressCommand:
      required:
        - name
      type: object
      properties:
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        name:
          minLength: 1
          type: string
        isPrimaryAddress:
          type: boolean
    AddCompanyCommand:
      required:
        - name
      type: object
      properties:
        summary:
          type: string
          nullable: true
        name:
          maxLength: 100
          minLength: 0
          type: string
        parentCompanyId:
          type: integer
          format: int32
          nullable: true
        legalName:
          description: Company LegalName
          maxLength: 200
          type: string
          nullable: true
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        statusId:
          description: Company status
          type: integer
          format: int32
          nullable: true
        custom:
          description: >-
            Custom field values. Only the specified fields will be updated, each
            fieldId can specified once.
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        ownerUserId:
          type: integer
          format: int32
          nullable: true
        recruiterUserId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    AddCompanyNoteCommand:
      required:
        - text
      type: object
      properties:
        type:
          description: Note type
          maxLength: 50
          type: string
          nullable: true
        text:
          description: Note content
          minLength: 1
          type: string
        contactId:
          description: Optional list of related contacts to link to the note
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddCompanyUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    AddCompanyWorkflowCommand:
      required:
        - name
      type: object
      properties:
        approvers:
          description: >-
            Approvers for this workflow. Only the specified workflow stages will
            be updated, each stageIndex can be specified once.
          type: array
          items:
            $ref: '#/components/schemas/SubmitCompanyWorkflowApproverModel'
          nullable: true
        name:
          maxLength: 100
          minLength: 1
          type: string
    AddContactActivityCommand:
      type: object
      properties:
        activitySettingId:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
          nullable: true
        answers:
          $ref: '#/components/schemas/ActivityAnswerListModel'
    AddContactCommand:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        firstName:
          maxLength: 50
          type: string
          nullable: true
        lastName:
          maxLength: 50
          type: string
          nullable: true
        email:
          maxLength: 100
          type: string
          nullable: true
        phone:
          maxLength: 50
          type: string
          nullable: true
        mobile:
          maxLength: 50
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          maxLength: 20
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        position:
          type: string
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        reportsToContactId:
          type: integer
          format: int32
          nullable: true
        officeAddressId:
          type: string
          format: uuid
          nullable: true
        statusId:
          description: Contact status
          type: integer
          format: int32
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        ownerUserId:
          type: integer
          format: int32
          nullable: true
        recruiterUserId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    AddContactNoteCommand:
      required:
        - text
      type: object
      properties:
        type:
          description: Note type
          maxLength: 50
          type: string
          nullable: true
        text:
          description: Note content
          minLength: 1
          type: string
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddContactUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    AddJobAdDraftCommand:
      required:
        - ownerUserId
        - title
      type: object
      properties:
        summary:
          maxLength: 150
          type: string
          nullable: true
        title:
          minLength: 1
          type: string
        description:
          type: string
          nullable: true
        reference:
          maxLength: 20
          type: string
          nullable: true
        bulletPoints:
          type: array
          items:
            type: string
          nullable: true
        jobId:
          description: Associated job
          type: integer
          format: int32
        ownerUserId:
          type: integer
          format: int32
    AddJobApplicationActivityCommand:
      type: object
      properties:
        activitySettingId:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
          nullable: true
        answers:
          $ref: '#/components/schemas/ActivityAnswerListModel'
    AddJobApplicationExternalInterviewCommand:
      required:
        - location
        - interviewersContactIds
      type: object
      properties:
        startAt:
          description: >-
            Interview start time. The allowed minutes for the time are 0, 15, 30
            and 45.
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endAt:
          description: >-
            Interview end time. The allowed minutes for the time are 0, 15, 30
            and 45.
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        location:
          description: Interview location
          maxLength: 200
          type: string
          nullable: true
        interviewersContactIds:
          description: Contact IDs of the interviewers
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    AddJobApplicationInternalInterviewCommand:
      required:
        - location
        - interviewersUserIds
      type: object
      properties:
        startAt:
          description: >-
            Interview start time. The allowed minutes for the time are 0, 15, 30
            and 45.
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endAt:
          description: >-
            Interview end time. The allowed minutes for the time are 0, 15, 30
            and 45.
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        location:
          description: Interview location
          maxLength: 200
          type: string
          nullable: true
        interviewersUserIds:
          description: User IDs of the interviewers
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    AddJobApplicationNoteCommand:
      required:
        - text
      type: object
      properties:
        type:
          description: Note type
          maxLength: 50
          type: string
          nullable: true
        text:
          description: Note content
          minLength: 1
          type: string
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddJobApplicationUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    AddJobApplicationVideoCommand:
      required:
        - url
      type: object
      properties:
        url:
          description: Video URL
          type: string
          format: uri
        reference:
          description: "Optional unique reference for this video type, if specified then an existing video \r\nwith the same type and reference will be updated if found."
          maxLength: 200
          type: string
          nullable: true
    AddJobOrderActivityCommand:
      type: object
      properties:
        activitySettingId:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
          nullable: true
        answers:
          $ref: '#/components/schemas/ActivityAnswerListModel'
    AddJobOrderCandidateCommand:
      required:
        - candidateId
      type: object
      properties:
        candidateId:
          type: array
          items:
            type: integer
            format: int32
        source:
          maxLength: 100
          type: string
          nullable: true
    AddJobOrderCommand:
      required:
        - jobTitle
      type: object
      properties:
        jobTitle:
          maxLength: 100
          type: string
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        contactId:
          type: integer
          format: int32
          nullable: true
        jobDescription:
          type: string
          nullable: true
        statusId:
          description: Job status
          type: integer
          format: int32
          nullable: true
        userFavourite:
          description: Job is a favourite for the current user
          type: boolean
          nullable: true
        category:
          $ref: '#/components/schemas/SubmitCategoryModel'
        location:
          $ref: '#/components/schemas/SubmitLocationModel'
        workplaceAddressId:
          description: Workplace Address Id
          type: string
          format: uuid
          nullable: true
        start:
          $ref: '#/components/schemas/SubmitJobOrderStartModel'
        duration:
          $ref: '#/components/schemas/SubmitDurationModel'
        workTypeId:
          type: integer
          format: int32
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitJobOrderSalaryRangeModel'
        fee:
          $ref: '#/components/schemas/SubmitJobOrderFeeModel'
        numberOfJobs:
          type: integer
          format: int32
        source:
          maxLength: 50
          type: string
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        skillTags:
          $ref: '#/components/schemas/SubmitJobOrderSkillTagsModel'
        ownerUserId:
          description: User Id - Owner of this job
          type: integer
          format: int32
        recruiterUserId:
          description: User Id - Optional list of recruiters assigned to the job
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    AddJobOrderNoteCommand:
      required:
        - text
      type: object
      properties:
        type:
          description: Note type
          maxLength: 50
          type: string
          nullable: true
        text:
          description: Note content
          minLength: 1
          type: string
        applicationId:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddJobOrderUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    AddNoteCommand:
      required:
        - text
        - type
      type: object
      properties:
        type:
          maxLength: 50
          minLength: 1
          type: string
        text:
          description: Note content
          minLength: 1
          type: string
        jobId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        requisitionId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        candidateId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applicationId:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        placementId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companyId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contactId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        createdByIntegration:
          type: boolean
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddPartnerActionCommand:
      required:
        - actionName
      type: object
      properties:
        actionName:
          description: Menu item label that will appear to the end-user
          maxLength: 100
          type: string
          nullable: true
        reference:
          description: Unique partner defined reference/identifier for the action
          maxLength: 100
          type: string
          nullable: true
        url:
          description: "URL to open after the action is selected and assigned the `\"Submitted\"` stage.\\\r\nTemplates parameters can be used in the URL to identify the resource submitted to the action\r\n<table><tr><td>`{userId}`</td><td>Replaced with the User Id of the user performing the action</td></tr><tr><td>`{jobId}`</td><td>Replaced with the Job Id</td></tr><tr><td>`{adId}`</td><td>Replaced with the Job Ad Id</td></tr><tr><td>`{candidateId}`</td><td>Replaced with the Candidate Id</td></tr><tr><td>`{applicationId}`</td><td>Replaced with the Job Application Id</td></tr><tr><td>`{placementId}`</td><td>Replaced with the Placement Id</td></tr><tr><td>`{companyId}`</td><td>Replaced with the Company Id</td></tr><tr><td>`{contactId}`</td><td>Replaced with the Contact Id</td></tr></table>"
          maxLength: 500
          type: string
          format: uri
          nullable: true
        urlType:
          $ref: '#/components/schemas/PartnerActionUrlType'
        allowResubmit:
          description: Allow resources to be resubmitted to an action.
          type: boolean
        actionFilter:
          $ref: '#/components/schemas/PartnerActionFilterModel'
        webhookData:
          description: Additional data to include with the webhook notification
          nullable: true
    AddPlacementActivityCommand:
      type: object
      properties:
        activitySettingId:
          type: integer
          format: int32
        statusId:
          type: integer
          format: int32
          nullable: true
        answers:
          $ref: '#/components/schemas/ActivityAnswerListModel'
    AddPlacementNoteCommand:
      required:
        - text
      type: object
      properties:
        type:
          description: Note type
          maxLength: 50
          type: string
          nullable: true
        text:
          description: Note content
          minLength: 1
          type: string
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddPlacementUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    AddRequisitionCommand:
      required:
        - contactId
        - jobTitle
      type: object
      properties:
        contactId:
          description: Hiring manager (contact) submitting the requisition.
          type: integer
          format: int32
        jobTitle:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        jobDescription:
          type: string
          nullable: true
        category:
          $ref: '#/components/schemas/SubmitCategoryModel'
        location:
          $ref: '#/components/schemas/SubmitLocationModel'
        workplaceAddressId:
          description: Workplace address Id
          type: string
          format: uuid
          nullable: true
        start:
          $ref: '#/components/schemas/SubmitJobOrderStartModel'
        duration:
          $ref: '#/components/schemas/SubmitDurationModel'
        workTypeId:
          type: integer
          format: int32
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitJobOrderSalaryRangeModel'
        numberOfJobs:
          type: integer
          format: int32
        source:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        workflowId:
          type: integer
          format: int32
          nullable: true
        recruiterUserId:
          description: User Id - Optional list of recruiters assigned to the requisition.
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        formID:
          type: integer
          format: int32
          nullable: true
    AddRequisitionNoteCommand:
      required:
        - text
      type: object
      properties:
        type:
          description: Note type
          maxLength: 50
          type: string
          nullable: true
        text:
          description: Note content
          minLength: 1
          type: string
        reference:
          description: Optional reference string used to identify a note or group of notes
          maxLength: 200
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/SubmitUserModel'
    AddUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
    AddWebhookCommand:
      required:
        - name
        - events
        - url
      type: object
      properties:
        name:
          maxLength: 100
          type: string
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventName'
          nullable: true
        eventFilters:
          $ref: '#/components/schemas/SubmitWebhookEventFilterModel'
        url:
          description: >-
            Target URL that will listen for incoming HTTP POST notification
            messages.
          type: string
          format: uri
          nullable: true
        authorization:
          description: >-
            Optional authorization header to include with the HTTP POST
            notification.
          type: string
          nullable: true
          example: Basic dXNlcm5hbWU6cGFzc3dvcmQ=
        status:
          $ref: '#/components/schemas/SubmitWebhookStatus'
    AddressModel:
      type: object
      properties:
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
    ApproveRequisitionCommand:
      required:
        - approverId
      type: object
      properties:
        approverId:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
    CandidateActivityListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateActivityModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    CandidateActivityModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        candidateId:
          type: integer
          format: int32
    CandidateActivityRepresentation:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        candidateId:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/ModelLinks'
    CandidateActivitySettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        validStatuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusModel'
          nullable: true
        statusMandatory:
          type: boolean
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityQuestionModel'
          nullable: true
    CandidateActivitySettingSummaryModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    CandidateActivitySettingsListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateActivitySettingSummaryModel'
          nullable: true
    CandidateActivitySummaryListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateActivitySummaryModel'
          nullable: true
    CandidateActivitySummaryModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        candidateId:
          type: integer
          format: int32
    CandidateAttachmentCategoryListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateAttachmentCategoryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CandidateAttachmentCategoryModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CandidateAttachmentType'
        category:
          type: string
          nullable: true
    CandidateAttachmentLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    CandidateAttachmentListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateAttachmentModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    CandidateAttachmentModel:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/CandidateAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        candidateId:
          type: integer
          format: int32
          nullable: true
    CandidateAttachmentRepresentation:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/CandidateAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        candidateId:
          type: integer
          format: int32
          nullable: true
        links:
          $ref: '#/components/schemas/CandidateAttachmentLinks'
    CandidateAttachmentType:
      enum:
        - Other
        - Resume
        - CoverLetter
        - FormattedResume
        - Screening
        - Check
        - Reference
        - License
      type: string
      format: string
    CandidateAvailabilityListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateAvailabilityModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CandidateAvailabilityModel:
      type: object
      properties:
        date:
          description: >-
            Date available ([ISO
            full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6))
          type: string
          properties:
            timeOfDay:
              format: time
          format: date
        day:
          $ref: '#/components/schemas/DayOfWeek'
        shifts:
          description: Time available, at least one and at most two shifts
          type: array
          items:
            $ref: '#/components/schemas/TimeRangeModel'
          nullable: true
          readOnly: true
        recurring:
          description: Availability is repeated in following weeks
          type: boolean
        until:
          description: Optional end date of repeating availability
          type: string
          format: date
          nullable: true
    CandidateEducationModel:
      type: object
      properties:
        institution:
          type: string
          nullable: true
        course:
          type: string
          nullable: true
        date:
          description: "Year, month or date completed.<br />\r\nYear must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), the 4 digit year the course was completed, e.g. 2017<br />\r\nMonth must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6) \"-\" [ISO date-month](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07<br />\r\nDate must be formatted as [ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07-31"
          type: string
          nullable: true
          readOnly: true
    CandidateEmploymentHistoryModel:
      type: object
      properties:
        description:
          description: Description of responsibilities and achievements.
          type: string
          nullable: true
        employer:
          description: Name of the employer
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        start:
          description: "Year, month or date employment started.<br />\r\nYear must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), the 4 digit year the course was completed, e.g. 2017<br />\r\nMonth must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6) \"-\" [ISO date-month](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07<br />\r\nDate must be formatted as [ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07-31"
          type: string
          nullable: true
        end:
          description: "Year, month or date employment finished, or \"Present\" for a current role.<br />\r\nYear must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), the 4 digit year the course was completed, e.g. 2017<br />\r\nMonth must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6) \"-\" [ISO date-month](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07<br />\r\nDate must be formatted as [ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07-31"
          type: string
          nullable: true
    CandidateEmploymentModel:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/CurrentEmploymentModel'
        ideal:
          $ref: '#/components/schemas/CandidateIdealEmploymentModel'
        history:
          type: array
          items:
            $ref: '#/components/schemas/CandidateEmploymentHistoryModel'
          nullable: true
    CandidateIdealEmploymentModel:
      type: object
      properties:
        position:
          type: string
          nullable: true
        workType:
          $ref: '#/components/schemas/WorkTypeModel'
        salary:
          $ref: '#/components/schemas/SalaryRangeModel'
        other:
          type: array
          items:
            $ref: '#/components/schemas/CandidateIdealSalaryModel'
          nullable: true
    CandidateIdealSalaryModel:
      type: object
      properties:
        workType:
          $ref: '#/components/schemas/WorkTypeModel'
        salary:
          $ref: '#/components/schemas/SalaryRangeModel'
    CandidateJobApplicationStatisticsSummaryModel:
      type: object
      properties:
        new:
          type: integer
          format: int32
        active:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
    CandidateLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        contact:
          description: Optional contact if candidate is also a contact
          type: string
          format: uri
          nullable: true
        photo:
          description: Candidate photo
          type: string
          format: uri
          nullable: true
        skills:
          description: Skills
          type: string
          format: uri
          nullable: true
        notes:
          description: Notes
          type: string
          format: uri
          nullable: true
        attachments:
          description: Attachments
          type: string
          format: uri
          nullable: true
        videos:
          description: Videos
          type: string
          format: uri
          nullable: true
        floats:
          description: Floats
          type: string
          format: uri
          nullable: true
        submissions:
          description: Submissions
          type: string
          format: uri
          nullable: true
        applications:
          description: Job Applications
          type: string
          format: uri
          nullable: true
        placements:
          description: Placements
          type: string
          format: uri
          nullable: true
    CandidateListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    CandidateMatchedByEmailModel:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/MatchedEmailAddressModel'
        candidateId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastNoteAt:
          type: string
          format: date-time
          nullable: true
    CandidateMatchedByPhoneModel:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/MatchedPhoneNumberModel'
        candidateId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastNoteAt:
          type: string
          format: date-time
          nullable: true
    CandidateNameModel:
      required:
        - candidateId
      type: object
      properties:
        candidateId:
          description: Candidate Id
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Contact phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        contactMethod:
          description: Preferred contact method
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        address:
          $ref: '#/components/schemas/AddressModel'
        status:
          $ref: '#/components/schemas/StatusModel'
        rating:
          description: Internal rating of the candidate
          type: string
          nullable: true
        source:
          description: The source of the candidate
          type: string
          nullable: true
        seeking:
          $ref: '#/components/schemas/CandidateSeekingStatus'
    CandidatePayrollBillingListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidatePayrollBillingModel'
          nullable: true
    CandidatePayrollBillingModel:
      type: object
      properties:
        candidateId:
          description: Candidate Id
          type: integer
          format: int32
        externalCandidateId:
          description: Candidate ExternalID
          type: string
          nullable: true
        office:
          description: Office Code
          type: string
          nullable: true
        position:
          description: Position
          type: string
          nullable: true
        skillGroup:
          description: Skill Group
          type: string
          nullable: true
    CandidatePlacementModel:
      required:
        - candidateId
      type: object
      properties:
        candidateId:
          description: Candidate Id
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Contact phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        contactMethod:
          description: Preferred contact method
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        address:
          $ref: '#/components/schemas/AddressModel'
        status:
          $ref: '#/components/schemas/StatusModel'
        rating:
          description: Internal rating of the candidate
          type: string
          nullable: true
        source:
          description: The source of the candidate
          type: string
          nullable: true
        seeking:
          $ref: '#/components/schemas/CandidateSeekingStatus'
        dateOfBirth:
          description: >-
            Candidate date of birth available ([ISO
            full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6))
          type: string
          format: date
          nullable: true
    CandidatePlacementStatisticsSummaryModel:
      type: object
      properties:
        total:
          type: integer
          format: int32
    CandidateRepresentation:
      required:
        - candidateId
      type: object
      properties:
        summary:
          type: string
          nullable: true
        candidateId:
          description: Candidate Id
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Contact phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        contactMethod:
          description: Preferred contact method
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        address:
          $ref: '#/components/schemas/AddressModel'
        status:
          $ref: '#/components/schemas/StatusModel'
        rating:
          description: Internal rating of the candidate
          type: string
          nullable: true
        source:
          description: The source of the candidate
          type: string
          nullable: true
        seeking:
          $ref: '#/components/schemas/CandidateSeekingStatus'
        dateOfBirth:
          description: >-
            Candidate date of birth available ([ISO
            full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6))
          type: string
          format: date
          nullable: true
        emergencyContact:
          description: The emergency contact of the candidate
          type: string
          nullable: true
        emergencyPhone:
          description: The emergency phone of the candidate
          type: string
          nullable: true
        otherEmail:
          description: Other email addresses used by the candidate
          type: array
          items:
            type: string
          nullable: true
        social:
          description: Candidate social profiles
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        employment:
          $ref: '#/components/schemas/CandidateEmploymentModel'
        availability:
          $ref: '#/components/schemas/CandidateStartModel'
        education:
          type: array
          items:
            $ref: '#/components/schemas/CandidateEducationModel'
          nullable: true
        skillTags:
          type: array
          items:
            type: string
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
          nullable: true
        recruiters:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        partnerActions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionStageModel'
          nullable: true
        statistics:
          $ref: '#/components/schemas/CandidateStatisticsModel'
        links:
          $ref: '#/components/schemas/CandidateLinks'
    CandidateSeekingStatus:
      enum:
        - 'Yes'
        - Maybe
        - 'No'
      type: string
      format: string
    CandidateStartModel:
      description: >-
        The date the candidate is available to start. Specify ONE OF immediate,
        relative or date.
      type: object
      properties:
        immediate:
          type: boolean
        relative:
          $ref: '#/components/schemas/RelativeStartModel'
        date:
          description: The specific date that a job starts or a candidate is available
          type: string
          format: date
          nullable: true
    CandidateStatisticsModel:
      type: object
      properties:
        applications:
          $ref: '#/components/schemas/CandidateJobApplicationStatisticsSummaryModel'
        placements:
          $ref: '#/components/schemas/CandidatePlacementStatisticsSummaryModel'
    CandidateSummaryModel:
      required:
        - candidateId
      type: object
      properties:
        candidateId:
          description: Candidate Id
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Contact phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        contactMethod:
          description: Preferred contact method
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        address:
          $ref: '#/components/schemas/AddressModel'
        status:
          $ref: '#/components/schemas/StatusModel'
        rating:
          description: Internal rating of the candidate
          type: string
          nullable: true
        source:
          description: The source of the candidate
          type: string
          nullable: true
        seeking:
          $ref: '#/components/schemas/CandidateSeekingStatus'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    CandidateUserTaskModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        candidateId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    CandidateUserTaskRepresentation:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        candidateId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/UserTaskLinks'
    CandidateVideoListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CandidateVideoModel'
          nullable: true
        links:
          $ref: '#/components/schemas/PageLinks'
    CandidateVideoModel:
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CandidateVideoType'
        url:
          description: Video URL
          type: string
          format: uri
          nullable: true
        reference:
          description: Optional unique reference for this video type.
          type: string
          nullable: true
        createdAt:
          description: Date this video was added to the candidate
          type: string
          format: date-time
          nullable: true
        updatedAt:
          description: >-
            Date this video was last updated (updates are possible when a video
            is added with a Reference)
          type: string
          format: date-time
          nullable: true
    CandidateVideoRepresentation:
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CandidateVideoType'
        url:
          description: Video URL
          type: string
          format: uri
          nullable: true
        reference:
          description: Optional unique reference for this video type.
          type: string
          nullable: true
        createdAt:
          description: Date this video was added to the candidate
          type: string
          format: date-time
          nullable: true
        updatedAt:
          description: >-
            Date this video was last updated (updates are possible when a video
            is added with a Reference)
          type: string
          format: date-time
          nullable: true
    CandidateVideoType:
      enum:
        - Other
        - Profile
        - CoverLetter
      type: string
      format: string
    CategoryListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CategoryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CategoryModel:
      required:
        - categoryId
        - name
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/SubCategoryModel'
          nullable: true
    CompanyActivityListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyActivityModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    CompanyActivityModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        companyId:
          type: integer
          format: int32
    CompanyActivityRepresentation:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        companyId:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/ModelLinks'
    CompanyActivitySettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        validStatuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusModel'
          nullable: true
        statusMandatory:
          type: boolean
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityQuestionModel'
          nullable: true
    CompanyActivitySettingSummaryModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    CompanyActivitySettingsListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyActivitySettingSummaryModel'
          nullable: true
    CompanyActivitySummaryListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyActivitySummaryModel'
          nullable: true
    CompanyActivitySummaryModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        companyId:
          type: integer
          format: int32
    CompanyAddressListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyAddressModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CompanyAddressModel:
      required:
        - addressId
      type: object
      properties:
        addressId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
    CompanyAddressRepresentation:
      required:
        - addressId
      type: object
      properties:
        addressId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CompanyAttachmentCategoryListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyAttachmentCategoryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CompanyAttachmentCategoryModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CompanyAttachmentType'
        category:
          type: string
          nullable: true
    CompanyAttachmentLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    CompanyAttachmentListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyAttachmentModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    CompanyAttachmentModel:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/CompanyAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
    CompanyAttachmentRepresentation:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/CompanyAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/CompanyAttachmentLinks'
    CompanyAttachmentType:
      enum:
        - Other
        - Terms
      type: string
      format: string
    CompanyLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        logo:
          description: Company logo
          type: string
          format: uri
          nullable: true
        contacts:
          description: Company contacts
          type: string
          format: uri
          nullable: true
        subsidiaries:
          description: Company subsidiaries
          type: string
          format: uri
          nullable: true
        addresses:
          description: Company addresses
          type: string
          format: uri
          nullable: true
        skills:
          description: Skills
          type: string
          format: uri
          nullable: true
        notes:
          description: Company notes
          type: string
          format: uri
          nullable: true
        attachments:
          description: Attachments
          type: string
          format: uri
          nullable: true
        jobs:
          description: Company jobs
          type: string
          format: uri
          nullable: true
        requisitions:
          description: Company requisitions
          type: string
          format: uri
          nullable: true
        floats:
          description: Company floats
          type: string
          format: uri
          nullable: true
        submissions:
          description: Company submissions
          type: string
          format: uri
          nullable: true
        placements:
          description: Company placements
          type: string
          format: uri
          nullable: true
        workflows:
          $ref: '#/components/schemas/CompanyWorkflowLinks'
    CompanyListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanySummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    CompanyMatchedByPhoneModel:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/MatchedPhoneNumberModel'
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastNoteAt:
          type: string
          format: date-time
          nullable: true
    CompanyNameModel:
      required:
        - companyId
      type: object
      properties:
        companyId:
          description: Unique identifier for the company
          type: integer
          format: int32
        name:
          description: Company name
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusModel'
        owner:
          $ref: '#/components/schemas/UserNameModel'
    CompanyRepresentation:
      required:
        - companyId
      type: object
      properties:
        summary:
          type: string
          nullable: true
        companyId:
          description: Unique identifier for the company
          type: integer
          format: int32
        name:
          description: Company name
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusModel'
        mainContact:
          $ref: '#/components/schemas/ContactNameModel'
        primaryAddress:
          $ref: '#/components/schemas/CompanyAddressModel'
        legalName:
          type: string
          nullable: true
        social:
          description: Company social profiles
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        parent:
          $ref: '#/components/schemas/CompanyNameModel'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        recruiters:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        partnerActions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionStageModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/CompanyLinks'
    CompanySummaryModel:
      required:
        - companyId
      type: object
      properties:
        companyId:
          description: Unique identifier for the company
          type: integer
          format: int32
        name:
          description: Company name
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/StatusModel'
        mainContact:
          $ref: '#/components/schemas/ContactNameModel'
        primaryAddress:
          $ref: '#/components/schemas/CompanyAddressModel'
        owner:
          $ref: '#/components/schemas/UserNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    CompanyUserTaskModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        companyId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    CompanyUserTaskRepresentation:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        companyId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/UserTaskLinks'
    CompanyWorkflowApproverModel:
      required:
        - contactId
        - stageIndex
      type: object
      properties:
        stageIndex:
          type: integer
          format: int32
        contactId:
          description: Unique identifier for the contact
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        position:
          description: Position or job title
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        inactive:
          description: Contact is no longer with the company
          type: boolean
        status:
          $ref: '#/components/schemas/StatusModel'
        owner:
          $ref: '#/components/schemas/UserNameModel'
    CompanyWorkflowLinks:
      type: object
      properties:
        requisition:
          type: string
          format: uri
          nullable: true
    CompanyWorkflowListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyWorkflowNameModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CompanyWorkflowModel:
      required:
        - name
        - workflowId
      type: object
      properties:
        workflowId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        archived:
          type: boolean
        approvers:
          type: array
          items:
            $ref: '#/components/schemas/CompanyWorkflowApproverModel'
          nullable: true
    CompanyWorkflowNameModel:
      required:
        - name
        - workflowId
      type: object
      properties:
        workflowId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        archived:
          type: boolean
    CompanyWorkflowRepresentation:
      required:
        - name
        - workflowId
      type: object
      properties:
        workflowId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        archived:
          type: boolean
        approvers:
          type: array
          items:
            $ref: '#/components/schemas/CompanyWorkflowApproverModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CompanyWorkflowType:
      enum:
        - Requisition
      type: string
      format: string
    ContactActivityListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactActivityModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    ContactActivityModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        contactId:
          type: integer
          format: int32
    ContactActivityRepresentation:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        contactId:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/ModelLinks'
    ContactActivitySettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        validStatuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusModel'
          nullable: true
        statusMandatory:
          type: boolean
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityQuestionModel'
          nullable: true
    ContactActivitySettingSummaryModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    ContactActivitySettingsListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactActivitySettingSummaryModel'
          nullable: true
    ContactActivitySummaryListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactActivitySummaryModel'
          nullable: true
    ContactActivitySummaryModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        contactId:
          type: integer
          format: int32
    ContactAttachmentCategoryListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactAttachmentCategoryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    ContactAttachmentCategoryModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ContactAttachmentType'
        category:
          type: string
          nullable: true
    ContactAttachmentLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    ContactAttachmentListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactAttachmentModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    ContactAttachmentModel:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ContactAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
    ContactAttachmentRepresentation:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/ContactAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/ContactAttachmentLinks'
    ContactAttachmentType:
      enum:
        - Other
        - Terms
      type: string
      format: string
    ContactLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        candidate:
          description: Optional candidate if contact is also a candidate
          type: string
          format: uri
          nullable: true
        photo:
          description: Photo
          type: string
          format: uri
          nullable: true
        company:
          description: Company
          type: string
          format: uri
          nullable: true
        officeAddress:
          description: Office address
          type: string
          format: uri
          nullable: true
        skills:
          description: Skills
          type: string
          format: uri
          nullable: true
        notes:
          description: Notes
          type: string
          format: uri
          nullable: true
        attachments:
          description: Attachments
          type: string
          format: uri
          nullable: true
        jobs:
          description: Jobs
          type: string
          format: uri
          nullable: true
        floats:
          description: Floats
          type: string
          format: uri
          nullable: true
        submissions:
          description: Submissions
          type: string
          format: uri
          nullable: true
    ContactListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ContactSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    ContactMatchedByEmailModel:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/MatchedEmailAddressModel'
        contactId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/MatchedEmailAddressModelCompanyName'
        position:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastNoteAt:
          type: string
          format: date-time
          nullable: true
    ContactMatchedByPhoneModel:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/MatchedPhoneNumberModel'
        contactId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/MatchedPhoneNumberModelCompanyName'
        position:
          type: string
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        lastNoteAt:
          type: string
          format: date-time
          nullable: true
    ContactNameModel:
      required:
        - contactId
      type: object
      properties:
        contactId:
          description: Unique identifier for the contact
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        position:
          description: Position or job title
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        inactive:
          description: Contact is no longer with the company
          type: boolean
        status:
          $ref: '#/components/schemas/StatusModel'
        owner:
          $ref: '#/components/schemas/UserNameModel'
    ContactRepresentation:
      required:
        - contactId
      type: object
      properties:
        summary:
          type: string
          nullable: true
        contactId:
          description: Unique identifier for the contact
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        position:
          description: Position or job title
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        inactive:
          description: Contact is no longer with the company
          type: boolean
        status:
          $ref: '#/components/schemas/StatusModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        officeAddress:
          $ref: '#/components/schemas/CompanyAddressModel'
        previousContactId:
          description: >-
            contactId from the previous company when a contact moves between
            companies
          type: integer
          format: int32
          nullable: true
        originalContactId:
          description: >-
            contactId from the original/first company when a contact moves
            between companies
          type: integer
          format: int32
          nullable: true
        otherEmail:
          description: Other email addresses used by the contact
          type: array
          items:
            type: string
          nullable: true
        social:
          description: Contact social profiles
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        reportsTo:
          $ref: '#/components/schemas/ContactNameModel'
        hiringManager:
          type: boolean
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        recruiters:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        partnerActions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionStageModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/ContactLinks'
    ContactSummaryModel:
      required:
        - contactId
      type: object
      properties:
        contactId:
          description: Unique identifier for the contact
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        position:
          description: Position or job title
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        inactive:
          description: Contact is no longer with the company
          type: boolean
        status:
          $ref: '#/components/schemas/StatusModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        officeAddress:
          $ref: '#/components/schemas/CompanyAddressModel'
        previousContactId:
          description: >-
            contactId from the previous company when a contact moves between
            companies
          type: integer
          format: int32
          nullable: true
        originalContactId:
          description: >-
            contactId from the original/first company when a contact moves
            between companies
          type: integer
          format: int32
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    ContactUserTaskModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        contactId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    ContactUserTaskRepresentation:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        contactId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/UserTaskLinks'
    CountryListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CountryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CountryModel:
      required:
        - code
        - name
      type: object
      properties:
        code:
          minLength: 1
          type: string
        name:
          minLength: 1
          type: string
    CurrentEmploymentModel:
      type: object
      properties:
        employer:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        workType:
          $ref: '#/components/schemas/WorkTypeModel'
        salary:
          $ref: '#/components/schemas/SalaryModel'
    CustomFieldListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CustomFieldModel:
      required:
        - fieldId
        - name
        - type
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/CustomFieldType'
        mandatory:
          description: Field is mandatory and a value must be provided
          type: boolean
          nullable: true
        maxLength:
          description: Maximum length of a text field
          type: integer
          format: int32
          nullable: true
        multiLine:
          description: Text field can contain a multi-line value
          type: boolean
          nullable: true
        multiSelect:
          description: List field allows multiple selections
          type: boolean
          nullable: true
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
    CustomFieldRepresentation:
      required:
        - fieldId
        - name
        - type
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/CustomFieldType'
        mandatory:
          description: Field is mandatory and a value must be provided
          type: boolean
          nullable: true
        maxLength:
          description: Maximum length of a text field
          type: integer
          format: int32
          nullable: true
        multiLine:
          description: Text field can contain a multi-line value
          type: boolean
          nullable: true
        multiSelect:
          description: List field allows multiple selections
          type: boolean
          nullable: true
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    CustomFieldType:
      description: The type of value a custom field expects
      enum:
        - Text
        - List
        - Date
        - Lookup
      type: string
      format: string
    CustomFieldValueModel:
      description: Custom field value
      required:
        - fieldId
        - name
        - type
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/CustomFieldType'
        value:
          description: >-
            Text, List or Date value for this custom field (depending on the
            field "type")
          nullable: true
          readOnly: true
    DateRangeModel:
      required:
        - end
        - start
      type: object
      properties:
        start:
          type: string
          properties:
            timeOfDay:
              format: time
          format: date
        end:
          type: string
          properties:
            timeOfDay:
              format: time
          format: date
    DayOfWeek:
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      type: string
      format: string
    DeletedCandidateListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeletedCandidateModel'
          nullable: true
    DeletedCandidateModel:
      type: object
      properties:
        candidateId:
          type: integer
          format: int32
        deletedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    DeletedCompanyListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeletedCompanyModel'
          nullable: true
    DeletedCompanyModel:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        deletedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    DeletedContactListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeletedContactModel'
          nullable: true
    DeletedContactModel:
      type: object
      properties:
        contactId:
          type: integer
          format: int32
        deletedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    DeletedJobApplicationListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeletedJobApplicationModel'
          nullable: true
    DeletedJobApplicationModel:
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        deletedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    DeletedJobOrderListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeletedJobOrderModel'
          nullable: true
    DeletedJobOrderModel:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        deletedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    DeletedPlacementListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/DeletedPlacementModel'
          nullable: true
    DeletedPlacementModel:
      type: object
      properties:
        placementId:
          type: integer
          format: int32
        deletedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    DurationModel:
      type: object
      properties:
        period:
          type: integer
          format: int32
        unit:
          $ref: '#/components/schemas/DurationUnit'
    DurationUnit:
      enum:
        - Hour
        - Day
        - Week
        - Month
      type: string
      format: string
    EmailAddressMatchType:
      enum:
        - Email
        - OtherEmail
      type: string
      format: string
    ErrorCode:
      enum:
        - Invalid
        - Missing
        - MissingField
        - AlreadyExists
      type: string
      format: string
    ErrorItemModel:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
          nullable: true
        fields:
          type: array
          items:
            type: string
          nullable: true
    ErrorModel:
      required:
        - message
      type: object
      properties:
        message:
          minLength: 1
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorItemModel'
          nullable: true
    EventName:
      enum:
        - job_status_changed
        - job_invoice_sent
        - job_partner_action
        - jobad_posted
        - jobad_expired
        - jobad_partner_action
        - candidate_status_changed
        - candidate_partner_action
        - candidate_updated
        - jobapplication_status_changed
        - jobapplication_partner_action
        - placement_approved
        - placement_status_changed
        - placement_partner_action
        - company_status_changed
        - company_partner_action
        - contact_status_changed
        - contact_partner_action
        - interview_scheduled
        - interview_evaluation_submitted
        - folder_job_added
        - folder_job_removed
        - folder_candidate_added
        - folder_candidate_removed
        - folder_jobapplication_added
        - folder_jobapplication_removed
        - folder_placement_added
        - folder_placement_removed
        - folder_company_added
        - folder_company_removed
        - folder_contact_added
        - folder_contact_removed
        - folder_updated
        - user_suspended
      type: string
      format: string
    FindCandidateActivitySettingsQuery:
      type: object
    FindCategoriesEmbed:
      enum:
        - SubCategories
        - Skills
      type: string
      format: string
    FindCompanyActivitySettingsQuery:
      type: object
    FindCompanyWorkflowsInclude:
      enum:
        - Archived
      type: string
      format: string
    FindContactActivitySettingsQuery:
      type: object
    FindJobApplicationActivitySettingsQuery:
      type: object
    FindJobOrderActivitySettingsQuery:
      type: object
    FindLocationsEmbed:
      enum:
        - Areas
      type: string
      format: string
    FindPlacementActivitySettingsQuery:
      type: object
    FindPlacementByExport:
      description: >-
        Search for placements that should be exported to payroll, timesheets or
        onboarding
      enum:
        - Payroll
        - Timesheets
        - Onboarding
      type: string
      format: string
    FindUserTasksInclude:
      enum:
        - Old
        - Complete
      type: string
      format: string
    FindUsersInclude:
      enum:
        - Inactive
        - Deleted
      type: string
      format: string
    FloatLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        notes:
          description: Notes
          type: string
          format: uri
          nullable: true
    FloatListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FloatSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    FloatRepresentation:
      required:
        - floatId
      type: object
      properties:
        floatId:
          type: integer
          format: int64
        jobTitle:
          type: string
          nullable: true
        candidate:
          $ref: '#/components/schemas/CandidateSummaryModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        candidateSummary:
          type: string
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        links:
          $ref: '#/components/schemas/FloatLinks'
    FloatSummaryModel:
      required:
        - floatId
      type: object
      properties:
        floatId:
          type: integer
          format: int64
        jobTitle:
          type: string
          nullable: true
        candidate:
          $ref: '#/components/schemas/CandidateSummaryModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    FolderLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    FolderListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FolderNameModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    FolderNameModel:
      required:
        - folderId
      type: object
      properties:
        folderId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    FolderOwnerStatus:
      enum:
        - Active
        - Inactive
      type: string
      format: string
    FolderRepresentation:
      required:
        - folderId
      type: object
      properties:
        folderId:
          type: integer
          format: int64
        name:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        sharedWith:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        entityIDs:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64
          nullable: true
          readOnly: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        links:
          $ref: '#/components/schemas/FolderLinks'
    GetJobApplicationStatusByWorkflowListQuery:
      type: object
    InterviewEvaluationListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/InterviewEvaluationModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    InterviewEvaluationModel:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        expiresAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        hasReplied:
          type: boolean
        comments:
          type: string
          nullable: true
        rating:
          type: array
          items:
            $ref: '#/components/schemas/InterviewEvaluationRatingModel'
          nullable: true
    InterviewEvaluationRatingModel:
      type: object
      properties:
        criteria:
          description: Criteria being rated
          type: string
          nullable: true
        rating:
          description: Criteria rating, from 0 to 100
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          nullable: true
    InterviewEvaluationRepresentation:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        expiresAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        hasReplied:
          type: boolean
        comments:
          type: string
          nullable: true
        rating:
          type: array
          items:
            $ref: '#/components/schemas/InterviewEvaluationRatingModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    InterviewInterviewersModel:
      description: Internal/user and External/contact interviewers
      type: object
      properties:
        users:
          description: Internal/user interviewers
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        contacts:
          description: External/contact interviewers
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
    InterviewLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        evaluations:
          description: Evaluations and ratings
          type: string
          format: uri
          nullable: true
    InterviewListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/InterviewSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    InterviewModel:
      required:
        - interviewee
        - interviewId
        - type
      type: object
      properties:
        interviewId:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/InterviewType'
        startAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        location:
          type: string
          nullable: true
        interviewee:
          $ref: '#/components/schemas/JobApplicationSummaryModel'
        interviewers:
          $ref: '#/components/schemas/InterviewInterviewersModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    InterviewRepresentation:
      required:
        - interviewee
        - interviewId
        - type
      type: object
      properties:
        interviewId:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/InterviewType'
        startAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        location:
          type: string
          nullable: true
        interviewee:
          $ref: '#/components/schemas/JobApplicationSummaryModel'
        interviewers:
          $ref: '#/components/schemas/InterviewInterviewersModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        links:
          $ref: '#/components/schemas/InterviewLinks'
    InterviewSummaryModel:
      required:
        - interviewee
        - interviewId
        - type
      type: object
      properties:
        interviewId:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/InterviewType'
        startAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        location:
          type: string
          nullable: true
        interviewee:
          $ref: '#/components/schemas/JobApplicationSummaryModel'
        interviewers:
          $ref: '#/components/schemas/InterviewInterviewersModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    InterviewType:
      enum:
        - Internal
        - External
      type: string
      format: string
    JobAdLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        job:
          description: Job
          type: string
          format: uri
          nullable: true
        company:
          description: Company
          type: string
          format: uri
          nullable: true
        contact:
          description: Contact
          type: string
          format: uri
          nullable: true
        applications:
          description: Job applications
          type: string
          format: uri
          nullable: true
    JobAdListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobAdSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    JobAdOtherApplyUrlModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
    JobAdPortalChildFieldModel:
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        fieldName:
          type: string
          nullable: true
        valueId:
          type: integer
          format: int32
          nullable: true
        value:
          type: string
          nullable: true
        externalValue:
          type: string
          nullable: true
    JobAdPortalFieldModel:
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        fieldName:
          type: string
          nullable: true
        valueId:
          type: integer
          format: int32
          nullable: true
        value:
          type: string
          nullable: true
        externalValue:
          type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/JobAdPortalChildFieldModel'
          nullable: true
    JobAdPortalModel:
      type: object
      properties:
        hotJob:
          description: Classed as a hot job
          type: boolean
        salary:
          $ref: '#/components/schemas/JobAdPortalSalaryModel'
        template:
          type: string
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/JobAdPortalFieldModel'
          nullable: true
    JobAdPortalSalaryModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
        rateLow:
          type: number
          format: double
          nullable: true
        rateHigh:
          type: number
          format: double
          nullable: true
        details:
          type: string
          nullable: true
    JobAdPortalSummaryModel:
      type: object
      properties:
        hotJob:
          description: Classed as a hot job
          type: boolean
        salary:
          $ref: '#/components/schemas/JobAdPortalSalaryModel'
        template:
          type: string
          nullable: true
    JobAdRepresentation:
      required:
        - adId
      type: object
      properties:
        summary:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        adId:
          type: integer
          format: int32
        state:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        bulletPoints:
          type: array
          items:
            type: string
          nullable: true
        job:
          $ref: '#/components/schemas/JobOrderTitleModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        screening:
          type: array
          items:
            $ref: '#/components/schemas/JobAdScreeningQuestionModel'
          nullable: true
        jobBoards:
          type: array
          items:
            $ref: '#/components/schemas/JobBoardSummaryModel'
          nullable: true
        otherApplyUrls:
          type: array
          items:
            $ref: '#/components/schemas/JobAdOtherApplyUrlModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        postAt:
          type: string
          format: date-time
          nullable: true
        expireAt:
          type: string
          format: date-time
          nullable: true
        partnerActions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionStageModel'
          nullable: true
        links:
          $ref: '#/components/schemas/JobAdLinks'
    JobAdScreeningAnswerType:
      enum:
        - Text
        - List
      type: string
      format: string
    JobAdScreeningQuestionModel:
      type: object
      properties:
        question:
          type: string
          nullable: true
        answerType:
          $ref: '#/components/schemas/JobAdScreeningAnswerType'
        mandatory:
          description: Field is mandatory and a value must be provided
          type: boolean
          nullable: true
        maxLength:
          description: Maximum length of a text field
          type: integer
          format: int32
          nullable: true
        multiSelect:
          description: List selection allows multiple values
          type: boolean
          nullable: true
        values:
          description: List of predefined values to select from
          type: array
          items:
            type: string
          nullable: true
    JobAdSummaryModel:
      required:
        - adId
      type: object
      properties:
        summary:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        adId:
          type: integer
          format: int32
        state:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        bulletPoints:
          type: array
          items:
            type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        postAt:
          type: string
          format: date-time
          nullable: true
        expireAt:
          type: string
          format: date-time
          nullable: true
    JobApplicationActivityListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationActivityModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    JobApplicationActivityModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        applicationId:
          type: integer
          format: int64
    JobApplicationActivityRepresentation:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        applicationId:
          type: integer
          format: int64
        links:
          $ref: '#/components/schemas/ModelLinks'
    JobApplicationActivitySettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        validStatuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusModel'
          nullable: true
        statusMandatory:
          type: boolean
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityQuestionModel'
          nullable: true
    JobApplicationActivitySettingSummaryModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    JobApplicationActivitySettingsListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationActivitySettingSummaryModel'
          nullable: true
    JobApplicationActivitySummaryListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationActivitySummaryModel'
          nullable: true
    JobApplicationActivitySummaryModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        applicationId:
          type: integer
          format: int64
    JobApplicationLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        attachments:
          description: Attachments
          type: string
          format: uri
          nullable: true
        resume:
          type: string
          format: uri
          nullable: true
        coverLetter:
          type: string
          format: uri
          nullable: true
    JobApplicationListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    JobApplicationRepresentation:
      required:
        - applicationId
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        jobTitle:
          type: string
          nullable: true
        jobReference:
          type: string
          nullable: true
        manual:
          type: boolean
        source:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
        status:
          $ref: '#/components/schemas/JobApplicationStatusModel'
        review:
          $ref: '#/components/schemas/JobApplicationReviewModel'
        candidate:
          $ref: '#/components/schemas/CandidateNameModel'
        job:
          $ref: '#/components/schemas/JobOrderTitleModel'
        jobAd:
          $ref: '#/components/schemas/JobAdSummaryModel'
        submittedDetails:
          $ref: '#/components/schemas/JobApplicationSubmittedDetailsModel'
        screening:
          $ref: '#/components/schemas/JobApplicationScreeningModel'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
          nullable: true
        partnerActions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionStageModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/JobApplicationLinks'
    JobApplicationReviewModel:
      required:
        - stage
      type: object
      properties:
        stage:
          $ref: '#/components/schemas/JobApplicationReviewStage'
        submittedAt:
          type: string
          format: date-time
          nullable: true
        submittedBy:
          $ref: '#/components/schemas/UserNameModel'
        reviewedAt:
          type: string
          format: date-time
          nullable: true
        reviewedBy:
          $ref: '#/components/schemas/ContactNameModel'
    JobApplicationReviewStage:
      enum:
        - Submitted
        - Viewed
        - Accepted
        - Rejected
      type: string
      format: string
    JobApplicationScreeningModel:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationScreeningQuestionModel'
          nullable: true
        score:
          type: number
          format: double
          nullable: true
    JobApplicationScreeningQuestionModel:
      type: object
      properties:
        question:
          type: string
          nullable: true
        answers:
          type: array
          items:
            type: string
          nullable: true
        score:
          type: number
          format: double
          nullable: true
    JobApplicationStatusByWorkflowListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationStatusByWorkflowModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    JobApplicationStatusByWorkflowModel:
      required:
        - stage
      type: object
      properties:
        stage:
          description: Name of the workflow stage
          minLength: 1
          type: string
        stageIndex:
          description: Position in the workflow
          type: integer
          format: int32
          nullable: true
        step:
          description: '[Obsolete] Please reference stageIndex instead'
          type: integer
          format: int32
          nullable: true
        progress:
          $ref: '#/components/schemas/SimpleWorkflow'
        status:
          description: Ordered status list for this workflow stage
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationStatusNameModel'
          nullable: true
    JobApplicationStatusLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    JobApplicationStatusListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationStatusModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    JobApplicationStatusModel:
      required:
        - name
        - statusId
      type: object
      properties:
        statusId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        active:
          type: boolean
        rejected:
          type: boolean
          default: false
        default:
          type: boolean
          default: false
        defaultRejected:
          type: boolean
          default: false
        workflow:
          $ref: '#/components/schemas/JobApplicationWorkflowModel'
    JobApplicationStatusNameModel:
      required:
        - name
        - statusId
      type: object
      properties:
        statusId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        active:
          type: boolean
        rejected:
          type: boolean
          default: false
        default:
          type: boolean
          default: false
        defaultRejected:
          type: boolean
          default: false
    JobApplicationStatusRepresentation:
      required:
        - name
        - statusId
      type: object
      properties:
        statusId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        active:
          type: boolean
        rejected:
          type: boolean
          default: false
        default:
          type: boolean
          default: false
        defaultRejected:
          type: boolean
          default: false
        workflow:
          $ref: '#/components/schemas/JobApplicationWorkflowModel'
        links:
          $ref: '#/components/schemas/JobApplicationStatusLinks'
    JobApplicationSubmittedDetailsModel:
      type: object
      properties:
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
    JobApplicationSummaryModel:
      required:
        - applicationId
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        jobTitle:
          type: string
          nullable: true
        jobReference:
          type: string
          nullable: true
        manual:
          type: boolean
        source:
          type: string
          nullable: true
        rating:
          type: integer
          format: int32
          nullable: true
        status:
          $ref: '#/components/schemas/JobApplicationStatusModel'
        review:
          $ref: '#/components/schemas/JobApplicationReviewModel'
        candidate:
          $ref: '#/components/schemas/CandidateNameModel'
        job:
          $ref: '#/components/schemas/JobOrderTitleModel'
        jobAd:
          $ref: '#/components/schemas/JobAdSummaryModel'
        owner:
          $ref: '#/components/schemas/UserNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    JobApplicationUserTaskModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        applicationId:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    JobApplicationUserTaskRepresentation:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        applicationId:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/UserTaskLinks'
    JobApplicationWorkflowModel:
      required:
        - stage
      type: object
      properties:
        stage:
          description: Name of the workflow stage
          minLength: 1
          type: string
        stageIndex:
          description: Position in the workflow
          type: integer
          format: int32
          nullable: true
        step:
          description: '[Obsolete] Please reference stageIndex instead'
          type: integer
          format: int32
          nullable: true
        progress:
          $ref: '#/components/schemas/SimpleWorkflow'
    JobBoardJobAdLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        applications:
          type: string
          format: uri
          nullable: true
        ui:
          $ref: '#/components/schemas/JobBoardJobAdUILinks'
    JobBoardJobAdListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobBoardJobAdSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/ModelLinks'
    JobBoardJobAdRepresentation:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        adId:
          type: integer
          format: int32
        reference:
          type: string
          nullable: true
        bulletPoints:
          type: array
          items:
            type: string
          nullable: true
        screening:
          type: array
          items:
            $ref: '#/components/schemas/JobAdScreeningQuestionModel'
          nullable: true
        portal:
          $ref: '#/components/schemas/JobAdPortalModel'
        postedAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        expiresAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/JobBoardJobAdLinks'
    JobBoardJobAdSummaryModel:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        adId:
          type: integer
          format: int32
        reference:
          type: string
          nullable: true
        bulletPoints:
          type: array
          items:
            type: string
          nullable: true
        portal:
          $ref: '#/components/schemas/JobAdPortalSummaryModel'
        postedAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        expiresAt:
          type: string
          format: date-time
          nullable: true
    JobBoardJobAdUILinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        applications:
          type: string
          format: uri
          nullable: true
    JobBoardListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobBoardSummaryModel'
          nullable: true
    JobBoardModel:
      type: object
      properties:
        boardId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        portal:
          $ref: '#/components/schemas/JobBoardPortalModel'
    JobBoardPortalChildFieldModel:
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/JobBoardPortalFieldType'
        listValues:
          type: array
          items:
            $ref: '#/components/schemas/JobBoardPortalFieldValueModel'
          nullable: true
    JobBoardPortalFieldModel:
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/JobBoardPortalFieldType'
        listValues:
          type: array
          items:
            $ref: '#/components/schemas/JobBoardPortalFieldValueModel'
          nullable: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/JobBoardPortalChildFieldModel'
          nullable: true
    JobBoardPortalFieldType:
      enum:
        - Text
        - List
      type: string
      format: string
    JobBoardPortalFieldValueModel:
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        valueId:
          type: integer
          format: int32
        parentValueId:
          type: integer
          format: int32
          nullable: true
        value:
          type: string
          nullable: true
        externalValue:
          description: Job board partner defined field value
          type: string
          nullable: true
    JobBoardPortalModel:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/JobBoardPortalFieldModel'
          nullable: true
    JobBoardSummaryModel:
      type: object
      properties:
        boardId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
    JobOrderActivityListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderActivityModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    JobOrderActivityModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        jobId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
          nullable: true
    JobOrderActivityRepresentation:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        jobId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    JobOrderActivitySettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        validStatuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusModel'
          nullable: true
        statusMandatory:
          type: boolean
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityQuestionModel'
          nullable: true
    JobOrderActivitySettingSummaryModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    JobOrderActivitySettingsListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderActivitySettingSummaryModel'
          nullable: true
    JobOrderActivitySummaryListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderActivitySummaryModel'
          nullable: true
    JobOrderActivitySummaryModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        jobId:
          type: integer
          format: int32
    JobOrderAttachmentCategoryListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderAttachmentCategoryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    JobOrderAttachmentCategoryModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/JobOrderAttachmentType'
        category:
          type: string
          nullable: true
    JobOrderAttachmentLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    JobOrderAttachmentListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderAttachmentModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    JobOrderAttachmentModel:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/JobOrderAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
    JobOrderAttachmentRepresentation:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/JobOrderAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/JobOrderAttachmentLinks'
    JobOrderAttachmentType:
      enum:
        - Other
        - JobDescription
      type: string
      format: string
    JobOrderCategoryModel:
      required:
        - categoryId
        - name
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        subCategory:
          $ref: '#/components/schemas/JobOrderSubCategoryModel'
    JobOrderFeeModel:
      type: object
      properties:
        rateType:
          $ref: '#/components/schemas/JobOrderFeeRateType'
        rate:
          type: number
          format: double
          nullable: true
        estimatedTotal:
          type: number
          format: double
          nullable: true
        currency:
          type: string
          nullable: true
    JobOrderFeeRateType:
      enum:
        - Percent
        - Fixed
        - Margin
      type: string
      format: string
    JobOrderInvoiceExpenseListModel:
      type: object
      properties:
        total:
          type: number
          format: double
          nullable: true
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderInvoiceExpenseModel'
          nullable: true
    JobOrderInvoiceExpenseModel:
      type: object
      properties:
        description:
          type: string
          nullable: true
        cost:
          type: number
          format: double
    JobOrderInvoiceListModel:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/JobOrderRetainedModel'
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderInvoiceSummaryModel'
          nullable: true
    JobOrderInvoiceModel:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
        invoiceNumber:
          type: string
          nullable: true
        stage:
          $ref: '#/components/schemas/JobOrderInvoiceStageModel'
        amount:
          type: number
          format: double
        triggerType:
          type: string
          nullable: true
        triggerJobOrderStatus:
          $ref: '#/components/schemas/StatusModel'
        triggerAt:
          type: string
          format: date
          nullable: true
        forecastedDate:
          type: string
          format: date
          nullable: true
        status:
          type: string
          nullable: true
          readOnly: true
        expenses:
          $ref: '#/components/schemas/JobOrderInvoiceExpenseListModel'
        sentDetails:
          $ref: '#/components/schemas/JobOrderSentInvoiceModel'
        placements:
          $ref: '#/components/schemas/JobOrderInvoicePlacementListModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    JobOrderInvoicePlacementListModel:
      type: object
      properties:
        totalPlacements:
          type: integer
          format: int32
          readOnly: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderInvoicePlacementModel'
          nullable: true
    JobOrderInvoicePlacementModel:
      type: object
      properties:
        candidateId:
          type: integer
          format: int32
        placementId:
          type: integer
          format: int32
        startDate:
          type: string
          format: date
          nullable: true
    JobOrderInvoiceStageModel:
      required:
        - name
        - stageId
      type: object
      properties:
        stageId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
    JobOrderInvoiceSummaryModel:
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        invoiceId:
          type: integer
          format: int32
        invoiceNumber:
          type: string
          nullable: true
        stage:
          $ref: '#/components/schemas/JobOrderInvoiceStageModel'
        amount:
          type: number
          format: double
    JobOrderJobApplicationStatisticsSummaryModel:
      type: object
      properties:
        new:
          type: integer
          format: int32
        active:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
    JobOrderLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        attachments:
          description: Attachments
          type: string
          format: uri
          nullable: true
        applications:
          description: Job applications
          type: string
          format: uri
          nullable: true
        notes:
          description: Notes
          type: string
          format: uri
          nullable: true
    JobOrderListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    JobOrderLocationAreaModel:
      required:
        - areaId
        - name
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
    JobOrderLocationModel:
      required:
        - locationId
        - name
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        area:
          $ref: '#/components/schemas/JobOrderLocationAreaModel'
    JobOrderRateCardModel:
      type: object
      properties:
        jobOrderId:
          type: integer
          format: int32
        rateCard:
          type: string
          nullable: true
    JobOrderRepresentation:
      required:
        - jobId
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        jobTitle:
          type: string
          nullable: true
        location:
          $ref: '#/components/schemas/JobOrderLocationModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        status:
          $ref: '#/components/schemas/StatusModel'
        source:
          type: string
          nullable: true
        userFavourite:
          type: boolean
          nullable: true
        jobDescription:
          type: string
          nullable: true
        numberOfJobs:
          type: integer
          format: int32
        workplaceAddress:
          $ref: '#/components/schemas/CompanyAddressModel'
        category:
          $ref: '#/components/schemas/JobOrderCategoryModel'
        start:
          $ref: '#/components/schemas/JobOrderStartModel'
        endDate:
          type: string
          format: date
          nullable: true
        workShift:
          $ref: '#/components/schemas/JobOrderWorkShiftModel'
        duration:
          $ref: '#/components/schemas/DurationModel'
        workType:
          $ref: '#/components/schemas/WorkTypeModel'
        jobType:
          type: string
          nullable: true
        salary:
          $ref: '#/components/schemas/JobOrderSalaryRangeModel'
        fee:
          $ref: '#/components/schemas/JobOrderFeeModel'
        otherContacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        skillTags:
          $ref: '#/components/schemas/JobOrderSkillTags'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        recruiters:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        partnerActions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionStageModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        closedBy:
          $ref: '#/components/schemas/UserNameModel'
        closedAt:
          type: string
          format: date-time
          nullable: true
        statistics:
          $ref: '#/components/schemas/JobOrderStatisticsSummaryModel'
        links:
          $ref: '#/components/schemas/JobOrderLinks'
    JobOrderRetainedInvoiceRepresentation:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/JobOrderRetainedModel'
        invoice:
          $ref: '#/components/schemas/JobOrderInvoiceModel'
        links:
          $ref: '#/components/schemas/ModelLinks'
    JobOrderRetainedModel:
      required:
        - jobId
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        jobType:
          type: string
          nullable: true
        jobTitle:
          type: string
          nullable: true
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        feeCurrencyCode:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
    JobOrderSalaryRangeModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
        rateLow:
          type: number
          format: double
          nullable: true
        rateHigh:
          type: number
          format: double
          nullable: true
        currency:
          description: Optional ISO 4217 3-letter alphabetic currency code
          type: string
          nullable: true
        timePerWeek:
          description: >-
            Number of days per week for a daily rate or hours per week for an
            hourly rate.
          type: number
          format: double
          nullable: true
    JobOrderSentInvoiceModel:
      type: object
      properties:
        billingContactNames:
          type: string
          nullable: true
        billingContactEmails:
          type: string
          nullable: true
        poNumber:
          type: string
          nullable: true
        paymentTermsDays:
          type: integer
          format: int32
          nullable: true
        dueDate:
          type: string
          format: date-time
          nullable: true
        sentAt:
          type: string
          format: date-time
          nullable: true
        sentBy:
          $ref: '#/components/schemas/UserNameModel'
    JobOrderSkillTags:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          nullable: true
        matchAll:
          type: boolean
    JobOrderStartModel:
      type: object
      properties:
        immediate:
          type: boolean
        relative:
          $ref: '#/components/schemas/RelativeStartModel'
        date:
          description: The specific date that a job starts or a candidate is available
          type: string
          format: date
          nullable: true
    JobOrderStatisticsSummaryModel:
      type: object
      properties:
        applications:
          $ref: '#/components/schemas/JobOrderJobApplicationStatisticsSummaryModel'
    JobOrderSubCategoryModel:
      required:
        - name
        - subCategoryId
      type: object
      properties:
        subCategoryId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
    JobOrderSummaryModel:
      required:
        - jobId
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        jobTitle:
          type: string
          nullable: true
        location:
          $ref: '#/components/schemas/JobOrderLocationModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        status:
          $ref: '#/components/schemas/StatusModel'
        source:
          type: string
          nullable: true
        userFavourite:
          type: boolean
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        closedBy:
          $ref: '#/components/schemas/UserNameModel'
        closedAt:
          type: string
          format: date-time
          nullable: true
    JobOrderTitleModel:
      required:
        - jobId
      type: object
      properties:
        jobId:
          type: integer
          format: int32
        jobTitle:
          type: string
          nullable: true
        location:
          $ref: '#/components/schemas/JobOrderLocationModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        status:
          $ref: '#/components/schemas/StatusModel'
        source:
          type: string
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
    JobOrderUserTaskModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        jobId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    JobOrderUserTaskRepresentation:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        jobId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/UserTaskLinks'
    JobOrderWorkShiftModel:
      type: object
      properties:
        startTime:
          type: string
          nullable: true
        endTime:
          type: string
          nullable: true
        workDays:
          type: array
          items:
            type: string
          nullable: true
    LocationAreaModel:
      required:
        - areaId
        - name
      type: object
      properties:
        areaId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
    LocationListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/LocationModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    LocationModel:
      required:
        - locationId
        - name
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        areas:
          type: array
          items:
            $ref: '#/components/schemas/LocationAreaModel'
          nullable: true
    MatchedByEmailAddressModel:
      type: object
      properties:
        candidates:
          description: Top 5 most recently updated matching candidates
          type: array
          items:
            $ref: '#/components/schemas/CandidateMatchedByEmailModel'
          nullable: true
        contacts:
          description: Top 5 most recently updated matching contacts
          type: array
          items:
            $ref: '#/components/schemas/ContactMatchedByEmailModel'
          nullable: true
        users:
          description: Top 5 most recently updated matching users
          type: array
          items:
            $ref: '#/components/schemas/UserMatchedByEmailModel'
          nullable: true
    MatchedByPhoneNumberModel:
      type: object
      properties:
        candidates:
          description: Top 5 most recently updated matching candidates
          type: array
          items:
            $ref: '#/components/schemas/CandidateMatchedByPhoneModel'
          nullable: true
        contacts:
          description: Top 5 most recently updated matching contacts
          type: array
          items:
            $ref: '#/components/schemas/ContactMatchedByPhoneModel'
          nullable: true
        companies:
          description: Top 5 most recently updated matching companies
          type: array
          items:
            $ref: '#/components/schemas/CompanyMatchedByPhoneModel'
          nullable: true
        users:
          description: Top 5 most recently updated matching users
          type: array
          items:
            $ref: '#/components/schemas/UserMatchedByPhoneModel'
          nullable: true
        quality:
          $ref: '#/components/schemas/PhoneNumberMatchQuality'
    MatchedEmailAddressModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/EmailAddressMatchType'
        email:
          type: string
          nullable: true
    MatchedEmailAddressModelCompanyName:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    MatchedPhoneNumberModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PhoneNumberMatchType'
        number:
          type: string
          nullable: true
        normalized:
          type: string
          nullable: true
    MatchedPhoneNumberModelCompanyName:
      type: object
      properties:
        companyId:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
    ModelLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    NameModel:
      required:
        - name
      type: object
      properties:
        name:
          description: Resource name
          minLength: 1
          type: string
    NameModelListOf:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NameModel'
          nullable: true
    NoteAttachmentListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttachmentModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    NoteAttachmentModel:
      required:
        - attachmentId
      type: object
      properties:
        attachmentId:
          type: string
          format: uuid
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    NoteLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    NoteListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NoteSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    NoteModel:
      required:
        - noteId
      type: object
      properties:
        noteId:
          type: string
          format: uuid
        type:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        readonly:
          description: This note cannot be updated
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttachmentModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    NoteRepresentation:
      required:
        - noteId
      type: object
      properties:
        noteId:
          type: string
          format: uuid
        type:
          type: string
          nullable: true
        source:
          type: string
          nullable: true
        text:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        readonly:
          description: This note cannot be updated
          type: boolean
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/NoteAttachmentModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        links:
          $ref: '#/components/schemas/NoteLinks'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    NoteSummaryModel:
      required:
        - noteId
      type: object
      properties:
        noteId:
          type: string
          format: uuid
        type:
          type: string
          nullable: true
        textPartial:
          type: string
          nullable: true
        reference:
          type: string
          nullable: true
        readonly:
          description: This note cannot be updated
          type: boolean
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    NoteTypeDefaultModel:
      type: object
      properties:
        note:
          type: boolean
          default: false
        email:
          type: boolean
          default: false
        sms:
          type: boolean
          default: false
    NoteTypeListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/NoteTypeModel'
          nullable: true
    NoteTypeModel:
      required:
        - name
      type: object
      properties:
        name:
          minLength: 1
          type: string
        default:
          $ref: '#/components/schemas/NoteTypeDefaultModel'
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/OperationType'
        path:
          description: >-
            Single entity path to address, e.g. /jobs, /candidates,
            /applications, /placements, /companies or /contacts
          type: string
          nullable: true
        value:
          description: Comma separated entitiy ids, e.g. 1000, 1001, 1002
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    OperationType:
      enum:
        - Add
        - Remove
      type: string
      format: string
    PageLinks:
      type: object
      properties:
        first:
          type: string
          format: uri
          nullable: true
        prev:
          type: string
          format: uri
          nullable: true
        next:
          type: string
          format: uri
          nullable: true
        last:
          type: string
          format: uri
          nullable: true
    PartnerActionFilterModel:
      type: object
      properties:
        adminOnly:
          description: Action is available to admin users only
          type: boolean
        approvedOnly:
          description: >-
            Action is only available on approved entities (currently only
            supported for placements)
          type: boolean
        status:
          $ref: '#/components/schemas/PartnerActionStatusFilterModel'
    PartnerActionListRepresentation:
      type: object
      properties:
        items:
          description: Partner actions
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    PartnerActionModel:
      type: object
      properties:
        actionId:
          description: Unique identifier for the partner action
          type: string
          format: uuid
        actionType:
          $ref: '#/components/schemas/PartnerActionType'
        actionName:
          description: Menu item label that will appear to the end-user
          type: string
          nullable: true
        reference:
          description: Unique partner defined reference/identifier for the action
          type: string
          nullable: true
        url:
          description: >-
            URL to open after the action is selected and assigned the
            `"Submitted"` stage.
          type: string
          format: uri
          nullable: true
        urlType:
          $ref: '#/components/schemas/PartnerActionUrlType'
        allowResubmit:
          description: Allow resources to be resubmitted to an action.
          type: boolean
        actionFilter:
          $ref: '#/components/schemas/PartnerActionFilterModel'
        webhookData:
          description: Additional data that will be included with the webhook notification
          nullable: true
        createdAt:
          description: Date the partner action was added
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          description: Date the partner action was last updated
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    PartnerActionRepresentation:
      type: object
      properties:
        actionId:
          description: Unique identifier for the partner action
          type: string
          format: uuid
        actionType:
          $ref: '#/components/schemas/PartnerActionType'
        actionName:
          description: Menu item label that will appear to the end-user
          type: string
          nullable: true
        reference:
          description: Unique partner defined reference/identifier for the action
          type: string
          nullable: true
        url:
          description: >-
            URL to open after the action is selected and assigned the
            `"Submitted"` stage.
          type: string
          format: uri
          nullable: true
        urlType:
          $ref: '#/components/schemas/PartnerActionUrlType'
        allowResubmit:
          description: Allow resources to be resubmitted to an action.
          type: boolean
        actionFilter:
          $ref: '#/components/schemas/PartnerActionFilterModel'
        webhookData:
          description: Additional data that will be included with the webhook notification
          nullable: true
        createdAt:
          description: Date the partner action was added
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          description: Date the partner action was last updated
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        links:
          $ref: '#/components/schemas/ModelLinks'
    PartnerActionResultCommandModel:
      description: Optional complete or partial results for a partner action
      type: object
      properties:
        score:
          description: Optional partner score for the action result
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          nullable: true
        url:
          description: Optional partner defined URL for the action result
          type: string
          format: uri
          nullable: true
        urlType:
          $ref: '#/components/schemas/PartnerActionResultUrlType'
    PartnerActionResultModel:
      type: object
      properties:
        score:
          description: Optional partner score for the action result
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          nullable: true
        url:
          description: Optional partner defined URL for the action result
          type: string
          format: uri
          nullable: true
        urlType:
          $ref: '#/components/schemas/PartnerActionResultUrlType'
    PartnerActionResultUrlType:
      enum:
        - Popup
        - Page
      type: string
      format: string
    PartnerActionStage:
      enum:
        - Submitted
        - InProgress
        - Completed
        - Rejected
        - Cancelled
      type: string
      format: string
    PartnerActionStageModel:
      type: object
      properties:
        actionId:
          type: string
          format: uuid
        actionName:
          type: string
          nullable: true
        reference:
          description: Unique partner defined reference/identifier for the action
          type: string
          nullable: true
        stage:
          $ref: '#/components/schemas/PartnerActionStage'
        status:
          description: Partner defined progress status message for the action
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultModel'
        submittedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        submittedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
    PartnerActionStatusFilterModel:
      type: object
      properties:
        activeOnly:
          description: Action is available to entities with an active status
          type: boolean
        statusId:
          description: Action is available to entities with a specific status
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    PartnerActionType:
      enum:
        - Job
        - JobAd
        - Candidate
        - JobApplication
        - Placement
        - Company
        - Contact
      type: string
      format: string
    PartnerActionUrlType:
      enum:
        - Popup
        - Page
        - SideDrawer
      type: string
      format: string
    PhoneNumberMatchQuality:
      enum:
        - Exact
        - National
        - Subscriber
      type: string
      format: string
    PhoneNumberMatchType:
      enum:
        - Phone
        - Mobile
      type: string
      format: string
    PlacementActivityListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlacementActivityModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    PlacementActivityModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        placementId:
          type: integer
          format: int32
    PlacementActivityRepresentation:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        details:
          $ref: '#/components/schemas/ActivityDetailListModel'
        placementId:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/ModelLinks'
    PlacementActivitySettingModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        validStatuses:
          type: array
          items:
            $ref: '#/components/schemas/StatusModel'
          nullable: true
        statusMandatory:
          type: boolean
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/ActivityQuestionModel'
          nullable: true
    PlacementActivitySettingSummaryModel:
      type: object
      properties:
        settingId:
          type: integer
          format: int32
        activityType:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
    PlacementActivitySettingsListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlacementActivitySettingSummaryModel'
          nullable: true
    PlacementActivitySummaryListModel:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlacementActivitySummaryModel'
          nullable: true
    PlacementActivitySummaryModel:
      type: object
      properties:
        activityId:
          type: integer
          format: int64
        activityName:
          type: string
          nullable: true
        activityType:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        placementId:
          type: integer
          format: int32
    PlacementApproverModel:
      required:
        - contactId
      type: object
      properties:
        primary:
          type: boolean
        contactId:
          description: Unique identifier for the contact
          type: integer
          format: int32
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        position:
          description: Position or job title
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
        inactive:
          description: Contact is no longer with the company
          type: boolean
        status:
          $ref: '#/components/schemas/StatusModel'
        owner:
          $ref: '#/components/schemas/UserNameModel'
    PlacementAttachmentCategoryListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlacementAttachmentCategoryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    PlacementAttachmentCategoryModel:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PlacementAttachmentType'
        category:
          type: string
          nullable: true
    PlacementAttachmentLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
    PlacementAttachmentListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlacementAttachmentModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    PlacementAttachmentModel:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/PlacementAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
    PlacementAttachmentRepresentation:
      type: object
      properties:
        attachmentId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/PlacementAttachmentType'
        category:
          type: string
          nullable: true
        fileName:
          type: string
          nullable: true
        fileType:
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/PlacementAttachmentLinks'
    PlacementAttachmentType:
      enum:
        - Other
        - Resume
        - FormattedResume
        - CoverLetter
        - Screening
        - Check
        - Reference
        - License
        - Terms
        - CompanyTerms
        - StandardTerms
      type: string
      format: string
    PlacementBillingModel:
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        address:
          $ref: '#/components/schemas/CompanyAddressModel'
        email:
          type: string
          nullable: true
        orderRef:
          description: PO Number/Reference
          type: string
          nullable: true
        invoiceRef:
          description: Invoice Number/Reference
          type: string
          nullable: true
        terms:
          description: Billing payment terms
          type: string
          nullable: true
        dueDate:
          description: Payment due date
          type: string
          format: date
          nullable: true
    PlacementContractRateModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/PlacementContractRatePer'
        hoursPerWeek:
          type: number
          format: double
          nullable: true
        daysPerWeek:
          type: number
          format: double
          nullable: true
        clientRate:
          type: number
          format: double
          nullable: true
        candidateRate:
          type: number
          format: double
          nullable: true
        onCostsType:
          $ref: '#/components/schemas/RatePortion'
        onCosts:
          type: number
          format: double
          nullable: true
        netMargin:
          type: number
          format: double
          nullable: true
    PlacementContractRatePer:
      enum:
        - Hour
        - Day
        - Week
        - Month
      type: string
      format: string
    PlacementExportModel:
      type: object
      properties:
        payroll:
          description: Placement has been selected for export to a payroll service
          type: boolean
          nullable: true
        timesheets:
          description: Placement has been selected for export to a timesheet service
          type: boolean
          nullable: true
        approvers:
          description: Timesheet/payroll approver contacts
          type: array
          items:
            $ref: '#/components/schemas/PlacementApproverModel'
          nullable: true
        onboarding:
          description: Placement has been selected for export to an onboarding service
          type: boolean
          nullable: true
        onboardingManagers:
          description: Onboarding manager contacts
          type: array
          items:
            $ref: '#/components/schemas/PlacementApproverModel'
          nullable: true
    PlacementLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        extendsPlacement:
          description: Extends placement
          type: string
          format: uri
          nullable: true
        extendedByPlacement:
          description: Extended by placement
          type: string
          format: uri
          nullable: true
        creditsPlacement:
          description: Credits placement
          type: string
          format: uri
          nullable: true
        creditedByPlacement:
          description: Credited by placement
          type: string
          format: uri
          nullable: true
        application:
          description: Job application
          type: string
          format: uri
          nullable: true
        attachments:
          description: Attachments
          type: string
          format: uri
          nullable: true
        notes:
          description: Notes
          type: string
          format: uri
          nullable: true
    PlacementListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    PlacementRateModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        default:
          type: boolean
        displayIndex:
          type: integer
          format: int32
        payRate:
          type: number
          format: double
        chargeRate:
          type: number
          format: double
        chargeCurrency:
          type: string
          nullable: true
    PlacementRecruiterModel:
      required:
        - userId
      type: object
      properties:
        feeSplit:
          type: number
          format: double
          nullable: true
        userId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        inactive:
          type: boolean
          default: false
        deleted:
          type: boolean
          default: false
    PlacementRepresentation:
      required:
        - placementId
        - type
      type: object
      properties:
        summary:
          type: string
          nullable: true
        placementId:
          type: integer
          format: int32
        jobTitle:
          type: string
          nullable: true
        job:
          $ref: '#/components/schemas/JobOrderTitleModel'
        candidate:
          $ref: '#/components/schemas/CandidatePlacementModel'
        approved:
          type: boolean
        approvedAt:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/PlacementType'
        status:
          $ref: '#/components/schemas/StatusModel'
        startDate:
          description: Date employment begins
          type: string
          format: date
          nullable: true
        endDate:
          description: Date a contract or temporary employment ends
          type: string
          format: date
          nullable: true
        workShift:
          $ref: '#/components/schemas/PlacementWorkShiftModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        source:
          $ref: '#/components/schemas/PlacementSourceModel'
        workplaceAddress:
          $ref: '#/components/schemas/CompanyAddressModel'
        paymentType:
          type: string
          nullable: true
        salary:
          $ref: '#/components/schemas/PlacementSalaryModel'
        contractRate:
          $ref: '#/components/schemas/PlacementContractRateModel'
        rates:
          type: array
          items:
            $ref: '#/components/schemas/PlacementRateModel'
          nullable: true
        award:
          type: string
          nullable: true
        industryCode:
          type: string
          nullable: true
        chargeCurrency:
          type: string
          nullable: true
        feeSplit:
          $ref: '#/components/schemas/RatePortion'
        billing:
          $ref: '#/components/schemas/PlacementBillingModel'
        export:
          $ref: '#/components/schemas/PlacementExportModel'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        recruiters:
          type: array
          items:
            $ref: '#/components/schemas/PlacementRecruiterModel'
          nullable: true
        partnerActions:
          type: array
          items:
            $ref: '#/components/schemas/PartnerActionStageModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/PlacementLinks'
    PlacementSalaryModel:
      type: object
      properties:
        base:
          type: number
          format: double
          nullable: true
        superannuation:
          type: number
          format: double
          nullable: true
        benefits:
          type: number
          format: double
          nullable: true
        total:
          type: number
          format: double
          nullable: true
        fee:
          type: number
          format: double
          nullable: true
    PlacementSourceModel:
      type: object
      properties:
        placement:
          description: The source of candidate that lead to this placement
          type: string
          nullable: true
        candidate:
          description: The original source of the candidate
          type: string
          nullable: true
    PlacementSummaryModel:
      required:
        - placementId
        - type
      type: object
      properties:
        placementId:
          type: integer
          format: int32
        jobTitle:
          type: string
          nullable: true
        job:
          $ref: '#/components/schemas/JobOrderTitleModel'
        candidate:
          $ref: '#/components/schemas/CandidatePlacementModel'
        approved:
          type: boolean
        approvedAt:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/PlacementType'
        status:
          $ref: '#/components/schemas/StatusModel'
        startDate:
          description: Date employment begins
          type: string
          format: date
          nullable: true
        endDate:
          description: Date a contract or temporary employment ends
          type: string
          format: date
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    PlacementTimesheetApproverModel:
      type: object
      properties:
        firstName:
          description: First name
          type: string
          nullable: true
        lastName:
          description: Last name
          type: string
          nullable: true
        position:
          description: Position or job title
          type: string
          nullable: true
        email:
          description: Primary email address
          type: string
          nullable: true
        phone:
          description: Phone number
          type: string
          nullable: true
        mobile:
          description: Mobile/cell number
          type: string
          nullable: true
    PlacementTimesheetDaysModel:
      type: object
      allOf:
        - $ref: '#/components/schemas/PlacementTimesheetEntryModel'
        - type: object
          properties:
            date:
              type: string
              properties:
                timeOfDay:
                  format: time
              format: date
            type:
              enum:
                - Days
              type: object
            halfDay:
              type: boolean
              nullable: true
    PlacementTimesheetEntryModel:
      required:
        - type
      type: object
      properties:
        date:
          type: string
          properties:
            timeOfDay:
              format: time
          format: date
        type:
          $ref: '#/components/schemas/PlacementTimesheetType'
      x-extendedDiscriminator: type
    PlacementTimesheetHoursModel:
      type: object
      allOf:
        - $ref: '#/components/schemas/PlacementTimesheetEntryModel'
        - type: object
          properties:
            date:
              type: string
              properties:
                timeOfDay:
                  format: time
              format: date
            type:
              enum:
                - Hours
              type: object
            hours:
              type: number
              format: double
              nullable: true
    PlacementTimesheetListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlacementTimesheetModel'
          nullable: true
    PlacementTimesheetModel:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/DateRangeModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        submittedAt:
          type: string
          format: date-time
          nullable: true
        approvedAt:
          type: string
          format: date-time
          nullable: true
        approvedBy:
          $ref: '#/components/schemas/PlacementTimesheetApproverModel'
        entries:
          type: array
          items:
            $ref: '#/components/schemas/PlacementTimesheetEntryModel'
          nullable: true
    PlacementTimesheetTimeModel:
      type: object
      allOf:
        - $ref: '#/components/schemas/PlacementTimesheetEntryModel'
        - type: object
          properties:
            date:
              type: string
              properties:
                timeOfDay:
                  format: time
              format: date
            type:
              enum:
                - Time
              type: object
            start:
              type: string
              properties:
                value:
                  format: time
              format: time
              nullable: true
            end:
              type: string
              properties:
                value:
                  format: time
              format: time
              nullable: true
            break:
              type: string
              properties:
                value:
                  format: time
              format: time
              nullable: true
    PlacementTimesheetType:
      enum:
        - Time
        - Hours
        - Days
      type: string
      format: string
    PlacementType:
      enum:
        - Permanent
        - Contract
        - Temporary
        - Credit
      type: string
      format: string
    PlacementUserTaskModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        placementId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    PlacementUserTaskRepresentation:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        placementId:
          type: integer
          format: int32
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/UserTaskLinks'
    PlacementWorkShiftModel:
      type: object
      properties:
        startTime:
          type: string
          properties:
            value:
              format: time
          format: time
          nullable: true
        endTime:
          type: string
          properties:
            value:
              format: time
          format: time
          nullable: true
        workDays:
          type: array
          items:
            type: string
          nullable: true
    RatePortion:
      enum:
        - Fixed
        - Percent
      type: string
      format: string
    RejectRequisitionCommand:
      required:
        - approverId
      type: object
      properties:
        approverId:
          type: integer
          format: int32
        reason:
          type: string
          nullable: true
    RelativeStartModel:
      type: object
      properties:
        period:
          type: integer
          format: int32
        unit:
          $ref: '#/components/schemas/RelativeStartUnit'
    RelativeStartUnit:
      enum:
        - Week
        - Month
      type: string
      format: string
    RemoveCandidateSkillsCommand:
      type: object
      properties:
        categories:
          description: Skill categories to remove from this candidate.
          type: array
          items:
            $ref: '#/components/schemas/RemoveCategoriesModel'
          nullable: true
    RemoveCategoriesModel:
      required:
        - categoryId
      type: object
      properties:
        categoryId:
          description: "Category to remove.<br />\r\nSpecify a categoryId without subCategories to remove the category and all previously\r\nlinked sub-categories associated with the category."
          type: integer
          format: int32
        subCategories:
          description: Optional list of sub-categories and skills to remove.
          type: array
          items:
            $ref: '#/components/schemas/RemoveSubCategoriesModel'
          nullable: true
    RemoveSubCategoriesModel:
      required:
        - subCategoryId
      type: object
      properties:
        subCategoryId:
          description: "Sub-category to remove.<br />\r\nSpecify a subCategoryId without skills to remove the sub-category and all previously\r\nlinked skills associated with the sub-category."
          type: integer
          format: int32
        skills:
          description: Optional list of skills to remove.
          type: array
          items:
            $ref: '#/components/schemas/SubmitSkillsModel'
          nullable: true
    RequisitionAttachmentType:
      enum:
        - Other
        - JobDescription
      type: string
      format: string
    RequisitionFormFieldModel:
      type: object
      properties:
        fieldID:
          type: integer
          format: int32
        formID:
          type: integer
          format: int32
        fieldName:
          type: string
          nullable: true
        visible:
          type: boolean
        required:
          type: boolean
    RequisitionFormListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionFormModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    RequisitionFormModel:
      type: object
      properties:
        formName:
          type: string
          nullable: true
        formID:
          type: integer
          format: int32
        default:
          type: boolean
        deleted:
          type: boolean
        formFields:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionFormFieldModel'
          nullable: true
    RequisitionHistoryModel:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionLogModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
    RequisitionLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        workflow:
          type: string
          format: uri
          nullable: true
        job:
          description: Link to job created for an approved requisition
          type: string
          format: uri
          nullable: true
        history:
          description: Link to requisition approval history
          type: string
          format: uri
          nullable: true
        notes:
          description: Notes
          type: string
          format: uri
          nullable: true
    RequisitionListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    RequisitionLogModel:
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/ContactNameModel'
        oldStatus:
          $ref: '#/components/schemas/RequisitionStatus'
        newStatus:
          $ref: '#/components/schemas/RequisitionStatus'
        message:
          type: string
          nullable: true
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    RequisitionRepresentation:
      required:
        - jobTitle
        - requisitionId
      type: object
      properties:
        requisitionId:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/RequisitionStatus'
        workflowStageIndex:
          type: integer
          format: int32
          nullable: true
        jobTitle:
          minLength: 1
          type: string
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        hiringManager:
          $ref: '#/components/schemas/ContactNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        workflow:
          $ref: '#/components/schemas/CompanyWorkflowModel'
        jobDescription:
          type: string
          nullable: true
        numberOfJobs:
          type: integer
          format: int32
        source:
          description: >-
            Source of the requisition, or reason the requisition is being
            raised.
          type: string
          nullable: true
        workplaceAddress:
          $ref: '#/components/schemas/CompanyAddressModel'
        category:
          $ref: '#/components/schemas/JobOrderCategoryModel'
        location:
          $ref: '#/components/schemas/JobOrderLocationModel'
        start:
          $ref: '#/components/schemas/JobOrderStartModel'
        duration:
          $ref: '#/components/schemas/DurationModel'
        workType:
          $ref: '#/components/schemas/WorkTypeModel'
        salary:
          $ref: '#/components/schemas/JobOrderSalaryRangeModel'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        recruiters:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        formID:
          type: integer
          format: int32
          nullable: true
        links:
          $ref: '#/components/schemas/RequisitionLinks'
    RequisitionStatus:
      enum:
        - Draft
        - Submitted
        - Rejected
        - Approved
        - Closed
      type: string
      format: string
    RequisitionSummaryModel:
      required:
        - jobTitle
        - requisitionId
      type: object
      properties:
        requisitionId:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/RequisitionStatus'
        workflowStageIndex:
          type: integer
          format: int32
          nullable: true
        jobTitle:
          minLength: 1
          type: string
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        hiringManager:
          $ref: '#/components/schemas/ContactNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
    ReviewAcceptJobApplicationCommand:
      required:
        - contactId
      type: object
      properties:
        contactId:
          description: Hiring manager contact accepting the applicant
          type: integer
          format: int32
        message:
          description: Optional feedback
          type: string
          nullable: true
    ReviewRejectJobApplicationCommand:
      required:
        - contactId
      type: object
      properties:
        contactId:
          description: Hiring manager contact rejecting the applicant
          type: integer
          format: int32
        reason:
          description: Optional feedback
          type: string
          nullable: true
    ReviewSubmitJobApplicationCommand:
      type: object
      properties:
        submittedByUserId:
          description: >-
            Optionally specify the user submitting the job application for
            review (if not the authenticated user)
          type: integer
          format: int32
          nullable: true
    ReviewViewJobApplicationCommand:
      required:
        - contactId
      type: object
      properties:
        contactId:
          description: Hiring manager contact viewing the applicant
          type: integer
          format: int32
    SalaryModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
        rate:
          type: number
          format: double
          nullable: true
        currency:
          description: Optional ISO 4217 3-letter alphabetic currency code
          type: string
          nullable: true
    SalaryRangeModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
        rateLow:
          type: number
          format: double
          nullable: true
        rateHigh:
          type: number
          format: double
          nullable: true
        currency:
          description: Optional ISO 4217 3-letter alphabetic currency code
          type: string
          nullable: true
    SalaryRatePer:
      enum:
        - Hour
        - Day
        - Week
        - Month
        - Year
      type: string
      format: string
    SetCandidateAvailabilityByWeekCommand:
      required:
        - availability
        - weekOf
      type: object
      properties:
        weekOf:
          description: >-
            Update availability for the week (beginning Sunday) containing the
            specified date
          type: string
          properties:
            timeOfDay:
              format: time
          format: date
        availability:
          description: Weekly availability, at most two shifts per day
          type: object
          properties:
            Sunday:
              description: Availability, specify at most two shifts
              type: array
              items:
                $ref: '#/components/schemas/TimeRangeModel'
            Monday:
              description: Availability, specify at most two shifts
              type: array
              items:
                $ref: '#/components/schemas/TimeRangeModel'
            Tuesday:
              description: Availability, specify at most two shifts
              type: array
              items:
                $ref: '#/components/schemas/TimeRangeModel'
            Wednesday:
              description: Availability, specify at most two shifts
              type: array
              items:
                $ref: '#/components/schemas/TimeRangeModel'
            Thursday:
              description: Availability, specify at most two shifts
              type: array
              items:
                $ref: '#/components/schemas/TimeRangeModel'
            Friday:
              description: Availability, specify at most two shifts
              type: array
              items:
                $ref: '#/components/schemas/TimeRangeModel'
            Saturday:
              description: Availability, specify at most two shifts
              type: array
              items:
                $ref: '#/components/schemas/TimeRangeModel'
        recurring:
          description: >-
            Availability repeats in following weeks. Previous/past recurring
            schedules will be terminated prior to this schedule, existing future
            overlapping schedules will be cancelled.
          type: boolean
        until:
          description: Optional end date of repeating availability
          type: string
          format: date
          nullable: true
    SetCandidateCustomFieldListValuesCommand:
      type: object
      properties:
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
    SetCandidateStatusCommand:
      required:
        - statusId
      type: object
      properties:
        statusId:
          description: Status Id
          type: integer
          format: int32
        note:
          $ref: '#/components/schemas/SubmitStatusNoteModel'
    SetCompanyCustomFieldListValuesCommand:
      type: object
      properties:
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
    SetCompanyStatusCommand:
      required:
        - statusId
      type: object
      properties:
        statusId:
          description: Status Id
          type: integer
          format: int32
        note:
          $ref: '#/components/schemas/SubmitStatusNoteModel'
    SetContactCustomFieldListValuesCommand:
      type: object
      properties:
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
    SetContactStatusCommand:
      required:
        - statusId
      type: object
      properties:
        statusId:
          description: Status Id
          type: integer
          format: int32
        note:
          $ref: '#/components/schemas/SubmitStatusNoteModel'
    SetJobApplicationCustomFieldListValuesCommand:
      type: object
      properties:
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
    SetJobApplicationStatusCommand:
      required:
        - statusId
      type: object
      properties:
        statusId:
          description: Status Id
          type: integer
          format: int32
        note:
          $ref: '#/components/schemas/SubmitStatusNoteModel'
    SetJobOrderCustomFieldListValuesCommand:
      type: object
      properties:
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
    SetJobOrderStatusCommand:
      required:
        - statusId
      type: object
      properties:
        statusId:
          description: Status Id
          type: integer
          format: int32
        note:
          $ref: '#/components/schemas/SubmitStatusNoteModel'
    SetPlacementCustomFieldListValuesCommand:
      type: object
      properties:
        values:
          description: Available values for a list custom field
          type: array
          items:
            type: string
          nullable: true
    SetPlacementStatusCommand:
      required:
        - statusId
      type: object
      properties:
        statusId:
          description: Status Id
          type: integer
          format: int32
        note:
          $ref: '#/components/schemas/SubmitStatusNoteModel'
    SimpleWorkflow:
      enum:
        - Started
        - InProgress
        - Complete
      type: string
      format: string
    SkillCategoryModel:
      required:
        - name
        - skillId
      type: object
      properties:
        skillId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
    StatusListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/StatusModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    StatusModel:
      required:
        - name
        - statusId
      type: object
      properties:
        statusId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        active:
          type: boolean
        default:
          type: boolean
          default: false
    StatusRepresentation:
      required:
        - name
        - statusId
      type: object
      properties:
        statusId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        active:
          type: boolean
        default:
          type: boolean
          default: false
        links:
          $ref: '#/components/schemas/ModelLinks'
    SubCategoryModel:
      required:
        - name
        - subCategoryId
      type: object
      properties:
        subCategoryId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/SkillCategoryModel'
          nullable: true
    SubmissionLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        notes:
          description: Notes
          type: string
          format: uri
          nullable: true
    SubmissionListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    SubmissionRepresentation:
      required:
        - submissionId
      type: object
      properties:
        submissionId:
          type: integer
          format: int64
        jobTitle:
          type: string
          nullable: true
        candidate:
          $ref: '#/components/schemas/CandidateSummaryModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        job:
          $ref: '#/components/schemas/JobOrderSummaryModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        candidateSummary:
          type: string
          nullable: true
        application:
          $ref: '#/components/schemas/JobApplicationSummaryModel'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        owner:
          $ref: '#/components/schemas/UserNameModel'
        links:
          $ref: '#/components/schemas/SubmissionLinks'
    SubmissionSummaryModel:
      required:
        - submissionId
      type: object
      properties:
        submissionId:
          type: integer
          format: int64
        jobTitle:
          type: string
          nullable: true
        candidate:
          $ref: '#/components/schemas/CandidateSummaryModel'
        company:
          $ref: '#/components/schemas/CompanyNameModel'
        job:
          $ref: '#/components/schemas/JobOrderSummaryModel'
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    SubmitAddressModel:
      type: object
      properties:
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
    SubmitCandidateAttachmentType:
      enum:
        - Other
        - Resume
        - FormattedResume
        - CoverLetter
        - Screening
        - Check
        - Reference
        - License
      type: string
      format: string
    SubmitCandidateAvailabilityModel:
      description: >-
        The date the candidate is available to start. Specify ONE OF immediate,
        relative or date.
      type: object
      properties:
        immediate:
          description: The candidate is available for an immediate start
          type: boolean
        relative:
          $ref: '#/components/schemas/SubmitRelativeStartModel'
        date:
          description: The specific date that a job starts or a candidate is available
          type: string
          format: date
          nullable: true
    SubmitCandidateEducationModel:
      type: object
      properties:
        institution:
          type: string
          nullable: true
        course:
          type: string
          nullable: true
        date:
          description: "Year, month or date completed.<br />\r\nYear must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), the 4 digit year the course was completed, e.g. 2017<br />\r\nMonth must be formatted as [ISO date-fullyear](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6) \"-\" [ISO date-month](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07<br />\r\nDate must be formatted as [ISO full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6), e.g. 2017-07-31"
          type: string
          nullable: true
    SubmitCategoriesModel:
      required:
        - categoryId
      type: object
      properties:
        categoryId:
          description: "Category to add or update in the skill coding.<br />\r\nSpecify a categoryId without subCategories for a broad classification.\r\nThis will remove all previously linked sub-categories associated with the category."
          type: integer
          format: int32
        subCategories:
          description: >-
            Optional list of sub-categories and skills for detailed skill
            classification
          type: array
          items:
            $ref: '#/components/schemas/SubmitSubCategoriesModel'
          nullable: true
    SubmitCategoryModel:
      required:
        - categoryId
      type: object
      properties:
        categoryId:
          type: integer
          format: int32
        subCategoryId:
          type: integer
          format: int32
          nullable: true
    SubmitCompanyWorkflowApproverModel:
      required:
        - contactId
        - stageIndex
      type: object
      properties:
        stageIndex:
          type: integer
          format: int32
        contactId:
          type: array
          items:
            type: integer
            format: int32
    SubmitCurrentEmploymentModel:
      type: object
      properties:
        employer:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        workTypeId:
          type: integer
          format: int32
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitSalaryModel'
    SubmitCustomFieldValueModel:
      required:
        - fieldId
      type: object
      properties:
        fieldId:
          type: integer
          format: int32
        value:
          description: >-
            Text, List or Date ([ISO
            full-date](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6))
            value for this custom field (depending on the field `type`)
          nullable: true
    SubmitDurationModel:
      type: object
      properties:
        period:
          type: integer
          format: int32
        unit:
          $ref: '#/components/schemas/DurationUnit'
    SubmitEmploymentModel:
      type: object
      properties:
        current:
          $ref: '#/components/schemas/SubmitCurrentEmploymentModel'
        ideal:
          $ref: '#/components/schemas/SubmitIdealEmploymentModel'
        history:
          type: array
          items:
            $ref: '#/components/schemas/CandidateEmploymentHistoryModel'
          nullable: true
    SubmitIdealEmploymentModel:
      type: object
      properties:
        position:
          type: string
          nullable: true
        workTypeId:
          type: integer
          format: int32
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitSalaryRangeModel'
        other:
          type: array
          items:
            $ref: '#/components/schemas/SubmitIdealSalaryModel'
          nullable: true
    SubmitIdealSalaryModel:
      type: object
      properties:
        workTypeId:
          type: integer
          format: int32
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitSalaryRangeModel'
    SubmitInterviewEvaluationCommand:
      type: object
      properties:
        comments:
          type: string
          nullable: true
        rating:
          type: array
          items:
            $ref: '#/components/schemas/SubmitInterviewEvaluationRatingModel'
          nullable: true
    SubmitInterviewEvaluationRatingModel:
      type: object
      properties:
        criteria:
          type: string
          nullable: true
        rating:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
    SubmitJobApplicationCommand:
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        firstName:
          maxLength: 50
          minLength: 1
          type: string
        lastName:
          maxLength: 50
          minLength: 1
          type: string
        salutation:
          type: string
          nullable: true
        email:
          maxLength: 100
          minLength: 1
          type: string
        phone:
          maxLength: 50
          type: string
          nullable: true
        mobile:
          maxLength: 50
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/SubmitAddressModel'
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        employment:
          $ref: '#/components/schemas/SubmitEmploymentModel'
        availability:
          $ref: '#/components/schemas/SubmitCandidateAvailabilityModel'
        education:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCandidateEducationModel'
          nullable: true
        skillTags:
          type: array
          items:
            type: string
          nullable: true
        screening:
          $ref: '#/components/schemas/SubmitScreeningQuesionResultsModel'
        custom:
          $ref: '#/components/schemas/SubmitJobApplicationCustomFieldsModel'
    SubmitJobApplicationCustomFieldsModel:
      description: Candidate and job application custom field values
      type: object
      properties:
        candidate:
          description: Candidate custom field values
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        application:
          description: Job application custom field values
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
    SubmitJobOrderCandidateCommand:
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        source:
          type: string
          nullable: true
        firstName:
          maxLength: 50
          minLength: 1
          type: string
        lastName:
          maxLength: 50
          minLength: 1
          type: string
        salutation:
          type: string
          nullable: true
        email:
          maxLength: 100
          minLength: 1
          type: string
        phone:
          maxLength: 50
          type: string
          nullable: true
        mobile:
          maxLength: 50
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/SubmitAddressModel'
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        employment:
          $ref: '#/components/schemas/SubmitEmploymentModel'
        availability:
          $ref: '#/components/schemas/SubmitCandidateAvailabilityModel'
        education:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCandidateEducationModel'
          nullable: true
        skillTags:
          type: array
          items:
            type: string
          nullable: true
        screening:
          $ref: '#/components/schemas/SubmitScreeningQuesionResultsModel'
        custom:
          $ref: '#/components/schemas/SubmitJobApplicationCustomFieldsModel'
    SubmitJobOrderFeeModel:
      type: object
      properties:
        rateType:
          $ref: '#/components/schemas/JobOrderFeeRateType'
        rate:
          type: number
          format: double
        estimatedTotal:
          description: >-
            Optional estimated total fee. If not specified it will be calculated
            from the duration, salary and fee rate.
          type: number
          format: double
        currency:
          type: string
          nullable: true
    SubmitJobOrderSalaryRangeModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
        rateLow:
          maximum: 99999999
          minimum: 0
          type: number
          format: double
        rateHigh:
          maximum: 99999999
          minimum: 0
          type: number
          format: double
          nullable: true
        currency:
          description: Optional ISO 4217 3-letter alphabetic currency code
          type: string
          nullable: true
        timePerWeek:
          description: "Number of days per week for a daily rate,\r\nhours per day for an hourly rate with a 'Day' duration unit or\r\nhours per day for an hourly rate with a 'Week' duration unit."
          type: number
          format: double
          nullable: true
    SubmitJobOrderSkillTagsModel:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          nullable: true
        matchAll:
          type: boolean
    SubmitJobOrderStartModel:
      type: object
      properties:
        immediate:
          type: boolean
        relative:
          $ref: '#/components/schemas/SubmitRelativeStartModel'
        date:
          description: The specific date that the job starts
          type: string
          format: date
          nullable: true
    SubmitLocationModel:
      required:
        - locationId
      type: object
      properties:
        locationId:
          type: integer
          format: int32
        areaId:
          type: integer
          format: int32
          nullable: true
    SubmitPlacementBillingModel:
      type: object
      properties:
        contactId:
          type: integer
          format: int32
          nullable: true
        addressId:
          type: string
          format: uuid
          nullable: true
        email:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
        orderRef:
          description: PO Number/Reference
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        invoiceRef:
          description: Invoice Number/Reference
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        terms:
          description: Billing payment terms
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        dueDate:
          description: Payment due date
          type: string
          format: date
          nullable: true
    SubmitPlacementContractRateModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SubmitPlacementContractRatePer'
        hoursPerWeek:
          type: number
          format: double
        daysPerWeek:
          type: number
          format: double
        clientRate:
          type: number
          format: double
        candidateRate:
          type: number
          format: double
        onCostsType:
          $ref: '#/components/schemas/RatePortion'
        onCosts:
          type: number
          format: double
        netMargin:
          type: number
          format: double
    SubmitPlacementContractRatePer:
      enum:
        - Hour
        - Day
      type: string
      format: string
    SubmitPlacementRecruiterModel:
      type: object
      properties:
        userId:
          description: >-
            Recruiter to be associated with the placement, must also be
            associated with the related job.
          type: integer
          format: int32
        feeSplit:
          description: >-
            Optional fee portion, 0.0-1.0 (representing 0%-100%) if placement
            feeSplit='Percent', a currency amount if placement feeSplit='Fixed'
          type: number
          format: double
          nullable: true
    SubmitPlacementSalaryModel:
      type: object
      properties:
        base:
          type: number
          format: double
        superannuation:
          type: number
          format: double
        total:
          type: number
          format: double
        fee:
          type: number
          format: double
    SubmitRelativeStartModel:
      type: object
      properties:
        period:
          type: integer
          format: int32
        unit:
          $ref: '#/components/schemas/RelativeStartUnit'
    SubmitRequisitionCommand:
      type: object
    SubmitSalaryModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
        rate:
          maximum: 99999999
          minimum: 0
          type: number
          format: double
        currency:
          description: Optional ISO 4217 3-letter alphabetic currency code
          type: string
          nullable: true
    SubmitSalaryRangeModel:
      type: object
      properties:
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
        rateLow:
          maximum: 99999999
          minimum: 0
          type: number
          format: double
        rateHigh:
          maximum: 99999999
          minimum: 0
          type: number
          format: double
          nullable: true
        currency:
          description: Optional ISO 4217 3-letter alphabetic currency code
          type: string
          nullable: true
    SubmitScreeningQuesionAnswerModel:
      type: object
      properties:
        question:
          type: string
          nullable: true
        answer:
          description: >-
            Text or List value answer for this screening question (depending on
            the question `answerType`)
          nullable: true
        score:
          description: Optional score for this answer
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          nullable: true
    SubmitScreeningQuesionResultsModel:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/SubmitScreeningQuesionAnswerModel'
          nullable: true
        score:
          description: Optional overall score for these screening results
          maximum: 100
          minimum: 0
          type: integer
          format: int32
          nullable: true
    SubmitSkillsModel:
      required:
        - skillId
      type: object
      properties:
        skillId:
          description: Skill for detailed skill classification.
          type: integer
          format: int32
    SubmitStatusNoteModel:
      description: Optional note
      type: object
      properties:
        type:
          description: Optional note type
          type: string
          nullable: true
        text:
          description: Note content
          type: string
          nullable: true
    SubmitSubCategoriesModel:
      required:
        - subCategoryId
      type: object
      properties:
        subCategoryId:
          description: "Sub-category for detailed skill classification.<br />\r\nSpecify a subCategoryId without skills for a broad classification.\r\nThis will remove all previously linked skills associated with the sub-category."
          type: integer
          format: int32
        skills:
          description: >-
            Optional list of skills associated with the sub-category for
            detailed classification
          type: array
          items:
            $ref: '#/components/schemas/SubmitSkillsModel'
          nullable: true
    SubmitUserModel:
      description: "The user creating the note if not the authenticated user.<br />\r\nSpecify either userId or email."
      type: object
      properties:
        userId:
          type: integer
          format: int32
          nullable: true
        email:
          type: string
          nullable: true
    SubmitWebhookEventFilterModel:
      type: object
      properties:
        jobapplication_status_changed:
          $ref: '#/components/schemas/SubmitWebhookEventStatusChangeFilterModel'
    SubmitWebhookEventStatusChangeFilterModel:
      type: object
      properties:
        statusId:
          description: Limit events to a specific status
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        statusActive:
          description: Limit events to an active/open status
          type: boolean
    SubmitWebhookStatus:
      enum:
        - Enabled
        - Disabled
        - Suspended
      type: string
      format: string
    SubmittedJobApplicationLinks:
      type: object
      properties:
        resume:
          type: string
          format: uri
          nullable: true
        coverLetter:
          type: string
          format: uri
          nullable: true
        other:
          type: string
          format: uri
          nullable: true
    SubmittedJobApplicationModel:
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        links:
          $ref: '#/components/schemas/SubmittedJobApplicationLinks'
    TimeRangeModel:
      description: Time of day interval
      type: object
      properties:
        start:
          description: >-
            Start time of day interval ([ISO
            partial-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6))
          type: string
          format: time
        end:
          description: >-
            End time of day interval ([ISO
            partial-time](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#rfc.section.5.6))
          type: string
          format: time
    UpdateCandidateAttachmentCommand:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CandidateAttachmentType'
        category:
          description: Optional additional categorization for the attachment type
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
    UpdateCandidateCommand:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        firstName:
          maxLength: 50
          type: string
          nullable: true
        lastName:
          maxLength: 50
          type: string
          nullable: true
        email:
          maxLength: 100
          type: string
          nullable: true
        phone:
          maxLength: 50
          type: string
          nullable: true
        mobile:
          maxLength: 50
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          maxLength: 20
          type: string
          nullable: true
        statusId:
          description: Candidate status
          type: integer
          format: int32
          nullable: true
        rating:
          maxLength: 50
          type: string
          nullable: true
        seeking:
          $ref: '#/components/schemas/CandidateSeekingStatus'
        unsubscribed:
          type: boolean
        dateOfBirth:
          type: string
          format: date
          nullable: true
        emergencyContact:
          maxLength: 200
          type: string
          nullable: true
        emergencyPhone:
          maxLength: 40
          type: string
          nullable: true
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        address:
          $ref: '#/components/schemas/SubmitAddressModel'
        skillTags:
          maxLength: 100
          type: array
          items:
            type: string
          nullable: true
        employment:
          $ref: '#/components/schemas/SubmitEmploymentModel'
        availability:
          $ref: '#/components/schemas/SubmitCandidateAvailabilityModel'
        education:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCandidateEducationModel'
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        recruiterUserId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    UpdateCandidatePartnerActionCommand:
      type: object
      properties:
        status:
          description: Optional partner defined action status/progress
          maxLength: 100
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultCommandModel'
    UpdateCandidateSkillsCommand:
      type: object
      properties:
        categories:
          description: "Skill categories to update for this candidate.<br />\r\nOnly skills and sub-categories for the submitted categories will be modified."
          type: array
          items:
            $ref: '#/components/schemas/SubmitCategoriesModel'
          nullable: true
    UpdateCandidateUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    UpdateCompanyAddressCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        isPrimaryAddress:
          type: boolean
    UpdateCompanyAttachmentCommand:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CompanyAttachmentType'
        category:
          description: Optional additional categorization for the attachment type
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
    UpdateCompanyCommand:
      required:
        - name
      type: object
      properties:
        summary:
          type: string
          nullable: true
        name:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        mainContactId:
          type: integer
          format: int32
          nullable: true
        primaryAddressId:
          type: string
          format: uuid
          nullable: true
        parentCompanyId:
          type: integer
          format: int32
          nullable: true
        legalName:
          description: Company LegalName
          maxLength: 200
          type: string
          nullable: true
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        statusId:
          description: Company status
          type: integer
          format: int32
          nullable: true
        custom:
          description: >-
            Custom field values. Only the specified fields will be updated, each
            fieldId can specified once.
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        ownerUserId:
          type: integer
          format: int32
          nullable: true
        recruiterUserId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    UpdateCompanyPartnerActionCommand:
      type: object
      properties:
        status:
          description: Optional partner defined action status/progress
          maxLength: 100
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultCommandModel'
    UpdateCompanyUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    UpdateCompanyWorkflowCommand:
      type: object
      properties:
        name:
          type: string
          nullable: true
        approvers:
          description: >-
            Approvers for this workflow. Only the specified workflow stages will
            be updated, each stageIndex can be specified once.
          type: array
          items:
            $ref: '#/components/schemas/SubmitCompanyWorkflowApproverModel'
          nullable: true
    UpdateContactAttachmentCommand:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ContactAttachmentType'
        category:
          description: Optional additional categorization for the attachment type
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
    UpdateContactCommand:
      type: object
      properties:
        summary:
          type: string
          nullable: true
        firstName:
          maxLength: 50
          type: string
          nullable: true
        lastName:
          maxLength: 50
          type: string
          nullable: true
        email:
          maxLength: 100
          type: string
          nullable: true
        phone:
          maxLength: 50
          type: string
          nullable: true
        mobile:
          maxLength: 50
          type: string
          nullable: true
        salutation:
          description: Salutation/honorific/title
          maxLength: 20
          type: string
          nullable: true
        unsubscribed:
          type: boolean
        social:
          type: object
          additionalProperties:
            type: string
            format: uri
          nullable: true
        position:
          type: string
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        reportsToContactId:
          type: integer
          format: int32
          nullable: true
        officeAddressId:
          type: string
          format: uuid
          nullable: true
        statusId:
          description: Contact status
          type: integer
          format: int32
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        ownerUserId:
          type: integer
          format: int32
          nullable: true
        recruiterUserId:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    UpdateContactPartnerActionCommand:
      type: object
      properties:
        status:
          description: Optional partner defined action status/progress
          maxLength: 100
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultCommandModel'
    UpdateContactUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    UpdateJobAdDraftCommand:
      type: object
      properties:
        summary:
          maxLength: 150
          type: string
          nullable: true
        title:
          maxLength: 80
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        reference:
          maxLength: 20
          type: string
          nullable: true
        bulletPoints:
          type: array
          items:
            type: string
          nullable: true
        jobId:
          description: Associated job
          type: integer
          format: int32
        ownerUserId:
          type: integer
          format: int32
          nullable: true
    UpdateJobAdPartnerActionCommand:
      type: object
      properties:
        status:
          description: Optional partner defined action status/progress
          maxLength: 100
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultCommandModel'
    UpdateJobApplicationAttachmentCommand:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CandidateAttachmentType'
        category:
          description: Optional additional categorization for the attachment type
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
    UpdateJobApplicationCommand:
      type: object
      properties:
        statusId:
          description: Job application status
          type: integer
          format: int32
        rating:
          description: Job application rating
          maximum: 10
          minimum: 0
          type: integer
          format: int32
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
    UpdateJobApplicationInterviewCommand:
      type: object
      properties:
        startAt:
          description: >-
            Interview start time. The allowed minutes for the time are 0, 15, 30
            and 45.
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        endAt:
          description: >-
            Interview end time. The allowed minutes for the time are 0, 15, 30
            and 45.
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    UpdateJobApplicationPartnerActionCommand:
      type: object
      properties:
        status:
          description: Optional partner defined action status/progress
          maxLength: 100
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultCommandModel'
    UpdateJobApplicationUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    UpdateJobOrderAttachmentCommand:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/JobOrderAttachmentType'
        category:
          description: Optional additional categorization for the attachment type
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
    UpdateJobOrderCommand:
      required:
        - jobTitle
      type: object
      properties:
        jobTitle:
          maxLength: 100
          type: string
          nullable: true
        companyId:
          type: integer
          format: int32
          nullable: true
        contactId:
          type: integer
          format: int32
          nullable: true
        jobDescription:
          type: string
          nullable: true
        statusId:
          description: Job status
          type: integer
          format: int32
          nullable: true
        userFavourite:
          description: Job is a favourite for the current user
          type: boolean
          nullable: true
        category:
          $ref: '#/components/schemas/SubmitCategoryModel'
        location:
          $ref: '#/components/schemas/SubmitLocationModel'
        workplaceAddressId:
          description: Workplace Address Id
          type: string
          format: uuid
          nullable: true
        start:
          $ref: '#/components/schemas/SubmitJobOrderStartModel'
        duration:
          $ref: '#/components/schemas/SubmitDurationModel'
        workTypeId:
          type: integer
          format: int32
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitJobOrderSalaryRangeModel'
        fee:
          $ref: '#/components/schemas/SubmitJobOrderFeeModel'
        numberOfJobs:
          type: integer
          format: int32
        source:
          maxLength: 50
          type: string
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        skillTags:
          $ref: '#/components/schemas/SubmitJobOrderSkillTagsModel'
        ownerUserId:
          description: User Id - Owner of this job
          type: integer
          format: int32
        recruiterUserId:
          description: User Id - Optional list of recruiters assigned to the job
          type: array
          items:
            type: integer
            format: int32
          nullable: true
    UpdateJobOrderPartnerActionCommand:
      type: object
      properties:
        status:
          description: Optional partner defined action status/progress
          maxLength: 100
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultCommandModel'
    UpdateJobOrderUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    UpdateNoteCommand:
      type: object
      properties:
        type:
          description: Note type
          type: string
          nullable: true
        text:
          description: Note content
          type: string
          nullable: true
    UpdatePartnerActionCommand:
      required:
        - actionName
      type: object
      properties:
        actionName:
          description: Menu item label that will appear to the end-user
          maxLength: 100
          type: string
          nullable: true
        reference:
          description: Unique partner defined reference/identifier for the action
          maxLength: 100
          type: string
          nullable: true
        url:
          description: "URL to open after the action is selected and assigned the `\"Submitted\"` stage.\\\r\nTemplates parameters can be used in the URL to identify the resource submitted to the action\r\n<table><tr><td>`{userId}`</td><td>Replaced with the User Id of the user performing the action</td></tr><tr><td>`{jobId}`</td><td>Replaced with the Job Id</td></tr><tr><td>`{adId}`</td><td>Replaced with the Job Ad Id</td></tr><tr><td>`{candidateId}`</td><td>Replaced with the Candidate Id</td></tr><tr><td>`{applicationId}`</td><td>Replaced with the Job Application Id</td></tr><tr><td>`{placementId}`</td><td>Replaced with the Placement Id</td></tr><tr><td>`{companyId}`</td><td>Replaced with the Company Id</td></tr><tr><td>`{contactId}`</td><td>Replaced with the Contact Id</td></tr></table>"
          maxLength: 500
          type: string
          format: uri
          nullable: true
        urlType:
          $ref: '#/components/schemas/PartnerActionUrlType'
        allowResubmit:
          description: Allow resources to be resubmitted to an action.
          type: boolean
        actionFilter:
          $ref: '#/components/schemas/PartnerActionFilterModel'
        webhookData:
          description: Additional data to include with the webhook notification
          nullable: true
    UpdatePlacementAttachmentCommand:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PlacementAttachmentType'
        category:
          description: Optional additional categorization for the attachment type
          type: string
          nullable: true
        expiry:
          description: >-
            Optional expiry date as listed on the document, e.g. a license
            expiry date
          type: string
          format: date
          nullable: true
    UpdatePlacementCommand:
      required:
        - jobTitle
      type: object
      properties:
        summary:
          type: string
          nullable: true
        jobTitle:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
          nullable: true
        statusId:
          description: Placement status
          type: integer
          format: int32
          nullable: true
        paymentType:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        startDate:
          description: Date employment begins
          type: string
          properties:
            timeOfDay:
              format: time
          format: date
        endDate:
          description: Date a contract or temporary employment ends
          type: string
          format: date
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitPlacementSalaryModel'
        contractRate:
          $ref: '#/components/schemas/SubmitPlacementContractRateModel'
        award:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        industryCode:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        billing:
          $ref: '#/components/schemas/SubmitPlacementBillingModel'
        feeSplit:
          $ref: '#/components/schemas/RatePortion'
        recruiters:
          type: array
          items:
            $ref: '#/components/schemas/SubmitPlacementRecruiterModel'
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
    UpdatePlacementPartnerActionCommand:
      type: object
      properties:
        status:
          description: Optional partner defined action status/progress
          maxLength: 100
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/PartnerActionResultCommandModel'
    UpdatePlacementUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
        candidates:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        jobs:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        placements:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        companies:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        contacts:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        applications:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
    UpdateRequisitionCommand:
      required:
        - jobTitle
      type: object
      properties:
        contactId:
          description: >-
            Optional contact associated with the change, must be associated with
            the same company as the requisition.
          type: integer
          format: int32
          nullable: true
        jobTitle:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        jobDescription:
          type: string
          nullable: true
        category:
          $ref: '#/components/schemas/SubmitCategoryModel'
        location:
          $ref: '#/components/schemas/SubmitLocationModel'
        workplaceAddressId:
          description: Workplace address Id
          type: string
          format: uuid
          nullable: true
        start:
          $ref: '#/components/schemas/SubmitJobOrderStartModel'
        duration:
          $ref: '#/components/schemas/SubmitDurationModel'
        workTypeId:
          type: integer
          format: int32
          nullable: true
        salary:
          $ref: '#/components/schemas/SubmitJobOrderSalaryRangeModel'
        numberOfJobs:
          type: integer
          format: int32
        source:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        custom:
          type: array
          items:
            $ref: '#/components/schemas/SubmitCustomFieldValueModel'
          nullable: true
        workflowId:
          type: integer
          format: int32
          nullable: true
        recruiterUserId:
          description: User Id - Optional list of recruiters assigned to the requisition.
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        formID:
          type: integer
          format: int32
          nullable: true
    UpdateUserTaskCommand:
      required:
        - title
        - assignees
      type: object
      properties:
        title:
          maxLength: 50
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        assignees:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        priority:
          maximum: 3
          minimum: 0
          type: integer
          format: int32
    UpdateWebhookCommand:
      required:
        - name
        - events
      type: object
      properties:
        name:
          maxLength: 100
          type: string
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventName'
          nullable: true
        eventFilters:
          $ref: '#/components/schemas/SubmitWebhookEventFilterModel'
        url:
          description: >-
            Target URL that will listen for incoming HTTP POST notification
            messages.
          type: string
          format: uri
          nullable: true
        authorization:
          description: >-
            Optional authorization header to include with the HTTP POST
            notification.
          type: string
          nullable: true
          example: Basic dXNlcm5hbWU6cGFzc3dvcmQ=
        status:
          $ref: '#/components/schemas/SubmitWebhookStatus'
    UserGroupLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        users:
          description: Users belonging to the group
          type: string
          format: uri
          nullable: true
    UserGroupListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    UserGroupRepresentation:
      required:
        - groupId
        - name
      type: object
      properties:
        groupId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        users:
          description: Users belonging to the group
          type: array
          items:
            $ref: '#/components/schemas/UserSummaryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/UserGroupLinks'
    UserGroupSummaryModel:
      required:
        - groupId
        - name
      type: object
      properties:
        groupId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
    UserLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        photo:
          type: string
          format: uri
          nullable: true
        office:
          description: Office the user belongs to
          type: string
          format: uri
          nullable: true
        userGroups:
          description: User groups the user belongs to
          type: string
          format: uri
          nullable: true
    UserListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    UserMatchedByEmailModel:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/MatchedEmailAddressModel'
        userId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        inactive:
          type: boolean
        updatedAt:
          type: string
          format: date-time
          nullable: true
    UserMatchedByPhoneModel:
      type: object
      properties:
        match:
          $ref: '#/components/schemas/MatchedPhoneNumberModel'
        userId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        inactive:
          type: boolean
        updatedAt:
          type: string
          format: date-time
          nullable: true
    UserNameModel:
      required:
        - userId
      type: object
      properties:
        userId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        inactive:
          type: boolean
          default: false
        deleted:
          type: boolean
          default: false
    UserOfficeLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        users:
          description: Users belonging to the office
          type: string
          format: uri
          nullable: true
    UserOfficeListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserOfficeNameModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    UserOfficeNameModel:
      required:
        - name
        - officeId
      type: object
      properties:
        officeId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
    UserOfficeRepresentation:
      required:
        - name
        - officeId
      type: object
      properties:
        officeId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
        users:
          description: Users belonging to the office
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        links:
          $ref: '#/components/schemas/UserOfficeLinks'
    UserOfficeSummaryModel:
      required:
        - name
        - officeId
      type: object
      properties:
        officeId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        street:
          type: array
          items:
            type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        url:
          type: string
          format: uri
          nullable: true
    UserRepresentation:
      required:
        - userId
      type: object
      properties:
        userId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        inactive:
          type: boolean
          default: false
        deleted:
          type: boolean
          default: false
        mentionName:
          type: string
          nullable: true
        office:
          $ref: '#/components/schemas/UserOfficeSummaryModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        timeZone:
          type: string
          nullable: true
        culture:
          type: string
          nullable: true
        admin:
          type: boolean
          default: false
        accountName:
          type: string
          nullable: true
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupSummaryModel'
          nullable: true
        links:
          $ref: '#/components/schemas/UserLinks'
    UserSummaryModel:
      required:
        - userId
      type: object
      properties:
        userId:
          type: integer
          format: int32
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        mobile:
          type: string
          nullable: true
        inactive:
          type: boolean
          default: false
        deleted:
          type: boolean
          default: false
        mentionName:
          type: string
          nullable: true
        office:
          $ref: '#/components/schemas/UserOfficeSummaryModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
    UserTaskLinks:
      type: object
      properties:
        self:
          type: string
          format: uri
          nullable: true
        note:
          type: string
          format: uri
          nullable: true
    UserTaskListRepresentation:
      required:
        - totalCount
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserTaskSummaryModel'
          nullable: true
        totalCount:
          type: integer
          format: int32
        links:
          $ref: '#/components/schemas/PageLinks'
    UserTaskModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    UserTaskRepresentation:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobOrderTitleModel'
          nullable: true
        requisitions:
          type: array
          items:
            $ref: '#/components/schemas/RequisitionSummaryModel'
          nullable: true
        candidates:
          type: array
          items:
            $ref: '#/components/schemas/CandidateNameModel'
          nullable: true
        applications:
          type: array
          items:
            $ref: '#/components/schemas/JobApplicationSummaryModel'
          nullable: true
        placements:
          type: array
          items:
            $ref: '#/components/schemas/PlacementSummaryModel'
          nullable: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyNameModel'
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactNameModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/UserTaskLinks'
    UserTaskSummaryModel:
      type: object
      properties:
        taskId:
          type: integer
          format: int64
        text:
          type: string
          nullable: true
        startAt:
          type: string
          format: date-time
          nullable: true
        endAt:
          type: string
          format: date-time
          nullable: true
        allDay:
          type: boolean
        reminderMinutes:
          type: integer
          format: int32
          nullable: true
        complete:
          type: boolean
        owner:
          $ref: '#/components/schemas/UserNameModel'
        assignedTo:
          $ref: '#/components/schemas/UserNameModel'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/UserNameModel'
          nullable: true
        createdBy:
          $ref: '#/components/schemas/UserNameModel'
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedBy:
          $ref: '#/components/schemas/UserNameModel'
        updatedAt:
          type: string
          format: date-time
          nullable: true
    WebhookEventFilterModel:
      type: object
      properties:
        jobapplication_status_changed:
          $ref: '#/components/schemas/WebhookEventStatusChangeFilterModel'
    WebhookEventStatusChangeFilterModel:
      type: object
      properties:
        statusId:
          description: Limit events to a specific status
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        statusActive:
          description: Limit events to an active/open status
          type: boolean
    WebhookListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WebhookModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    WebhookModel:
      type: object
      properties:
        webhookId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/WebhookStatus'
        url:
          type: string
          format: uri
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventName'
          nullable: true
          readOnly: true
        eventFilters:
          $ref: '#/components/schemas/WebhookEventFilterModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        enabledAt:
          type: string
          format: date-time
          nullable: true
        disabledAt:
          type: string
          format: date-time
          nullable: true
        suspendedAt:
          type: string
          format: date-time
          nullable: true
        failedAt:
          type: string
          format: date-time
          nullable: true
    WebhookRepresentation:
      type: object
      properties:
        webhookId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/WebhookStatus'
        url:
          type: string
          format: uri
          nullable: true
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventName'
          nullable: true
          readOnly: true
        eventFilters:
          $ref: '#/components/schemas/WebhookEventFilterModel'
        createdAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        updatedAt:
          type: string
          properties:
            offset:
              format: time
            timeOfDay:
              format: time
          format: date-time
        enabledAt:
          type: string
          format: date-time
          nullable: true
        disabledAt:
          type: string
          format: date-time
          nullable: true
        suspendedAt:
          type: string
          format: date-time
          nullable: true
        failedAt:
          type: string
          format: date-time
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    WebhookStatus:
      enum:
        - Enabled
        - Disabled
        - Suspended
        - Failed
      type: string
      format: string
    WorkTypeListRepresentation:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/WorkTypeModel'
          nullable: true
        links:
          $ref: '#/components/schemas/ModelLinks'
    WorkTypeModel:
      required:
        - name
        - workTypeId
      type: object
      properties:
        workTypeId:
          type: integer
          format: int32
        name:
          minLength: 1
          type: string
        ratePer:
          $ref: '#/components/schemas/SalaryRatePer'
    JobBoardApiJobApplicationsSubmitJobApplicationDocumentsRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    JobApiAttachmentsAddSingleAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    RequisitionApiAttachmentsAddAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    CandidateApiPhotoUpdatePhotoRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    CandidateApiAttachmentsAddSingleAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    JobApplicationApiAttachmentsAddAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    PlacementApiAttachmentsAddSingleAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    CompanyApiLogoUpdateLogoRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    CompanyApiAttachmentsAddSingleAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    ContactApiContactsUpdatePhotoRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    ContactApiAttachmentsAddSingleAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    NoteApiAttachmentsAddSingleAttachmentRequest:
      required:
        - fileData
      type: object
      properties:
        fileData:
          type: string
          format: binary
    FolderApiFoldersModifyEntitiesInFolderRequest:
      type: array
      items:
        $ref: '#/components/schemas/Operation'
    JobApiAttachmentsGetAttachmentResponse:
      type: string
      format: binary
    RequisitionApiAttachmentsGetAttachmentResponse:
      type: string
      format: binary
    CandidateApiPhotoGetImageResponse:
      type: string
      format: binary
    CandidateApiAttachmentsGetAttachmentResponse:
      type: string
      format: binary
    JobApplicationApiAttachmentsGetAttachmentResponse:
      type: string
      format: binary
    PlacementApiAttachmentsGetResponse:
      type: string
      format: binary
    CompanyApiLogoGetResponse:
      type: string
      format: binary
    CompanyApiAttachmentsGetAttachmentResponse:
      type: string
      format: binary
    ContactApiContactsGetPhotoResponse:
      type: string
      format: binary
    ContactApiAttachmentsGetAttachmentResponse:
      type: string
      format: binary
    NoteApiAttachmentsGetAttachmentResponse:
      type: string
      format: binary
    UserApiUsersGetUserPhotoResponse:
      type: string
      format: binary
  securitySchemes:
    jobadder_identity:
      description: OAuth2 Authorization Code Flow
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://id.jobadder.com/connect/authorize
          tokenUrl: https://id.jobadder.com/connect/token
          scopes:
            read: View JobAdder data
            write: Manage JobAdder data
            read_candidate: View candidates
            write_candidate: Manage candidates
            manage_candidate_custom: Manage candidate custom fields
            read_candidate_note: View candidate notes
            write_candidate_note: Manage candidate notes
            read_company: View companies
            write_company: Manage companies
            manage_company_custom: Manage company custom fields
            read_company_note: View company notes
            write_company_note: Manage company notes
            read_contact: View contacts
            write_contact: Manage contacts
            manage_contact_custom: Manage contact custom fields
            read_contact_note: View contact notes
            write_contact_note: Manage contact notes
            read_float: View floats
            read_folder: View folders
            write_folder: Manage folders
            read_interview: View job interviews
            write_interview: Manage job interviews
            read_job: View jobs
            write_job: Manage jobs
            manage_job_custom: Manage job custom fields
            read_job_note: View job notes
            write_job_note: Manage job notes
            read_jobad: View job ads
            write_jobad: Manage job ads
            read_jobapplication: View job applications
            write_jobapplication: Manage job applications
            manage_jobapplication_custom: Manage job application custom fields
            read_jobapplication_note: View job application notes
            write_jobapplication_note: Manage job application notes
            read_note: View notes
            write_note: Manage notes
            read_placement: View placements
            write_placement: Manage placements
            manage_placement_custom: Manage placement custom fields
            read_placement_note: View placement notes
            write_placement_note: Manage placement notes
            read_requisition: View requisitions
            write_requisition: Manage requisitions
            read_requisition_note: View requisition notes
            write_requisition_note: Manage requisition notes
            read_submission: View submissions
            read_user: View users
            read_usergroup: View user groups
            write_usertask: write_usertask
            read_usertask: View user tasks
            partner_jobboard: View active job ads and submit job applications
            partner_ui_action: Add partner actions to JobAdder
            offline_access: >-
              Access JobAdder data for an extended period of time, must always
              be combined with other scopes
x-tagGroups:
  - tags:
      - Job Board API:Job Boards
      - Job Board API:Job Ads
      - Job Board API:Job Applications
    name: Job Board API
  - tags:
      - Job API:Jobs
      - Job API:Job Applications
      - Job API:Attachments
      - Job API:Submissions
      - Job API:Placements
      - Job API:Notes
      - Job API:Activities
      - Job API:Invoices
      - Job API:Lists
      - Job API:Payroll Billing
      - Job API:UserTasks
    name: Job API
  - tags:
      - Requisition API:Requisitions
      - Requisition API:Attachments
      - Requisition API:Approval
      - Requisition API:Notes
      - Requisition API:Lists
    name: Requisition API
  - tags:
      - Job Ad API:Job Ads
      - Job Ad API:Job Applications
    name: Job Ad API
  - tags:
      - Candidate API:Candidates
      - Candidate API:Photo
      - Candidate API:Availability
      - Candidate API:Videos
      - Candidate API:Skills
      - Candidate API:Attachments
      - Candidate API:Floats
      - Candidate API:Job Applications
      - Candidate API:Interviews
      - Candidate API:Submissions
      - Candidate API:Placements
      - Candidate API:Notes
      - Candidate API:Privacy
      - Candidate API:Activities
      - Candidate API:Lists
      - Candidate API:Payroll Billing
      - Candidate API:UserTasks
    name: Candidate API
  - tags:
      - Candidate Float API:Floats
    name: Candidate Float API
  - tags:
      - Candidate Submission API:Submissions
    name: Candidate Submission API
  - tags:
      - Job Application API:Job Applications
      - Job Application API:Videos
      - Job Application API:Attachments
      - Job Application API:Review
      - Job Application API:Interviews
      - Job Application API:Notes
      - Job Application API:Activities
      - Job Application API:Lists
      - Job Application API:UserTasks
    name: Job Application API
  - tags:
      - Placement API:Placements
      - Placement API:Attachments
      - Placement API:Timesheets
      - Placement API:Notes
      - Placement API:Activities
      - Placement API:Lists
      - Placement API:UserTasks
    name: Placement API
  - tags:
      - Company API:Companies
      - Company API:Logo
      - Company API:Addresses
      - Company API:Skills
      - Company API:Contacts
      - Company API:Attachments
      - Company API:Jobs
      - Company API:Requisitions
      - Company API:Floats
      - Company API:Submissions
      - Company API:Placements
      - Company API:Workflows
      - Company API:Notes
      - Company API:Activities
      - Company API:Lists
      - Company API:UserTasks
    name: Company API
  - tags:
      - Contact API:Contacts
      - Contact API:Jobs
      - Contact API:Interviews
      - Contact API:Skills
      - Contact API:Attachments
      - Contact API:Notes
      - Contact API:Activities
      - Contact API:Lists
      - Contact API:UserTasks
    name: Contact API
  - tags:
      - Note API:Notes
      - Note API:Attachments
    name: Note API
  - tags:
      - Folder API:Folders
    name: Folder API
  - tags:
      - User API:Users
      - User API:Tasks
      - User API:Interviews
      - User API:Groups
    name: User API
  - tags:
      - User Group API:Groups
      - User Group API:Users
    name: User Group API
  - tags:
      - User Office API:Offices
      - User Office API:Users
    name: User Office API
  - tags:
      - User Task API:Tasks
    name: User Task API
  - tags:
      - Interview API:Interviews
      - Interview API:Evaluations
    name: Interview API
  - tags:
      - Category API:Categories
    name: Category API
  - tags:
      - Location API:Countries
      - Location API:Locations
    name: Location API
  - tags:
      - Work Type API:Work Types
    name: Work Type API
  - tags:
      - Search API:Search
    name: Search API
  - tags:
      - Partner Action API:Actions
      - Partner Action API:Candidates
      - Partner Action API:Companies
      - Partner Action API:Contacts
      - Partner Action API:Job Ads
      - Partner Action API:Job Applications
      - Partner Action API:Jobs
      - Partner Action API:Placements
    name: Partner Action API
  - tags:
      - Webhook API:Webhooks
    name: Webhook API
