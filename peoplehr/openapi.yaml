openapi: 3.0.0
info:
  title: PeopleHR API
  description: >
    # Introduction
     We think it's good to share. So we've created an open API to help you easily integrate People with other systems and applications, for seamless cross-platform data sharing.

     The People API accepts and returns JSON data in the request body, with status indicating the outcome of the operation (sucess/failure).

    # Developer Workbench
     As well as this really useful documentation, we've also provided you with a handy API developer workbench. This allows you test your API calls against either a sandbox, or a live instance. A great place to start is the General Overview video, which explains how to use the workbench: https://intercom.help/peoplea-apps/api-and-integration/api

    You can access the developer work bench here:
    https://api.peoplehr.net/pages/functional 


    # Sandbox

    If you need a sandbox account to test your creation, just email
    customerservices@peoplehr.com and we will help you set one up. 


    # Authentication

    The People API uses API keys for each call. To receive an API key, ask your
    system administrator to generate one from within Settings. For
    authentication, all API calls need the API key to be passed along with the
    JSON data sent as part of the http request. Never share your API keys. Keep
    them guarded and secure. 


    # Managed Lists
     Within People, there are a number of fields called Managed Lists, better known as dropdowns. When you insert an item of data into a field that is a Managed List, then the API will automatically create you an entry in the Managed List for that field.

    # Rate Limit Detail
     The API rate limit is set to 30 calls a minute from a specific IP address. If you attempt to call the API above the rate limit, then an exception message will be returned. If you would like your rate limit increased, please submit a request to customerservices@peoplehr.com. In your email, please explain why you would like your limit increasing.


    # Webhooks Detail
     People provides an option to use webhooks to receive notifications of changes in particular transactions. If you are going to use the webhook mechanism, we advise you to set up a generic listener service to receive callbacks. 
     To set up a webhook listener URL, select Settings, API, and then enter your listner URL into the field.  

    The following actions are available and the data packet will return the
    following (example data shown): 

     New Starter Added > ActionId:1, Action:New Starter Added, EmployeeId:PW21 

     Employee personal detail update > ActionId:2, Action:Employee Detail Updated, EmployeeId:PW1, FieldName:Other Name(s), NewValue:Am, OldValue:zz, Reason:Test 

     Leaver > ActionId:3, Action:Marked Leaver, EmployeeId:PW21 

     Holiday added > ActionId:4, Action:Holiday Added, EmployeeId:PW13, HolidayType:A day or more, StartDate:2016-06-13, EndDate:2016-06-15, HolidayRecordedIn:Days, PartOfDay:, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:2.50, Comments:part day testing, IsToilHoliday:No 

     Holiday Updated > ActionId:5, Action:Holiday Updated, EmployeeId:PW51, HolidayType:A day or more, OriginalStartDate:2016-05-04, OriginalEndDate:2016-05-04, OriginalPartOfDay:, OriginalStartDatePartOfTheDay:, OriginalEndDatePartOfTheDay:, OriginalDuration:1.00, StartDate:2016-05-04, EndDate:2016-05-05, HolidayRecordedIn:Days, PartOfDay:, StartDatePartOfTheDay:, EndDatePartOfTheDay:AM, Duration:1.50, Comments:Test, IsToilHoliday:No 

     Holiday Deleted > ActionId:6, Action:Holiday Deleted, EmployeeId:PW13, StartDate:2016-01-18, EndDate:2016-01-19, HolidayRecordedIn:Days, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:2.00, Comments:zz 

     Holiday Requested > ActionId:7, Action:New Holiday Request, EmployeeId:PW97, HolidayType:A day or more, StartDate:2017-06-22, EndDate:2017-06-23, HolidayRecordedIn:Days, PartOfDay: StartDatePartOfTheDay:, EndDatePartOfTheDay:, Duration:2.00, Comments:Graduation, IsToilHoliday:No 

     Holiday Approved > ActionId:8, Action:Holiday Approved, EmployeeId:PW391, StartDate:2017-06-15, EndDate:2017-06-15, HolidayRecordedIn:Days, Duration:0.5, Comments:, AuthorisedByFirstName:Richard, AuthorisedByLastName:Palmer, HolidayType:Less than a day, PartOfDay:AM, StartDatePartOfTheDay:, EndDatePartOfTheDay:, IsToilHoliday:No 

     Holiday Rejected > ActionId:9, Action:Holiday Rejected, EmployeeId:PW29, StartDate:2017-07-12, EndDate:2017-07-12, HolidayRecordedIn:Days, Duration:1, Comments:Unfortunately this is, fully booked, AuthorisedByFirstName:Debi, AuthorisedByLastName:Stokes, HolidayType:A day or more, PartOfDay:, StartDatePartOfTheDay:, EndDatePartOfTheDay:, IsToilHoliday:No 

     Sick Added > ActionId:10, Action:Sick Added, EmployeeId:PW13, Reason:Accident, StartDate:2016-01-19, EndDate:2016-01-19, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:1, Comments: 

     Sick Updated > ActionId:11, Action:Sick Updated, EmployeeId:PW13, Reason:Accident, OriginalStartDate:2016-01-18, OriginalEndDate:2016-01-19, OriginalStartDatePartOfTheDay:, OriginalEndDatePartOfTheDay:, OriginalDuration:1.00, StartDate:2016-01-18, EndDate:2016-01-19, StartDatePartOfTheDay:, EndDatePartOfTheDay:AM, Duration:1, Comments: 

     Sick Deleted > ActionId:12, Action:Sick Deleted, EmployeeId:PW13, Reason:Cold/Flu, StartDate:2016-01-21, EndDate:2016-01-21, StartDatePartOfTheDay:AM, EndDatePartOfTheDay:, Duration:1, Comments: 

     Maternity / Paternity Added > ActionId:13, Action:Maternity/Paternity Added, EmployeeId:PW13, StartDate:2016-01-23, EndDate:2016-01-24 

     Maternity / Paternity Updated > ActionId:14, Action:Maternity/Paternity Updated, EmployeeId:PW13, StartDate:2016-01-23, EndDate:2016-01-25 

     Maternity / Paternity Deleted > ActionId:15, Action:Maternity/Paternity Deleted, EmployeeId:PW13, StartDate:2016-01-23, EndDate:2016-01-25 

     Late Added > ActionId:16, Action:Late Recorded, EmployeeId:PW13, Date:2016-01-26, HowLate:10, Comments: 

     Late Updated > ActionId:16, Action:Late Recorded, EmployeeId:PW13, Date:2016-01-26, HowLate:16, Comments: 

     Late Deleted > ActionId:17, Action:Late Deleted, EmployeeId:PW13, Date:2016-01-26, HowLate:16, Comments: 

     Employee Deleted > ActionId:18, Action:Employee Deleted, EmployeeId:PW21 

     Other Event Updated > ActionId:21, Action:Other Event Updated, EmployeeId:PW5-2, OriginalStartDate:2016-06-25, OriginalEndDate:2016-06-25, Reason:Dentist, StartDate:2016-06-25, EndDate:2016-06-26, Duration:2.00, Comments:, DurationType:Days, OriginalDurationType:Days, OriginalDuration:1.00, OriginalStartTime:, OriginalEndTime: 

     Other Event Deleted > ActionId:22, Action:Other Event Deleted, EmployeeId:PW5-2, Reason:Dentist, StartDate:2016-06-25, EndDate:2016-06-26, Duration:2.00, Comments:, DurationType:Day, StartTime:, EndTime: 

     Other Event Requested > ActionId:23, Action:New Other Event Request, EmployeeId:S20, Reason:Flexi, StartDate:2017-06-16, StartTime:09:00:00, EndTime:12:30:00, Duration:210, Comments:, DurationType:Hours 

     Other Event Approved > ActionId:24, Action:Other Event Approved, EmployeeId:180, StartDate:2017-06-14, EndDate:2017-06-14, Comments:, AuthorisedByFirstName:Damith, Duration:2 Hrs 0 Mins (02:00 - 04:00), Reason:Short Leave 

     Other Event Rejected > ActionId:25, Action:Other Event Rejected, EmployeeId:312, StartDate:2017-09-13, EndDate:2017-09-13, Comments:already 2 x nurse on AL, AuthorisedByFirstName:Dirkje (Dorien), Duration:1 Day, Reason:Request To Work 

     Appraisals Logbook > ActionId:31, Action:Appraisal Add, EmployeeId:PW8996, TxnId:1, ScreenType:1 

     ActionId:32 > Action:Appraisal Update, EmployeeId:PW8996, TxnId:1, ScreenType:1 

     ActionId:33 > Action:Appraisal Delete, EmployeeId:PW8996, TxnId:1, ScreenType:1 

     Benefit Logbook > ActionId:34, Action:Benefit Add, EmployeeId:PW8996, TxnId:1, ScreenType:2 

     ActionId:35 > Action:Benefit Update, EmployeeId:PW8996, TxnId:1, ScreenType:2 

     ActionId:36 > Action:Benefit Delete, EmployeeId:PW8996, TxnId:1, ScreenType:2 

     CPD Logbook > ActionId:37, Action:CPD Add, EmployeeId:PW8996, TxnId:1, ScreenType:3 

     ActionId:38 > Action:CPD Update, EmployeeId:PW8996, TxnId:1, ScreenType:3 

     ActionId:39 > Action:CPD Delete, EmployeeId:PW8996, TxnId:1, ScreenType:3 

     Driving Licence Logbook > ActionId:40, Action:Driving Licence Add, EmployeeId:PW8996, TxnId:1, ScreenType:6 

     ActionId:41 > Action:Driving Licence Update, EmployeeId:PW8996, TxnId:1, ScreenType:6 

     ActionId:42 > Action:Driving Licence Delete, EmployeeId:PW8996, TxnId:1, ScreenType:6 

     Qualification Logbook > ActionId:43, Action:Qualification Add, EmployeeId:PW8996, TxnId:1, ScreenType:4 

     ActionId:44 > , Action:Qualification Update, EmployeeId:PW8996, TxnId:1, ScreenType:4 

     ActionId:45 > Action:Qualification Delete, EmployeeId:PW8996, TxnId:1, ScreenType:4 

     Training Logbook > ActionId:46, Action:Training Add, EmployeeId:PW8996, TxnId:1, ScreenType:5 

     ActionId:47 > Action:Training Update, EmployeeId:PW8996, TxnId:1, ScreenType:5 

     ActionId:48 > Action:Training Delete, EmployeeId:PW8996, TxnId:1, ScreenType:5 

     Vehicle Logbook > ActionId:49, Action:Vehicle Add, EmployeeId:PW8996, TxnId:1, ScreenType:7 

     ActionId:50 > Action:Vehicle Update, EmployeeId:PW8996, TxnId:1, ScreenType:7 

     ActionId:51 > Action:Vehicle Delete, EmployeeId:PW8996, TxnId:1, ScreenType:7 

     Custom Logbook > ActionId:52, Action:Custom Screen Add, EmployeeId:PW8996, TxnId:1, ScreenType:8, CustomScreenId:10 

     ActionId:53 > Action:Custom Screen Update, EmployeeId:PW8996, TxnId:1, ScreenType:8, CustomScreenId:10 

     ActionId:54 > Action:Custom Screen Delete, EmployeeId:PW8996, TxnId:1, ScreenType:8, CustomScreenId:10


    Keys 

     The unique key for an event on the People calendar is Start Date and End Date -- you should also use the same key to identify record in your system that is consuming the data from People - the reason you need to do this is to locate the original record within your system when you get a notification of an update or a deletion - you will notice the message fragment contains the original dates - so you can locate the record - and the new dates. 
    Another more sophisticated option is to use the transaction ID. Holiday,
    Sick, Other Event and Maternity/Paternity transactions within People allow
    you to store an external transaction. Using this approach you could store
    the transaction id from a calendering system such as Outlook. If the holiday
    record on People is amended or deleted you will be able to determine the
    corresponding record in Outlook. 

     Take the following scenario: 

     If you create holidays through the API you will receive AnnualLeaveTxnId in the API result set. Any integration can store this as a reference from People HR holidays mapping 

     If you create holidays within the People HR UI, you will receive webhook details with holidays details. Integrated applications need to call people holidays GET details API with the current webhook details. That will give you AnnualLeaveTxnID & ReferenceId (If any). Now you can save the AnnualLeaveTxnId in an integrated application as People HR holidays mapping. 

     You can store third party application holidays/transaction references into the People HR system by calling the API Employee Holiday -> Update Holiday Reference ID 

     If you want to update/delete any holidays from People HR that are already mapped with third party applications/integrations, you can call holidays API to match with reference ID. You will get assoicated data with the reference ID that you actually need to update/ delete holidays from the people system (Employee Holiday -> UpdateHoliday or Employee Holiday -> DeleteHoliday).


    Start Part of Day and End Part of Day

    In People it is possible to record half days both at the beginning of a
    holiday or sick event or at the end. You can determine this by looking at
    the StartPartOfDay and EndPartOfDay values which will either be blank, AM or
    PM.




    # Examples

    We've put a few examples together for you that might help you get started:


    HTML Coding Examples:
    https://help.peoplehr.com/en/articles/981415-api-html-examples


    c# Coding Examples:
    http://intercom.help/peoplea-apps/api-and-integration/api-c-code-snippet


    Objective C Coding Examples:
    http://intercom.help/peoplea-apps/api-and-integration/api-code-snippets-objective-c


    How to use Postman with the API:
    http://intercom.help/peoplea-apps/api-and-integration/api-using-postman


    <!-- ReDoc-Inject: <security-definitions> -->
  version: '3.1'
  contact:
    name: PeopleWeb API Support
    url: https://www.peoplehr.com/
    email: customerservices@peoplehr.com
  license:
    name: PeopleWeb
    url: https://www.peoplehr.com/terms.html
  termsOfService: https://www.peoplehr.com/terms.html/
  x-logo:
    url: ../../peoplelogo.png
    backgroundColor: '#34495e'
  x-konfig-ignore:
    potential-incorrect-type: true
servers:
  - description: Live Server
    url: https://api.peoplehr.net
tags:
  - description: >
      The API calls to add, update and delete Project, Task and Task detail will
      allow you to maintain your lists using the API, the calls will not however
      allow you to build the hierarchy relationship between which users can see
      which Projects and the relationship between Projects, Tasks and Task
      Detail - this must be done using the UX within the settings option within
      People
    name: Employee Project Timesheet
  - description: |-
      Employee Details

      The employee status is enumerated as follows:

      ACTIVE = 1, Employee is Active

       LEAVER_MARKED = 2, Employee is marked as leaver but not left the company

      LEFT = 3, Employee is left from company 

      DELETED = 4, Employee is deleted

       As part of your integration you may find that you need to store additional data such as foreign keys against an employee record. For example you may need to store the payroll ID or clock ID or just have a flag to indicate the data is dirty and requires a refresh. To save you from having to stage the data into an external data table we have provided you with 5 slots on the Employee object where this data can be stored, the fields are:

       APIColumn1

       APIColumn2

       APIColumn3

       APIColumn4

       APIColumn5

       Your integrations should use these fields if required. Because other 3rd party integrations may make use of a key in your code you should parameterise which field is used, so at implementation time you can avoid a conflict with another integration. For example, we may release an integration that utilises APIColumn1 - if APIColumn1 is being used by you then we will make the integration flexible enough at deployment time so it can be configured to use APIColumn 2, 3 4 or 5.

       You may wish to avoid this method of storing foreign keys and use your own data tables.

       Addresses within People are stored internally as one block of text in a single field. The UX within People will prompt users to enter the address in a formatted way as follows:

       Address Line 1

       Address Line 2

       Town/City

       State/County 

       Country

       Post/Zip Code

       What you should do when retrieving or populating the address is to expect to read ascii new line characters and write ascii new line characters into the block of text to be consistent with the behaviour of the UX.

       You can test this by editing an employee address on your sandbox system and leaving some lines blank to check the returned data.

       The Query endpoint will return this data in the same fashion as described above.
    name: Employee
  - description: |
      Employee Custom Screen Details
    name: Employee Custom Screen
  - description: |
      Other Event Details
    name: Other Event
  - description: |
      Employee Appraisal Details
    name: Employee Appraisal
  - description: |
      Employee Benefit Details
    name: Employee Benefit
  - description: |
      Employee CPD
    name: Employee CPD
  - description: |
      Employee Driving Details
    name: Employee Driving
  - description: |
      AddNewQualification
    name: Employee Qualification
  - description: |
      Employee Vehicle Details
    name: Employee Vehicle
  - description: |2
       Maternity Paternity Details
    name: 'Maternity Paternity '
  - description: |
      Employee Holiday Details
    name: Employee Holiday
  - description: |
      Employee Absence Details
    name: Employee Absence
  - description: |
      Employee Timesheet Details
    name: Employee Timesheet
  - description: |
      Add Training Detail
    name: Employee Training
  - description: |
      Holiday Entitlement Details
    name: Holiday Entitlement
  - description: |
      Right To Work Details
    name: Right To Work
  - description: |
      Background Check Details
    name: Background Check
  - description: |
      Employeee Late Details
    name: Employeee Late
  - description: |
      Employee Salary Details
    name: Employee Salary
  - description: |
      Employee Document Details
    name: Employee Document
  - description: >+
      Vacancy Details. Vacancy allows you to create a vacancy, list all
      vacancies or get a specific vacancy. One of the specific pieces of
      functionality within a vacancy is that you can specify custom questions.
      When getting a list or specific vacancies an array of questions will also
      be returned:


      This array will be repeated per question and will contain 


      QuestionID 


      Question 


      IsMandatory 


      QuestionType 


      QuestionOptions 


      QuestionID is a unique question identifier that you will need if you want
      to create an applicant record with data for custom questions. 


      Question is the question label text. In the event the QuestionType is 7
      then this will be the label. 


      IsMandatory specifies if data must be sent to the applicant record for
      this question. 


      QuestionType can be 


      1 Text single line 


      2 Text multi-line 


      3 Date 


      4 Number 


      5 Attachment 


      6 Dropdown 


      7 Label 


      QuestionOptions is used only for QuestionType 6, dropdown, and contains a
      list of the valid drop down options.

    name: Vacancy
  - description: >+
      Applicant Details. When creating an applicant record the API call will
      allow you to specify the questions ID and the appropriate data and the
      documents to be uploaded. To maintain data integrity when showing the
      applicant details in the system, you must pass answers for all mandatory
      questions when creating the applicant. Attachment type questions are
      ignored and cannot be passed in. 

    name: Applicant
  - description: |
      Query Details
    name: Query
  - description: |
      History Details
    name: History
  - description: |
      Email Transaction Details
    name: Email Transaction
  - description: |
      WorkPattern Details
    name: WorkPattern
paths:
  /Employee  -  CheckAuthentication:
    post:
      tags:
        - Employee
      summary: Check Authentication
      operationId: Employee_authenticateUser
      description: |
        This API is used to check authentication for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAuthentication2'
        required: true
      responses:
        '200':
          description: check description for error code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckAuthenticationResult'
  /Employee  -  UpdateEmployeeId:
    post:
      tags:
        - Employee
      summary: Update Employee Id
      operationId: Employee_updateEmployeeIdDetails
      description: |
        This API is used to update employee id details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeId2'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateEmployeeIdApi'
  /Employee  -  GetAllEmployeeDetail:
    post:
      tags:
        - Employee
      summary: Get All Employee Detail
      operationId: Employee_listEmployeeDetail
      description: >
        This API is used to get employee detail list. Please note the History
        fields have been deprecated and will not return any data. To retrieve
        History data the individual employee record needs to be retrieved using
        the GetEmployeeDetail method call, this will return the History data.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllEmployeeDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetAllEmployeeDetailApi'
  /Employee  -  GetEmployeeDetailById:
    post:
      tags:
        - Employee
      summary: Get Employee Detail By Id
      operationId: Employee_getDetailById
      description: |
        This API is used to get employee detail by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetEmployeeDetailByIdParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetEmployeeDetailByIdApi'
  /Employee  -  CreateNewEmployee:
    post:
      tags:
        - Employee
      summary: Create New Employee
      operationId: Employee_addNewEmployee
      description: |
        This API is used to create new employee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForCreateNewEmployeeApi'
  /Employee  -  UpdateEmployeeDetail:
    post:
      tags:
        - Employee
      summary: Update Employee Details
      operationId: Employee_updateDetail
      description: |
        This API is used to update employee details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeDetail3'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateEmployeeDetailApi'
  /Employee  -  MarkAsLeaverById:
    post:
      tags:
        - Employee
      summary: Mark As Leaver By Id
      operationId: Employee_updateLeaverStatusById
      description: |
        This API is used to update/mark employee leaver status by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkAsLeaverById2'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForMarkAsLeaverByIdApi'
  /Employee  -  AddEmployeeImage:
    post:
      tags:
        - Employee
      summary: Add Employee Image By Id
      operationId: Employee_addImageById
      description: |
        This API is used to add employee image by id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddEmployeeImageById2'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddEmployeeImageByIdApi'
  /EmployeeSalary  -  GetSalaryDetail:
    post:
      tags:
        - Employee Salary
      summary: Get Salary Detail
      operationId: EmployeeSalary_getSalaryDetail
      description: |
        This API is used to Get employee salary details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSalaryDetail2'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetSalaryDetailApi'
  /EmployeeSalary  -  CreateNewSalary:
    post:
      tags:
        - Employee Salary
      summary: Create New Salary
      operationId: EmployeeSalary_addNewSalary
      description: |
        This API is used to Create New Salary for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewSalaryParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForCreateNewSalaryApi'
  /EmployeeSalary  -  DeleteSalary:
    post:
      tags:
        - Employee Salary
      summary: Delete Salary
      operationId: EmployeeSalary_deleteSalary
      description: |
        This API is used to delete Salary details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSalaryParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteSalaryApi'
  /Employee Holiday  -  AddNewHoliday:
    post:
      tags:
        - Employee Holiday
      summary: Add New Holiday
      operationId: EmployeeHoliday_addNewHoliday
      description: |
        This API is used to add new holiday
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewHolidayParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewHolidayApi'
  /Employee Holiday  -  UpdateHoliday:
    post:
      tags:
        - Employee Holiday
      summary: Update Holiday
      operationId: EmployeeHoliday_updateDetail
      description: |
        This API is used to update holiday detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHolidayParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateHolidayApi'
  /Employee Holiday  -  GetHolidayDetail:
    post:
      tags:
        - Employee Holiday
      summary: Get Holiday Detail
      operationId: EmployeeHoliday_getHolidayDetail
      description: |
        This API is used to get holiday detail list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetHolidayDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetHolidayDetailApi'
  /Employee Holiday  -  DeleteHoliday:
    post:
      tags:
        - Employee Holiday
      summary: Delete holiday
      operationId: EmployeeHoliday_removeHolidayDetail
      description: |+
        This API is used to delete holiday detail

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHolidayParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteHoliday'
  /EmployeeAbsence  -  GetAbsenceDetail:
    post:
      tags:
        - Employee Absence
      summary: Get Absence Detail
      operationId: EmployeeAbsence_getDetail
      description: |
        This API is used to employee absence details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAbsenceDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetAbsenceDetailApi'
  /EmployeeAbsence  -  DeleteAbsence:
    post:
      tags:
        - Employee Absence
      summary: Delete Absence
      operationId: EmployeeAbsence_removeAbsence
      description: |
        This API is used to delete absence  for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAbsenceOfEmployeeParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteAbsenceEmployeeApi'
  /EmployeeAbsence  -  AddAbsence:
    post:
      tags:
        - Employee Absence
      summary: Add Absence
      operationId: EmployeeAbsence_createNewAbsence
      description: |
        This API is used to add absence for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAbsenceOfEmployeeParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddEmployeeAbsence'
  /EmployeeAbsence  -  UpdateAbsence:
    post:
      tags:
        - Employee Absence
      summary: 'Update Absence '
      operationId: EmployeeAbsence_updateAbsenceRecord
      description: |
        This API is used to update absence  for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAbsenceDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateAbsenceDetail'
  /EmployeeDocument  -  UploadEmployeeDocument:
    post:
      tags:
        - Employee Document
      summary: Upload Employee Document
      operationId: EmployeeDocument_submitDocumentDetails
      description: |
        This API is used to Upload Employee Document details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadEmployeeDocumentParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUploadEmployeeDocument'
  /EmployeeDocument  -  GetAllDocument:
    post:
      tags:
        - Employee Document
      summary: Get All Document
      operationId: EmployeeDocument_getAllDocuments
      description: |
        This API is used to GEt All Document Detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllDocumentParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetAllDocument'
  /EmployeeDocument  -  GetDocumentById:
    post:
      tags:
        - Employee Document
      summary: Get Document By Id
      operationId: EmployeeDocument_getDocumentById
      description: |
        This API is used to get Document By Id for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDocumentByIDParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetDocumentById'
  /Employee Timesheet  -  GetTimesheetDetail:
    post:
      tags:
        - Employee Timesheet
      summary: Get Employee Timesheet Detail List
      operationId: EmployeeTimesheet_getDetailList
      description: |
        This API is used to get employee timesheet detail list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTimesheetdefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetTimesheetDetail'
  /Employee Timesheet  -  CreateNewTimesheet:
    post:
      tags:
        - Employee Timesheet
      summary: Create New Timesheet
      operationId: EmployeeTimesheet_createNewTimesheet
      description: |
        This API is used to create new employee Timesheet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNewTimesheetDefinition'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForCreateNewEmployeeTimesheetApi
  /Employee Timesheet  -  UpdateTimesheet:
    post:
      tags:
        - Employee Timesheet
      summary: Update Employee Timesheet
      operationId: EmployeeTimesheet_updateDetails
      description: |
        This API is used to update employee timesheet details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimesheetDefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateEmployeeTimesheetApi'
  /Employee Timesheet  -  DeleteTimesheet:
    post:
      tags:
        - Employee Timesheet
      summary: Delete Timesheet
      operationId: EmployeeTimesheet_deleteTimesheet
      description: |
        This API is used to delete employee Timesheet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTimesheetdefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteEmployeeTimesheet'
  /Employee Project Timesheet  -  GetProjectTimesheetDetail:
    post:
      tags:
        - Employee Project Timesheet
      summary: Get Project Time sheet Detail
      operationId: EmployeeProjectTimesheet_getProjectTimesheetDetail
      description: |
        This API is used to get project time sheet detail for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProjectTimesheetDetail'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetProjectTimesheetDetailApi'
  /Employee Project Timesheet  -  GetProjectTimesheetByTransactionId:
    post:
      tags:
        - Employee Project Timesheet
      summary: Get Project Timesheet By TransactionId
      operationId: EmployeeProjectTimesheet_getByTransactionId
      description: >
        This API is used to get project timesheet by transactionid for given
        user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetProjectTimesheetByTransactionId'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetProjectTimesheetByTransactionId
  /Employee Project Timesheet  -  CreateProjectTimesheet:
    post:
      tags:
        - Employee Project Timesheet
      summary: Create project timesheet
      operationId: EmployeeProjectTimesheet_createTimesheet
      description: |
        This API is used to create project timesheet for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectTimesheetParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForCreateProjectTimesheet'
  /Employee Project Timesheet  -  UpdateProjectTimesheet:
    post:
      tags:
        - Employee Project Timesheet
      summary: Update project timesheet
      operationId: EmployeeProjectTimesheet_updateTimesheet
      description: |
        This API is used to update project timesheet for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectTimesheetParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateProjectTimesheet'
  /Employee Project Timesheet  -  DeleteProjectTimesheet:
    post:
      tags:
        - Employee Project Timesheet
      summary: Delete project timesheet
      operationId: EmployeeProjectTimesheet_deleteTimesheet
      description: |
        This API is used to delete project timesheet for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProjectTimesheetParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteProjectTimesheet'
  /Employee Project Timesheet  -  GetAllTimesheetProject:
    post:
      tags:
        - Employee Project Timesheet
      summary: Get All Timesheet Project
      operationId: EmployeeProjectTimesheet_listAllTimesheetProject
      description: |
        This API is used to get all timesheet project detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllTimesheetProjectParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetAllTimesheetProjectApi'
  /Employee Project Timesheet  -  AddNewProject:
    post:
      tags:
        - Employee Project Timesheet
      summary: Add New Project
      operationId: EmployeeProjectTimesheet_addProjectDetail
      description: |
        This API is used to add new project details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewProjectParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewProject'
  /Employee Project Timesheet  -  EditProject:
    post:
      tags:
        - Employee Project Timesheet
      summary: Edit Project
      operationId: EmployeeProjectTimesheet_editProjectDetails
      description: |
        This API is used to edit project details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProjectParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForEditProject'
  /Employee Project Timesheet  -  GetAllProjectTask:
    post:
      tags:
        - Employee Project Timesheet
      summary: Get All Project Task
      operationId: EmployeeProjectTimesheet_getAllProjectTask
      description: |
        This API is used to get all project task detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllProjectTaskParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetAllProjectTask'
  /Employee Project Timesheet  -  AddNewProjectTask:
    post:
      tags:
        - Employee Project Timesheet
      summary: Add New Project Task
      operationId: EmployeeProjectTimesheet_addNewProjectTaskDetail
      description: |
        This API is used to add new project task detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewProjectTaskParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewProjectTask'
  /Employee Project Timesheet  -  EditProjectTask:
    post:
      tags:
        - Employee Project Timesheet
      summary: Edit Project Task
      operationId: EmployeeProjectTimesheet_updateProjectTaskDetail
      description: |
        This API is used to edit project task detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProjectTaskParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForEditProjectTask'
  /Employee Project Timesheet  -  GetAllProjectTaskDetail:
    post:
      tags:
        - Employee Project Timesheet
      summary: Get All Project Task Detail
      operationId: EmployeeProjectTimesheet_getAllProjectTaskDetail
      description: |
        This API is used to get all project task detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllProjectTaskDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetAllProjectTaskDetail'
  /Employee Project Timesheet  -  AddNewProjectTaskDetail:
    post:
      tags:
        - Employee Project Timesheet
      summary: Add New Project Task Detail
      operationId: EmployeeProjectTimesheet_addNewProjectTaskDetail
      description: |
        This API is used to add new project task detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewProjectTaskDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewProjectTaskDetail'
  /Employee Project Timesheet  -  EditProjectTaskDetail:
    post:
      tags:
        - Employee Project Timesheet
      summary: Edit Project Task Detail
      operationId: EmployeeProjectTimesheet_editTaskDetail
      description: |
        This API is used to edit project task detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditProjectTaskDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForEditProjectTaskDetail'
  /EmployeeAppraisal  -  GetByEmployeeId:
    post:
      tags:
        - Employee Appraisal
      summary: ' Get By Employee Id '
      operationId: EmployeeAppraisal_getByEmployeeId
      description: |
        This API is used to Get By Employee Id Appraisal details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetByEmployeeIdForEmployeeAppraisal'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForEmployeeAppraisalGetEmployeeById
  /EmployeeAppraisal  -  GetByAppraisalId:
    post:
      tags:
        - Employee Appraisal
      summary: Get By Appraisal Id
      operationId: EmployeeAppraisal_getByAppraisalId
      description: |
        This API is used to Get By Appraisal Id  details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetByAppraisalIdForEmployeeAppraisal'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetByAppraisalId'
  /EmployeeAppraisal  -  AddNewAppraisal:
    post:
      tags:
        - Employee Appraisal
      summary: Add New Appraisal
      operationId: EmployeeAppraisal_createNewAppraisal
      description: |
        This API is used to add new appraisal for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewAppraisalParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewAppraisal'
  /EmployeeAppraisal  -  UpdateAppraisal:
    post:
      tags:
        - Employee Appraisal
      summary: Update Appraisal
      operationId: EmployeeAppraisal_updateUserAppraisal
      description: |
        This API is used to Update Appraisal for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppraisalParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateAppraisal'
  /EmployeeAppraisal  -  DeleteAppraisal:
    post:
      tags:
        - Employee Appraisal
      summary: 'Delete Appraisal '
      operationId: EmployeeAppraisal_deleteAppraisal
      description: |
        This API is used to Delete Appraisal for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAppraisalParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteAppraisal'
  /EmployeeBenefit  -  GetBenefitByEmployeeId:
    post:
      tags:
        - Employee Benefit
      summary: 'Get Benefit By EmployeeId Id '
      operationId: EmployeeBenefit_getByEmployeeIdDetails
      description: |
        This API is used to get by employee id details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBenefitByEmployeeIdParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetBenefitByEmployeeId'
  /EmployeeBenefit  -  GetBenefitByBenefitId:
    post:
      tags:
        - Employee Benefit
      summary: Get By Benefit Id
      operationId: EmployeeBenefit_getByBenefitIdDetails
      description: |
        This API is used to get by  benefit id details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetByBenefitIdParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetByBenefitIdApi'
  /EmployeeBenefit  -  AddNewBenefit:
    post:
      tags:
        - Employee Benefit
      summary: Add New Benefit
      operationId: EmployeeBenefit_createNewBenefit
      description: |
        This API is used to Add new benefit details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewBenefitParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewBenefitApi'
  /EmployeeBenefit  -  UpdateBenefit:
    post:
      tags:
        - Employee Benefit
      summary: 'Update Benefit '
      operationId: EmployeeBenefit_updateDetails
      description: |
        This API is used to Update Benefit Details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBenefitParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateBenefitApi'
  /EmployeeBenefit  -  DeleteBenefit:
    post:
      tags:
        - Employee Benefit
      summary: 'Delete Benefit '
      operationId: EmployeeBenefit_deleteBenefit
      description: |
        This API is used to Delete Benefit Details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBenefitParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteBenefitApi'
  /Employee CPD  -  GetCPDByEmployeeId:
    post:
      tags:
        - Employee CPD
      summary: Get CPD By EmployeeId
      operationId: EmployeeCpd_getByEmployeeId
      description: |
        This API is used to Get CPD By EmployeeId for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCPDByEmployeeIdParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetCPDByEmployeeId'
  /Employee CPD  -  GetByCPDId:
    post:
      tags:
        - Employee CPD
      summary: Get By CPDId
      operationId: EmployeeCpd_getByCpdId
      description: |
        This API is used to Get By CPDId for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetByCPDIdParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetByCPDId'
  /Employee CPD  -  AddNewCPD:
    post:
      tags:
        - Employee CPD
      summary: Add new CPD
      operationId: EmployeeCpd_createNewCpd
      description: |
        This API is used to add new CPD for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddnewCPDParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewCPD'
  /Employee CPD  -  UpdateCPD:
    post:
      tags:
        - Employee CPD
      summary: Update CPD
      operationId: EmployeeCpd_updateCpd
      description: |
        This API is used to update CPD for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCPDParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateCPD'
  /Employee CPD  -  DeleteCPD:
    post:
      tags:
        - Employee CPD
      summary: Delete CPD
      operationId: EmployeeCpd_deleteCpd
      description: |
        This API is used to delete CPD for given user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCPDParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteCPD'
  /Employee Driving  -  GetDrivingLicenseByEmployeeId:
    post:
      tags:
        - Employee Driving
      summary: Get Driving License By Employee Id
      operationId: EmployeeDriving_getDrivingLicenseByEmployeeId
      description: |
        This API is used to get driving license by employeeid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDrivingLicenseByEmployeeIdParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetDrivingLicenseByEmployeeIdApi
  /Employee Driving  -  GetDrivingLicenseByDrivingId:
    post:
      tags:
        - Employee Driving
      summary: Get Driving License By Driving Id
      operationId: EmployeeDriving_getDrivingLicenseByDrivingId
      description: |
        This API is used to get driving license by drivingId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDrivingLicenseByDrivingIdParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetDrivingLicenseByDrivingIdApi
  /Employee Driving  -  AddNewDrivingLicense:
    post:
      tags:
        - Employee Driving
      summary: Add New Driving License
      operationId: EmployeeDriving_addNewDrivingLicense
      description: |
        This API is used to Add new driving license
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewDrivingLicenseParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewDrivingLicenseApi'
  /Employee Driving  -  UpdateDrivingLicense:
    post:
      tags:
        - Employee Driving
      summary: Update Driving License
      operationId: EmployeeDriving_updateDrivingLicense
      description: |
        This API is used to update driving license
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDrivingLicenseParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateDrivingLicenseApi'
  /Employee Driving  -  DeleteDrivingLicense:
    post:
      tags:
        - Employee Driving
      summary: Delete Driving License
      operationId: EmployeeDriving_removeDrivingLicense
      description: |
        This API is used to delete driving license
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDrivingLicenseParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteDrivingLicenseApi'
  /Employee Qualification  -  GetQualificationByEmployeeId:
    post:
      tags:
        - Employee Qualification
      summary: Get Qualification By EmployeeId
      operationId: EmployeeQualification_getByEmployeeId
      description: |
        This API is used to get qualification by EmployeeId 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQualificationByEmployeeIdParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetQualificationByEmployeeIdApi
  /Employee Qualification  -  GetQualificationByQualificationId:
    post:
      tags:
        - Employee Qualification
      summary: Get Qualification By QualificationId
      operationId: EmployeeQualification_getByQualificationId
      description: |
        This API is used to Get qualification by qualification Id 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQualificationByQualificationIdParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetQualificationByQualificationIdApi
  /Employee Qualification  -  AddNewQualification:
    post:
      tags:
        - Employee Qualification
      summary: Add New Qualification
      operationId: EmployeeQualification_addNewQualification
      description: |
        This API is used to Add new qualification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewQualificationParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewQualificationApi'
  /Employee Qualification  -  UpdateQualification:
    post:
      tags:
        - Employee Qualification
      summary: Update Qualification
      operationId: EmployeeQualification_updateQualification
      description: |
        This API is used to Update qualification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateQualificationParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateQualificationApi'
  /Employee Qualification  -  DeleteQualification:
    post:
      tags:
        - Employee Qualification
      summary: Delete Qualification
      operationId: EmployeeQualification_deleteQualification
      description: |
        This API is used to delete qualification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteQualificationParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteQualificationApi'
  /Employee Training  -  GetTrainingDetail:
    post:
      tags:
        - Employee Training
      summary: Get Training Detail
      operationId: EmployeeTraining_getDetail
      description: |
        This API is used to Get  training detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTrainingDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetTrainingDetailApi'
  /Employee Training  -  addtrainingdetail:
    post:
      tags:
        - Employee Training
      summary: Add Training Detail
      operationId: EmployeeTraining_addTrainingDetail
      description: |
        This API is used to Add Training Detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTrainingDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddTrainingDetailApi'
  /Employee Training  -  updatetrainingdetail:
    post:
      tags:
        - Employee Training
      summary: Update Training Detail
      operationId: EmployeeTraining_updateTrainingDetail
      description: |
        This API is used to update training detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrainingDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateTrainingDetailApi'
  /Employee Training  -  deletetrainingdetail:
    post:
      tags:
        - Employee Training
      summary: Delete Training Detail
      operationId: EmployeeTraining_removeDetail
      description: |
        This API is used to delete training detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTrainingDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteTrainingDetailApi'
  /Employee Vehicle  -  AddNewVehicleDetail:
    post:
      tags:
        - Employee Vehicle
      summary: Add New Vehicle Detail
      operationId: EmployeeVehicle_createNewVehicleDetail
      description: This API is used to create employee's new vehicle detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewVehicleDetailDefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewVehicleDetail'
  /Employee Vehicle  -  UpdateVehicleDetail:
    post:
      tags:
        - Employee Vehicle
      summary: Update Vehicle Detail
      operationId: EmployeeVehicle_updateDetail
      description: This API is used to update employee's vehicle detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVehicleDetailDefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateVehicleDetail'
  /Employee Vehicle  -  DeleteVehicleDetail:
    post:
      tags:
        - Employee Vehicle
      summary: Delete Vehicle Detail
      operationId: EmployeeVehicle_deleteDetail
      description: This API is used to delete employee's vehicle detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVehicleDetailDefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteVehicleDetail'
  /Employee Vehicle  -  GetByVehicleDetailId:
    post:
      tags:
        - Employee Vehicle
      summary: Get By Vehicle Detail Id
      operationId: EmployeeVehicle_getByVehicleDetailId
      description: This API is used to get employee's vehicle detail by vehicle id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVehicleDetailByVehicleIdDefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetVehicleDetailByVehicleId'
  /Employee Vehicle  -  GetVehicleByEmployeeId:
    post:
      tags:
        - Employee Vehicle
      summary: Get Vehicle By Employee Id
      operationId: EmployeeVehicle_getDetailByEmployeeId
      description: This API is used to get employee's vehicle detail by employee id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVehicleDetailByEmployeeIdDefinition'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetVehicleDetailByEmployeeId'
  /Employee Custom Screen  -  GetCustomScreenDetail:
    post:
      tags:
        - Employee Custom Screen
      summary: Get Custom Screen Detail
      operationId: EmployeeCustomScreen_getDetail
      description: |
        This API is used to get custom screen details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCustomScreenDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetCustomScreenDetailApi'
  /Employee Custom Screen  -  GetCustomScreenByEmployeeId:
    post:
      tags:
        - Employee Custom Screen
      summary: Get Custom Screen By Employee Id
      operationId: EmployeeCustomScreen_getScreenByEmployeeId
      description: |
        This API is used to get custom screen by employee id detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCustomScreenByEmployeeIdParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetCustomScreenByEmployeeIdApi
  /Employee Custom Screen  -  GetByCustomScreenTransactionId:
    post:
      tags:
        - Employee Custom Screen
      summary: Get By Custom Screen Transaction Id
      operationId: EmployeeCustomScreen_getByCustomScreenTransaction
      description: |
        This API is used to get by custom screen transaction id detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetByCustomScreenTransactionIdParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetByCustomScreenTransactionIdApi
  /Employee Custom Screen  -  AddNewCustomScreenTransaction:
    post:
      tags:
        - Employee Custom Screen
      summary: Add New Custom Screen Transaction
      operationId: EmployeeCustomScreen_addNewCustomScreenTransaction
      description: |
        This API is used to add new custom screen transaction details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewCustomScreenTransactionParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForAddNewCustomScreenTransactionApi
  /Employee Custom Screen  -  UpdateCustomScreenTransaction:
    post:
      tags:
        - Employee Custom Screen
      summary: Update Custom Screen Transaction
      operationId: EmployeeCustomScreen_updateCustomScreenTransaction
      description: |
        This API is used to update custom screen transaction details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomScreenTransactionParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForUpdateCustomScreenTransactionApi
  /Employee Custom Screen  -  DeleteCustomScreenTransaction:
    post:
      tags:
        - Employee Custom Screen
      summary: Delete Custom Screen Transaction
      operationId: EmployeeCustomScreen_deleteCustomScreenTransaction
      description: |
        This API is used to delete custom screen transaction details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomScreenTransactionParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForDeleteCustomScreenTransactionApi
  /Holiday Entitlement  -  GetHolidayEntitlement:
    post:
      tags:
        - Holiday Entitlement
      summary: Get Holiday Entitlement
      operationId: HolidayEntitlement_getHolidayEntitlement
      description: |
        This API is used to get holiday entitlement details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetHolidayEntitlementParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetHolidayEntitlementApi'
  /Holiday Entitlement  -  GetNextYearHolidayEntitlement:
    post:
      tags:
        - Holiday Entitlement
      summary: Get Next Year Holiday Entitlement
      operationId: HolidayEntitlement_getNextYearEntitlement
      description: |
        This API is used to get next year holiday entitlement details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetNextYearHolidayEntitlementParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetNextYearHolidayEntitlementApi
  /Holiday Entitlement  -  UpdateHolidayEntitlement:
    post:
      tags:
        - Holiday Entitlement
      summary: Update Holiday Entitlement
      operationId: HolidayEntitlement_updateHolidayEntitlement
      description: |
        This API is used to update holiday entitlement details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHolidayEntitlementParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateHolidayEntitlementApi'
  /Holiday Entitlement  -  UpdateNextYearHolidayEntitlement:
    post:
      tags:
        - Holiday Entitlement
      summary: Update Next Year Holiday Entitlement
      operationId: HolidayEntitlement_updateNextYearEntitlement
      description: |
        This API is used to update next year holiday entitlement details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNextYearHolidayEntitlementParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForUpdateNextYearHolidayEntitlementApi
  /History  -  GetHistoryByEmployeeIdAndFieldName:
    post:
      tags:
        - History
      summary: Get History By EmployeeId And FieldName
      operationId: History_getByEmployeeIdAndFieldName
      description: |
        This API is used to get history by employeeId and fieldname details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetHistoryByEmployeeIdAndFieldNameParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetHistoryByEmployeeIdAndFieldNameApi
  /Query  -  GetQueryResult:
    post:
      tags:
        - Query
      summary: Get Query Result by Query Id
      operationId: Query_getResultByQueryId
      description: >
        Deprecated.This API is used to get query result by query id details. It
        has been superseeded by Get Query Result By QueryName which returns date
        information in a UTC YYYY/MM/DD format
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQueryResultParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetQueryResultApi'
  /Query  -  GetQueryResultByQueryName:
    post:
      tags:
        - Query
      summary: Get Query Result By QueryName
      operationId: Query_getByQueryName
      description: |
        This API is used to get query result By query name details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQueryResultByQueryNameParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetQueryResultByQueryNameApi'
  /Email Transaction  -  EmailInbox:
    post:
      tags:
        - Email Transaction
      summary: Email Inbox
      operationId: EmailTransaction_submitEmailInbox
      description: |
        This API is used for Email Inbox
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailInboxParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForEmailInboxApi'
  /Right To Work  -  addrighttoworkdetail:
    post:
      tags:
        - Right To Work
      summary: Add Right To Work Detail
      operationId: RightToWork_addDetail
      description: |
        This API is used to add right to work detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewRightToWorkDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForaddrighttoworkdetailApi'
  /Right To Work  -  getrighttoworkdetail:
    post:
      tags:
        - Right To Work
      summary: Get Right To Work Detail
      operationId: RightToWork_getDetail
      description: |
        This API is used to get right to work detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetRightToWorkDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForgetrighttoworkdetailApi'
  /Right To Work  -  updaterighttoworkdetail:
    post:
      tags:
        - Right To Work
      summary: Update Right To Work Detail
      operationId: RightToWork_updateDetail
      description: |
        This API is used to update right to work details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updaterighttoworkdetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForupdaterighttoworkdetailApi'
  /Right To Work  -  deleterighttoworkdetail:
    post:
      tags:
        - Right To Work
      summary: Delete Right To Work Detail
      operationId: RightToWork_deleteDetail
      description: |
        This API is used to delete right to work detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deleterighttoworkdetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageFordeleterighttoworkdetailApi'
  /Background Check  -  GetBackgroundCheckDetailByEmployeeId:
    post:
      tags:
        - Background Check
      summary: Get Background Check Detail By EmployeeId
      operationId: BackgroundCheck_getDetailByEmployeeId
      description: |
        This API is used to Get Background Check Detail By EmployeeId
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GetBackgroundCheckDetailByEmployeeIdParameter
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetBackgroundCheckDetailByEmployeeIdApi
  /Background Check  -  AddBackgroundCheckDetail:
    post:
      tags:
        - Background Check
      summary: Add Background Check Detail
      operationId: BackgroundCheck_addDetail
      description: |
        This API is used to add background check detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBackgroundCheckDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddBackgroundCheckDetailApi'
  /Background Check  -  UpdateBackgroundCheckDetail:
    post:
      tags:
        - Background Check
      summary: Update Background Check Detail
      operationId: BackgroundCheck_updateDetail
      description: |
        This API is used to update background check detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackgroundCheckDetailParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForUpdateBackgroundCheckDetailApi
  /Background Check  -  DeleteBackgroundCheckDetail:
    post:
      tags:
        - Background Check
      summary: Delete Background Check Detail
      operationId: BackgroundCheck_deleteDetail
      description: |
        This API is used to Delete Background Check Detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBackgroundCheckDetailParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForDeleteBackgroundCheckDetailApi
  /Other Event  -  getothereventdetail:
    post:
      tags:
        - Other Event
      summary: Get Other Event Detail
      operationId: OtherEvent_getDetail
      description: |
        This API is used to get other event detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getothereventdetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForgetothereventdetailApi'
  /Other Event  -  getotherevententitlement:
    post:
      tags:
        - Other Event
      summary: ' Get Other Event Entitlement'
      operationId: OtherEvent_getEntitlement
      description: |
        This API is used to get other event entitlement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/getotherevententitlementParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForgetotherevententitlementApi'
  /Other Event  -  DeleteOtherEvent:
    post:
      tags:
        - Other Event
      summary: Delete Other Event
      operationId: OtherEvent_deleteEvent
      description: |
        This API is used to Delete Other Event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOtherEventParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteOtherEventApi'
  /Other Event  -  addothereventleave:
    post:
      tags:
        - Other Event
      summary: Add Other Event
      operationId: OtherEvent_createEventLeave
      description: |
        This API is used to Add Other Event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addothereventleaveParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForaddothereventleaveApi'
  /Other Event  -  updateothereventleave:
    post:
      tags:
        - Other Event
      summary: Update Other Event
      operationId: OtherEvent_updateEventLeave
      description: |
        This API is used to Update Other Event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateothereventleaveParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForupdateothereventleaveApi'
  /Other Event  -  addotherevententitlement:
    post:
      tags:
        - Other Event
      summary: Insert Update Other Event Entitlement
      operationId: OtherEvent_insertUpdateEntitlement
      description: |
        This API is used to Insert Update Other Event Entitlement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addotherevententitlementParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForaddotherevententitlementApi'
  /Vacancy  -  CreateNewVacancy:
    post:
      tags:
        - Vacancy
      summary: Create New Vacancy
      operationId: Vacancy_addNewVacancy
      description: |
        This API is used to create new vacancy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVacancyDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForCreateNewVacancy'
  /Vacancy  -  GetVacancy:
    post:
      tags:
        - Vacancy
      summary: Get vacancy
      operationId: Vacancy_getDetail
      description: |
        This API is used to get vacancy detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVacancyParameters'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetVacancyByReference'
  /Vacancy  -  GetAllVacancies:
    post:
      tags:
        - Vacancy
      summary: Get all vacancies
      operationId: Vacancy_getAllVacancies
      description: |
        This API is used to get all vacancies detail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllVacancyParameters'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetAllVacancyByReference'
  /Applicant  -  CreateNewApplicant:
    post:
      tags:
        - Applicant
      summary: Create New Applicant
      operationId: Applicant_createNewApplicant
      description: |+
        This API is used to create new applicant

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicantDetailParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForCreateNewApplicant'
  /Applicant  -  uploadapplicantdocument:
    post:
      tags:
        - Applicant
      summary: upload applicant document
      operationId: Applicant_uploadDocument
      description: |+
        This API is used to upload applicant document

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadapplicantdocumentParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForuploadapplicantdocument'
  /Applicant  -  CheckDuplicateApplicant:
    post:
      tags:
        - Applicant
      summary: Check duplicate applicant
      operationId: Applicant_checkDuplicateApplicant
      description: |+
        This API is used to Check duplicate applicant

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckDuplicateApplicantParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForCheckDuplicateApplicant'
  /WorkPattern  -  GetWorkPatternDetail:
    post:
      tags:
        - WorkPattern
      summary: Get work pattern detail
      operationId: WorkPattern_getWorkDetail
      description: |+
        This API is used to get work pattern detail

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkPatternParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForWorkPattern'
  /Employeee Late  -  GetLateByEmployeeId:
    post:
      tags:
        - Employeee Late
      summary: Get late by employeeId
      operationId: EmployeeeLate_getByEmployeeId
      description: |+
        This API is used for get late by employeeId

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLateByEmployeeIdParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetLateByEmployeeId'
  /Employeee Late  -  AddNewLate:
    post:
      tags:
        - Employeee Late
      summary: Add new late
      operationId: EmployeeeLate_createNewLate
      description: |+
        This API is used for add new late

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewLateParameters'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewLate'
  /Employeee Late  -  UpdateLate:
    post:
      tags:
        - Employeee Late
      summary: Update Late
      operationId: EmployeeeLate_updateLate
      description: |+
        This API is used for update late

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLateParameters'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateLate'
  /Employeee Late  -  DeleteLate:
    post:
      tags:
        - Employeee Late
      summary: Delete Late
      operationId: EmployeeeLate_deleteLate
      description: |+
        This API is used to delete late

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeedeletelateParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageFordeletelate'
  /Maternity Paternity  -  GetByMaternityPaternityId:
    post:
      tags:
        - 'Maternity Paternity '
      summary: ' Get by maternity paternity id '
      operationId: MaternityPaternity_getDetailsByMatPatId
      description: |
        This API is used to get by maternity paternity id details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetByMaternityPaternityParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForGetByMaternityPaternityId'
  /Maternity Paternity  -  GetMaternityPaternityByEmployeeId:
    post:
      tags:
        - 'Maternity Paternity '
      summary: ' Get maternity paternity by employeeid '
      operationId: MaternityPaternity_getByEmployeeId
      description: |
        This API is used to get maternity paternity by employeeid details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMaternityPaternityByEmployeeIdParameter'
        required: true
      responses:
        '200':
          $ref: >-
            #/components/responses/SuccessMessageForGetMaternityPaternityByEmployeeId
  /Maternity Paternity  -  AddNewMaternityPaternity:
    post:
      tags:
        - 'Maternity Paternity '
      summary: ' Add New Maternity Paternity '
      operationId: MaternityPaternity_addNewDetails
      description: |
        This API is used to add new maternity paternity details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddNewMaternityPaternityParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForAddNewMaternityPaternityApi'
  /Maternity Paternity  -  UpdateMaternityPaternity:
    post:
      tags:
        - 'Maternity Paternity '
      summary: 'Update Maternity Paternity '
      operationId: MaternityPaternity_updateDetails
      description: |
        This API is used to Update Maternity Paternity Details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMaternityPaternityParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForUpdateMatenityPaternityApi'
  /Maternity Paternity  -  DeleteMaternityPaternity:
    post:
      tags:
        - 'Maternity Paternity '
      summary: 'Delete Maternity Paternity '
      operationId: MaternityPaternity_deleteDetails
      description: |
        This API is used to Delete Maternity Paternity Details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMaternityPaternityParameter'
        required: true
      responses:
        '200':
          $ref: '#/components/responses/SuccessMessageForDeleteMaternityPaternityApi'
components:
  parameters:
    APIKey:
      description: API Key
      name: APIKey
      in: path
      required: true
      schema:
        type: string
    Action:
      description: UpdateEmployeeId
      name: Action
      in: path
      required: true
      schema:
        type: string
    ReasonForChange:
      description: Reason for change employee id
      name: ReasonForChange
      in: path
      required: true
      schema:
        type: string
    OldEmployeeId:
      description: Old employee id
      name: OldEmployeeId
      in: path
      required: true
      schema:
        type: string
    NewEmployeeId:
      description: New employee id
      name: NewEmployeeId
      in: path
      required: true
      schema:
        type: string
    EmailAddress:
      description: Email address of user
      name: EmailAddress
      in: path
      required: true
      schema:
        type: string
        format: email
    Password:
      description: Password of user
      name: Password
      in: path
      required: true
      schema:
        type: string
    resourceId:
      description: The resource identifier string
      name: id
      in: path
      required: true
      schema:
        type: string
    hash:
      description: The token identifier string
      name: hash
      in: path
      required: true
      schema:
        type: string
    mediaType:
      description: The response media type
      name: Accept
      in: header
      schema:
        type: string
        enum:
          - application/json
        default: application/json
  responses:
    AccessForbidden:
      description: Access forbidden, invalid API-KEY was used
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidDataError:
      description: Invalid data was sent
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidError'
    SuccessMessageForUpdateEmployeeIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateEmployeeId'
    SuccessMessageForMarkAsLeaverByIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForMarkAsLeaverById'
    SuccessMessageForAddEmployeeImageByIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddEmployeeImageById'
    SuccessMessageForGetAllEmployeeDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetAllEmployeeDetail'
    SuccessMessageForGetEmployeeDetailByIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetEmployeeDetailById'
    SuccessMessageForCreateNewEmployeeApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForCreateNewEmployeeDetail'
    SuccessMessageForUpdateEmployeeDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateEmployeeDetail'
    SuccessMessageForAddNewHolidayApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewHoliday'
    SuccessMessageForUpdateHolidayApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateHoliday'
    SuccessMessageForGetHolidayDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetHolidayDetail'
    SuccessMessageForDeleteHoliday:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteHolidy'
    SuccessMessageForGetAbsenceDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetAbsenceDetail'
    SuccessMessageForDeleteAbsenceEmployeeApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForEmployeeAbsenceDelete'
    SuccessMessageForAddEmployeeAbsence:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddEmployeeAbsence'
    SuccessMessageForUpdateAbsenceDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateAbsenceDetails'
    SuccessMessageForGetSalaryDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetSalaryDetail'
    SuccessMessageForCreateNewSalaryApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForCreateNewSalary1'
    SuccessMessageForDeleteSalaryApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteSalary'
    SuccessMessageForUploadEmployeeDocument:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUploadEmployeeDocument'
    SuccessMessageForGetAllDocument:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetAllDocument'
    SuccessMessageForGetDocumentById:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetDocumentById'
    SuccessMessageForCreateNewEmployeeTimesheetApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForCreateNewEmployeeTimesheetDetail'
    SuccessMessageForUpdateEmployeeTimesheetApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateEmployeeTimesheetDetail'
    SuccessMessageForDeleteEmployeeTimesheet:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteEmployeeTimesheetDetail'
    SuccessMessageForGetTimesheetDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetTimesheetDetail'
    SuccessMessageForGetBenefitByEmployeeId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetBenefitByEmployeeId'
    SuccessMessageForGetByBenefitIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetByBenefitIdApi'
    SuccessMessageForAddNewBenefitApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewBenefitApi'
    SuccessMessageForUpdateBenefitApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateBenefitApi'
    SuccessMessageForDeleteBenefitApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteBenefit'
    SuccessMessageForGetCustomScreenDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetCustomScreenDetail'
    SuccessMessageForGetCustomScreenByEmployeeIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetCustomScreenByEmployeeId'
    SuccessMessageForGetByCustomScreenTransactionIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetByCustomScreenTransactionId'
    SuccessMessageForAddNewCustomScreenTransactionApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewCustomScreenTransaction'
    SuccessMessageForUpdateCustomScreenTransactionApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateCustomScreenTransaction'
    SuccessMessageForDeleteCustomScreenTransactionApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteCustomScreenTransaction'
    SuccessMessageForGetHolidayEntitlementApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetHolidayEntitlement'
    SuccessMessageForGetQueryResultByQueryNameApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetQueryResultByQueryName'
    SuccessMessageForGetQueryResultApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetQueryResult'
    SuccessMessageForGetHistoryByEmployeeIdAndFieldNameApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetHistoryByEmployeeIdAndFieldName'
    SuccessMessageForUpdateNextYearHolidayEntitlementApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateNextYearHolidayEntitlement'
    SuccessMessageForUpdateHolidayEntitlementApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateHolidayEntitlement'
    SuccessMessageForGetNextYearHolidayEntitlementApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetNextYearHolidayEntitlement'
    SuccessMessageForCreateNewVacancy:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForCreateNewVacancy'
    SuccessMessageForGetVacancyByReference:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetVacancy'
    SuccessMessageForGetAllVacancyByReference:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetAllVacancy'
    SuccessMessageForEmailInboxApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForEmailInbox'
    SuccessMessageForaddrighttoworkdetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForaddrighttoworkdetail'
    SuccessMessageForgetrighttoworkdetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForgetrighttoworkdetail'
    SuccessMessageForupdaterighttoworkdetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForupdaterighttoworkdetail'
    SuccessMessageFordeleterighttoworkdetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorFordeleterighttoworkdetail'
    SuccessMessageForGetBackgroundCheckDetailByEmployeeIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetBackgroundCheckDetailByEmployeeId'
    SuccessMessageForAddBackgroundCheckDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddBackgroundCheckDetail'
    SuccessMessageForUpdateBackgroundCheckDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateBackgroundCheckDetail'
    SuccessMessageForDeleteBackgroundCheckDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteBackgroundCheckDetail'
    SuccessMessageForgetothereventdetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForgetothereventdetail'
    SuccessMessageForgetotherevententitlementApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForgetotherevententitlement'
    SuccessMessageForDeleteOtherEventApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteOtherEvent'
    SuccessMessageForaddothereventleaveApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForaddothereventleave'
    SuccessMessageForupdateothereventleaveApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForupdateothereventleave'
    SuccessMessageForaddotherevententitlementApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForaddotherevententitlement'
    SuccessMessageForCreateNewApplicant:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForCreateNewApplicant'
    SuccessMessageForCheckDuplicateApplicant:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForCheckDuplicateApplicant'
    SuccessMessageFordeletelate:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorFordeletelate'
    SuccessMessageForGetLateByEmployeeId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetLateByEmployeeId'
    SuccessMessageForAddNewLate:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewLate'
    SuccessMessageForUpdateLate:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpadteLate'
    SuccessMessageForWorkPattern:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForWorkPattern'
    SuccessMessageForuploadapplicantdocument:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForuploadapplicantdocument'
    SuccessMessageForEmployeeAppraisalGetEmployeeById:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForEmployeeAppraisalGetEmployeeById'
    SuccessMessageForGetByAppraisalId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetByAppraisalId'
    SuccessMessageForAddNewAppraisal:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewAppraisal'
    SuccessMessageForUpdateAppraisal:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateAppraisal'
    SuccessMessageForDeleteAppraisal:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteAppraisal'
    SuccessMessageForAddNewDrivingLicenseApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewDrivingLicense'
    SuccessMessageForUpdateDrivingLicenseApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateDrivingLicense'
    SuccessMessageForGetDrivingLicenseByEmployeeIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetDrivingLicenseByEmployeeId'
    SuccessMessageForGetDrivingLicenseByDrivingIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetDrivingLicenseByDrivingId'
    SuccessMessageForDeleteDrivingLicenseApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteDrivingLicense'
    SuccessMessageForGetQualificationByEmployeeIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetQualificationByEmployeeId'
    SuccessMessageForGetQualificationByQualificationIdApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetQualificationByQualificationId'
    SuccessMessageForAddNewQualificationApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewQualification'
    SuccessMessageForUpdateQualificationApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateQualification'
    SuccessMessageForDeleteQualificationApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteQualification'
    SuccessMessageForGetTrainingDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetTrainingDetail'
    SuccessMessageForAddTrainingDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddTrainingDetail'
    SuccessMessageForUpdateTrainingDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateTrainingDetail'
    SuccessMessageForDeleteTrainingDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorFordeletetrainingdetail'
    SuccessMessageForAddNewVehicleDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewVehicleDetail'
    SuccessMessageForUpdateVehicleDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateVehicleDetail'
    SuccessMessageForDeleteVehicleDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteVehicleDetail'
    SuccessMessageForGetVehicleDetailByVehicleId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetVehicleDetailByVehicleId'
    SuccessMessageForGetVehicleDetailByEmployeeId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetVehicleDetailByEmployeeId'
    SuccessMessageForGetByMaternityPaternityId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetByMaternityPaternityId'
    SuccessMessageForGetMaternityPaternityByEmployeeId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetByMaternityPaternityByEmpId'
    SuccessMessageForAddNewMaternityPaternityApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewMaternityPaternityApi'
    SuccessMessageForUpdateMatenityPaternityApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateMaternityPaternityApi'
    SuccessMessageForDeleteMaternityPaternityApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteMaternityPaternity'
    SuccessMessageForGetProjectTimesheetDetailApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetProjectTimesheetDetail'
    SuccessMessageForGetProjectTimesheetByTransactionId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetProjectTimesheetByTransactionId'
    SuccessMessageForCreateProjectTimesheet:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForCreateProjectTimesheet'
    SuccessMessageForUpdateProjectTimesheet:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateProjectTimesheet'
    SuccessMessageForDeleteProjectTimesheet:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteProjectTimesheet'
    SuccessMessageForGetAllTimesheetProjectApi:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetAllTimesheetProject'
    SuccessMessageForAddNewProject:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewProject'
    SuccessMessageForEditProject:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForEditProject'
    SuccessMessageForGetAllProjectTask:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetAllProjectTask'
    SuccessMessageForAddNewProjectTask:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewProjectTask'
    SuccessMessageForEditProjectTask:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForEditProjectTask'
    SuccessMessageForGetAllProjectTaskDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetAllProjectTaskDetail'
    SuccessMessageForAddNewProjectTaskDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewProjectTaskDetail'
    SuccessMessageForEditProjectTaskDetail:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForEditProjectTaskDetail'
    SuccessMessageForGetCPDByEmployeeId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetCPDByEmployeeId'
    SuccessMessageForGetByCPDId:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForGetByCPDId'
    SuccessMessageForAddNewCPD:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForAddNewCPD'
    SuccessMessageForUpdateCPD:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForUpdateCPD'
    SuccessMessageForDeleteCPD:
      description: Check description for error code
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorForDeleteCPD'
    NO_API_KEY:
      description: API key is missing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    INVALID_API_KEY:
      description: Invalid API Key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NO_ACTION:
      description: Action is missing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    INVALID_ACTION:
      description: Invalid Action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NO_JSON_DATA:
      description: No json data found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NO_FORM_DATA:
      description: Either empty or no Form Data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    INVALID_JSON_DATA:
      description: Invalid json data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NO_RECORD_FOUND:
      description: No records found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NO_SIGNATURE:
      description: No Signature
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    INVALID_SIGNATURE:
      description: Unauthorized access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    INVALID_MOBILE_LOGIN_TOKEN:
      description: Invalid mobile login token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ACCESS_DENIED:
      description: Access Denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    APIKeyDoesNotExistError:
      description: API Key does not exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OldEIdAndNewEIdShouldNotSameError:
      description: OldEmployeeId and NewEmployeeId should not be same
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    OldEmployeeIdNotExistsError:
      description: OldEmployeeId does not exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        status:
          description: integer 1
          type: integer
          minimum: 0
          maximum: 14
        error:
          type: string
    ErrorForUpdateEmployeeId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Employee Id updated successfully.'<br/>  Error
            Code = 1 means 'API key is missing.'<br/> Error Code = 2 means
            'Invalid API Key.'<br/> Error Code = 5 means 'API key does not
            exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/>
            Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means
            'OldEmployeeId does not exists.' <br/> Error Code = 5 means
            'NewEmployeeID is already in use. Please enter a unique
            NewEmployeeID.'<br/> Error Code = 5 means 'OldEmployeeId and
            NewEmployeeId should not be same.'<br/> Error Code = 5 means
            'ReasonForChange is missing.'<br/> Error Code = 5 means
            'ReasonForChange contains invalid data.'<br/> Error Code = 5 means
            'ReasonForChange contains more than 256 characters.'<br/> Error Code
            = 5 means 'ReasonForChange cannot be empty.'<br/>

            Error Code = 5 means 'OldEmployeeId is missing.'<br/> Error Code = 5
            means 'OldEmployeeId contains invalid data.' <br/> Error Code = 5
            means 'OldEmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'OldEmployeeId cannot be empty.' <br/>

            Error code = 5 means 'NewEmployeeId is missing.'<br/> Error Code = 5
            means 'NewEmployeeId contains invalid data.'<br/>  Error Code = 5
            means 'NewEmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'NewEmployeeId cannot be empty.'<br/>

            Error Code = 5 means 'No access on employee schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    CheckAuthenticationResult:
      type: object
      required:
        - EmployeeId
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'The request processed successfully'.\n<br/>  Error Code = 1 means 'API key is missing.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Email address is required.'<br/>\t Error Code = 5 means 'Email address is missing.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'Email address / password combination is incorrect'.<br/> Error Code = 5 means 'Email address invalid, check the format'.<br/> Error Code = 5 means 'Password is required.'<br/> Error Code = 5 means 'Password is missing.'<br/> Error Code = 5 means 'Self-service suspended. Please contact your administrator.'<br/>  Error Code = 5 means 'Your trial has expired.'<br/> Error Code = 5 means 'This company has been suspended.'<br/> Error Code = 5 means 'The password was last updated (days can be differ) days ago.'<br/>\nError Code = 5 means 'No access on employee schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\n"
          type: integer
          minimum: 0
          maximum: 7
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultEmployeeIdId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForMarkAsLeaverById:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Employee Mark Leaver successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'already Employee mark as leaver.'<br/> Error
            Code = 5 means 'already Employee left.'<br/> Error code = 5 means
            'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId
            is missing.'<br/> Error Code = 5 means 'EmployeeId does not
            exists..'<br/> Error Code = 5 means 'EmployeeId contains invalid
            data.'<br/> Error code = 5 means 'EmployeeId contains more than 15
            characters.'<br/> Error code = 5 means 'ReasonforLeaving cannot be
            empty.'<br/> Error code = 5 means 'ReasonforLeaving contains more
            than 100 characters.'<br/> Error code = 5 means 'ReasonforLeaving
            contains invalid data.'<br/> Error Code = 5 means 'ReasonforLeaving
            is missing.'<br/> Error code = 5 means 'AdditionalComment is
            missing.'<br/> Error code = 5 means 'AdditionalComment contains
            invalid data.'<br/> Error code = 5 means 'AdditionalComment contains
            more than 256 characters.'<br/> Error code = 5 means
            'FinalEmploymentDate is missing.'<br/> Error code = 5 means
            'FinalEmploymentDate cannot be empty.'<br/> Error code = 5 means
            'FinalEmploymentDate contains invalid data.'<br/> Error code = 5
            means 'FinalEmploymentDate is not in the future.'<br/> Error code =
            5 means 'FinalWorkingDate is missing.'<br/> Error code = 5 means
            'FinalWorkingDate contains invalid data.'<br/> Error Code = 5 means
            'MarkasLeaverImmediately is missing.'<br> Error code = 5 means
            'MarkasLeaverImmediately contains invalid data.'<br/> Error Code = 5
            means 'Email and ReportsTo are same.'<br/> Error Code = 5 means
            'ReportsTo email contains invalid data.'<br/> Error Code = 5 means
            'ReportsTo email contains more than 254 characters.'<br/> Error Code
            = 5 means 'ReportsTo does not exists for this company.' <br/> Error
            Code = 5 means 'ReEmployable is missing.'<br/> Error Code = 5 means
            'ReEmployable contains invalid data.'<br/> Error Code = 5 means
            'SupportingComments is missing.'<br/> Error Code = 5 means
            'SupportingComments contains invalid data.'<br/> Error Code = 5
            means 'SupportingComments contains more than 256 characters.'<br/>

            Error Code = 5 means 'No access on employee schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 10 means 'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForAddEmployeeImageById:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Employee image added successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'EmployeeImageName is missing.'<br/> Error Code = 5 means 'EmployeeImage is missing.'<br/> Error Code = 5 means 'EmployeeImage cannot be empty.'<br/> Error Code = 5 means 'EmployeeImage contains invalid data.' <br/> Error Code = 5 means 'Invalid file type. File type is not supported.'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/>  Error Code = 5 means 'File size exceeds the limit. Please ensure the file is no larger than 2MB.'<br/>\nError Code = 5 means 'No access on employee schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 10 means 'No record found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetAllEmployeeDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 5 means 'IncludeLeavers contains invalid data.'<br/> Error Code =
            5 means 'IncludeLeavers cannot be empty.'<br/> Error Code = 5 means
            'No access on employee schema.'<br/> Error Code = 7 means 'No json
            data found.'<br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'No record found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetList5Array'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetEmployeeDetailById:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/>

            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId
            already exists.' <br/> 

            Error Code = 5 means 'No access on employee schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No record found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetEmployeeDetail'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForCreateNewEmployeeDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Employee record inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId already exists.' <br/> \nError Code = 5 means 'Title cannot be empty..' <br/>  Error Code = 5 means 'Title contains more than 100 characters.' <br/>  Error Code = 5 means 'Title contains invalid data.' <br/> \nError Code = 5 means 'FirstName cannot be empty.' <br/>  Error Code = 5 means 'FirstName contains more than 50 characters' <br/>  Error Code = 5 means 'FirstName contains invalid data.' <br/>  Error Code = 5 means 'FirstName is missing.' <br/> \nError Code = 5 means 'LastName cannot be empty.' <br/>  Error Code = 5 means 'LastName contains more than 50 characters' <br/>  Error Code = 5 means 'LastName contains invalid data.' <br/> Error Code = 5 means 'LastName is missing.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'Email contains more than 254 characters.' <br/>  Error Code = 5 means 'Email contains invalid data.' <br/>  Error Code = 5 means 'Email already exists.' <br/> \nError Code = 5 means 'Gender contains invalid data.' <br/> \nError Code = 5 means 'StartDate is missing.' <br/>  Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate contains invalid data.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/>  Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/>  Error Code = 5 means 'DateOfBirth should be less than start date.' <br/> \nError Code = 5 means 'ReportsTo email contains more than 254 characters.' <br/>  Error Code = 5 means 'ReportsTo email contains invalid data.' <br/>  Error Code = 5 means 'Email and ReportsTo are same.' <br/>  Error Code = 5 means 'ReportsTo does not exist for this company.' <br/> \nError Code = 5 means 'ReportsToEffectiveDate is missing.' <br/> \nError Code = 5 means 'ReportsToEffectiveDate cannot be empty.' <br/>  Error Code = 5 means 'ReportsToEffectiveDate contains invalid data.' <br/>  Error Code = 5 means 'ReportsTo is missing.' <br/> \nError Code = 5 means 'JobRole is missing.' <br/>  Error Code = 5 means 'JobRole cannot be empty.' <br/>  Error Code = 5 means 'JobRole contains more than 100 characters.' <br/>  Error Code = 5 means 'JobRole contains invalid data.' <br/>  Error Code = 5 means 'JobRoleEffectiveDate is missing.' <br/>  Error Code = 5 means 'JobRoleEffectiveDate cannot be empty.' <br/>  Error Code = 5 means 'JobRoleEffectiveDate contains invalid data.' <br/> \nError Code = 5 means 'Company cannot be empty.' <br/>  Error Code = 5 means 'Company contains more than 100 characters.' <br/>  Error Code = 5 means 'Company contains invalid data.' <br/>\nError Code = 5 means 'Location cannot be empty.' <br/>  Error Code = 5 means 'Location contains more than 100 characters.' <br/>  Error Code = 5 means 'Location contains invalid data.' <br/> Error Code = 5 means 'LocationEffectiveDate is missing.' <br/>  Error Code = 5 means 'Location is missing.' <br/> \nError Code = 5 means 'Department cannot be empty.' <br/>  Error Code = 5 means 'Department contains more than 100 characters.' <br/> Error Code = 5 means 'Department contains invalid data.' <br/>  Error Code = 5 means 'Department is missing.' <br/>\nError Code = 5 means 'NationalInsuranceNumber contains more than 30 characters.' <br/> Error Code = 5 means 'NationalInsuranceNumber contains invalid data.' <br/>\nError Code = 5 means 'Nationality cannot be empty.' <br/> Error Code = 5 means 'Nationality contains more than 100 characters.' <br/> Error Code = 5 means 'Nationality contains invalid data.' <br/>\nError Code = 5 means 'EmploymentType cannot be empty.' <br/> Error Code = 5 means 'EmploymentType contains more than 100 characters.' <br/> Error Code = 5 means 'EmploymentType contains invalid data.' <br/>\nError Code = 5 means 'EntitlementThisYear contains invalid data.' <br/>\nError Code = 5 means 'EntitlementNextYear contains invalid data.' <br/>\nError Code = 5 means 'Address contains more than 512 characters.' <br/> Error Code = 5 means 'Address contains invalid data.' <br/>\nError Code = 5 means 'APIColumn1 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn2 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn3 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn4 contains more than 1000 characters.' <br/> Error Code = 5 means 'APIColumn5 contains more than 1000 characters.' <br/>\nError Code = 5 means 'Payroll Company contains more than 200 characters.' <br/> Error Code = 5 means 'Payroll ID contains more than 200 characters.' <br/> Error Code = 5 means 'Time & Attendance ID contains more than 200 characters.' <br/> Error Code = 5 means 'Rota ID contains more than 200 characters.' <br/> Error Code = 5 means 'CRM ID contains more than 200 characters.' <br/> Error Code = 5 means 'ATS ID contains more than 200 characters.' <br/> Error Code = 5 means 'Performance ID contains more than 200 characters.' <br/> Error Code = 5 means 'Benefits ID contains more than 200 characters.' <br/>\nError Code = 5 means 'System1 ID contains more than 200 characters.' <br/> Error Code = 5 means 'System2 ID contains more than 200 characters.' <br/> Error Code = 5 means 'System3 ID contains more than 200 characters.' <br/>\nError Code = 5 means 'Email contains more than 254 characters.' <br/> Error Code = 5 means 'Email contains invalid data.' <br/>\nError Code = 5 means 'MethodOfRecruitment contains more than 512 characters.' <br/> Error Code = 5 means 'MethodOfRecruitment contains invalid data.' <br/> Error Code = 6 means 'Oops! Something went wrong.'<br/>\nError Code = 5 means 'No access on employee schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateEmployeeDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Employee record updated successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'ReasonForChange cannot be empty.' <br/> Error
            Code = 5 means 'ReasonForChange contains more than 256
            characters.'<br/> Error Code = 5 means 'ReasonForChange contains
            invalid data.'<br/> Error Code = 5 means 'ReasonForChange is
            missing.'<br/> Error Code = 5 means 'EmployeeId cannot be
            empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15
            characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid
            data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.'
            <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error
            Code = 5 means 'Title cannot be empty..' <br/>  Error Code = 5 means
            'Title contains more than 100 characters.' <br/>  Error Code = 5
            means 'Title contains invalid data.' <br/>  Error Code = 5 means
            'FirstName cannot be empty.' <br/>  Error Code = 5 means 'FirstName
            contains more than 50 characters' <br/>  Error Code = 5 means
            'FirstName contains invalid data.' <br/> 

            Error Code = 5 means 'LastName cannot be empty.' <br/>  Error Code =
            5 means 'LastName contains more than 50 characters' <br/>  Error
            Code = 5 means 'LastName contains invalid data.' <br/> 

            Error Code = 5 means 'Email contains more than 254 characters.'
            <br/>  Error Code = 5 means 'Email contains invalid data.' <br/> 
            Error Code = 5 means 'Email already exists.' <br/> 

            Error Code = 5 means 'Gender contains invalid data.' <br/> 

            Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code
            = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5
            means 'StartDate should not be greater than 'last date of next
            year'' <br/>  Error Code = 5 means 'StartDate can not be changed as
            holiday record exist' <br/>  Error Code = 5 means 'StartDate can not
            be changed as absence record exist.' <br/>  Error Code = 5 means
            'StartDate can not be changed as maternity/paternity record exist.'
            <br/>  Error Code = 5 means 'StartDate can not be changed as late
            record exist.' <br/>  Error Code = 5 means 'StartDate can not be
            changed as timesheet record exist.' <br/>  Error Code = 5 means
            'StartDate can not be changed as other leave record exist.' <br/> 

            Error Code = 5 means 'DateOfBirth contains invalid data.' <br/> 
            Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/> 
            Error Code = 5 means 'DateOfBirth should be less than start date.'
            <br/> 

            Error Code = 5 means 'ReportsTo email contains more than 254
            characters.' <br/>  Error Code = 5 means 'ReportsTo email contains
            invalid data.' <br/>  Error Code = 5 means 'Email and ReportsTo are
            same.' <br/>  Error Code = 5 means 'ReportsTo does not exist for
            this company.' <br/>  Error Code = 5 means 'You cannot reports to
            yourself.' <br/> 

            Error Code = 5 means 'ReportsToEffectiveDate is missing.' <br/> 

            Error Code = 5 means 'ReportsToEffectiveDate cannot be empty.'
            <br/>  Error Code = 5 means 'ReportsToEffectiveDate contains invalid
            data.' <br/>  Error Code = 5 means 'ReportsTo is missing.' <br/> 

            Error Code = 5 means 'JobRole cannot be empty.' <br/>  Error Code =
            5 means 'JobRole contains more than 100 characters.' <br/>  Error
            Code = 5 means 'JobRole contains invalid data.' <br/>  Error Code =
            5 means 'JobRoleEffectiveDate is missing.' <br/> 

            Error Code = 5 means 'JobRole is missing.' <br/>  Error Code = 5
            means 'JobRoleEffectiveDate cannot be empty.' <br/>  Error Code = 5
            means 'JobRoleEffectiveDate contains invalid data.' <br/> 

            Error Code = 5 means 'CompanyEffectiveDate is missing.' <br/>  Error
            Code = 5 means 'Company cannot be empty.' <br/>  Error Code = 5
            means 'Company contains more than 100 characters.' <br/>  Error Code
            = 5 means 'Company contains invalid data.' <br/>

            Error Code = 5 means 'Company is missing.' <br/>  Error Code = 5
            means 'CompanyEffectiveDate cannot be empty.' <br/>  Error Code = 5
            means 'CompanyEffectiveDate contains invalid data.' <br/>

            Error Code = 5 means 'Location cannot be empty.' <br/>  Error Code =
            5 means 'Location contains more than 100 characters.' <br/>  Error
            Code = 5 means 'Location contains invalid data.' <br/> Error Code =
            5 means 'LocationEffectiveDate is missing.' <br/> 

            Error Code = 5 means 'Location is missing.' <br/>  Error Code = 5
            means 'LocationEffectiveDate cannot be empty.' <br/> Error Code = 5
            means 'LocationEffectiveDate contains invalid data.' <br/> 

            Error Code = 5 means 'Department cannot be empty.' <br/>  Error Code
            = 5 means 'Department contains more than 100 characters.' <br/>
            Error Code = 5 means 'Department contains invalid data.' <br/> 
            Error Code = 5 means 'DepartmentEffectiveDate is missing.' <br/> 

            Error Code = 5 means 'DepartmentEffectiveDate cannot be empty.'
            <br/> Error Code = 5 means 'DepartmentEffectiveDate contains invalid
            data.' <br/> Error Code = 5 means 'Department is missing.' <br/>

            Error Code = 5 means 'NationalInsuranceNumber contains more than 30
            characters.' <br/> Error Code = 5 means 'NationalInsuranceNumber
            contains invalid data.' <br/>

            Error Code = 5 means 'Nationality cannot be empty.' <br/> Error Code
            = 5 means 'Nationality contains more than 100 characters.' <br/>
            Error Code = 5 means 'Nationality contains invalid data.' <br/>

            Error Code = 5 means 'EmploymentType cannot be empty.' <br/> Error
            Code = 5 means 'EmploymentType contains more than 100 characters.'
            <br/> Error Code = 5 means 'EmploymentType contains invalid data.'
            <br/>

            Error Code = 5 means 'EmploymentTypeEffectiveDate is missing.' <br/>

            Error Code = 5 means 'EmploymentType is missing.' <br/> Error Code =
            5 means 'EmploymentTypeEffectiveDate cannot be empty.' <br/> Error
            Code = 5 means 'EmploymentTypeEffectiveDate contains invalid data.'
            <br/>

            Error Code = 5 means 'Address contains more than 512 characters.'
            <br/> Error Code = 5 means 'Address contains invalid data.' <br/>

            Error Code = 5 means 'PersonalPhoneNumber contains more than 80
            characters.' <br/> Error Code = 5 means 'PersonalPhoneNumber
            contains invalid data.' <br/>

            Error Code = 5 means 'APIColumn1 contains more than 1000
            characters.' <br/> Error Code = 5 means 'APIColumn2 contains more
            than 1000 characters.' <br/> Error Code = 5 means 'APIColumn3
            contains more than 1000 characters.' <br/> Error Code = 5 means
            'APIColumn4 contains more than 1000 characters.' <br/> Error Code =
            5 means 'APIColumn5 contains more than 1000 characters.' <br/>

            Error Code = 5 means 'Payroll Company contains more than 200
            characters.' <br/> Error Code = 5 means 'Payroll ID contains more
            than 200 characters.' <br/> Error Code = 5 means 'Time & Attendance
            ID contains more than 200 characters.' <br/> Error Code = 5 means
            'Rota ID contains more than 200 characters.' <br/> Error Code = 5
            means 'CRM ID contains more than 200 characters.' <br/> Error Code =
            5 means 'ATS ID contains more than 200 characters.' <br/> Error Code
            = 5 means 'Performance ID contains more than 200 characters.' <br/>
            Error Code = 5 means 'Benefits ID contains more than 200
            characters.' <br/>

            Error Code = 5 means 'System1 ID contains more than 200 characters.'
            <br/> Error Code = 5 means 'System2 ID contains more than 200
            characters.' <br/> Error Code = 5 means 'System3 ID contains more
            than 200 characters.' <br/>

            Error Code = 5 means 'Email contains more than 254 characters.'
            <br/> Error Code = 5 means 'Email contains invalid data.' <br/>

            Error Code = 5 means 'MethodOfRecruitment contains more than 512
            characters.' <br/> Error Code = 5 means 'MethodOfRecruitment
            contains invalid data.' <br/>

            Error Code = 5 means 'No access on employee schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForAddNewHoliday:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Holiday added successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'DurationType cannot be empty.' <br/>  Error Code = 5 means 'DurationType should be DAY_OR_MORE = 1 , LESS_THAN_A_DAY = 2' <br/>  Error Code = 5 means 'DurationType is missing' <br/>\nError Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/>  Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/>  Error Code = 5 means 'DateOfBirth should be less than start date.' <br/> \nError Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be empty.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'DurationInMinutes cannot be empty.' <br/>  Error Code = 5 means 'DurationInMinutes contains invalid data.' <br/>  Error Code = 5 means 'DurationInMinutes cannot be zero.' <br/>  Error Code = 5 means 'DurationInMinutes is missing.' <br/>\nError Code = 5 means 'PartOfDay contains invalid data.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 5 means 'Start date must be after employee start date.' <br/>  Error Code = 5 means 'Start date must be equal to end date.' <br/>  Error Code = 5 means 'Holiday is too far into the future.' <br/>\nError Code = 5 means 'Duration exceeds a day.' <br/>  Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again.' <br/> \nError Code = 5 means 'Please check your dates include working days.' <br/> Error Code = 5 means 'Please check this is a working day.' <br/>  Error Code = 5 means 'Duration in days cannot be zero.' <br/>  Error Code = 5 means 'Duration in minutes cannot be zero.' <br/> Error Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/> \nError Code = 5 means 'Please enter duration in days less than your working day.' <br/>  Error Code = 5 means 'Duration in days should be multiple of 0.25.' <br/> Error Code = 5 means 'Passed duration in minutes mismatched with calculated duration minutes.' <br/> \nError Code = 5 means 'Please enter duration in minutes less than your working day.' <br/>  Error Code = 5 means 'The duration in days exceeds the limit for a single booking (500 hours).' <br/>\nError Code = 5 means 'Comment contains invalid data.' <br/>\t\t Error Code = 5 means 'Comment contains more than 256 characters.' <br/>\nError Code = 6 means 'Oops! Something went wrong.'<br/>\nError Code = 5 means 'No access on holiday schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateHoliday:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Holiday update successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'OldStartDate cannot be empty.'<br/> Error code = 5 means 'OldStartDate contains invalid data.'<br/> Error Code = 5 means 'OldStartDate is missing.' <br/> \nError Code = 5 means 'OldEndDate cannot be empty.' <br/>  Error Code = 5 means 'OldEndDate contains invalid data.' <br/>  Error Code = 5 means 'OldStartDate should be before or equal to OldEndDate.' <br/>  Error Code = 5 means 'OldEndDate is missing.' <br/> \nError Code = 5 means 'DurationType cannot be empty.' <br/>  Error Code = 5 means 'DurationType should be DAY_OR_MORE = 1 , LESS_THAN_A_DAY = 2' <br/>  Error Code = 5 means 'DurationType is missing' <br/>\nError Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/>  Error Code = 5 means 'DateOfBirth cannot be in the future.' <br/>  Error Code = 5 means 'DateOfBirth should be less than start date.' <br/> \nError Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be empty.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'DurationInMinutes cannot be empty.' <br/>  Error Code = 5 means 'DurationInMinutes contains invalid data.' <br/>  Error Code = 5 means 'DurationInMinutes cannot be zero.' <br/>  Error Code = 5 means 'DurationInMinutes is missing.' <br/>\nError Code = 5 means 'PartOfDay contains invalid data.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 5 means 'Start date must be after employee start date.' <br/>  Error Code = 5 means 'Start date must be equal to end date.' <br/>  Error Code = 5 means 'Holiday is too far into the future.' <br/>\nError Code = 5 means 'Duration exceeds a day.' <br/>  Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again.' <br/> \nError Code = 5 means 'Please check your dates include working days.' <br/> Error Code = 5 means 'Please check this is a working day.' <br/>  Error Code = 5 means 'Duration in days cannot be zero.' <br/>  Error Code = 5 means 'Duration in minutes cannot be zero.' <br/> Error Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/> \nError Code = 5 means 'Please enter duration in days less than your working day.' <br/>  Error Code = 5 means 'Duration in days should be multiple of 0.25.' <br/> Error Code = 5 means 'Passed duration in minutes mismatched with calculated duration minutes.' <br/> \nError Code = 5 means 'Please enter duration in minutes less than your working day.' <br/>  Error Code = 5 means 'The duration in days exceeds the limit for a single booking (500 hours).' <br/>\nError Code = 5 means 'Comment contains invalid data.' <br/>\t\t Error Code = 5 means 'Comment contains more than 256 characters.' <br/>\t\t\t\t\nError Code = 6 means 'Oops! Something went wrong.'<br/>\nError Code = 5 means 'No access on holiday schema.'<br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'Record not found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetHolidayDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/>

            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId
            already exists.' <br/> 

            Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error
            Code = 5 means 'StartDate should be before or equal to
            EndDate.'<br/> Error Code = 5 means 'EndDate contains invalid
            data.'<br/>

            Error Code = 5 means 'No access on holiday schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'The requested processed
            successfully.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetHolidayDetailArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForDeleteHolidy:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >2-
             Error Code = 0 means 'Holiday detail deleted successfully.'<br/>
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 6 means 'Unknown error occured.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'StartDate is missing.' <br/>  Error Code = 5
            means 'StartDate contains invalid data.' <br/>  Error Code = 5 means
            'StartDate cannot be empty' <br/> 

            Error Code = 5 means 'StartDate should be before or equal to
            EndDate.' <br/> Error Code = 5 means 'EndDate contains invalid
            data.' <br/> Error Code = 5 means 'EndDate cannot be empty.' <br/>
            Error Code = 5 means 'EndDate is missing..' <br/> Error Code = 5
            means 'No access on employee schema.'<br/>

            Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No Record Found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetAbsenceDetail:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/>
            Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
            2  means 'Invalid API Key'<br/> Error Code = 4 means 'Action cannot
            be empty'<br/> Error Code = 4 means 'Invalid Action'<br/> Error Code
            = 5 means 'EmployeeId does not exists'<br/> Error Code = 5 means
            'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId
            contains invalid data.' <br/> Error Code = 5 means 'EmployeeId
            contains more than 15 characters.' <br/> Error Code = 5 means
            'EmployeeId is missing.' <br/>

            Error Code = 5 means 'StartDate contains invalid data.'<br/> Error
            Code = 5 means 'EndDate contains invalid data.'<br/>

            Error Code = 5 means 'No access on absence schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No Record Found'<br/> 
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultEmployeeAbsenceArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddEmployeeAbsence:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Absence added successfully.'<br/> 

            Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
            4 means 'Action cannot be empty.' <br/>  Error Code = 4 means
            'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be
            empty.' <br/>  Error code = 5 means 'EmployeeId contains more than
            15 characters.'<br/> Error Code = 5 means 'EmployeeId contains
            invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not
            exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>
            Error Code = 5 means 'DurationType cannot be empty.' <br/>  Error
            Code = 5 means 'Reason cannot be empty.' <br/>  Error Code = 5 means
            'StartDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate
            cannot be empty.' <br/>  Error Code = 5 means 'StartDate should be
            before or equal to EndDate.' <br/> Error Code = 5 means 'StartDate
            is missing.' <br/> Error Code = 5 means 'EndDate is missing.' <br/>
            Error Code = 5 means 'Duration cannot be empty.' <br/>  Error Code =
            5 means 'Duration cannot be 0.' <br/>  Error Code = 5 means
            'Duration contains invalid data.' <br/>  Error Code = 5 means
            'Duration is missing.' <br/> Error Code = 5 means 'DurationType
            should be DAY_OR_MORE = 1 , HALF_DAY = 2, QUARTER_DAY = 3.' <br/> 
            Error Code = 5 means 'Duration type is missing.' <br/>  Error Code =
            5 means 'Reason is missing.' <br/> Error Code = 5 means 'Reason
            contains invalid data.' <br/>  Error Code = 5 means 'Reason contains
            more than 100 characters.' <br/>  Error Code = 5 means 'PartOfDay
            contains invalid data.' <br/>  Error Code = 5 means
            'AbsencePaidStatus cannot be empty.' <br/>  Error Code = 5 means
            'AbsencePaidStatus should be UNPAID = 1 , PAID = 2,
            PAID_AT_OTHER_RATE = 3.' <br/>  Error Code = 5 means 'EmergencyLeave
            contains invalid data.' <br/>  Error Code = 5 means 'Duration
            exceeds a day.' <br/>  Error Code = 5 means 'Please check your dates
            include working days.' <br/>  Error Code = 5 means 'The duration
            entered exceeds the limit for a single booking (99.99 days).' <br/> 
            Error Code = 5 means 'Passed duration mismatched with calculated
            duration.' <br/>  Error Code = 5 means 'EmergencyLeave cannot be
            empty.' <br/>  Error Code = 5 means 'StartDate Contains invalid
            data.' <br/>  Error Code = 5 means 'EndDate containd invalid
            data'<br/>  Error Code = 5 means 'EmergencyLeave cannot be empty.'
            <br/>  Error Code = 5 means 'comment contains invalid data.' <br/>
            Error Code = 5 means 'comment contains more than 1024
            characters.'<br/> Error Code = 5 means 'Invalid file type. File
            type  is not supported' <br/> Error Code = 5 means 'File contains
            invalid data.' <br/> Error Code = 5 means 'File cannot be empty.'
            <br/>  Error Code = 5 means 'File is missing.'<br/> Error Code = 5
            means 'DocumentName is missing.' <br/> Error Code = 5 means
            'DocumentName cannot be empty.' <br/> Error Code = 5 means
            'description contains invalid data' <br/> Error Code = 5 means
            'description contains more than 1024 characters'<br/>

            Error Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code
            = 6 means 'Invalid json data.' <br/>  Error Code = 8 means 'Either
            empty or no Form Data.' <br/> 

            Error Code = 5 means 'No access on absence schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'The requested processed
            successfully.
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForEmployeeAbsenceDelete:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >2-
             Error Code = 0 means 'Absence detail deleted successfully.'<br/>
            Error Code = 5 means 'API key does not exists.' <br/> 

            Error Code = 2 means 'Invalid API Key'<br/>

            Error Code = 4 means 'Action cannot be empty'<br/>

            Error Code = 4 means 'Invalid Action'<br/>

            Error Code = 5 means 'EmployeeId does not exists'<br/> Error Code =
            5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
            'EmployeeId contains invalid data.'<br/> Error code = 5 means
            'EmployeeId contains more than 15 characters.'<br/>

            Error Code = 5 means 'StartDate cannot be empty'<br/> Error code = 5
            means 'EndDate contains invalid data.'<br/> Error Code = 5 means
            'EndDate contains invalid data'<br/> Error code = 5 means 'StartDate
            is missing..'<br/> Error code = 5 means 'EndDate is missing.'<br/>
            Error Code = 5 means 'EndDate cannot be empty.'<br/> Error code = 5
            means 'Start date must be equal to end date.'<br/> Error code = 5
            means 'StartDate should be before or equal to EndDate'<br/> Error
            code = 5 means 'StartDate contains invalid data.'<br/>

            Error Code = 5 means 'No access on absence schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/>

            Error Code = 10 means 'No record found.'<br/> 
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateAbsenceDetails:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 

            Error Code = 5 means 'API key does not exists.' <br/> 

            Error Code = 4 means 'Action cannot be empty.' <br/> 

            Error Code = 4 means 'Invalid Action.' <br/>

            Error Code = 5 means 'EmployeeId cannot be empty.' <br/> 

            Error Code = 5 means 'EmployeeId contains invalid data.' <br/>

            Error Code = 5 means 'EmployeeId contains more than 15 characters.'
            <br/>

            Error Code = 5 means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'DurationType cannot be empty.' <br/> 

            Error Code = 5 means 'Reason cannot be empty.' <br/> 

            Error Code = 5 means 'StartDate cannot be empty.' <br/> 

            Error Code = 5 means 'OldStartDate cannot be empty.' <br/>  Error
            code = 5 means 'OldStartDate is missing.'<br/> Error code = 5 means
            'OldStartDate contains invalid data.'<br/> Error code = 5 means
            'OldStartDate should be before or equal to OldEndDate.'<br/> Error
            code = 5 means 'OldEndDate is missing.'<br/> Error code = 5 means
            'OldEndDate contains invalid data.'<br/>

            Error code = 5 means 'Reason contains more than 100
            characters.'<br/> Error code = 5 means 'Reason contains invalid
            data'<br/> Error code = 5 means 'StartDate is missing.'<br/> Error
            code = 5 means 'StartDate contains invalid data.'<br/> Error code =
            5 means 'EndDate is missing.'<br/> Error Code = 5 means 'OldEndDate
            cannot be empty.' <br/> 

            Error code = 5 means 'StartDate should be before or equal to
            EndDate.'<br/> Error code = 5 means 'EndDate contains invalid
            data.'<br/>

            Error Code = 5 means 'EndDate cannot be empty.' <br/> 

            Error code = 5 means 'Duration is missing.'<br/> Error code = 5
            means 'Duration cannot be 0..'<br/> Error code = 5 means 'Duration
            contains invalid data.'<br/> Error Code = 5 means 'Duration cannot
            be empty.' <br/> 

            Error Code = 5 means 'DurationType should be DAY_OR_MORE = 1 ,
            HALF_DAY = 2, QUARTER_DAY = 3.' <br/> 

            Error Code = 5 means 'Duration type is missing.' <br/> 

            Error Code = 5 means 'Reason is missing.' <br/> 

            Error Code = 5 means 'PartOfDay contains invalid data.' <br/> 

            Error Code = 5 means 'AbsencePaidStatus cannot be empty.' <br/> 

            Error Code = 5 means 'AbsencePaidStatus should be UNPAID = 1 , PAID
            = 2, PAID_AT_OTHER_RATE = 3.' <br/> 

            Error Code = 5 means 'EmergencyLeave contains invalid data.' <br/> 

            Error Code = 5 means 'Duration exceeds a day.' <br/> 

            Error Code = 5 means 'Please check your dates include working days.'
            <br/> 

            Error Code = 5 means 'The duration entered exceeds the limit for a
            single booking (99.99 days).' <br/> 

            Error Code = 5 means 'Passed duration mismatched with calculated
            duration.' <br/> 

            Error Code = 5 means 'EmergencyLeave cannot be empty.' <br/> 

            Error Code = 5 means 'StartDate Contains invalid data.' <br/> 

            Error Code = 5 means 'EndDate containd invalid data'<br/>

            Error Code = 5 means 'File contains invalid data.' <br/> 

            Error Code = 5 means 'File cannot be empty.' <br/> 

            Error code = 5 means 'Start date must be after employee start
            date'<br/> Error code = 5 means 'Start date must be equal to end
            date.'<br/> Error code = 5 means 'Absence is too far into the
            future.'<br/> Error code = 5 means 'DocumentName is missing...'<br/>
            Error code = 5 means 'Invalid file type. File type is not
            supported'<br/>

            Error code = 5 means 'File is missing'<br/> Error code = 5 means
            'Absence updated successfully.'<br/> Error code = 5 means 'Record
            not found.'<br/>

            Error Code = 6 means 'Oops! Something went wrong.' <br/> 

            Error Code = 6 means 'Invalid json data.' <br/> 

            Error Code = 5 means 'No access on absence schema.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> 
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetSalaryDetail:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'The requested processed successfully.'<br/> \nError Code = 5 means 'API key does not exists.' <br/> \nError Code = 2  means 'Invalid API Key'<br/>\nError Code = 4 means 'Action Cannot be empty'<br/>\nError Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty'<br/> Error code = 5 means 'EmployeeId contains invalid data.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError Code = 5 means 'IsIncludeHistory cannot be empty.'<br/>\nError Code = 5 means 'IsIncludeHistory contains invalid data'<br/>\nError Code = 5 means 'EmployeeId is missing.'<br/>\nError Code = 5 means 'IsIncludeHistory cannot be empty.'<br/>\nError code = 5 means 'IsIncludeHistory is missing.'<br/>\nError Code = 5 means 'No access on salary schema.'<br/>\t Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForCreateNewSalary1:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Salary record inserted successfully'.\n<br/>  \t\t   Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t\t\t\t\t\t  Error Code = 5 means 'EmployeeId does not exists'.<br/>  Error Code = 5 means 'EmployeeId cannot be empty' .<br/>  Error code = 5 means 'EmployeeId contains invalid data.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError code = 5 means 'EffectiveFrom is missing.'<br/> Error code = 5 means 'EffectiveFrom date contains invalid data.'<br/> Error code = 5 means 'EffectiveFrom date cannot be empty.'<br/>\t\nError Code = 5 means 'SalaryType should be Annual, Hourly, Daily, Weekly or Monthly.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'SalaryType is missing.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'SalaryType cannot be empty.'<br/>\t\nError Code = 5 means 'PaymentFrequency cannot be empty.'<br/>\t Error Code = 5 means 'PaymentFrequency is missing.'<br/> Error Code = 5 means 'PaymentFrequency should be Monthly, Fortnightly, Weekly, Four Weekly, Daily or Two Weekly.'<br/>\t\nError Code = 5 means 'SalaryAmount is missing.'<br/> Error code = 5 means 'SalaryAmount contains invalid data.'<br/> Error code = 5 means 'SalaryAmount cannot be empty.'<br/>\t\t\t\t\t\t\nError Code = 5 means 'CurrencyCode is missing.'<br/>\t Error code = 5 means 'CurrencyCode contains invalid data.'<br/> Error code = 5 means 'CurrencyCode contains more than 100 characters.'<br/>\t\nError Code = 5 means 'ChangeReason is missing.'<br/> Error code = 5 means 'ChangeReason contains invalid data.'<br/> Error code = 5 means 'ChangeReason contains more than 100 characters.'<br/>\nError code = 5 means  'Comments contains invalid data.'<br/> Error code = 5 means  'Comments  contains more than 1024 characters.'<br/>\nError Code = 5 means 'Deduction is missing in deductions.'<br/>\t\t Error code = 5 means  'Deduction contains invalid data.'<br/> Error code = 5 means  'Deduction contains more than 100 characters.'<br/> Error code = 5 means  'Deduction cannot not be empty.'<br/>\nError Code = 5 means 'DisplayAsAmountOrPercentage contains invalid data'.<br/>\t\t\t\nError Code = 5 means 'Deduction amount contains invalid data..'<br/>\t\t Error code = 5 means  'Deduction amount cannot be empty.'<br/> Error Code = 5 means 'Amount is missing in deductions'<br/>\t\nError code = 5 means   'percentage must be less than 99999%.'<br/> Error code = 5 means  'percentage contains invalid data.'<br/> Error code = 5 means  'percentage cannot be empty.'<br/> Error code = 5 means  'Percentage is missing in deductions.'<br/>\nError Code = 5 means 'IncludeInTotalSalary contains invalid data.'<br/>\t\nError code = 5 means  'DeductionComments contains more than 512 characters.'<br/> Error code = 5 means  'DeductionComments contains invalid data.'<br/>\nError Code = 5 means 'Entitlement is missing in entitlements'.<br/>\t\t\t\t\t\t  Error Code = 5 means 'Entitlement contains invalid data.'<br/>\t Error Code = 5 means 'Entitlement contains more than 100 characters.'<br/>\t Error Code = 5 means 'Entitlement cannot be empty'<br/>\t\t\t\t\t\t\t \nError Code = 5 means 'Entitlement amount contains invalid data..'<br/>\t\t Error code = 5 means 'Entitlement amount cannot be empty.'<br/>\t\t\t\t\t\t\t Error Code = 5 means 'Amount is missing in entitlements.'<br/>\t Error Code = 5 means 'Percentage is missing in entitlements.'<br/>\t\t\t\t\t\t \nError code = 5 means  '\tEntitlement Comments contains invalid data.'<br/> Error code = 5 means  '\tEntitlement Comments  contains more than 1024 characters.'<br/>\nError Code = 6 means 'Oops! Something went wrong.'<br/>\t\t\t\t\t\t \nError Code = 5 means 'There is already an existing salary detail with same effective date. Please select another date.'<br/> Error Code = 5 means 'No access on salary schema.'<br/>\t Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteSalary:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Salary detail deleted successfully'.\n<br/>\nError Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API Key does not exist.'<br/> Error Code = 4 means 'Action cannot be empty.'<br/>\t\t\t\t\t\t\t\t\t  Error Code = 4 means 'invalid Action.'<br/>\t\nError Code = 5 means 'EmployeeId cannot be empty.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId does not exists.'<br/> Error code = 5 means 'EmployeeId contains invalid data.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\t\t\t\t\t\t\t\t \nError Code = 5 means 'EffectiveFrom date cannot be empty.'<br/>\t\t\t\t\t  Error Code = 5 means 'EffectiveFrom date contains invalid data.'<br/> Error Code = 5 means 'EffectiveFrom is missing.'<br/>\nError Code = 5 means 'No access on salary schema.'<br/>\t Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No Record FOund'<br/> "
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUploadEmployeeDocument:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Employee document uploaded successfully.'<br/>\nError Code = 2  means 'Invalid API Key'<br/>\t\nError Code = 4 means 'Action cannot be empty.' <br/> \nError Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'API key does not exists.' <br/> \nError Code = 5 means 'EmployeeId does not exists.' <br/> \nError Code = 5 means 'EmployeeId cannot be empty' <br/> \nError code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError Code = 5 means 'EmployeeId contains invalid data.'<br/>\nError Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'Category is missing.' <br/>\nError Code = 5 means 'Category contains more than 100 characters.' <br/>\nError Code = 5 means 'Category cannot be empty.' <br/> \nError Code = 5 means 'EmployeeAccess cannot be empty.' <br/> \nError Code = 5 means 'Please select employee access.' <br/>\nError Code = 5 means 'EmployeeAccess contains invalid data.' <br/> \nError Code = 5 means 'ManagerAccess contains invalid data.' <br/> \nError Code = 5 means 'ManagerAccess cannot be empty.' <br/> \nError Code = 5 means 'SignatureRequired contains invalid data.' <br/> \nError Code = 5 means 'SignatureRequired cannot be empty.' <br/> \nError Code = 5 means 'DocumentName is missing.' <br/>\nError Code = 5 means 'DocumentName cannot be empty.' <br/>\nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>\nError Code = 5 means 'Comments contains invalid data.' <br/>\nError Code = 5 means 'Comments contains more than 256 characters.' <br/>\nError Code = 5 means 'File contains invalid data.' <br/>\nError Code = 5 means 'File cannot be empty.' <br/>\nError Code = 5 means 'File is missing.' <br/>\nError Code = 6 means 'Oops! Something went wrong' <br/> \nError Code = 5 means 'No access on employee document schema.'<br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No Record Found'<br/> "
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetAllDocument:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/>

            Error Code = 5 means 'API key does not exists.' <br/> 

            Error Code = 2 means 'Invalid API Key'<br/>

            Error Code = 4 means 'Action cannot be empty'<br/>

            Error Code = 4 means 'Invalid Action'<br/>

            Error Code = 5 means 'EmployeeId does not exists'<br/>

            Error Code = 5 means 'EmployeeId cannot be empty.'<br/>

            Error code = 5 means 'EmployeeId contains more than 15
            characters.'<br/>

            Error Code = 5 means 'EmployeeId contains invalid data.'<br/>

            Error Code = 5 means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'No access on employee document schema.'<br/>

            Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No record found.'<br/> 
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/GetAllDocumentArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetDocumentById:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 

            Error Code = 5 means 'API key does not exists.' <br/> 

            Error Code = 2 means 'Invalid API Key.' <br/> 

            Error Code = 4 means 'Action cannot be empty.' <br/> 

            Error Code = 4 means 'Invalid Action.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/> 

            Error Code = 5 means 'EmployeeId cannot be empty.' <br/> 

            Error code = 5 means 'EmployeeId contains more than 15
            characters.'<br/>

            Error Code = 5 means 'EmployeeId contains invalid data.'<br/>

            Error Code = 5 means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'Document Id cannot be empty.' <br/> 

            Error Code = 5 means 'DocumentId is missing.' <br/>

            Error Code = 5 means 'DocumentId contains invalid data.' <br/>

            Error Code = 5 means 'DocumentId contains more than 15
            characters.'<br/> 

            Error Code = 5 means 'No access on employee document schema.'<br/>

            Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No record found.' <br/> 
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/GetDocumentByIdArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForCreateNewEmployeeTimesheetDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Timesheet record inserted successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'Timesheet entry is already exist for
            EmployeeId and date' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'TimesheetDate is missing.' <br/> Error Code =
            5 means 'TimesheetDate cannot be empty.' <br/> Error Code = 5 means
            'TimesheetDate contains invalid data.' <br/>

            Error Code = 5 means 'TimeIn1 contains invalid data.' <br/> Error
            Code = 5 means 'TimeIn2 contains invalid data.' <br/> Error Code = 5
            means 'TimeIn3 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn4 contains invalid data.' <br/> Error Code = 5 means 'TimeIn5
            contains invalid data.' <br/> Error Code = 5 means 'TimeIn6 contains
            invalid data.' <br/> Error Code = 5 means 'TimeIn7 contains invalid
            data.' <br/> Error Code = 5 means 'TimeIn8 contains invalid data.'
            <br/> Error Code = 5 means 'TimeIn9 contains invalid data.' <br/>
            Error Code = 5 means 'TimeIn10 contains invalid data.' <br/> Error
            Code = 5 means 'TimeIn11 contains invalid data.' <br/> Error Code =
            5 means 'TimeIn12 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn13 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn14 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn15 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut1 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut2 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut3 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut4 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut5 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut6 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut7 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut8 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut9 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut10 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut11 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut12 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut13 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut14 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut15 contains invalid data.' <br/> Error Code = 5 means
            'Comments contains invalid data.' <br/> Error Code = 5 means
            'Comments contains more than 1024 characters.' <br/> Error Code = 5
            means 'At least one time interval or comment is mandatory.' <br/>
            Error Code = 5 means 'Time Intervals are not in sequense.' <br/>
            Error Code = 5 means 'Last day closing time out is missing.' <br/>
            Error Code = 5 means 'TimesheetDate should not be smaller than
            Employee start date.' <br/> Error Code = 5 means 'TimesheetDate
            should not be later than Employee leaving date.' <br/>

            Error Code = 5 means 'No access on Timesheet schema.' <br/> Error
            Code = 7 means 'No json data found.' <br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateEmployeeTimesheetDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Timesheet record updated successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'Timesheet entry is already exist for
            EmployeeId and date' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'TimesheetDate is missing.' <br/> Error Code =
            5 means 'TimesheetDate cannot be empty.' <br/> Error Code = 5 means
            'TimesheetDate contains invalid data.' <br/>

            Error Code = 5 means 'TimeIn1 contains invalid data.' <br/> Error
            Code = 5 means 'TimeIn2 contains invalid data.' <br/> Error Code = 5
            means 'TimeIn3 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn4 contains invalid data.' <br/> Error Code = 5 means 'TimeIn5
            contains invalid data.' <br/> Error Code = 5 means 'TimeIn6 contains
            invalid data.' <br/> Error Code = 5 means 'TimeIn7 contains invalid
            data.' <br/> Error Code = 5 means 'TimeIn8 contains invalid data.'
            <br/> Error Code = 5 means 'TimeIn9 contains invalid data.' <br/>
            Error Code = 5 means 'TimeIn10 contains invalid data.' <br/> Error
            Code = 5 means 'TimeIn11 contains invalid data.' <br/> Error Code =
            5 means 'TimeIn12 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn13 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn14 contains invalid data.' <br/> Error Code = 5 means
            'TimeIn15 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut1 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut2 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut3 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut4 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut5 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut6 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut7 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut8 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut9 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut10 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut11 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut12 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut13 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut14 contains invalid data.' <br/> Error Code = 5 means
            'TimeOut15 contains invalid data.' <br/> Error Code = 5 means
            'Comments contains invalid data.' <br/> Error Code = 5 means
            'Comments contains more than 1024 characters.' <br/> Error Code = 5
            means 'At least one time interval or comment is mandatory.' <br/>
            Error Code = 5 means 'Time Intervals are not in sequense.' <br/>
            Error Code = 5 means 'Last day closing time out is missing.' <br/>
            Error Code = 5 means 'TimesheetDate should not be smaller than
            Employee start date.' <br/> Error Code = 5 means 'TimesheetDate
            should not be later than Employee leaving date.' <br/>

            Error Code = 5 means 'No access on Timesheet schema.' <br/> Error
            Code = 7 means 'No json data found.' <br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteEmployeeTimesheetDetail:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Timesheet record deleted successfully.'

            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
            means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/> Error Code = 5 means
            'TimesheetDate is missing.' <br/> Error Code = 5 means
            'TimesheetDate cannot be empty.' <br/> Error Code = 5 means
            'TimesheetDate contains invalid data.' <br/>  Error Code = 5 means
            'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json
            data found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'No Record FOund'<br/> 
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetTimesheetDetail:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'

            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
            means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/> Error Code = 5 means 'StartDate
            should be before or equal to EndDate.' <br/> Error Code = 5 means
            'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json
            data found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'No Record FOund'<br/> 
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetTimesheetArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetBenefitByEmployeeId:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/>
            Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
            2 means 'Invalid API Key'<br/> Error Code = 4 means 'Action cannot
            be empty'<br/> Error Code = 4 means 'Invalid Action'<br/>

            Error Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code
            = 5 means 'EmployeeId contains more than 15 characters.' <br/> 
            Error Code = 5 means 'EmployeeId contains invalid data.' <br/> 
            Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
            = 5 means 'EmployeeId is missing.' <br/> 

            Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No detail has been
            found.'<br/> 
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/GetBenefitByEmployeeIdArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetByBenefitIdApi:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'The requested processed successfully.'<br/>\t   Error Code = 5 means 'API key does not exists.' <br/> \t\t\t\t\t   Error Code = 2 means 'Invalid API Key'<br/>\t\t\t\t\t   Error Code = 4 means 'Action cannot be empty'<br/>\t\t\t\t\t   Error Code = 4 means 'Invalid Action'<br/>\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'BenefitId is invalid.'<br/>\t\t\t\t\t   Error Code = 5 means 'BenefitId cannot be empty.'<br/>\t\t\t\t\t   Error Code = 5 means 'Benefit Id is missing.'<br/>\nError Code = 5 means 'No json data found.'<br/> Error Code = 7 means 'No json data found.'<br/>\t\t\t\t\t\t   Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t   Error Code = 10 means 'No detail has been found.'<br/>"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetByBenefitIdObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetCustomScreenByEmployeeId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 1 means 'API key is missing.'<br/> Error Code = 2 means
            'Invalid API Key.'<br/> Error Code = 3 means 'Action is
            missing.'<br/>  Error Code = 4 means 'Action cannot be empty.'<br/>
            Error Code = 4 means 'Invalid Action.'<br/> Error Code = 5 means
            'EmployeeId does not exists.'<br/> Error Code = 5 means 'EmployeeId
            contains invalid data.'<br/> Error Code = 5 means 'EmployeeId
            contains more than 15 characters.'<br/> Error Code = 5 means
            'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId
            is missing.'<br/> Error Code = 5 means 'ScreenId does not
            exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
            Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
            'ScreenId is missing.'<br/> Error Code = 6 means 'Oops! Something
            went wrong.'<br/> Error Code = 7 means 'No json data found.'<br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
            has been found.
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetByCustomScreenByEmployeeId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewBenefitApi:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Benefit record added successfully.'<br/> \nError Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \t\nError Code = 5 means 'Benefit Type is missing.' <br/> \t\t Error Code = 5 means 'Benefit Type cannot be empty.' <br/> \t Error Code = 5 means 'Benefit Type contains more than 100 characters.' <br/> \t Error Code = 5 means 'Benefit Type contains invalid data.' <br/> \t\nError Code = 5 means 'Date Awarded is missing.' <br/>  Error Code = 5 means 'Date Awarded field cannot be Empty.' <br/>  Error Code = 5 means 'Date Awarded field contains invalid data.'<br/> \nError Code = 5 means 'DateAwarded should be before or equal to ExpiryDate.' <br/> \t Error Code = 5 means 'Expiry Date is missing.' <br/> \t\nError Code = 5 means 'Value contains more than 999,999,999,999.99.' <br/> Error Code = 5 means 'Value contains invalid data.' <br/>\nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/> \nError Code = 5 means 'Recover On Termination Can only Contain Yes Or No.' <br/> \t\t\t\t\t  Error Code = 5 means 'Recover On Termination cannot be empty.' <br/> \t\t\t\t  Error Code = 5 means 'Recover On Termination is missing.' <br/> \nError Code = 5 means 'This custom column name not exists' <br/> \t\t  Error Code = 5 means 'Custom column name should not be empty.' <br/> \t\t  Error Code = 5 means 'ColumnName is missing.' <br/> \t Error Code = 5 means 'ColumnValue is missing.' <br/> \nError Code = 5 means 'Custom column name already addded.' <br/>  Error Code = 5 means 'Custom column name does not exists on screen.' <br/>  Error Code = 5 means 'Custom column name should not be empty.' <br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing.' <br/> \nError Code = 5 means 'Document Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Document Name is missing.' <br/>  Error Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.' <br/>  Error Code = 5 means 'Description contains more than 256 characters.' <br/>\nError Code = 5 means 'DocumentCategory contains invalid data.' <br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentCategory cannot be empty.' <br/> Error Code = 5 means 'Document Category is missing.' <br/>\nError Code = 5 means 'SignatureRequired Can only Contain True Or False.' <br/> Error Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code = 5 means 'Signature Required is missing.' <br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> \t Error Code = 5 means 'No json data found.'<br/>\t\t\t\t\t\t  Error Code = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateBenefitApi:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        status:
          description: "Error Code = 0 means 'Benefit record updated successfully..'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'valid Benefit Id Cannot be Empty.' <br/>  Error Code = 5 means 'Benefit Id is invalid.' <br/>  Error Code = 5 means 'Pending authorization request exists in system for passed Benefit id' <br/>  Error Code = 5 means 'No record found.' <br/>  Error Code = 5 means 'benefit Id is missing.' <br/> \nError Code = 5 means 'Benefit Type is missing.' <br/> \t\t Error Code = 5 means 'Benefit Type cannot be empty.' <br/> \t Error Code = 5 means 'Benefit Type contains more than 100 characters.' <br/> \t Error Code = 5 means 'Benefit Type contains invalid data.' <br/>\nError Code = 5 means 'Expiry Date is missing.' <br/>  Error Code = 5 means 'Expiry Date field contains invalid data.' <br/> \nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/> \nError Code = 5 means 'Date Awarded is missing.' <br/>  Error Code = 5 means 'Date Awarded field cannot be Empty.' <br/>  Error Code = 5 means 'Date Awarded field contains invalid data.'<br/>\t\t\t\t\t  Error Code = 5 means 'DateAwarded should be before or equal to ExpiryDate.' <br/> \t\t\t\t\t \nError Code = 5 means 'Value contains more than 999,999,999,999.99.' <br/>  Error Code = 5 means 'Value contains invalid data.' <br/>\nError Code = 5 means 'Recover On Termination Can only Contain Yes Or No.' <br/> \t\t\t\t\t  Error Code = 5 means 'Recover On Termination cannot be empty.' <br/> \t\t\t\t \nError Code = 5 means 'Custom column name already addded.' <br/>  Error Code = 5 means 'Custom column name does not exists on screen.' <br/>  Error Code = 5 means 'Custom column name should not be empty.' <br/> Error Code = 5 means 'ColumnName is missing.' <br/> \nError Code = 5 means 'ColumnValue is missing.' <br/> \nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'Document Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Document Name is missing.' <br/>  Error Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.' <br/>  Error Code = 5 means 'Description contains more than 256 characters.' <br/>\nError Code = 5 means 'DocumentCategory contains invalid data.' <br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentCategory cannot be empty.' <br/> Error Code = 5 means 'Document Category is missing.' <br/>\nError Code = 5 means 'SignatureRequired Can only Contain True Or False.' <br/> Error Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code = 5 means 'Signature Required is missing.' <br/>\nError Code = 5 means 'One or more mandatory fields are missing.' <br/>  Error Code = 6 means 'Oops! Something went wrong.' <br/> \t Error Code = 6 means 'No record found.'<br/>\t\nError Code = 5 means 'No json data found.'<br/>\t\t\t\t\t\t  Error Code = 6 means 'Invalid json data.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteBenefit:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        status:
          description: "Error Code = 0 means 'Benefit record deleted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/>\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'Pending authorization request exists in system for passed Benefit id.' <br/>  Error Code = 5 means 'Benefit Id is invalid.' <br/>  Error Code = 5 means 'valid Benefit Id Cannot be Empty.' <br/> \nError Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code = 5 means 'No record found.'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 6 means 'invalid action.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> "
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetCustomScreenDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
            means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
            missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
            <br/> Error Code = 4 means 'Invalid Action.'<br/> Error Code = 6
            means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No
            json data found.'<br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'No detail has been found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetCustomScreenDetail'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewCustomScreenTransaction:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'CustomScreen record added successfully.'<br/> 
            Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
            means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
            missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
            <br/> Error Code = 4 means 'Invalid Action.'<br/> Error Code = 5
            means 'EmployeeId does not exists.'<br/> Error Code = 5 means
            'EmployeeId contains invalid data.'<br/> Error Code = 5 means
            'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
            means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
            'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId is
            missing.'<br/> Error Code = 5 means 'ScreenId does not
            exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
            Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
            'Custom column with name not exists'<br/> Error Code = 5 means
            'Custom column name should not be empty'<br/> Error Code = 5 means
            'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is
            missing.'<br/> Error Code = 5 means 'ColumnName contains invalid
            data'<br/> Error Code = 5 means 'ColumnName contains more than 100
            characters.'<br/> Error Code = 5 means 'ColumnName field contains
            invalid data'<br/> Error Code = 5 means 'ColumnName is
            mandatory'<br/> Error Code = 5 means 'Custom Column already
            addded'<br/> Error Code = 5 means 'Custom Column does not exists on
            screen'<br/>

            Error Code = 5 means 'Custom column name contains more than 100
            characters.'<br/>

            Error Code = 5 means 'One or more mandatory fields are missing'<br/>
            Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code
            = 5 means 'Document Name contains more than 100 characters.'<br/>
            Error Code = 5 means 'Document Name is missing.'<br/> Error Code = 5
            means 'File type is not supported'<br/> Error Code = 5 means 'File
            contains invalid data.'<br/> Error Code = 5 means 'File is
            missing.'<br/> Error Code = 5 means 'Description contains invalid
            data.'<br/> Error Code = 5 means 'Description contains more than 256
            characters.'<br/> Error Code = 5 means 'Description cannot be
            empty.'<br/> Error Code = 5 means 'DocumentCategory contains invalid
            data.'<br/> Error Code = 5 means 'DocumentCategory contains more
            than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory
            cannot be empty.'<br/> Error Code = 5 means 'Document Category is
            missing.'<br/> Error Code = 5 means 'SignatureRequired Can only
            Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired
            cannot be empty.'<br/> Error Code = 5 means 'Signature Required is
            missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'
            <br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateNextYearHolidayEntitlement:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Entitlement Next Year updated
            successfully.'<br/>  Error Code = 1 means 'API key is missing.'
            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 2
            means 'API key is missing.' <br/>  Error Code = 3 means 'Action is
            missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
            <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
            means 'EmployeeId contains invalid data.' <br/> Error Code = 5 means
            'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
            cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is
            missing.'<br/> Error Code = 5 means 'EmployeeId contains more than
            15 characters.'<br/> Error Code = 5 means 'EntitlementNextYear
            contains invalid data.'<br/> Error Code = 5 means
            'EntitlementNextYear should be between company normal working
            hours.'<br/> Error Code = 5 means 'ReasonForChange contains more
            than 256 characters.'<br/> Error Code = 5 means 'ReasonForChange
            cannot be empty.'<br/> Error Code = 5 means 'ReasonForChange is
            missing.'<br/> Error Code = 5 means 'ReasonForChange contains
            invalid data'<br/> Error Code = 5 means 'No access on holiday
            entitlement schema.'<br/> Error Code = 7 means 'No Json Data
            Found'<br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetQueryResult:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 1 means 'API key is missing.' <br/> Error Code = 2
            means 'Invalid API Key.'<br/> Error Code = 2 means 'API key is
            missing.' <br/>  Error Code = 3 means 'Action is missing.' <br/> 
            Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
            means 'Invalid Action.' <br/> Error Code = 5 means 'API Key does not
            exists.' <br/> Error Code = 5 means 'Invalid query name.' <br/>
            Error Code = 5 means 'QueryName is missing.'<br/> Error Code = 5
            means 'No access to Query Builder schema.'<br/> Error Code = 7 means
            'No json data found.'<br/> Error Code = 8 means 'Either empty or no
            Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
            Error Code = 10 means 'No records found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetQueryResult'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetQueryResultByQueryName:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 1 means 'API key is missing.' <br/> Error Code = 2
            means 'Invalid API Key.'<br/> Error Code = 2 means 'API key is
            missing.' <br/>  Error Code = 3 means 'Action is missing.' <br/> 
            Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
            means 'Invalid Action.' <br/> Error Code = 5 means 'API Key does not
            exists.' <br/> Error Code = 5 means 'Invalid query name.' <br/>
            Error Code = 5 means 'QueryName is missing.'<br/> Error Code = 5
            means 'No access to Query Builder schema.'<br/> Error Code = 7 means
            'No json data found.'<br/> Error Code = 8 means 'Either empty or no
            Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
            Error Code = 10 means 'No records found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetQueryResultByQueryName'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetHistoryByEmployeeIdAndFieldName:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 1 means 'API key is missing.' <br/> Error Code = 0
            means 'Invalid FieldName.'<br/> Error Code = 2 means 'Invalid API
            Key.'<br/> Error Code = 2 means 'API key is missing.' <br/>  Error
            Code = 3 means 'Action is missing.' <br/>  Error Code = 4 means
            'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid
            Action.' <br/> Error Code = 5 means 'API Key does not exists.' <br/>
            Error Code = 5 means 'EmployeeId contains invalid data.' <br/> Error
            Code = 5 means 'EmployeeId does not exists.' <br/> Error Code = 5
            means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
            'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId
            contains more than 15 characters.'<br/> Error Code = 5 means
            'FieldName cannot be empty.'<br/> Error Code = 5 means 'FieldName is
            missing.'<br/> Error Code = 5 means 'No access on history
            schema.'<br/> Error Code = 7 means 'No Json Data Found'<br/> Error
            Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9
            means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result 1:
          $ref: '#/components/schemas/Result1GetHistoryByEmployeeIdAndFieldName'
        Result 2:
          $ref: '#/components/schemas/Result2GetHistoryByEmployeeIdAndFieldName'
        Result 3:
          $ref: '#/components/schemas/Result3GetHistoryByEmployeeIdAndFieldName'
      x-konfig-properties:
        Result 1:
          description: Result value
        Result 2:
          description: Result value
        Result 3:
          description: Result value
    ErrorForUpdateCustomScreenTransaction:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'CustomScreen record updated
            successfully.'<br/>  Error Code = 1 means 'API key is missing.'
            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3
            means 'Action is missing.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.'<br/>
            Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code =
            5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.'<br/> Error Code
            = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
            'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId is
            missing.'<br/> Error Code = 5 means 'ScreenId does not
            exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
            Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
            'Custom Screen Transactionid is missing.'<br/> Error Code = 5 means
            'Pending authorization request exists in system for passed Custom
            Screen Transaction id.'<br/> Error Code = 5 means 'Custom Screen
            TransactionId is invalid'<br/> Error Code = 5 means 'Custom Screen
            TransactionId Cannot be Empty'<br/> Error Code = 5 means 'Custom
            column with name not exists'<br/> Error Code = 5 means 'Custom
            column name should not be empty'<br/> Error Code = 5 means
            'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is
            missing.'<br/> Error Code = 5 means 'ColumnName contains invalid
            data'<br/> Error Code = 5 means 'ColumnName contains more than 100
            characters.'<br/> Error Code = 5 means 'ColumnName field contains
            invalid data'<br/> Error Code = 5 means 'ColumnName is
            mandatory'<br/> Error Code = 5 means 'Custom Column already
            addded'<br/> Error Code = 5 means 'Custom Column does not exists on
            screen'<br/>

            Error Code = 5 means 'Custom column name contains more than 100
            characters.'<br/>

            Error Code = 5 means 'One or more mandatory fields are missing'<br/>
            Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code
            = 5 means 'Document Name contains more than 100 characters.'<br/>
            Error Code = 5 means 'Document Name is missing.'<br/> Error Code = 5
            means 'File type is not supported'<br/> Error Code = 5 means 'File
            contains invalid data.'<br/> Error Code = 5 means 'File is
            missing.'<br/> Error Code = 5 means 'Description contains invalid
            data.'<br/> Error Code = 5 means 'Description contains more than 256
            characters.'<br/> Error Code = 5 means 'Description cannot be
            empty.'<br/> Error Code = 5 means 'DocumentCategory contains invalid
            data.'<br/> Error Code = 5 means 'DocumentCategory contains more
            than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory
            cannot be empty.'<br/> Error Code = 5 means 'Document Category is
            missing.'<br/> Error Code = 5 means 'SignatureRequired Can only
            Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired
            cannot be empty.'<br/> Error Code = 5 means 'Signature Required is
            missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'
            <br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code
            = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteCustomScreenTransaction:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'CustomScreen record deleted
            successfully.'<br/>  Error Code = 1 means 'API key is missing.'
            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3
            means 'Action is missing.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.'<br/>
            Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code =
            5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.'<br/> Error Code
            = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means
            'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId is
            missing.'<br/> Error Code = 5 means 'ScreenId does not
            exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error
            Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means
            'Custom Screen Transactionid is missing.'<br/> Error Code = 5 means
            'Pending authorization request exists in system for passed Custom
            Screen Transaction id.'<br/> Error Code = 5 means 'Custom Screen
            TransactionId is invalid'<br/> Error Code = 5 means 'Custom Screen
            TransactionId Cannot be Empty'<br/> Error code = 6 means 'No record
            found.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/>
            Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetHolidayEntitlement:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
            means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
            missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
            <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
            means 'StartDate contains invalid data.' <br/> Error Code = 5 means
            'StartDate should be before to EndDate.' <br/> Error Code = 5 means
            'EmployeeId contains invalid data.' <br/> Error Code = 5 means
            'EndDate contains invalid data.' <br/> Error Code = 5 means
            'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
            cannot be empty.<br/> Error Code = 5 means 'EmployeeId is
            missing.'<br/> Error Code = 5 means 'EmployeeId contains more than
            15 characters.'<br/> Error Code = 5 means 'Either empty or no Form
            Data.'<br/> Error Code = 5 means 'No access on holiday entitlement
            schema.'<br/> Error Code = 7 means 'No Json Data Found'<br/> Error
            Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9
            means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetHoildayEntittlement'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetNextYearHolidayEntitlement:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 1 means 'API key is missing.' <br/>  Error Code = 2
            means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is
            missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
            <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
            means 'EmployeeId contains invalid data.' <br/> Error Code = 5 means
            'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
            is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be
            empty.<br/> Error Code = 5 means 'EmployeeId contains more than 15
            characters.'<br/> Error Code = 5 means 'No access on holiday
            entitlement schema.'<br/> Error Code = 7 means 'No Json Data
            Found'<br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetNextYearHolidayEntitlement'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForUpdateHolidayEntitlement:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Entitlement This Year updated
            successfully.'<br/>  Error Code = 1 means 'API key is missing.'
            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 2
            means 'API key is missing.' <br/>  Error Code = 3 means 'Action is
            missing.' <br/>  Error Code = 4 means 'Action cannot be empty.'
            <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
            means 'EmployeeId contains invalid data.' <br/> Error Code = 5 means
            'EmployeeId does not exists.' <br/> Error Code = 5 means 'EmployeeId
            cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is
            missing.'<br/> Error Code = 5 means 'EmployeeId contains more than
            15 characters.'<br/> Error Code = 5 means 'EntitlementThisYear
            contains invalid data.'<br/> Error Code = 5 means
            'EntitlementThisYear should be between company normal working
            hours.'<br/> Error Code = 5 means 'ReasonForChange contains more
            than 256 characters.'<br/> Error Code = 5 means 'ReasonForChange
            cannot be empty.'<br/> Error Code = 5 means 'ReasonForChange
            contains invalid data'<br/> Error Code = 5 means 'ReasonForChange is
            missing.'<br/> Error Code = 5 means 'No access on holiday
            entitlement schema.'<br/> Error Code = 7 means 'No Json Data
            Found'<br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetByCustomScreenTransactionId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'The requested processed successfully.'<br/>  Error Code = 1 means 'API key is missing.' <br/>\t\t\t\t\t\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is missing.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.'<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'ScreenId does not exists..'<br/> Error Code = 5 means 'ScreenId is invalid'<br/> Error Code = 5 means 'ScreenId cannot be empty'<br/> Error Code = 5 means 'ScreenId is missing.'<br/> Error Code = 5 means 'Custom Screen TransactionId is invalid'<br/> Error Code = 5 means 'Custom Screen TransactionId cannot be empty.'<br/> Error Code = 5 means 'Custom Screen TransactionId is missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found."
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1GetByCustomScreenTransactionIdObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForCreateNewVacancy:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Vacancy details inserted successfully.'<br/>  Error Code = 5 means 'Reference already exist.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'Vacancy Name contains invalid data.' <br/>  Error Code = 5 means 'Vacancy Name contains contains more than 512 characters.' <br/> Error Code = 5 means 'Vacancy Name cannot be empty.' <br/> Error Code = 5 means 'VacancyName is missing.' <br/>\nError Code = 5 means 'Vacancy Description should not be empty.' <br/>  Error Code = 5 means 'VacancyDescription is missing.' <br/>\nError Code = 5 means 'Company contains invalid data.' <br/> Error Code = 5 means 'Company contains more than 100 characters.' <br/> Error Code = 5 means 'Company cannot be empty.' <br/>\nError Code = 5 means 'Location contains invalid data.' <br/> Error Code = 5 means 'Location contains more than 100 characters.' <br/> Error Code = 5 means 'Location cannot be empty.' <br/>\nError Code = 5 means 'Department contains invalid data.' <br/> Error Code = 5 means 'Department contains more than 100 characters.' <br/> Error Code = 5 means 'Department cannot be empty.' <br/>\nError Code = 5 means 'ClosingDate field contains invalid data' <br/>\nError Code = 5 means 'Reference contains invalid data.' <br/>  Error Code = 5 means 'Vacancy Reference contains contains more than 100 characters.' <br/> Error Code = 5 means 'Reference cannot be empty.' <br/> Error Code = 5 means 'Reference is missing.' <br/> Error Code = 5 means 'Reference not exist.' <br/>\nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains contains more than 1024 characters.' <br/> Error Code = 5 means 'Comment cannot be empty.' <br/> \nError Code = 5 means 'SalaryRange contains invalid data.' <br/>  Error Code = 5 means 'SalaryRange contains contains more than 100 characters.' <br/> Error Code = 5 means 'SalaryRange cannot be empty.' <br/> \nError Code = 5 means 'JobTitle contains invalid data.' <br/>  Error Code = 5 means 'JobTitle contains contains more than 512 characters.' <br/> Error Code = 5 means 'JobTitle cannot be empty.' <br/>\nError Code = 5 means 'Country contains invalid data.' <br/>  Error Code = 5 means 'Country contains contains more than 216 characters.' <br/> Error Code = 5 means 'Country cannot be empty.' <br/>\nError Code = 5 means 'Experience contains invalid data.' <br/>  Error Code = 5 means 'Experience contains contains more than 256 characters.' <br/> Error Code = 5 means 'Experience cannot be empty.' <br/>\nError Code = 5 means 'City contains invalid data.' <br/>  Error Code = 5 means 'City contains contains more than 512 characters.' <br/> Error Code = 5 means 'City cannot be empty.' <br/>\nError Code = 5 means 'IsHideSalary contains invalid data.' <br/>  Error Code = 5 means 'IsHideSalary cannot be empty.' <br/>\nError Code = 5 means 'VacancyType contains invalid data.' <br/>  Error Code = 5 means 'VacancyType cannot be empty.' <br/>\nError Code = 5 means 'IsCoverLetterMandatory contains invalid data.' <br/>  Error Code = 5 means 'IsCoverLetterMandatory cannot be empty.' <br/>\nError Code = 5 means 'IsResumeMandatory contains invalid data.' <br/>  Error Code = 5 means 'IsResumeMandatory cannot be empty.' <br/>\nError Code = 5 means 'No access on ATS schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetVacancy:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-

            Error Code = 5 means 'Vacancy Reference contains invalid data.'
            <br/>  Error Code = 5 means 'Vacancy Reference contains contains
            more than 100 characters.' <br/> Error Code = 5 means 'Vacancy
            Reference cannot be empty.' <br/> Error Code = 5 means 'Vacancy
            Reference is missing.' <br/>

            Error Code = 5 means 'Reference not exist.' <br/> Error Code = 6
            means 'Unknown error occured.' <br/> Error Code = 5 means 'No access
            on ATS schema.'<br/> Error Code = 7 means 'No json data found.'<br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record
            found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetVacancyObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetAllVacancy:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-

            Error Code = 5 means 'Reference not exist.' <br/> Error Code = 6
            means 'Unknown error occured.' <br/>

            Error Code = 5 means 'No access on ATS schema.'<br/> Error Code = 7
            means 'No json data found.'<br/> Error Code = 8 means 'Either empty
            or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No record found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetAllVacancyObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForEmailInbox:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully'<br/> 
            Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 3
            means 'Action is missing.' <br/> Error Code = 4 means 'Invalid
            Action.' <br/> Error Code = 6 means 'Oops! Something went wrong.'
            <br/>

            Error Code = 5 means 'EmailFrom contains invalid data.' <br/>  Error
            Code = 5 means 'EmailFrom contains more than 254 characters.'<br/>
            Error code = 5 means 'EmailFrom cannot be empty.'<br/> Error Code =
            5 means 'EmailFrom is missing.' <br/> 

            Error Code = 5 means 'Email Id In EmailTo contains invalid data.'
            <br/>  Error Code = 5 means 'Email Id In EmailTo contains more than
            254 characters.'<br/> Error code = 5 means 'Email Id In EmailTo
            cannot be empty.'<br/> Error Code = 5 means 'EmailTo is missing.'
            <br/> 

            Error Code = 5 means 'Email Id In EmailCc contains invalid data.'
            <br/>  Error Code = 5 means 'Email Id In EmailCc contains more than
            254 characters.'<br/> Error code = 5 means 'Email Id In EmailCc
            cannot be empty.'<br/>

            Error Code = 5 means 'Email Id In EmailBcc contains invalid data.'
            <br/>  Error Code = 5 means 'Email Id In EmailBcc contains more than
            254 characters.'<br/> Error code = 5 means 'Email Id In EmailBcc
            cannot be empty.'<br/>

            Error Code = 5 means 'EmailSubject contains invalid data.' <br/> 
            Error Code = 5 means 'EmailSubject contains more than 2147483647
            characters.'<br/> Error code = 5 means 'EmailSubject cannot be
            empty.'<br/> Error Code = 5 means 'EmailSubject is missing.' <br/> 

            Error Code = 5 means 'Invalid file type. File type is not supported'
            <br/>  Error Code = 5 means 'DocumentName cannot be empty.'<br/>
            Error code = 5 means 'File size exceeds the limit. Please ensure the
            file is no larger than 15MB'<br/> Error Code = 5 means 'Invalid file
            size' <br/> 

            Error Code = 5 means 'Both user not belongs to same company.' <br/> 
            Error Code = 5 means 'API key with document access not exists.'
            <br/> 

            Error Code = 5 means 'EmailTo list can not be empty.' <br/>  Error
            Code = 5 means 'Entries in EmailTo list should not be more than 1.'
            <br/>  Error Code = 5 means 'Email subject does not contains email
            recipient email id.' <br/>  Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1ForEmailInbox'
      x-konfig-properties:
        Result:
          description: Result value
    Result1ForEmailInbox:
      description: The Result Array
      type: object
      properties:
        APIKey:
          description: APIKey Value
          type: string
          example: 7acf796a-d1fc-41b1-bc3f-3f7a91b291f1
        RecipientEmployeeId:
          description: Recipient Employee Id value
          type: string
          example: PW2
        Title:
          description: Title value
          type: string
          example: Hello
    ErrorForaddrighttoworkdetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Right To Work detail inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on employee schema.' <br/>\nError code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'DocumentType contains invalid data.' <br/>  Error Code = 5 means 'DocumentType contains more than 100 characters.' <br/> \t\t\t\t\t Error Code = 5 means 'DocumentType is missing.' <br/> \nError Code = 5 means 'DocumentId has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'ValidFrom field contains invalid data' <br/> \t\t\t\t\t\t  Error Code = 5 means 'ValidTo field contains invalid data' <br/> \nError Code = 5 means 'Duration has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'Invalid file type.File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/> \nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means 'Either DocumentName or File data not provided.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForgetrighttoworkdetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 5 means 'No access on employee schema.' <br/>

            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'No record found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1Forgetrighttoworkdetail'
      x-konfig-properties:
        Result:
          description: Result value
    Result1Forgetrighttoworkdetail:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          RightToWorkId:
            description: RightToWorkId Value
            type: integer
            example: 156
          DocumentType:
            description: Document type value
            type: string
            example: Residence Permit
          DocumentId:
            description: Document id value
            type: integer
            example: 10
          ValidFrom:
            description: Valid from value
            type: string
            format: date
            example: Thu, 01 Jan 2015
          ValidTo:
            description: Valid to value
            type: string
            format: date
            example: Fri, 02 jan 2015
          Duration:
            description: Duration value
            type: integer
            example: 2
          DocumentName:
            description: DocumentName value
            type: string
            example: api.txt
          DocumentURL:
            description: DocumentURL value
            type: string
            format: URL
            example: >-
              http://techinfo.localhost.net:12345/Handlers/MyDocsViewer.ashx?4a9b1332-3f71-4e96-859c-d1eaeaab3ea4
          Comments:
            description: Comments value
            type: string
            example: NICE
    ErrorForupdaterighttoworkdetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Right to work detail updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on employee schema.' <br/>\nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'No record found.' <br/>  Error Code = 5 means 'RightToWorkTxnId is invalid' <br/>  Error Code = 5 means 'RightToWorkTxnId cannot be empty' <br/>  Error Code = 5 means 'RightToWorkTxnId is missing.' <br/> \nError Code = 5 means 'DocumentType contains more than 100 characters.' <br/>  Error Code = 5 means 'DocumentType contains invalid data.' <br/> \nError Code = 5 means 'DocumentId has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'ValidFrom field contains invalid data ' <br/>  Error Code = 5 means 'ValidTo field contains invalid data ' <br/> \nError Code = 5 means 'Duration has One or more invalid characters were detected. Please check them and input the data again' <br/> \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/>  Error Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means 'Either DocumentName or File data not provided.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \nError Code = 6 means 'Oops! Something went wrong.'<br/>\t\t\t Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 7
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorFordeleterighttoworkdetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Right to work detail deleted
            successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>
            Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
            4 means 'Action cannot be empty.' <br/> Error Code = 4 means
            'Invalid Action.' <br/> Error Code = 5 means 'No access on employee
            schema.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
            = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
            'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
            means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
            means 'EmployeeId is missing.' <br/> 

            Error Code = 5 means 'No record found.' <br/>  Error Code = 5 means
            'RightToWorkTxnId is invalid' <br/>  Error Code = 5 means
            'RightToWorkTxnId cannot be empty' <br/>  Error Code = 5 means
            'RightToWorkTxnId is missing.' <br/> 

            Error Code = 6 means 'No record found.'<br/> Error Code = 7 means
            'No json data found.' <br/> Error Code = 8 means 'Either empty or no
            Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetBackgroundCheckDetailByEmployeeId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/>

            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>  Error
            Code = 10 means 'No record found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1ForGetBackgroundCheckDetailByEmployeeId'
      x-konfig-properties:
        Result:
          description: Result value
    Result1ForGetBackgroundCheckDetailByEmployeeId:
      description: The Result Array
      type: array
      items:
        type: object
        properties:
          BackgroundCheckDetailId:
            description: Background Check Detail Id Value
            type: integer
            example: 228
          TypeOfCheck:
            description: Type Of Check value
            type: string
            example: DBS
          DateCompleted:
            description: Date Completed value
            type: string
            format: date
            example: Tue, 14 Feb 2017
          ExpiryDate:
            description: Expiry Date value
            type: string
            format: date
            example: Thu, 16 Feb 2017
          DocumentName:
            description: Document Name value
            type: string
            example: aa.pdf
          DocumentURL:
            description: Document URL value
            type: string
            format: URL
            example: >-
              http://ayubinfo.localhost.net:12345/Handlers/MyDocsViewer.ashx?f58d38ab-bf3e-4c76-9bf2-e8b29122bb08
          Comments:
            description: Comments value
            type: string
            example: abc
    ErrorForAddBackgroundCheckDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Background detail inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'TypeOfCheck contains invalid data.' <br/>  Error Code = 5 means 'TypeOfCheck contains more than 100 characters.' <br/>  Error Code = 5 means 'TypeOfCheck cannot be empty.' <br/>  Error Code = 5 means 'TypeOfCheck is missing.' <br/> \nError Code = 5 means 'DateCompleted field contains invalid data' <br/> \t\t\t\t  Error Code = 5 means 'ExpiryDate field contains invalid data' <br/> \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/> \nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means 'Either DocumentName or File data not provided.' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/>  Error Code = 5 means 'Comment contains more than 1024 characters.' <br/> \nError Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateBackgroundCheckDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Background detail updated successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

            Error code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/> 

            Error code = 5 means 'No record found.'<br/> Error code = 5 means
            'BackgroundCheckTxnId is invalid'<br/> Error code = 5 means
            'BackgroundCheckTxnId cannot be empty'<br/> Error code = 5 means
            'BackgroundCheckTxnId is missing.'<br/>

            Error Code = 5 means 'TypeOfCheck contains invalid data.' <br/> 
            Error Code = 5 means 'TypeOfCheck contains more than 100
            characters.' <br/>  Error Code = 5 means 'TypeOfCheck cannot be
            empty.' <br/>  Error Code = 5 means 'TypeOfCheck is missing.' <br/> 

            Error Code = 5 means 'DateCompleted field contains invalid data'
            <br/>  Error Code = 5 means 'ExpiryDate field contains invalid data'
            <br/> 

            Error Code = 5 means 'Invalid file type. File type is not
            supported.' <br/>  Error Code = 5 means 'DocumentName cannot be
            empty.' <br/> 

            Error Code = 5 means 'File contains invalid data.' <br/>  Error Code
            = 5 means 'File cannot be empty.' <br/>  Error Code = 5 means
            'Either DocumentName or File data not provided.' <br/> 

            Error Code = 5 means 'Comment contains invalid data.' <br/>  Error
            Code = 5 means 'Comment contains more than 1024 characters.' <br/> 

            Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code =
            7 means 'No json data found.' <br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteBackgroundCheckDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Background detail deleted successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
            = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
            'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
            means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
            means 'EmployeeId is missing.' <br/> 

            Error Code = 5 means 'No record found.' <br/>  Error Code = 5 means
            'BackgroundCheckTxnId is invalid' <br/>  Error Code = 5 means
            'BackgroundCheckTxnId cannot be empty' <br/>  Error Code = 5 means
            'BackgroundCheckTxnId is missing.' <br/> 

            Error Code = 6 means 'No record found.'<br/> Error Code = 7 means
            'No json data found.' <br/> Error Code = 8 means 'Either empty or no
            Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForgetothereventdetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 5 means 'No access on Other Event schema.' <br/>

            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/> 

            Error Code = 5 means 'StartDate contains invalid data.' <br/>  Error
            Code = 5 means 'StartDate should be before or equal to EndDate.'
            <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/> 

            Error Code = 7 means 'No json data found.' <br/> Error Code = 8
            means 'Either empty or no Form Data.'<br/> Error Code = 9 means
            'Invalid json data.'<br/> Error Code = 10 means 'The requested
            processed successfully.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1Forgetothereventdetail'
      x-konfig-properties:
        Result:
          description: Result value
    Result1Forgetothereventdetail:
      description: The Result Array
      type: array
      items:
        type: object
        properties:
          OtherLeaveTxnId:
            description: OtherLeaveTxnId Value
            type: integer
            example: 1023
          StartDate:
            description: Start Date value
            type: string
            format: date
            example: '2016-04-15'
          EndDate:
            description: End Date value
            type: string
            format: date
            example: '2016-04-15'
          DurationType:
            description: Document type value
            type: integer
            example: 1
          DurationInDays:
            description: Duration In Days value
            type: integer
            format: decimal
            example: 1
          DurationInMinutes:
            description: Duration In Minutes value
            type: integer
            example: 450
          StartTime:
            description: Start Time value
            type: Timespan
            example: '01:00'
          EndTime:
            description: End Time value
            type: Timespan
            example: '02:00'
          DurationInDaysThisPeriod:
            description: Duration In Days This Period value
            type: integer
            format: decimal
            example: 1
          DurationInMinutesThisPeriod:
            description: Duration In Minutes This Period value
            type: integer
            example: 450
          RequesterComments:
            description: Requester Comments value
            type: string
            example: abc
          ApproverComments:
            description: Approver Comments value
            type: string
            example: comments
          Approver:
            description: Approver value
            type: string
            example: Sunil Singh
          Reason:
            description: Reason value
            type: string
            example: Study Leave
          Status:
            description: Status value
            type: string
            example: Approved
          LastActionDateTime:
            description: Last Action DateTime value
            type: string
            format: datetime
            example: '2016-06-01 13:39:18'
    ErrorForgetotherevententitlement:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 5 means 'No access on Other Event schema.' <br/>

            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'The requested processed successfully.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/Result1Forgetotherevententitlement'
      x-konfig-properties:
        Result:
          description: Result value
    Result1Forgetotherevententitlement:
      description: The Result Array
      type: array
      items:
        type: object
        properties:
          ReasonName:
            description: Reason Name Value
            type: string
            example: Jury Duty
          StartDate:
            description: Start Date value
            type: string
            format: date
            example: '2017-01-01'
          EndDate:
            description: End Date value
            type: string
            format: date
            example: '2017-12-31'
          EntitlementRecordedIn:
            description: Entitlement Recorded In value
            type: string
            example: '1'
          EntitlementDurationInDays:
            description: Entitlement Duration In Days value
            type: integer
            format: decimal
            example: 10
          EntitlementDurationInMins:
            description: Entitlement Duration In Mins value
            type: integer
            example: 4500
    ErrorForDeleteOtherEvent:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Other Leave deleted successfully.'<br/>  Error
            Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key
            does not exists.' <br/>  Error Code = 4 means 'Action cannot be
            empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
            Code = 5 means 'No access on Other Event schema.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code
            = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
            'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
            means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
            means 'EmployeeId is missing.' <br/> 

            Error Code = 5 means 'Invalid json data' <br/>  Error Code = 5 means
            'OtherLeaveTxnId cannot be empty.' <br/>  Error Code = 5 means
            'OtherLeaveTxnId is invalid.' <br/>  Error Code = 5 means
            'OtherLeaveTxnId is missing.' <br/>  Error Code = 7 means 'No json
            data found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'EmployeeId does not exists.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForaddothereventleave:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Other Event Saved Successfully'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on Other Event schema.' <br/>\nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'DurationType should be DAY = 1 , Hour = 2.' <br/>  Error Code = 5 means 'DurationType cannot be empty.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DurationType is missing.' <br/> \nError Code = 5 means 'Reason Name contains invalid data.' <br/>  Error Code = 5 means 'Reason Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Reason Name cannot be empty.' <br/>  Error Code = 5 means 'Reason Name is missing.' <br/> \nError Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be empty.' <br/> Error Code = 5 means 'DurationInDay May only Contain Input Multiple of 0.25' <br/>  Error Code = 5 means 'DurationInDay Contain Invalid Data' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'StartTime contains invalid data.' <br/>  Error Code = 5 means 'StartTime cannot be empty.' <br/>  Error Code = 5 means 'StartTime is Mising' <br/> \nError Code = 5 means 'EndTime contains invalid data.' <br/>  Error Code = 5 means 'EndTime cannot be empty.' <br/> \nError Code = 5 means 'Please Check StartTime and EndTime' <br/>  Error Code = 5 means 'Invalid Input' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/> \t Error Code = 5 means 'Comment contains more than 256 characters.' <br/> Error Code = 5 means 'Comment contains more than 1024 characters.' <br/> \t\t\t\t\t\t \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/>   Error Code = 5 means 'DocumentName is missing.' <br/>  \nError Code = 5 means 'File contains invalid data.' <br/>   Error Code = 5 means 'File cannot be empty.' <br/>   Error Code = 5 means 'File is missing.' <br/>  \nError Code = 5 means 'Start date must be after employee start date.' <br/>   Error Code = 5 means 'Duration exceeds a day' <br/>   Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again' <br/>  \nError Code = 5 means 'Please check your dates include working days.' <br/>   Error Code = 5 means 'Please check this is a working day.' <br/>   Error Code = 5 means 'Duration in days cannot be zero.' <br/>  \nError Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/>   Error Code = 5 means 'Other Event Saved Successfully' <br/>   Error Code = 5 means 'Failed to Save Detail' <br/>   Error Code = 5 means 'There is InSufficient Leave Remaining' <br/>  Error Code = 5 means 'Duration Exceeds a Days' <br/> \nError Code = 5 means 'The duration entered exceeds the limit for a single booking' <br/>  Error Code = 5 means 'Other Event Saved Successfully' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t "
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForupdateothereventleave:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Other Event Updated Successfully'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on Other Event schema.' <br/> \nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'OtherEventTxnId contains invalid data.' <br/>  Error Code = 5 means 'OtherEventTxnId cannot be empty.' <br/>  Error Code = 5 means 'OtherEventTxnId is missing.' <br/> \nError Code = 5 means 'DurationType should be DAY = 1 , Hour = 2.' <br/>  Error Code = 5 means 'DurationType cannot be empty.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DurationType is missing.' <br/> \nError Code = 5 means 'Reason Name contains invalid data.' <br/>  Error Code = 5 means 'Reason Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Reason Name cannot be empty.' <br/>  Error Code = 5 means 'Reason Name is missing.' <br/> \nError Code = 5 means 'StartDate contains invalid data.' <br/>  Error Code = 5 means 'StartDate cannot be empty.' <br/>  Error Code = 5 means 'StartDate is missing.' <br/> \nError Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>  Error Code = 5 means 'StartDate should be equal to EndDate.' <br/>  Error Code = 5 means 'EndDate contains invalid data.' <br/>  Error Code = 5 means 'EndDate cannot be empty.' <br/>  Error Code = 5 means 'EndDate is missing.' <br/> \nError Code = 5 means 'DurationInDays cannot be zero.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays contains invalid data.' <br/>  Error Code = 5 means 'DurationInDays cannot be empty.' <br/> Error Code = 5 means 'DurationInDay May only Contain Input Multiple of 0.25' <br/>  Error Code = 5 means 'DurationInDay Contain Invalid Data' <br/>  Error Code = 5 means 'DurationInDays is missing.' <br/> \nError Code = 5 means 'StartTime contains invalid data.' <br/>  Error Code = 5 means 'StartTime cannot be empty.' <br/>  Error Code = 5 means 'StartTime is Mising' <br/> \nError Code = 5 means 'EndTime contains invalid data.' <br/>  Error Code = 5 means 'EndTime cannot be empty.' <br/> \nError Code = 5 means 'Please Check StartTime and EndTime' <br/>  Error Code = 5 means 'Invalid Input' <br/> \nError Code = 5 means 'Comment contains invalid data.' <br/> \t Error Code = 5 means 'Comment contains more than 1024 characters.' <br/>  Error Code = 5 means 'Comment contains more than 256 characters.' <br/> \t\t\t\t\t\t \nError Code = 5 means 'Invalid file type. File type is not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be empty.' <br/>   Error Code = 5 means 'DocumentName is missing.' <br/>  \nError Code = 5 means 'File contains invalid data.' <br/>   Error Code = 5 means 'File cannot be empty.' <br/>   Error Code = 5 means 'File is missing.' <br/>  \nError Code = 5 means 'Start date must be after employee start date.' <br/>   Error Code = 5 means 'Duration exceeds a day' <br/>   Error Code = 5 means 'There is already has an existing absence entry during the period requested. Please edit or split the entry so the dates do not coincide, then try again' <br/>  \nError Code = 5 means 'Please check your dates include working days.' <br/>   Error Code = 5 means 'Please check this is a working day.' <br/>   Error Code = 5 means 'Duration in days cannot be zero.' <br/>  \nError Code = 5 means 'Passed duration in days mismatched with calculated duration in days.' <br/>   Error Code = 5 means 'Other Event Saved Successfully' <br/>   Error Code = 5 means 'Failed to Update Detail' <br/>   Error Code = 5 means 'There is InSufficient Leave Remaining' <br/>  Error Code = 5 means 'Duration Exceeds a Days' <br/> \nError Code = 5 means 'The duration entered exceeds the limit for a single booking' <br/>  Error Code = 5 means 'Other Event Updated Successfully' <br/>  Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForaddotherevententitlement:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Other Event Entitlement Saved Successfully'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'No access on Other Event schema.' <br/> \nError Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'Reason Name contains invalid data.' <br/>  Error Code = 5 means 'Reason Name contains more than 100 characters.' <br/>  Error Code = 5 means 'Reason Name cannot be empty.' <br/>  Error Code = 5 means 'Reason Name is missing.' <br/> \nError Code = 5 means 'ThisYearEntitlement contains more than 4 characters.' <br/>  Error Code = 5 means 'ThisYearEntitlement cannot be empty.' <br/>  Error Code = 5 means 'ThisYearEntitlement Contain Invalid Data' <br/>  Error Code = 5 means 'ThisYearEntitlement is missing.' <br/>\nError Code = 5 means 'NextYearEntitlement contains more than 4 characters.' <br/>  Error Code = 5 means 'NextYearEntitlement cannot be empty.' <br/>  Error Code = 5 means 'NextYearEntitlement Contain Invalid Data' <br/>  Error Code = 5 means 'NextYearEntitlement is missing.' <br/>\nError Code = 5 means 'Entitlement RecordedIn contains invalid data.' <br/>  Error Code = 5 means 'Entitlement RecordedIn cannot be empty.' <br/>  Error Code = 5 means 'Entitlement Can be RecordedIn Days(1) or In Hours(2).' <br/>  Error Code = 5 means 'Entitlement Contain Invalid Data' <br/>  Error Code = 5 means 'Entitlement RecordedIn is missing.' <br/> \nError Code = 5 means 'Other Event Entitlement Fail to Saved Detail' <br/>  Error Code = 5 means 'Other Event Entitlement Saved Successfully' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t "
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForCreateNewApplicant:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Applicant details inserted successfully.'<br/> \nError Code = 2 means 'Invalid API Key.'<br/>\nError Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Vacancy Reference not exist.'<br/>\t Error Code = 5 means 'API key does not exists.' <br/> \nError Code = 5 means 'VacancyReference contains invalid data.' <br/>  Error Code = 5 means 'VacancyReference contains contains more than 100 characters.' <br/> Error Code = 5 means 'VacancyReference is missing.' <br/>\nError Code = 5 means 'FirstName contains invalid data.' <br/>  Error Code = 5 means 'FirstName contains contains more than 50 characters.' <br/> Error Code = 5 means 'FirstName cannot be empty.' <br/> Error Code = 5 means 'FirstName is missing.' <br/>\nError Code = 5 means 'LastName contains invalid data.' <br/>  Error Code = 5 means 'LastName contains contains more than 50 characters.' <br/> Error Code = 5 means 'LastName cannot be empty.' <br/> Error Code = 5 means 'LastName is missing.' <br/>\nError Code = 5 means 'Email contains invalid data.' <br/>  Error Code = 5 means 'Email contains contains more than 320 characters.' <br/>\nError Code = 5 means 'Gender contains invalid data.' <br/> \nError Code = 5 means 'DateOfBirth contains invalid data.' <br/> \nError Code = 5 means 'PostCode contains invalid data.' <br/>  Error Code = 5 means 'PostCode contains contains more than 20 characters.' <br/>\nError Code = 5 means 'Address contains invalid data.' <br/>  Error Code = 5 means 'Address contains contains more than 512 characters.' <br/>\nError Code = 5 means 'PhoneNumber contains invalid data' <br/> Error Code = 5 means 'PhoneNumber contains more than 80 characters.' <br/>\nError Code = 5 means 'OtherContactDetails contains invalid data.' <br/>  Error Code = 5 means 'OtherContactDetails contains contains more than 1024 characters.' <br/>\nError Code = 5 means 'Source contains invalid data.' <br/>  Error Code = 5 means 'Source contains contains more than 100 characters.' <br/>\nError Code = 5 means 'RecruitmentCost contains invalid data.' <br/> \nError Code = 5 means 'DateLastContacted contains invalid data.' <br/> \nError Code = 5 means 'Addional Question QuestionId  is not exist.' <br/> Error Code = 5 means 'Addional Question - QuestionId is not valid.' <br/> Error Code = 5 means 'Addional Question - QuestionId is missing.' <br/>\nError Code = 5 means 'Internal Question - Multiple records for QuestionId' <br/> Error Code = 5 means 'Internal Question - QuestionId is not valid.' <br/> Error Code = 5 means 'Internal Question - QuestionId is missing.' <br/> Error Code = 5 means 'Internal Questions - Value for QuestionId should not be empty.' <br/>\nError Code = 5 means 'Internal Questions - Value for QuestionId is not a valid. Allowed only numbers.' <br/> Error Code = 5 means 'Internal Questions - Value for QuestionId  questionId is missing.' <br/>\nError Code = 5 means 'Vacancy Reference not exist.' <br/>\nError Code = 5 means 'DocumentName contains invalid data.' <br/>  Error Code = 5 means 'DocumentName contains contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentName cannot be empty.' <br/>\nError Code = 5 means 'Documents - Url contains invalid data.' <br/>  Error Code = 5 means 'Documents - Url contains contains more than 256 characters.' <br/> Error Code = 5 means 'Documents - Url cannot be empty.' <br/> Error Code = 5 means 'Documents - Url contains invalid data.' <br/>   Error Code = 5 means 'Documents - Url is missing.' <br/> Error Code = 5 means 'No access on ATS schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultCreateNewApplicant'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForuploadapplicantdocument:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Applicant document upload successfully'<br/> 

            Error Code = 2 means 'Invalid API Key.'<br/>

            Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
            means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not
            exists.' <br/> 

            Error Code = 5 means 'ApplicantId does not exists.' <br/>  Error
            Code = 5 means 'ApplicantId contains contains more than 15
            characters.' <br/> Error Code = 5 means 'ApplicantId contains
            invalid data.' <br/> Error Code = 5 means 'ApplicantId cannot be
            empty.' <br/> Error Code = 5 means 'Invalid ApplicantId.' <br/>

            Error Code = 5 means 'Invalid file type. File type fileExtension is
            not supported.' <br/>  Error Code = 5 means 'DocumentName cannot be
            empty.' <br/> Error Code = 5 means 'DocumentName is missing.' <br/>

            Error Code = 5 means 'Description contains invalid data.' <br/> 
            Error Code = 5 means 'Description contains contains more than 256
            characters.' <br/>

            Error Code = 5 means 'File contains invalid data' <br/>  Error Code
            = 5 means 'File is Missing.' <br/> Error Code = 5 means 'File cannot
            be empty.' <br/>

            Error Code = 5 means 'No access on ATS schema.'<br/>

            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 6 means 'Unknown error occured.' <br/>

            Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetLateByEmployeeId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'The request processed successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/>\nError Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'API key does not exists.' <br/> \nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'StartDate field contains invalid data.' <br/> \nError Code = 5 means 'EndDate field contains invalid data.' <br/> \nError Code = 5 means 'StartDate should be before or equal to EndDate.' <br/>\nError Code = 5 means 'No access on late schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetLateByEmployeeId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewLate:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'Late record updated successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\n\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'LateDate field contains invalid data.' <br/>  Error Code = 5 means 'LateDate field cannot be Empty.' <br/>  Error Code = 5 means 'LateDate is missing.' <br/>  Error Code = 5 means 'There is no late entry during the period requested.' <br/> \nError Code = 5 means 'HowLate field contains invalid data.' <br/>  Error Code = 5 means 'HowLate field cannot be Empty.' <br/>  Error Code = 5 means 'HowLate is missing.' <br/> \nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/>  Error Code = 5 means 'Comments cannot be Empty.' <br/>\n\nError Code = 5 means 'Late date must be after employee start date.' <br/> \nError Code = 5 means 'No access on late schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpadteLate:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'Late record added successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'LateDate field contains invalid data.' <br/>  Error Code = 5 means 'LateDate field cannot be Empty.' <br/>  Error Code = 5 means 'LateDate is missing.' <br/> \nError Code = 5 means 'HowLate field contains invalid data.' <br/>  Error Code = 5 means 'HowLate field cannot be Empty.' <br/>  Error Code = 5 means 'HowLate is missing.' <br/> \nError Code = 5 means 'Comments contains invalid data.' <br/>  Error Code = 5 means 'Comments contains more than 256 characters.' <br/>  Error Code = 5 means 'Comments cannot be Empty.' <br/>\nError Code = 5 means 'Late date must be after employee start date.' <br/>  Error Code = 5 means 'There is already has an existing late entry during the period requested.' <br/> \nError Code = 5 means 'No access on late schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorFordeletelate:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'Late detail deleted successfully.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/>\nError Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> \nError Code = 5 means 'LateDate field contains invalid data.' <br/>  Error Code = 5 means 'LateDate field cannot be Empty.' <br/>  Error Code = 5 means 'LateDate is missing.' <br/> \nError Code = 5 means 'No access on late schema.'<br/> Error Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'<br/>"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForCheckDuplicateApplicant:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 5 means 'Vacancy Reference not exist.'<br/>\t Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\nError Code = 5 means 'VacancyReference contains invalid data.' <br/>  Error Code = 5 means 'VacancyReference contains contains more than 100 characters.' <br/> Error Code = 5 means 'VacancyReference is missing.' <br/> Error Code = 5 means 'Vacancy Reference not exist.' <br/>\nError Code = 5 means 'FirstName contains invalid data.' <br/>  Error Code = 5 means 'FirstName contains contains more than 50 characters.' <br/> Error Code = 5 means 'FirstName cannot be empty.' <br/> Error Code = 5 means 'FirstName is missing.' <br/>\nError Code = 5 means 'LastName contains invalid data.' <br/>  Error Code = 5 means 'LastName contains contains more than 50 characters.' <br/> Error Code = 5 means 'LastName cannot be empty.' <br/> Error Code = 5 means 'LastName is missing.' <br/>\nError Code = 5 means 'Email contains invalid data.' <br/>  Error Code = 5 means 'Email contains contains more than 320 characters.' <br/> Error Code = 5 means 'No access on ATS schema.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.' <br/>\nError Code = 7 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultCheckDuplicateApplicant'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForWorkPattern:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >2-
             Error Code = 0 means 'The request processed successfully.'<br/> Error Code = 0 means 'No Record Found.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'WorkPatternName contains invalid data.' <br/> 
            Error Code = 5 means 'WorkPatternName contains contains more than
            100 characters.' <br/> Error Code = 5 means 'No access on employee
            schema.'<br/> Error Code = 5 means 'Invalid Work Pattern Id.' <br/>

            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 6 means 'Unknown error occured.' <br/> Error Code = 7 means 'No
            json data found.'<br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultWorkPatternApplicant'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForEmployeeAppraisalGetEmployeeById:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: ' Error Code = 0 means ''The requested processed successfully.''<br/> Error Code = 5 means ''API key does not exists.'' <br/>  Error Code = 2 means ''Invalid API Key''<br/> Error Code = 4 means ''Action cannot be empty''<br/> Error Code = 4 means ''Invalid Action''<br/> Error Code = 5 means ''EmployeeId does not exists''<br/> Error Code = 5 means ''EmployeeId cannot be empty.''<br/> Error Code = 5 means ''EmployeeId is missing.''<br/> Error Code = 5 means ''EmployeeId contains invalid data.''<br/> Error Code = 5 means ''EmployeeId contains more than 15 characters.''<br/> Error Code = 5 means ''StartDate contains invalid data.''<br/> Error Code = 5 means ''StartDate should be before or equal to EndDate''<br/> Error Code = 5 means ''EndDate contains invalid data.''<br/>  Error Code = 7 means ''No json data found.'' <br/> Error Code = 8 means ''Either empty or no Form Data.''<br/> Error Code = 9 means ''Invalid json data.''<br/> Error Code = 10 means ''No detail has been found''<br/> '
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/GetEmployeeByIdArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetByAppraisalId:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: ' Error Code = 0 means ''The requested processed successfully.''<br/>  Error Code = 5 means ''API key does not exists.'' <br/>  Error Code = 2 means ''Invalid API Key''<br/> Error Code = 4 means ''Action cannot be empty''<br/> Error Code = 4 means ''Invalid Action''<br/> Error Code = 5 means ''EmployeeId does not exists''<br/> Error Code = 5 means ''EmployeeId cannot be empty.''<br/> Error Code = 5 means ''EmployeeId is missing.''<br/> Error Code = 5 means ''EmployeeId contains invalid data.''<br/> Error Code = 5 means ''EmployeeId contains more than 15 characters.''<br/> Error Code = 5 means ''AppraisalId cannot be empty.''<br/> Error Code = 5 means ''Appraisal Id is missing.'' <br/>  Error Code = 5 means ''Appraisal Id is invalid.'' <br/>  Error Code = 7 means ''No json data found.'' <br/> Error Code = 8 means ''Either empty or no Form Data.''<br/> Error Code = 9 means ''Invalid json data.''<br/> Error Code = 10 means ''No Record Found''<br/> '
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetByAppraisalIdObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewAppraisal:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'Appraisal record added successfully.'<br/> Error Code = 5 means 'API key does not exists.' <br/> \t\t\t\t   Error Code = 2 means 'Invalid API Key'<br/> Error Code = 4 means 'Action cannot be empty'<br/> Error Code = 4 means 'Invalid Action'<br/>\nError Code = 5 means 'EmployeeId does not exists'<br/>\t\t\t\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t   Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\t\t\t\t\t   Error Code = 5 means 'EmployeeId cannot be empty.'<br/>\t\nError Code = 5 means 'Reviewer email contains invalid data.'<br/>\t\t Error Code = 5 means 'Reviewer email contains more than 254 characters.'<br/> Error Code = 5 means 'Reviewer does not exists for this company.' <br/> \t\nError Code = 5 means 'Appraisal Review Date is missing.' <br/> \t\t\t\t\t   Error Code = 5 means 'Appraisal Review Date cannot be Empty.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Appraisal Review Date contains invalid data.' <br/>  Error Code = 5 means 'Reviewer is missing.' <br/> \t\nError Code = 5 means 'Notes contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Notes contains more than 1024 characters.' <br/>\nError Code = 5 means 'objectives  contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'objectives contains more than 1024 characters.' <br/> \nError Code = 5 means 'ActionPlan contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'ActionPlan contains more than 1024 characters.' <br/> \nError Code = 5 means 'Custom column with column name not exists.' <br/>\t\t Error Code = 5 means 'Custom column name should not be empty.' <br/>\t\t\t\t\t   Error Code = 5 means 'ColumnName is missing'<br/>\t\t\t\t\t\t\t   Error Code = 5 means 'ColumnName column already addded.'<br/> Error Code = 5 means 'ColumnName column does not exists on screen.'<br/>\t\t\t\t\t\t  \t\t\t\t\t   Error Code = 5 means 'ColumnValue is missing'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'DocumentName is missing'<br/>\t\t\t\t\t   Error Code = 5 means 'File contains invalid data.'<br/>\t\t\t\t\t   Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'Invalid file type.File type is not supported.'<br/>\nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'Document Category is missing.'<br/>\t Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Category cannot be empty.'<br/> Error Code = 5 means 'Document Category contains more than 100 characters.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/>\t\nError Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/>\t\t\t\t\t  \t\t\t\t\t   Error Code = 5 means 'SignatureRequired cannot be empty.'<br/>\t\t\t\t\t\t   Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 5 means 'One or more mandatory fields are missing'<br/>\nError Code = 6 means 'Oops! Something went wrong.'<br/>\t Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t   Error Code = 10 means'No record found.'<br/> Error Code = 10 means 'No detail has been found.'<br/>\t\t\t\t\t\t   Error Code = 10 means 'No Json data found.'<br/>"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateAppraisal:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'Appraisal record updated successfully.'<br/> \t   Error Code = 5 means 'API key does not exists.' <br/> \t\t\t\t\t  Error Code = 4 means 'Action cannot be empty.' <br/>  Error Code = 4 means 'Invalid Action'<br/>\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/>\nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description cannot be empty.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'Appraisal Id is missing.' <br/>  Error Code = 5 means 'Appraisal Id cannot be empty.' <br/> \nError Code = 5 means 'Appraisal Review Date is missing.' <br/>  Error Code = 5 means 'Appraisal Review Date cannot be Empty.' <br/>  Error Code = 5 means 'Appraisal Review Date contains invalid data.' <br/> \nError Code = 5 means 'Reviewer does not exists for this company.' <br/> Error Code = 5 means 'Reviewer email contains invalid data.'<br/>\t\t Error Code = 5 means 'Reviewer email contains more than 254 characters.'<br/>\t\t\nError Code = 5 means 'ColumnName is missing'<br/>\t Error Code = 5 means 'ColumnName  does not exists on the screen.'<br/>\nError Code = 5 means 'Notes contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Notes cannot be empty.' <br/>  Error Code = 5 means 'Notes contains more than 1024 characters.' <br/>\nError Code = 5 means 'objectives  contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'objectives cannot be empty.' <br/> Error Code = 5 means 'objectives contains more than 1024 characters.' <br/> \nError Code = 5 means 'ActionPlan contains invalid data.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'ActionPlan cannot be empty.' <br/>  Error Code = 5 means 'ActionPlan contains more than 1024 characters.' <br/> \nError Code = 5 means 'Custom column name should not be empty.' <br/>\t\t\t\t\t   Error Code = 5 means 'ColumnName is missing'<br/>\t\t\t\t\t\t   Error Code = 5 means 'Custom column name  already addded.'<br/> Error Code = 5 means 'Custom column name  does not exists on screen.'<br/>\t\nError Code = 5 means 'ColumnValue is missing'<br/>\t\t Error Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'DocumentName is missing'<br/>\t Error Code = 5 means 'Document Category is missing.'<br/>\t Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Category cannot be empty.'<br/> Error Code = 5 means 'Document Category contains more than 100 characters.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/>\t\nError Code = 5 means 'File contains invalid data.'<br/>\t\t\t\t\t   Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'File contains invalid data.' <br/> \nError Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/>\t\t\t\t\t \t\t   Error Code = 5 means 'SignatureRequired cannot be empty.'<br/>\t\t\t\t   Error Code = 5 means 'Signature Required is missing.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code = 6 means 'No record found.' <br/>\nError Code = 6 means 'Invalid json data.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t Error Code = 10 means 'No detail has been found.'<br/>\t"
          type: integer
          minimum: 0
          maximum: 6
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteAppraisal:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'Appraisal record deleted successfully.'<br/>  Error Code = 5 means 'API key does not exists.' <br/> \t  Error Code = 4 means 'Action cannot be empty.' <br/> \t Error Code = 4 means 'Invalid Action'<br/>\t\nError Code = 5 means 'EmployeeId cannot be empty.' <br/>     Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId is missing.' <br/>\nError Code = 5 means 'Appraisal Id is missing.' <br/> \t\t\t\t\t\t   Error Code = 5 means 'Pending authorization request exists in system for passed appraisal id.' <br/> \t Error Code = 5 means 'Appraisal id cannot be empty'<br/> Error Code = 5 means 'Appraisal Id is invalid'<br/>\nError Code = 5 means 'EmployeeId does not exists'<br/>\t\t   Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>   Error Code = 10 means 'No record found.'<br/>  Error Code = 10 means 'No Json data found.'<br/> "
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForAddNewDrivingLicense:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Driving Licence record added successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'License Number contains invalid data.'<br/> Error Code = 5 means 'License Number contains more than 50 characters.'<br/> Error Code = 5 means 'License Number is missing.'<br/> Error Code = 5 means 'License Type contains invalid data.'<br/> Error Code = 5 means 'License Type contains more than 100 characters.'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Comments contains invalid data.'<br/> Error Code = 5 means 'Comments contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName column already addded.'<br/> Error Code = 5 means 'customColumnName column does not exists on screen'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateDrivingLicense:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Driving Licence record updated successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'No record found.'<br/> Error Code = 5 means 'Pending authorization request exists in system for passed Driving id.'<br/> Error Code = 5 means 'DrivingId is invalid'<br/> Error Code = 5 means 'valid DrivingId Cannot be Empty'<br/> Error Code = 5 means 'driving Id is missing.'<br/> Error Code = 5 means 'License Number contains invalid data.'<br/> Error Code = 5 means 'License Number contains more than 50 characters.'<br/> Error Code = 5 means 'License Number is missing.'<br/> Error Code = 5 means 'License Number is missing.'<br/> Error Code = 5 means 'License Type contains invalid data.'<br/> Error Code = 5 means 'License Type contains more than 100 characters.'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Comments contains invalid data.'<br/> Error Code = 5 means 'Comments contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName column already addded.'<br/> Error Code = 5 means 'customColumnName column does not exists on screen'<br/>\t\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetDrivingLicenseByEmployeeId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/>
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means
            'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid
            Action.' <br/> Error Code = 5 means 'API key does not exists.'
            <br/>  Error Code = 5 means 'EmployeeId contains invalid data.'<br/>
            Error Code = 5 means 'EmployeeId contains more than 15
            characters.'<br/> Error Code = 5 means 'EmployeeId cannot be
            empty.'<br/> Error Code = 6 means 'Oops! Something went wrong.'
            <br/> Error Code = 5 means 'EmployeeId does not exists.'<br/> Error
            Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 7 means
            'No json data found.' <br/> Error Code = 8 means 'Either empty or no
            Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
            Error Code = 10 means 'No detail has been found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetDrivingLicenseByEmployeeId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetDrivingLicenseByDrivingId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/>
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means
            'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid
            Action.' <br/> Error Code = 5 means 'API key does not exists.'
            <br/>  Error Code = 5 means 'EmployeeId does not exists.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5
            means 'EmployeeId is missing.'<br/> Error Code = 5 means 'DrivingId
            is invalid'<br/> Error Code = 5 means 'DrivingId cannot be
            empty.'<br/> Error Code = 5 means 'Driving Id is missing.'<br/>
            Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code
            = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either
            empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetDrivingLicenseByDrivingIdObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForDeleteDrivingLicense:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Driving Licence record deleted
            successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/>
            Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4
            means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not
            exists.' <br/>  Error Code = 5 means 'EmployeeId does not
            exists.'<br/> Error Code = 5 means 'EmployeeId contains invalid
            data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15
            characters.'<br/> Error Code = 5 means 'EmployeeId cannot be
            empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/>
            Error Code = 5 means 'DrivingId is invalid'<br/> Error Code = 5
            means 'DrivingId cannot be empty.'<br/> Error Code = 5 means
            'Driving Id is missing.'<br/> Error Code = 6 means 'Oops! Something
            went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
            has been found.'<br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetQualificationByEmployeeId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means
            'Action is missing.' <br/> Error Code = 4 means 'Action cannot be
            empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
            Code = 5 means 'API key does not exists.' <br/>  Error Code = 5
            means 'EmployeeId does not exists.'<br/> Error Code = 5 means
            'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId
            contains more than 15 characters.'<br/> Error Code = 5 means
            'EmployeeId contains invalid data.' <br/>  Error Code = 5 means
            'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/> Error Code = 6 means 'Oops! Something
            went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
            has been found.' <br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetQualificationByEmployeeId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetQualificationByQualificationId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means
            'Action is missing.' <br/> Error Code = 4 means 'Action cannot be
            empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
            Code = 5 means 'API key does not exists.' <br/>  Error Code = 5
            means 'EmployeeId cannot be empty.'<br/> Error code = 5 means
            'EmployeeId contains more than 15 characters.'<br/> Error Code = 5
            means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
            means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/> Error Code = 5 means 'QualificationId
            is invalid' <br/> Error Code = 5 means 'QualificationId cannot be
            empty.' <br/> Error Code = 5 means 'Qualification Id is missing.'
            <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error
            Code = 7 means 'No json data found.' <br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No detail has been found.'
            <br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: >-
            #/components/schemas/ResultForGetQualificationByQualificationIdObject
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewQualification:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'qualification inserted successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'Qualification contains invalid data.'<br/> Error Code = 5 means 'Qualification contains more than 100 characters.'<br/> Error Code = 5 means 'Qualification is missing.'<br/> Error Code = 5 means 'Subject contains invalid data.'<br/> Error Code = 5 means 'Subject contains more than 100 characters.'<br/> Error Code = 5 means 'DatePassed field contains invalid data'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Custom column name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'Custom column name is missing.'<br/> Error Code = 5 means 'Custom column name already addded.'<br/> Error Code = 5 means 'Custom column name does not exists on screen'<br/> Error Code = 5 means 'Column Value is missing.'<br/> Error Code = 5 means 'Column Value contains invalid data'<br/> Error Code = 5 means 'Column Value contains more than 100 characters.'<br/> Error Code = 5 means 'Column Value field contains invalid data'<br/> Error Code = 5 means 'Column Value is mandatory'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 256 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateQualification:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Qualification record updated successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'qualification Id is missing.'<br/> Error Code = 5 means 'Pending authorization request exists in system for passed Qualification id.'<br/> Error Code = 5 means 'QualificationId is invalid'<br/> Error Code = 5 means 'valid QualificationId Cannot be Empty'<br/> Error Code = 5 means 'Qualification contains invalid data.'<br/> Error Code = 5 means 'Qualification contains more than 100 characters.'<br/> Error Code = 5 means 'Qualification is missing.'<br/> Error Code = 5 means 'Subject contains invalid data.'<br/> Error Code = 5 means 'Subject contains more than 100 characters.'<br/> Error Code = 5 means 'DatePassed field contains invalid data'<br/> Error Code = 5 means 'Expiry Date field contains invalid data'<br/> Error Code = 5 means 'Custom column name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'Custom column name is missing.'<br/> Error Code = 5 means 'Custom column name already addded.'<br/> Error Code = 5 means 'Custom column name does not exists on screen'<br/> Error Code = 5 means 'Column Value is missing.'<br/> Error Code = 5 means 'Column Value contains invalid data'<br/> Error Code = 5 means 'Column Value contains more than 100 characters.'<br/> Error Code = 5 means 'Column Value field contains invalid data'<br/> Error Code = 5 means 'Column Value is mandatory'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 256 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteQualification:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Qualification record deleted successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'Pending authorization request exists in system for passed Qualification id.'<br/> Error Code = 5 means 'QualificationId is invalid'<br/> Error Code = 5 means 'valid QualificationId Cannot be Empty'<br/> Error Code = 5 means 'Qualification Id is missing.'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetTrainingDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means
            'Action is missing.' <br/> Error Code = 4 means 'Action cannot be
            empty.' <br/> Error Code = 5 means 'API key does not exists.' <br/> 
            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/> Error Code = 6 means 'Oops! Something
            went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
            has been found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetTrainingDetail'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddTrainingDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Training detail inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is missing.' <br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId does not exists.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.'<br/> Error Code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5\tmeans 'TrainingType contains invalid data.'<br/> Error Code = 5\tmeans 'TrainingType contains more than 100 characters.'<br/> Error Code = 5\tmeans 'TrainingType cannot be empty.'<br/> Error Code = 5\tmeans 'TrainingType is missing.'<br/> Error Code = 5\tmeans 'Description contains invalid data.'<br/> Error Code = 5\tmeans 'Description contains more than 512 characters.'<br/> Error Code = 5\tmeans 'Description cannot be empty.'<br/> Error Code = 5\tmeans 'Invalid!!!! Importance value 1 : Mandatory and 2 : Optional'<br/> Error Code = 5\tmeans 'Importance contains invalid data.'<br/> Error Code = 5\tmeans 'Importance cannot be empty.'<br/> Error Code = 5\tmeans 'Importance field value is missing.'<br/> Error Code = 5\tmeans 'Status detail is not valid'<br/> Error Code = 5 means 'Status contains invalid data.'<br/> Error Code = 5 means 'Status cannot be empty.'<br/> Error Code = 5 means 'Status field value is missing.'<br/> Error Code = 5 means 'InProgress values should be multiple of 10 and less than 100'<br/> Error Code = 5 means 'InProgress contains invalid data.'<br/> Error Code = 5 means 'InProgress cannot be empty.'<br/> Error Code = 5 means 'TrainingDate field contains invalid data'<br/> Error Code = 5 means 'TrainindEndDate field contains invalid data'<br/> Error Code = 5 means 'TrainingExpiryDate field contains invalid data'<br/> Error Code = 5 means 'Cost contains invalid data.'<br/> Error Code = 5\tmeans 'Provider contains invalid data.'<br/> Error Code = 5\tmeans 'Provider contains more than 256 characters.'<br/> Error Code = 5\tmeans 'Note contains invalid data.'<br/> Error Code = 5\tmeans 'Note contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName  already addded.'<br/> Error Code = 5 means 'customColumnName  does not exists on screen'<br/>\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5\tmeans 'One or more custom fields are mandatory'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateTrainingDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Training detail updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 3 means 'Action is missing.' <br/> Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/> Error Code = 5 means 'Pending authorization request exists in system for passed vehicle id.'<br/> Error Code = 5 means 'TrainingDetailId is invalid'<br/> Error Code = 5 means 'TrainingDetailId Cannot be Empty'<br/> Error Code = 5 means 'Training Id is missing.'<br/> Error Code = 5 means 'TrainingType contains invalid data.'<br/> Error Code = 5 means 'TrainingType cannot be empty.'<br/> Error Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 512 characters.'<br/> Error Code = 5 means 'Description cannot be empty.'<br/> Error Code = 5 means 'Invalid!!!! Importance value 1 : Mandatory and 2 : Optional\t'<br/> Error Code = 5 means 'Importance contains invalid data.'<br/> Error Code = 5 means 'Importance cannot be empty.'<br/> Error Code = 5 means 'Status detail is not valid'<br/> Error Code = 5 means 'Status contains invalid data'<br/> Error Code = 5 means 'Status cannot be empty.'<br/> Error Code = 5 means 'TrainingDate field contains invalid data'<br/> Error Code = 5 means 'TrainindEndDate field contains invalid data'<br/> Error Code = 5 means 'TrainingExpiryDate field contains invalid data'<br/> Error Code = 5 means 'Progress values should be multiple of 10 and less than 100 .'<br/> Error Code = 5 means 'Progress contains invalid data.'<br/> Error Code = 5 means 'Progress cannot be empty.'<br/> Error Code = 5 means 'Cost contains invalid data.'<br/> Error Code = 5 means 'Provider contains invalid data.'<br/> Error Code = 5 means 'Provider contains more than 256 characters.'<br/> Error Code = 5 means 'Note contains invalid data.'<br/> Error Code = 5 means 'Note contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column with name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName is missing.'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'ColumnName contains invalid data'<br/> Error Code = 5 means 'ColumnName contains more than characters.'<br/>\t Error Code = 5\tmeans 'ColumnName field contains invalid data'<br/> Error Code = 5\tmeans 'ColumnName is mandatory'<br/> Error Code = 5 means 'CustomColumnName column already addded.'<br/> Error Code = 5 means 'customColumnName column does not exists on screen'<br/>\t\nError Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5\tmeans 'One or more mandatory fields are missing'<br/> Error Code = 5\tmeans 'One or more custom fields are mandatory'<br/> Error Code = 5 means 'File type is not supported'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'DocumentName is missing.'<br/> Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'File is missing.'<br/> Error Code = 5 means 'Comment contains invalid data.'<br/> Error Code = 5 means 'Comment contains more than 1024 characters.'<br/> Error Code = 5 means 'DocumentCategory contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentCategory cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory is missing.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 6 means 'Unknown error occured.'<br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorFordeletetrainingdetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Training detail deleted successfully.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action cannot be empty.' <br/>\t Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'API key does not exists.'<br/> Error Code = 5 means 'EmployeeId is missing.'<br/> Error Code = 5 means 'EmployeeId cannot be empty'.<br/> Error Code = 5 means 'EmployeeId does not exists.'<br/>\t Error Code = 5 means 'EmployeeId contains invalid data.'<br/>\t\t\t\t\t\t\t  Error Code = 5 means 'EmployeeId contains more than 15 characters'.<br/> Error Code = 5 means 'Pending authorization request exists in system for passed vehicle id.'<br/> Error Code = 5 means 'TrainingDetailId is invalid'<br/> Error Code = 5 means 'TrainingDetailId Cannot be Empty'<br/> Error Code = 6 means 'No record found.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForAddNewVehicleDetail:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Vehicle record added successfully'

            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
            means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'Registration is missing.' <br/> Error Code = 5
            means 'Registration cannot be empty.' <br/> Error Code = 5 means
            'Registration contains invalid data.' <br/> Error Code = 5 means
            'Registration contains more than 100 characters.' <br/>

            Error Code = 5 means 'Make contains invalid data.' <br/> Error Code
            = 5 means 'Make contains more than 100 characters.' <br/>

            Error Code = 5 means 'Model contains invalid data.' <br/> Error Code
            = 5 means 'Model contains more than 100 characters.' <br/>

            Error Code = 5 means 'Colour contains invalid data.' <br/> Error
            Code = 5 means 'Colour contains more than 50 characters.' <br/>

            Error Code = 5 means 'EngineSize contains invalid data.' <br/> Error
            Code = 5 means 'EngineSize contains more than 50 characters.' <br/>

            Error Code = 5 means 'FuelType contains invalid data.' <br/> Error
            Code = 5 means 'FuelType contains more than 50 characters.' <br/>

            Error Code = 5 means 'InsuranceCompany contains invalid data.' <br/>
            Error Code = 5 means 'InsuranceCompany contains more than 100
            characters.' <br/>

            Error Code = 5 means 'PolicyNumber contains invalid data.' <br/>
            Error Code = 5 means 'PolicyNumber contains more than 100
            characters.' <br/>

            Error Code = 5 means 'MOTExpiryDate field contains invalid data.'
            <br/>

            Error Code = 5 means 'InsuranceExpiryDate field contains invalid
            data.' <br/> Error Code = 5 means 'InsuranceExpiryDate field cannot
            be empty.' <br/>

            Error Code = 5 means 'Comments contains invalid data.' <br/> Error
            Code = 5 means 'Comments contains more than 256 characters.' <br/>

            Error Code = 5 means 'Custom column name not exists.' <br/> Error
            Code = 5 means 'Custom column name should not be empty.' <br/> Error
            Code = 5 means 'ColumnName is missing.' <br/> Error Code = 5 means
            'ColumnValue is missing.' <br/> Error Code = 5 means 'Custom  column
            name contains invalid data.' <br/> Error Code = 5 means 'Custom
            column already added.' <br/> Error Code = 5 means 'Custom column
            does not exists on screen.' <br/>

            Error Code = 5 means 'Custom column name contains more than 100
            characters.'<br/>

            Error Code = 5 means 'One or more mandatory fields are missing.'
            <br/> Error Code = 5 means 'One or more custom fields are
            mandatory.' <br/>

            Error Code = 5 means 'Invalid file type. This file type is not
            supported.' <br/> Error Code = 5 means 'DocumentName cannot be
            empty.' <br/> Error Code = 5 means 'Document Name contains more than
            100 characters.' <br/> Error Code = 5 means 'Document Name is
            missing.' <br/>


            Error Code = 5 means 'File contains invalid data.' <br/> Error Code
            = 5 means 'File is missing.' <br/>

            Error Code = 5 means 'Description contains invalid data.' <br/>
            Error Code = 5 means 'Description contains more than 256
            characters.' <br/>


            Error Code = 5 means 'Document Category is missing.' <br/> Error
            Code = 5 means 'Document Category contains invalid data.' <br/>
            Error Code = 5 means 'Document Category contains more than 100
            characters.' <br/> Error Code = 5 means 'Document Category cannot be
            empty.' <br/>

            Error Code = 5 means 'Signature Required is missing.' <br/> Error
            Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code
            = 5 means 'SignatureRequired Can only Contain True Or False.' <br/>

            Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code =
            6 means 'No record found.' <br/> Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateVehicleDetail:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Vehicle record updated successfully.'

            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
            means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'Registration is missing.' <br/> Error Code = 5
            means 'Registration cannot be empty.' <br/> Error Code = 5 means
            'Registration contains invalid data.' <br/> Error Code = 5 means
            'Registration contains more than 100 characters.' <br/>

            Error Code = 5 means 'Make contains invalid data.' <br/> Error Code
            = 5 means 'Make contains more than 100 characters.' <br/>

            Error Code = 5 means 'Model contains invalid data.' <br/> Error Code
            = 5 means 'Model contains more than 100 characters.' <br/>

            Error Code = 5 means 'Colour contains invalid data.' <br/> Error
            Code = 5 means 'Colour contains more than 50 characters.' <br/>

            Error Code = 5 means 'EngineSize contains invalid data.' <br/> Error
            Code = 5 means 'EngineSize contains more than 50 characters.' <br/>

            Error Code = 5 means 'FuelType contains invalid data.' <br/> Error
            Code = 5 means 'FuelType contains more than 50 characters.' <br/>

            Error Code = 5 means 'InsuranceCompany contains invalid data.' <br/>
            Error Code = 5 means 'InsuranceCompany contains more than 100
            characters.' <br/>

            Error Code = 5 means 'PolicyNumber contains invalid data.' <br/>
            Error Code = 5 means 'PolicyNumber contains more than 100
            characters.' <br/>

            Error Code = 5 means 'MOTExpiryDate field contains invalid data.'
            <br/>

            Error Code = 5 means 'InsuranceExpiryDate field contains invalid
            data.' <br/> Error Code = 5 means 'InsuranceExpiryDate field cannot
            be empty.' <br/>

            Error Code = 5 means 'Comments contains invalid data.' <br/> Error
            Code = 5 means 'Comments contains more than 256 characters.' <br/>

            Error Code = 5 means 'This Custom column name not exists.' <br/>
            Error Code = 5 means 'Custom column name should not be empty.' <br/>
            Error Code = 5 means 'ColumnName is missing.' <br/> Error Code = 5
            means 'ColumnValue is missing.' <br/> Error Code = 5 means 'Custom
            column name contains invalid data.' <br/> Error Code = 5 means
            'Custom column already added.' <br/> Error Code = 5 means 'Custom
            column does not exists on screen.' <br/> Error Code = 5 means 'One
            or more mandatory fields are missing.' <br/> Error Code = 5 means
            'One or more custom fields are mandatory.' <br/>

            Error Code = 5 means 'Custom column name contains more than 100
            characters.'<br/>

            Error Code = 5 means 'Invalid file type. This file type is not
            supported.' <br/> Error Code = 5 means 'DocumentName cannot be
            empty.' <br/> Error Code = 5 means 'Document Name contains more than
            100 characters.' <br/> Error Code = 5 means 'Document Name is
            missing.' <br/>

            Error Code = 5 means 'File contains invalid data.' <br/> Error Code
            = 5 means 'File is missing.' <br/>

            Error Code = 5 means 'Description contains invalid data.' <br/>
            Error Code = 5 means 'Description contains more than 256
            characters.' <br/>

            Error Code = 5 means 'Document Category is missing.' <br/> Error
            Code = 5 means 'Document Category contains invalid data.' <br/>
            Error Code = 5 means 'Document Category contains more than 100
            characters.' <br/> Error Code = 5 means 'Document Category cannot be
            empty.' <br/>

            Error Code = 5 means 'Signature Required is missing.' <br/> Error
            Code = 5 means 'SignatureRequired cannot be empty.' <br/> Error Code
            = 5 means 'SignatureRequired Can only Contain True Or False.' <br/>

            Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code =
            6 means 'No record found.' <br/> Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteVehicleDetail:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Vehicle record deleted  successfully.'

            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
            means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/> Error Code = 5 means 'Vehicle
            Id can not be empty.' <br/> Error Code = 5 means 'Vehicle Id is
            invalid.' <br/> Error Code = 5 means 'Pending authorization request
            exists in system for passed vehicle id.' <br/> Error Code = 6 means
            'No record found.' <br/> Error Code = 7 means 'No json data found.'
            <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/>
            Error Code = 9 means 'Invalid json data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetVehicleDetailByVehicleId:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'

            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
            means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'Vehicle Id can not be empty.' <br/> Error Code
            = 5 means 'Vehicle Id is invalid.' <br/>

            Error Code = 5 means 'Vehicle Id is missing.' <br/>

            Error Code = 7 means 'No json data found.' <br/> Error Code = 8
            means 'Either empty or no Form Data.'<br/> Error Code = 9 means
            'Invalid json data.'<br/> Error Code = 10 means 'No detail has been
            found.' <br/>
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetVehicleDetailByVehicleIdObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetVehicleDetailByEmployeeId:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'

            <br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5
            means 'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>

            Error Code = 5 means 'EmployeeId does not exists.' <br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/> Error Code = 5
            means 'EmployeeId contains more than 15 characters.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.' <br/> Error Code = 5
            means 'EmployeeId is missing.' <br/>

            Error Code = 5 means 'No json data found.' <br/> Error Code = 7
            means 'No json data found.' <br/> Error Code = 8 means 'Either empty
            or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/>
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetVehicleDetailByEmployeeIdArray'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetByMaternityPaternityId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means
            'MaternityPaternityTxnId is missing.' <br/>   Error Code = 5 means
            'MaternityPaternityTxnId cannot be empty.' <br/>  Error Code = 5
            means 'MaternityPaternityTxnId contains invalid data.' <br/>  Error
            Code = 5 means 'No access on late schema.' <br/>   Error Code = 7
            means 'No json data found.' <br/> Error Code = 8 means 'Either empty
            or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No detail has been found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetByMaternityPaternityId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetByMaternityPaternityByEmpId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means
            'ActualStartDate field contains invalid data' <br/>  Error Code = 5
            means 'Actual Start Date contains invalid data.' <br/>  Error Code =
            5 means 'ActualEndDate field contains invalid data' <br/> Error Code
            = 5 means 'Actual End Date must be later than or equal to actual
            start date.' <br/> Error Code = 5 means 'Actual End Date contains
            invalid data.' <br/>   Error Code = 5 means 'No access on late
            schema.' <br/>   Error Code = 7 means 'No json data found.' <br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail
            has been found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetByMaternityPaternityId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewMaternityPaternityApi:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Maternity Paternity record added successfully.'<br/> \nError Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t \nError Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId does not exists..' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.' <br/> \nError Code = 5 means 'DueDate contains invalid data.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DueDate is missing.' <br/> Error Code = 5 means 'DueDate cannot be empty.' <br/>\nError Code = 5 means 'Actual Start Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual end date must be later than or equal to actual start date .' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual End Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual Start Date must be after employee start date.' <br/> \t\nError Code = 5 means 'There is already has an existing maternity paternity record during the period requested.' <br/> \t\t\t\t  Error Code = 5 means 'Maternity Paternity is too far into the future.' <br/> \t Error Code = 5 means 'comments  contains invalid data.' <br/> Error Code = 5 means 'comments contains more than 1024 characters' <br/>\nError Code = 5 means 'Document Name contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentName is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/>  Error Code = 5 means 'Invalid file type.File type is not supported.'<br/>\nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 5 means 'No access on late schema.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>\t\t\t\t\t\t  "
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultMaternityPaternityTxnIdObject'
      x-konfig-properties:
        Result:
          description: Result Value
          type: object
    ResultMaternityPaternityTxnIdObject:
      description: ' Result Array'
      type: object
      properties:
        MaternityPaternityTxnId:
          description: Maternity paternity txn id value
          type: integer
          example: 340
    ErrorForUpdateMaternityPaternityApi:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Maternity Paternity record updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means  'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t \nError Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId does not exists..' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.' <br/> \nError Code = 5 means 'DueDate contains invalid data.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'DueDate is missing.' <br/> Error Code = 5 means 'DueDate cannot be empty.' <br/>\nError Code = 5 means 'Actual Start Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual end date must be later than or equal to actual start date .' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual End Date contains invalid data.' <br/> \t\t\t\t\t  Error Code = 5 means 'Actual Start Date must be after employee start date.' <br/> \t\nError Code = 5 means 'There is already has an existing maternity paternity record during the period requested.' <br/> \t\t\t\t  Error Code = 5 means 'Maternity Paternity is too far into the future.' <br/> \t Error Code = 5 means 'comments  contains invalid data.' <br/> Error Code = 5 means 'comments contains more than 1024 characters' <br/>\nError Code = 5 means 'Document Name contains more than 100 characters.' <br/> Error Code = 5 means 'DocumentName is missing.' <br/> \nError Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/>\nError Code = 5 means 'File contains invalid data.' <br/>  Error Code = 5 means 'File is missing.' <br/>  Error Code = 5 means 'Invalid file type.File type is not supported.'<br/>\nError Code = 5 means 'Maternity Paternity TxnId is missing.' <br/> \t\t\t\t\t\t  \t Error Code = 5 means 'MaternityPaternity Id can not be empty.' <br/> \t Error Code = 5 means 'MaternityPaternity Id is invalid.' <br/> \nError Code = 6 means 'Oops! Something went wrong.' <br/> Error Code = 5 means 'No access on late schema.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'No json data found.'<br/>\nError Code = 6 means 'Invalid json data.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No detail has been found.'<br/>\t"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteMaternityPaternity:
      type: object
      properties:
        IsError:
          description: isError false means Success And isError true means Error
          type: string
          enum:
            - 'false'
            - 'true'
        status:
          description: "Error Code = 0 means 'Maternity/Paternity detail deleted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Invalid Action'<br/>\t\t\t\t\t\t  Error Code = 4 means 'Action cannot be empty'<br/>\t\t\t\t\t\t  Error Code = 5 means 'API key does not exists' .<br/> \t  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'EmployeeId does not exists..' <br/>  Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId contains more than 15 characters.' <br/>  Error Code = 5 means 'EmployeeId cannot be empty.' <br/> \t Error Code = 5 means 'Maternity Paternity TxnId is missing.' <br/>   Error Code = 5 means 'Maternity Paternity Id is invalid.' <br/>  Error Code = 5 means 'MaternityPaternity Id can not be empty.' <br/>  Error Code = 6 means 'Oops! Something went wrong.' <br/>  Error Code = 6 means 'No record found.'<br/> Error Code = 5 means 'No json data found.'<br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> "
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message As Per the Error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetProjectTimesheetDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means 'StartDate
            contains invalid data.' <br/> Error Code = 5 means 'EndDate contains
            invalid data.' <br/> Error Code = 5 means 'StartDate should be
            before or equal to EndDate' <br/> Error Code = 5 means 'No access on
            Timesheet schema.' <br/> Error Code = 7 means 'No json data found.'
            <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/>
            Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means
            'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetProjectTimesheetDetail'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetProjectTimesheetByTransactionId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means 'TransactionId
            cannot be empty.'<br/> Error Code = 5 means 'TransactionId is
            invalid.' <br/>  Error Code = 5 means 'TransactionId is missing.'
            <br/> Error Code = 5 means 'No access on Timesheet schema.' <br/>
            Error Code = 7 means 'No json data found.' <br/> Error Code = 8
            means 'Either empty or no Form Data.'<br/> Error Code = 9 means
            'Invalid json data.'<br/> Error Code = 10 means 'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultGetProjectTimesheetByTransactionIdObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForCreateProjectTimesheet:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'ProjectTimesheet record inserted successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'ProjectTimesheetDate contains invalid data.'<br/> Error Code = 5 means 'ProjectTimesheetDate cannot be empty.'<br/> Error Code = 5 means 'TimesheetProject cannot be empty.'<br/> Error Code = 5 means 'TimesheetProject contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetProject contains invalid data.'<br/> Error Code = 5 means 'TimesheetTask contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetTask contains invalid data.'<br/> Error Code = 5 means 'TimesheetDetail contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetDetail contains invalid data.'<br/> Error Code = 5 means 'TimesheetProject and TimesheetTask are mandatory, if TimesheetDetail is entered.'<br/> Error Code = 5 means 'TimesheetProject is mandatory.'<br/> Error Code = 5 means 'TimesheetTask is mandatory, as TimesheetDetail has been entered.'<br/> Error Code = 5 means 'StartTime cannot be empty.'<br/> Error Code = 5 means 'StartTime contains invalid data.'<br/> Error Code = 5 means 'EndTime cannot be empty.'<br/> Error Code = 5 means 'EndTime contains invalid data.'<br/> Error Code = 5 means 'Timesheet EndTime is mandatory, as StartTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime is mandatory, as EndTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime cannot be later than EndTime.'<br/> Error Code = 5 means 'TotalHours cannot be empty.'<br/> Error Code = 5 means 'TotalHours should be in HH:MM format.'<br/> Error Code = 5 means 'Please ensure TotalHours matches Start and End times.'<br/>\t Error Code = 5 means 'Quantity cannot be empty.'<br/> Error Code = 5 means 'Quantity contains invalid data.'<br/> Error Code = 5 means 'Either of a) StartTime and EndTime  b) TotalHours or c) Quantity is mandatory.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 1024 characters.'<br/> Error Code = 5 means 'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForCreateProjectTimesheet'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForUpdateProjectTimesheet:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'ProjectTimesheet record updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'TransactionId is missing.'<br/> Error Code = 5 means 'TransactionId is invalid.' <br/>  Error Code = 5 means 'TransactionId cannot be empty.' <br/>  Error Code = 10 means 'No records found.' <br/>  Error Code = 5 means 'TimesheetProject cannot be empty.'<br/> Error Code = 5 means 'TimesheetProject contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetProject contains invalid data.'<br/> Error Code = 5 means 'TimesheetTask contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetTask contains invalid data.'<br/> Error Code = 5 means 'TimesheetDetail contains more than 100 characters.'<br/> Error Code = 5 means 'TimesheetDetail contains invalid data.'<br/> Error Code = 5 means 'TimesheetProject and TimesheetTask are mandatory, if TimesheetDetail is entered.'<br/> Error Code = 5 means 'TimesheetProject is mandatory.'<br/> Error Code = 5 means 'TimesheetTask is mandatory, as TimesheetDetail has been entered.'<br/> Error Code = 5 means 'StartTime cannot be empty.'<br/> Error Code = 5 means 'StartTime contains invalid data.'<br/> Error Code = 5 means 'EndTime cannot be empty.'<br/> Error Code = 5 means 'EndTime contains invalid data.'<br/> Error Code = 5 means 'Timesheet EndTime is mandatory, as StartTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime is mandatory, as EndTime has been entered.'<br/> Error Code = 5 means 'Timesheet StartTime cannot be later than EndTime.'<br/> Error Code = 5 means 'TotalHours cannot be empty.'<br/> Error Code = 5 means 'TotalHours should be in HH:MM format.'<br/> Error Code = 5 means 'Please ensure TotalHours matches Start and End times.'<br/>\t Error Code = 5 means 'Quantity cannot be empty.'<br/> Error Code = 5 means 'Quantity contains invalid data.'<br/> Error Code = 5 means 'Either of a) StartTime and EndTime  b) TotalHours or c) Quantity is mandatory.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 1024 characters.'<br/> Error Code = 5 means 'No access on Timesheet schema.' <br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteProjectTimesheet:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'ProjectTimesheet record deleted
            successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/>
            Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
            4 means 'Action cannot be empty.' <br/> Error Code = 4 means
            'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be
            empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15
            characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid
            data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.'
            <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error
            Code = 5 means 'TransactionId cannot be empty.'<br/> Error Code = 5
            means 'TransactionId is invalid.' <br/>  Error Code = 5 means
            'TransactionId is missing.' <br/> Error Code = 5 means 'No access on
            Timesheet schema.' <br/> Error Code = 7 means 'No json data found.'
            <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/>
            Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means
            'No records found.' <br/>  
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetAllTimesheetProject:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The requested processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error code = 5 means 'Project Name contains more than 100
            characters.'<br/> Error Code = 5 means 'Project Name contains
            invalid data.' <br/>  Error Code = 5 means 'No access on Timesheet
            schema.' <br/> Error Code = 7 means 'No json data found.' <br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record
            found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetAllTimesheetProjectObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewProject:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Assignment Project added successfully.'<br/>  Error Code = 0 means 'The Project code you have entered matches an existing Project code.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Project Name contains invalid data.'<br/> Error code = 5 means 'Project Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Name cannot be empty.' <br/> \t\t\t\t\t\t  Error Code = 5 means 'Project Name is Empty.' <br/>  Error Code = 5 means 'Project Name is missing.' <br/>  Error Code = 5 means 'In Use Can only Contain Yes Or No.'<br/> Error Code = 5 means 'In Use cannot be empty.'<br/> Error Code = 5 means 'No access on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No records found'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForEditProject:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'Assignment Project updated successfully.'<br/>  Error Code = 0 means 'The Project code you have entered matches an existing Project code.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>\t  Error Code = 5 means 'Project Name contains invalid data.'<br/> Error code = 5 means 'Project Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Name cannot be empty.' <br/>  Error Code = 5 means 'The Project Name you have entered not matches an existing Project code.'<br/> Error Code = 5 means 'Project Name is Empty.' <br/>  Error Code = 5 means 'Project Name is missing.' <br/> \t\t\t  Error Code = 5 means 'New Project Name contains invalid data.'<br/> Error code = 5 means 'New Project Name contains more than 100 characters.'<br/> Error Code = 5 means 'New Project Name cannot be empty.' <br/>  Error Code = 5 means 'New Project Name is Empty.' <br/>  Error Code = 5 means 'In Use Can only Contain Yes Or No.'<br/> Error Code = 5 means 'In Use cannot be empty.'<br/>\t\t\t\t\t\t  Error Code = 5 means 'Mention atleast one field to Update.'<br/> Error Code = 5 means 'Oops! Something went wrong.'<br/>\t\t\t\t\t\t   Error Code = 5 means 'No access on Timesheet schema.'<br/>\t\t\t\t\t\t Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No records found'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetAllProjectTask:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'The request processed successfully.'<br/>  Error Code = 0 means 'No record found.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Project Task Name  contains invalid data.'<br/> Error Code = 5 means 'Project Task Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Task Name cannot be empty.'<br/> Error Code = 5 means 'No access on Timesheet schema.'<br/>\t Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>"
          type: integer
          minimum: 0
          maximum: 9
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetAllProjectTask'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewProjectTask:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Assignment Project Task added
            successfully.'<br/>  Error Code = 0 means 'The Project Task code you
            have entered matches an existing Project Task code.'<br/> Error Code
            = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does
            not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.'
            <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5
            means 'Project Task Name is Empty.'<br/> Error Code = 5 means
            'Project Task Name is missing.'<br/> Error Code = 5 means 'Project
            Task Name  contains invalid data.'<br/> Error Code = 5 means
            'Project Task Name contains more than 100 characters.'<br/> Error
            Code = 5 means 'Project Task Name cannot be empty.'<br/> Error Code
            = 5 means 'In Use Can only Contain Yes Or No.'<br/> Error Code = 5
            means 'In Use cannot be empty.'<br/> Error Code = 5 means 'No access
            on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something
            went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/>
            Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code
            = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record
            found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForEditProjectTask:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'Assignment Project Task updated successfully.'<br/>  Error Code = 0 means 'The Project Task code you have entered matches an existing Project Task code.'<br/> Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'ProjectTaskName contains invalid data.'<br/> Error code = 5 means 'ProjectTaskName contains more than 100 characters.'<br/> Error Code = 5 means 'ProjectTaskName cannot be empty.' <br/> \t Error Code = 5 means 'The Project Task Name you have entered not matches an existing Project Task code.' <br/> \t Error Code = 5 means 'Project Task Name is Empty.' <br/>  Error Code = 5 means 'Project Task Name is missing.' <br/> \t Error Code = 5 means 'New Project Task Name contains invalid data.'<br/>\t Error code = 5 means 'New Project Task Name contains more than 100 characters.'<br/>\t Error Code = 5 means 'New Project Task Name cannot be empty..' <br/> \t Error Code = 5 means 'New Project Task Name is Empty.' <br/>  Error Code = 5 means 'In Use Can only Contain Yes Or No' <br/>  Error Code = 5 means 'In Use cannot be empty.' <br/>  Error Code = 5 means 'Mention atleast one field to Update.' <br/>  Error Code = 5 means 'No access on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/>  Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No records found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetAllProjectTaskDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: " Error Code = 0 means 'The request processed successfully..'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'Project Task Detail Name contains invalid data.'<br/> Error code = 5 means 'Project Task Detail Name contains more than 100 characters.'<br/> Error Code = 5 means 'Project Task Detail Name cannot be empty.' <br/> \t Error Code = 5 means 'No access on Timesheet schema.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/>\t\t\t\t\t\t   Error Code = 10 means 'No records found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetAllProjectTaskDetail'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewProjectTaskDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Assignment Project Task Detail added
            successfully.'

            <br/> Error Code = 0 means 'The Project Task Detail code you have
            entered matches an existing Project Task Detail code.'<br/> Error
            Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'API key does not exists.' <br/>  Error Code =
            5 means 'Project Task Detail Name is Empty.' <br/> Error Code = 5
            means 'Project Task Detail Name is missing.' <br/> Error Code = 5
            means 'Project Task Detail Name contains invalid data.' <br/> Error
            Code = 5 means 'Project Task Detail Name contains more than 100
            characters.' <br/> Error Code = 5 means 'Project Task Detail Name
            cannot be empty.' <br/> Error Code = 5 means 'In Use Can only
            Contain Yes Or No.' <br/> Error Code = 5 means 'In Use cannot be
            empty.' <br/> Error Code = 5 means 'No access on Timesheet schema.'
            <br/> Error Code = 6 means 'Oops! Something went wrong.' <br/> Error
            Code = 7 means 'No json data found.' <br/> Error Code = 8 means
            'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid
            json data.'<br/> Error Code = 10 means 'No records found'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForEditProjectTaskDetail:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'Assignment Project Task Detail updated
            successfully.'

            <br/> Error Code = 0 means 'The Project Task Detail code you have
            entered matches an existing Project Task Detail code.'<br/> Error
            Code = 2 means 'Invalid API Key.'<br/> Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'API key does not exists.' <br/> Error Code = 5
            means 'Project Task Detail Name contains invalid data.' <br/> Error
            Code = 5 means 'Project Task Detail Name contains more than 100
            characters.' <br/> Error Code = 5 means 'Project Task Detail Name
            cannot be empty.' <br/>  Error Code = 5 means 'The Project Task
            Detail Name you have entered not matches an existing Project Detail
            Task code.' <br/> Error Code = 5 means 'Project Tas Detail Name is
            Empty.' <br/> Error Code = 5 means 'Project Name Task Detail is
            missing.' <br/> Error Code = 5 means 'New Project Task Detail Name
            contains invalid data.' <br/> Error Code = 5 means 'New Project Task
            Detail Name contains more than 100 characters.' <br/> Error Code = 5
            means 'New Project Task Detail Name cannot be empty.' <br/>  Error
            Code = 5 means 'New Project Task Detail Name is Empty.' <br/> Error
            Code = 5 means 'In Use Can only Contain Yes Or No.' <br/> Error Code
            = 5 means 'In Use cannot be empty.' <br/> Error Code = 5 means
            'Mention atleast one field to Update.' <br/> Error Code = 5 means
            'No access on Timesheet schema.' <br/> Error Code = 6 means 'Oops!
            Something went wrong.' <br/> Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'No records found'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForGetCPDByEmployeeId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 7 means 'No json data
            found.' <br/> Error Code = 8 means 'Either empty or no Form
            Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error
            Code = 10 means 'No detail has been found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetCPDByEmployeeId'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForGetByCPDId:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'The request processed successfully.'<br/> 
            Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means
            'API key does not exists.' <br/>  Error Code = 4 means 'Action
            cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/>
            Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code =
            5 means 'EmployeeId contains more than 15 characters.'<br/> Error
            Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code
            = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means 'CPD Id is
            missing.' <br/>  Error Code = 5 means 'CPDId cannot be empty.'
            <br/>  Error Code = 5 means 'CPDId is invalid' <br/>  Error Code = 7
            means 'No json data found.' <br/> Error Code = 8 means 'Either empty
            or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No detail has been found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          $ref: '#/components/schemas/ResultForGetByCPDIdObject'
      x-konfig-properties:
        Result:
          description: Result value
    ErrorForAddNewCPD:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'CPD record added successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'Activity cannot be empty.'<br/> Error Code = 5 means 'Activity contains more than 100 characters.'<br/> Error Code = 5 means 'Activity contains invalid data.'<br/> Error Code = 5 means 'Activity is missing.'<br/> Error Code = 5 means 'Start Date field cannot be Empty'<br/> Error Code = 5 means 'Start Date field contains invalid data'<br/> Error Code = 5 means 'Start Date is Cannot be Empty.'<br/> Error Code = 5 means 'Start Date Start Date is Missing.'<br/> Error Code = 5 means 'End Date field contains invalid data'<br/> Error Code = 5 means 'End Date should be greater than StartDate.'<br/> Error Code = 5 means 'RollNumber contains more than 30 characters.'<br/> Error Code = 5 means 'RollNumber contains invalid data.'<br/> Error Code = 5 means 'Date Admitted field cannot be Empty.'<br/> Error Code = 5 means 'Date Admitted field contains invalid data.'<br/> Error Code = 5 means 'HoursRequired Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursRequired.'<br/> Error Code = 5 means 'HoursAccredited Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursAccredited.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column name not exists.'<br/> Error Code = 5 means 'Custom column name should not be empty.'<br/> Error Code = 5 means ' ColumnName is missing.'<br/> Error Code = 5 means 'ColumnName cannot be empty.'<br/> Error Code = 5 means 'Custom column name already addded'<br/> Error Code = 5 means 'Custom column name does not exists on screen'<br/>\nError Code = 5 means 'ColumnName contains invalid data.'<br/> Error Code = 5 means 'ColumnName field contains invalid data.'<br/> Error Code = 5 means 'ColumnName is mandatory.'<br/> Error Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'One or more mandatory fields are missing'<br/> Error Code = 5 means 'One or more custom fields are mandatory'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/> Error Code = 5 means 'Document Name is missing.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Invalid file type.'<br/> Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/> Error Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory Type Category is missing.'<br/> Error Code = 5 means 'DocumentCategory Type cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory Type contains more than 100 characters. '<br/>\t Error Code = 5 means 'DocumentCategory Type contains invalid data.'<br/>\t\t Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForUpdateCPD:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: "Error Code = 0 means 'CPD record updated successfully.'<br/>  Error Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key does not exists.' <br/>  Error Code = 4 means 'Action cannot be empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5 means 'EmployeeId contains more than 15 characters.'<br/> Error Code = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5 means 'EmployeeId does not exists.' <br/>  Error Code = 5 means 'EmployeeId is missing.' <br/>  Error Code = 5 means 'CPD Id is missing.'<br/> Error Code = 5 means 'valid CPD Id Cannot be Empty'<br/> Error Code = 5 means 'CPD Id is invalid'<br/> Error Code = 5 means 'Pending authorization request exists in system for passed CPD Id.'<br/> Error Code = 5 means 'No record found.'<br/> Error Code = 10 means 'No detail has been found.'<br/> Error Code = 5 means 'Activity cannot be empty.'<br/> Error Code = 5 means 'Activity contains more than 100 characters.'<br/> Error Code = 5 means 'Activity contains invalid data.'<br/> Error Code = 5 means 'Start Date field cannot be Empty'<br/> Error Code = 5 means 'Start Date field contains invalid data'<br/> Error Code = 5 means 'Start Date is Cannot be Empty.'<br/> Error Code = 5 means 'End Date field contains invalid data'<br/> Error Code = 5 means 'End Date should be greater than StartDate.'<br/> Error Code = 5 means 'RollNumber contains more than 30 characters.'<br/> Error Code = 5 means 'RollNumber contains invalid data.'<br/> Error Code = 5 means 'Date Admitted field cannot be Empty.'<br/> Error Code = 5 means 'Date Admitted field contains invalid data.'<br/> Error Code = 5 means 'HoursRequired Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursRequired.'<br/> Error Code = 5 means 'HoursAccredited Contains Invalid Data.'<br/> Error Code = 5 means 'Max 999 value is Allowed for HoursAccredited.'<br/> Error Code = 5 means 'Notes contains invalid data.'<br/> Error Code = 5 means 'Notes contains more than 256 characters.'<br/> Error Code = 5 means 'Custom column name not exists'<br/> Error Code = 5 means 'Custom column name should not be empty'<br/> Error Code = 5 means 'ColumnName cannot be empty.'<br/> Error Code = 5 means 'Column already addded'<br/> Error Code = 5 means 'Column does not exists on screen'<br/> Error Code = 5 means 'ColumnValue is missing.'<br/>\nError Code = 5 means 'ColumnName contains invalid data.'<br/> Error Code = 5 means 'ColumnName field contains invalid data.'<br/> Error Code = 5 means 'ColumnName is mandatory.'<br/> Error Code = 5 means 'Custom column name contains more than 100 characters.'<br/>\nError Code = 5 means 'Document Name is missing.'<br/> Error Code = 5 means 'Document Name contains more than 100 characters.'<br/> Error Code = 5 means 'DocumentName cannot be empty.'<br/> Error Code = 5 means 'Invalid file type.'<br/> Error Code = 5 means 'File is missing.'<br/>\t Error Code = 5 means 'File contains invalid data.'<br/> Error Code = 5 means 'Description contains more than 256 characters.'<br/> Error Code = 5 means 'Description contains invalid data.'<br/> Error Code = 5 means 'DocumentCategory Type Category is missing.'<br/> Error Code = 5 means 'DocumentCategory Type cannot be empty.'<br/> Error Code = 5 means 'DocumentCategory Type contains more than 100 characters. '<br/>\t Error Code = 5 means 'DocumentCategory Type contains invalid data.'<br/>\t\t Error Code = 5 means 'Signature Required is missing.'<br/> Error Code = 5 means 'SignatureRequired cannot be empty.'<br/> Error Code = 5 means 'SignatureRequired Can only Contain True Or False.'<br/> Error Code = 6 means 'Oops! Something went wrong.'<br/> Error Code = 7 means 'No json data found.' <br/> Error Code = 8 means 'Either empty or no Form Data.'<br/> Error Code = 9 means 'Invalid json data.'<br/> Error Code = 10 means 'No record found.'"
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ErrorForDeleteCPD:
      type: object
      properties:
        IsError:
          description: 'isError = false means success and isError = true means error '
          type: string
          enum:
            - 'false'
            - 'true'
        Status:
          description: >-
            Error Code = 0 means 'CPD record deleted successfully.'<br/>  Error
            Code = 2 means 'Invalid API Key.'<br/> Error Code = 5 means 'API key
            does not exists.' <br/>  Error Code = 4 means 'Action cannot be
            empty.' <br/> Error Code = 4 means 'Invalid Action.' <br/> Error
            Code = 5 means 'EmployeeId cannot be empty.'<br/> Error code = 5
            means 'EmployeeId contains more than 15 characters.'<br/> Error Code
            = 5 means 'EmployeeId contains invalid data.' <br/>  Error Code = 5
            means 'EmployeeId does not exists.' <br/>  Error Code = 5 means
            'EmployeeId is missing.' <br/>  Error Code = 5 means 'CPD Id is
            missing.'<br/> Error Code = 5 means 'valid CPD Id Cannot be
            Empty'<br/> Error Code = 5 means 'CPD Id is invalid'<br/> Error Code
            = 5 means 'Pending authorization request exists in system for passed
            CPD Id.'<br/> Error Code = 5 means 'No record found.'<br/> Error
            Code = 10 means 'No detail has been found.'<br/> Error Code = 7
            means 'No json data found.' <br/> Error Code = 8 means 'Either empty
            or no Form Data.'<br/> Error Code = 9 means 'Invalid json
            data.'<br/> Error Code = 10 means 'No record found.'
          type: integer
          minimum: 0
          maximum: 10
        Message:
          description: Message show as per error code
          type: string
        Result:
          description: Can be ignored
          type: object
    ResultForGetCPDByEmployeeId:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          CPDId:
            description: ' CPDId Value'
            type: integer
            example: 147
          Activity:
            description: ' Activity value'
            type: string
            example: Activity name
          StartDate:
            description: ' StartDate value'
            type: string
            format: date
            example: '2017-01-01'
          EndDate:
            description: ' EndDate value'
            type: string
            format: date
            example: '2017-01-01'
          RollNumber:
            description: ' RollNumber value'
            type: string
            example: '11'
          DateAdmitted:
            description: ' DateAdmitted value'
            type: string
            format: date
            example: '2017-01-01'
          HoursRequired:
            description: ' HoursRequired value'
            type: integer
            example: 124
          HoursAccredited:
            description: ' HoursAccredited value'
            type: integer
            example: 1260
          Notes:
            description: ' Notes value'
            type: string
            example: Notes goes here
          Customfields:
            $ref: '#/components/schemas/CustomFieldsArrayForGetDetail'
          Files:
            $ref: '#/components/schemas/FilesArrayForGetDetail'
        x-konfig-properties:
          Customfields:
            description: Customfields for get details
          Files:
            description: Files for get details
    ResultForGetByCPDIdObject:
      description: ' Result Array'
      type: object
      properties:
        CPDId:
          description: ' CPDId Value'
          type: integer
          example: 150
        Activity:
          description: ' Activity value'
          type: string
          example: Activity name
        StartDate:
          description: ' StartDate value'
          type: string
          format: date
          example: '2017-01-01'
        EndDate:
          description: ' EndDate value'
          type: string
          format: date
          example: '2017-01-01'
        RollNumber:
          description: ' RollNumber value'
          type: string
          example: '11'
        DateAdmitted:
          description: ' DateAdmitted value'
          type: string
          format: date
          example: '2017-01-01'
        HoursRequired:
          description: ' HoursRequired value'
          type: integer
          example: 1240
        HoursAccredited:
          description: ' HoursAccredited value'
          type: integer
          example: 1260
        Notes:
          description: ' Notes value'
          type: string
          example: Notes goes here
        Customfields:
          $ref: '#/components/schemas/CustomFieldsArrayForGetDetail'
        Files:
          $ref: '#/components/schemas/FilesArrayForGetDetail'
      x-konfig-properties:
        Customfields:
          description: Customfields for get details
        Files:
          description: Files for get details
    CustomFieldsArrayForGetDetail:
      type: array
      required:
        - ColumnName
        - ColumnValue
      items:
        type: object
        properties:
          ColumnName:
            description: ' column name value'
            type: string
            example: Column_Name
          ColumnValue:
            description: ' column value value'
            type: string
            example: '29153'
    FilesArrayForGetDetail:
      type: array
      required:
        - DocumentName
        - File
        - Description
        - DocumentCategory
        - SignatureRequired
      items:
        type: object
        properties:
          DocumentName:
            description: ' DocumentName value'
            type: string
            example: DocumentName.pdf
          Description:
            description: ' Description value'
            type: string
            example: Description goes here
          FileUrl:
            description: ' FileUrl value'
            type: string
            format: url
            example: >-
              http://localhost.net:12345/Handlers/MyDocsViewer.ashx?5fca4525-3df3-4605-aee1-1885463b3334
          Category:
            description: ' category value'
            type: string
            example: Benefit
          SignatureRequired:
            description: ' signature required value'
            type: boolean
            enum:
              - false
              - true
    ResultForCreateProjectTimesheet:
      description: ' Result Array'
      type: object
      properties:
        TransactionId:
          description: TransactionId value
          type: long
          example: 750
    GetProjectTimesheetByTransactionId:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TransactionId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TransactionId:
          $ref: '#/components/schemas/TransactionId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get project time sheet detail
          type: string
        Action:
          description: Action name = GetProjectTimesheetByTransactionId
          example: GetProjectTimesheetByTransactionId
        EmployeeId:
          description: Employee id for get project timesheet detail
        TransactionId:
          description: Transaction id for get project timesheet detail
    CreateProjectTimesheetParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ProjectTimesheetDate
        - TimesheetProject
        - TimesheetTask
        - TimesheetDetail
        - StartTime
        - EndTime
        - TotalHours
        - Quantity
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        ProjectTimesheetDate:
          $ref: '#/components/schemas/ProjectTimesheetDate'
        TimesheetProject:
          $ref: '#/components/schemas/TimesheetProject'
        TimesheetTask:
          $ref: '#/components/schemas/TimesheetTask'
        TimesheetDetail:
          $ref: '#/components/schemas/TimesheetDetail'
        StartTime:
          $ref: '#/components/schemas/StartTime'
        EndTime:
          $ref: '#/components/schemas/EndTime'
        TotalHours:
          $ref: '#/components/schemas/TotalHours'
        Quantity:
          $ref: '#/components/schemas/Quantity'
        Notes:
          $ref: '#/components/schemas/Notes'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get project time sheet detail
          type: string
        Action:
          description: Action name = CreateProjectTimesheet
          example: CreateProjectTimesheet
        EmployeeId:
          description: Employeeid for create project timesheet
        ProjectTimesheetDate:
          description: ProjectTimesheetDate for create project timesheet
        TimesheetProject:
          description: TimesheetProject for create project timesheet
        TimesheetTask:
          description: TimesheetTask for create project timesheet
        TimesheetDetail:
          description: TimesheetDetail for create project timesheet
        StartTime:
          description: StartTime for create project timesheet
        EndTime:
          description: EndTime for create project timesheet
        TotalHours:
          description: TotalHours for create project timesheet
        Quantity:
          description: Quantity for create project timesheet
        Notes:
          description: Notes for create project timesheet
    UpdateProjectTimesheetParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TransactionId
        - TimesheetProject
        - TimesheetTask
        - TimesheetDetail
        - StartTime
        - EndTime
        - TotalHours
        - Quantity
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TransactionId:
          $ref: '#/components/schemas/TransactionId'
        TimesheetProject:
          $ref: '#/components/schemas/TimesheetProject'
        TimesheetTask:
          $ref: '#/components/schemas/TimesheetTask'
        TimesheetDetail:
          $ref: '#/components/schemas/TimesheetDetail'
        StartTime:
          $ref: '#/components/schemas/StartTime'
        EndTime:
          $ref: '#/components/schemas/EndTime'
        TotalHours:
          $ref: '#/components/schemas/TotalHours'
        Quantity:
          $ref: '#/components/schemas/Quantity'
        Notes:
          $ref: '#/components/schemas/Notes'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get project time sheet detail
          type: string
        Action:
          description: Action name = UpdateProjectTimesheet
          example: UpdateProjectTimesheet
        EmployeeId:
          description: Employeeid for update project timesheet
        TransactionId:
          description: TransactionId for update project timesheet
        TimesheetProject:
          description: TimesheetProject for update project timesheet
        TimesheetTask:
          description: TimesheetTask for update project timesheet
        TimesheetDetail:
          description: TimesheetDetail for update project timesheet
        StartTime:
          description: StartTime for update project timesheet
        EndTime:
          description: EndTime for update project timesheet
        TotalHours:
          description: TotalHours for update project timesheet
        Quantity:
          description: Quantity for update project timesheet
        Notes:
          description: Notes for update project timesheet
    DeleteProjectTimesheetParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TransactionId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TransactionId:
          $ref: '#/components/schemas/TransactionId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get project time sheet detail
          type: string
        Action:
          description: Action name = DeleteProjectTimesheet
          example: DeleteProjectTimesheet
        EmployeeId:
          description: Employee id for delete project timesheet detail
        TransactionId:
          description: Transaction id for delete project timesheet detail
    GetAllTimesheetProjectParameter:
      type: object
      required:
        - APIKey
        - Action
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get all project time sheet detail
          type: string
        Action:
          description: Action name = GetAllTimesheetProject
          example: GetAllTimesheetProject
        ProjectName:
          description: Project name for get all timesheet project detail
    AddNewProjectParameter:
      type: object
      required:
        - APIKey
        - Action
        - ProjectName
        - InUse
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
        InUse:
          $ref: '#/components/schemas/InUse'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to add new project
          type: string
        Action:
          description: Action name = AddNewProject
          example: AddNewProject
        ProjectName:
          description: ProjectName for add new project
        InUse:
          description: InUse for add new project
          enum:
            - 'Yes'
            - 'No'
          type: string
    EditProjectParameter:
      type: object
      required:
        - APIKey
        - Action
        - ProjectName
        - NewProjectName
        - InUse
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectName:
          $ref: '#/components/schemas/ProjectName'
        NewProjectName:
          $ref: '#/components/schemas/NewProjectName'
        InUse:
          $ref: '#/components/schemas/InUse'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to edit project
          type: string
        Action:
          description: Action name = EditProject
          example: EditProject
        ProjectName:
          description: ProjectName for edit project
        NewProjectName:
          description: NewProjectName for edit project
        InUse:
          description: InUse for edit project
          enum:
            - 'Yes'
            - 'No'
          type: string
    GetAllProjectTaskParameter:
      type: object
      required:
        - APIKey
        - Action
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectTaskName:
          $ref: '#/components/schemas/ProjectTaskName'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get all project task
          type: string
        Action:
          description: Action name = GetAllProjectTask
          example: GetAllProjectTask
        ProjectTaskName:
          description: Task Name to get all Project task
    AddNewProjectTaskParameter:
      type: object
      required:
        - APIKey
        - Action
        - ProjectTaskName
        - InUse
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectTaskName:
          $ref: '#/components/schemas/ProjectTaskName'
        InUse:
          $ref: '#/components/schemas/InUse'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to add new project task
          type: string
        Action:
          description: Action name = AddNewProjectTask
          example: AddNewProjectTask
        ProjectTaskName:
          description: Task Name for new project task detail
        InUse:
          description: InUse for new project task detail
          enum:
            - 'Yes'
            - 'No'
          type: string
    EditProjectTaskParameter:
      type: object
      required:
        - APIKey
        - Action
        - ProjectTaskName
        - New_ProjectTaskName
        - InUse
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectTaskName:
          $ref: '#/components/schemas/ProjectTaskName'
        New_ProjectTaskName:
          $ref: '#/components/schemas/New_ProjectTaskName'
        InUse:
          $ref: '#/components/schemas/InUse'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for employee Project timesheet api to edit project task
            detail
          type: string
        Action:
          description: Action name = EditProjectTask
          example: EditProjectTask
        ProjectTaskName:
          description: Project Task Name for edit project task detail
        New_ProjectTaskName:
          description: New_ProjectTaskName for edit project task detail
        InUse:
          description: InUse for edit project task detail
          enum:
            - 'Yes'
            - 'No'
          type: string
    GetAllProjectTaskDetailParameter:
      type: object
      required:
        - APIKey
        - Action
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectTaskDetailName:
          $ref: '#/components/schemas/ProjectTaskDetailName'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for employee Project timesheet api to get all project task
            detail
          type: string
        Action:
          description: Action name = GetAllProjectTaskDetail
          example: GetAllProjectTaskDetail
        ProjectTaskDetailName:
          description: 'Project task name for get all project task detail  '
    AddNewProjectTaskDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - ProjectTaskDetailName
        - InUse
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectTaskDetailName:
          $ref: '#/components/schemas/ProjectTaskDetailName'
        InUse:
          $ref: '#/components/schemas/InUse'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to add new project task detail
          type: string
        Action:
          description: Action name = AddNewProjectTaskDetail
          example: AddNewProjectTaskDetail
        ProjectTaskDetailName:
          description: Project task detail name for add new project task detail
        InUse:
          description: In use for add new project task detail
          enum:
            - 'Yes'
            - 'No'
          type: string
    EditProjectTaskDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - ProjectTaskDetailName
        - New_ProjectTaskDetailName
        - InUse
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ProjectTaskDetailName:
          $ref: '#/components/schemas/ProjectTaskDetailName'
        New_ProjectTaskDetailName:
          $ref: '#/components/schemas/New_ProjectTaskDetailName'
        InUse:
          $ref: '#/components/schemas/InUse'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to edit project task detail
          type: string
        Action:
          description: Action name = EditProjectTaskDetail
          example: EditProjectTaskDetail
        ProjectTaskDetailName:
          description: Project task detail name for edit project task detail
        New_ProjectTaskDetailName:
          description: New Project task detail name for edit project task detail
        InUse:
          description: InUse for edit project task detail
          enum:
            - 'Yes'
            - 'No'
          type: string
    ResultGetProjectTimesheetByTransactionIdObject:
      description: ' Result Array'
      type: object
      properties:
        TransactionId:
          description: ' TransactionId Value'
          type: string
          example: '496'
        ProjectTimesheetDate:
          description: ' ProjectTimesheetDate value'
          type: string
          format: date
          example: '2014-07-04'
        TimesheetProject:
          description: ' TimesheetProject value'
          type: string
          example: ProjectABC
        TimesheetTask:
          description: ' TimesheetTask value'
          type: string
          example: Tasks goes here
        TimesheetDetail:
          description: ' TimesheetDetail value'
          type: string
          example: Detail
        StartTime:
          description: ' StartTime value'
          type: string
          format: timespan
          example: '05:00'
        EndTime:
          description: ' EndTime value'
          type: string
          format: timespan
          example: '09:00'
        TotalHours:
          description: ' TotalHours value'
          type: string
          format: timespan
          example: '04:00'
        Quantity:
          description: ' Quantity value'
          type: integer
          format: double
          example: 565
        Notes:
          description: ' Notes value'
          type: string
          example: Notes goes here
    ResultForGetProjectTimesheetDetail:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          TransactionId:
            description: ' TransactionId Value'
            type: string
            example: '561'
          ProjectTimesheetDate:
            description: ' ProjectTimesheetDate value'
            type: string
            format: date
            example: '2014-11-03'
          TimesheetProject:
            description: ' TimesheetProject value'
            type: string
            example: Project
          TimesheetTask:
            description: ' TimesheetTask value'
            type: string
            example: Task
          TimesheetDetail:
            description: ' TimesheetDetail value'
            type: string
            example: Detail
          StartTime:
            description: ' StartTime value'
            type: string
            format: timespan
            example: '05:00'
          EndTime:
            description: ' EndTime value'
            type: string
            format: timespan
            example: '09:00'
          TotalHours:
            description: ' TotalHours value'
            type: string
            format: timespan
            example: '04:00'
          Quantity:
            description: ' Quantity value'
            type: integer
            format: double
            example: 0
          Notes:
            description: ' Notes value'
            type: string
            example: Notes show here..
          ChangedDate:
            description: ' ChangedDate value'
            type: string
            format: date
            example: '2014-11-03'
    ResultForGetAllTimesheetProjectObject:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          ProjectId:
            description: ' ProjectId Value'
            type: integer
            example: 80946
          ProjectName:
            description: ' ProjectName value'
            type: string
            example: Test API Project los
          Status:
            description: ' Status value'
            type: string
            example: true
            enum:
              - 'false'
              - 'true'
          CompanyName:
            description: ' CompanyName value'
            type: string
            example: Location, REPORT TO
          LocationName:
            description: ' LocationName value'
            type: string
            example: Head Office, Mumbai, Location
          DepartmentName:
            description: ' DepartmentName value'
            type: string
            example: Administration, Finance, Human Service
          EmploymentType:
            description: ' EmploymentType value'
            type: string
            example: All
          SpecificEmployee:
            description: ' SpecificEmployee value'
            type: string
            example: Na
          JobRoleType:
            description: ' JobRoleType value'
            type: string
            example: Accountant, Administrator, CEO
    ResultForGetAllProjectTask:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          ProjectTaskId:
            description: ' ProjectTaskId Value'
            type: integer
            example: 80980
          ProjectTaskName:
            description: ' ProjectTaskName value'
            type: string
            example: ProjectTaskName name
          Status:
            description: Status value
            type: string
            example: true
            enum:
              - 'false'
              - 'true'
          ProjectName:
            description: ' ProjectName value'
            type: string
            example: ProjectName goes here
    ResultForGetAllProjectTaskDetail:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          ProjectTaskDetailId:
            description: ' ProjectTaskDetailId Value'
            type: integer
            example: 80961
          ProjectTaskDetailName:
            description: ' ProjectTaskDetailName value'
            type: string
            example: Task details goes here
          Status:
            description: ' Status value'
            type: string
            enum:
              - 'false'
              - 'true'
            example: false
          ProjectTaskName:
            description: ' ProjectTaskName value'
            type: string
            example: All
    ResultForGetByMaternityPaternityId:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          MaternityPaternityTxnId:
            description: ' CPDId Value'
            type: integer
            example: 339
          ExpectedDate:
            description: ' ExpectedDate value'
            type: string
            format: date
            example: '2017-05-20'
          DueWeekStartDate:
            description: ' DueWeekStartDate value'
            type: string
            format: date
            example: '2017-05-14'
          DueWeekEndDate:
            description: ' DueWeekEndDate value'
            type: string
            format: date
            example: '2017-05-20'
          EarliestStartDate:
            description: ' EarliestStartDate value'
            type: string
            format: date
            example: '2017-02-26'
          ContinousWeeksService:
            description: ' ContinousWeeksService value'
            type: string
            format: decimal
            example: '10.22'
          OrdinaryLeaveStartDate:
            description: ' OrdinaryLeaveStartDate value'
            type: string
            format: date
            example: '2017-05-14'
          OrdinaryLeaveEndDate:
            description: ' OrdinaryLeaveEndDate value'
            type: string
            format: date
            example: '2017-11-12'
          AdditionalLeaveStartDate:
            description: ' AdditionalLeaveStartDate value'
            type: string
            format: date
            example: '2017-11-13'
          AdditionalLeaveEndDate:
            description: ' AdditionalLeaveEndDate value'
            type: string
            format: date
            example: '2018-05-14'
          ActualStartDate:
            description: ' ActualStartDate value'
            type: string
            format: date
            example: '2017-05-20'
          ActualEndDate:
            description: ' ActualEndDate value'
            type: string
            format: date
            example: '2017-05-21'
          Comments:
            $ref: '#/components/schemas/CommentssArrayForGetDetail'
          Files:
            $ref: '#/components/schemas/FilesArrayForMaternityPaternity'
          ReferenceId:
            description: ReferenceId value
            type: string
            example: '1'
        x-konfig-properties:
          Comments:
            description: Comments for get details
          Files:
            description: Files for get details
    CommentssArrayForGetDetail:
      type: array
      items:
        type: object
        properties:
          CommentId:
            description: ' CommentId value'
            type: integer
            example: 200
          Comments:
            description: ' comments value'
            type: string
            example: comments here
          PostedBy:
            description: ' PostedBy value'
            type: string
            example: John Miller
    FilesArrayForMaternityPaternity:
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: ' DocumentName value'
            type: string
            example: DocumentName.pdf
          Url:
            description: ' FileUrl value'
            type: string
            format: url
            example: >-
              http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?395685e4-3114-4ad4-a84d-87d04064e67a
          Comments:
            description: ' comments value'
            type: string
            example: Comments..
    ResultGetVehicleDetailByEmployeeIdArray:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          VehicleId:
            $ref: '#/components/schemas/VehicleId'
          Registration:
            $ref: '#/components/schemas/Registration'
          Make:
            $ref: '#/components/schemas/Make'
          Model:
            $ref: '#/components/schemas/Model'
          Color:
            $ref: '#/components/schemas/Colour'
          EngineSize:
            $ref: '#/components/schemas/EngineSize'
          FuelType:
            $ref: '#/components/schemas/FuelType'
          InsuranceCompany:
            $ref: '#/components/schemas/InsuranceCompany'
          PolicyNumber:
            $ref: '#/components/schemas/PolicyNumber'
          MOTExpiryDate:
            $ref: '#/components/schemas/MOTExpiryDate'
          InsuranceExpiryDate:
            $ref: '#/components/schemas/InsuranceExpiryDate'
          Comments:
            $ref: '#/components/schemas/Comments'
          CustomColumns:
            $ref: '#/components/schemas/CustomColumnsForGetVehicleByIdArray'
          AddFiles:
            $ref: '#/components/schemas/AddFilesForGetVehicleByIdArray'
        x-konfig-properties:
          VehicleId:
            description: Vehicle Id Value
          Registration:
            description: Registration Value
          Make:
            description: Make Value
          Model:
            description: Model Value
          Color:
            description: Color Value
          EngineSize:
            description: EngineSize Value
          FuelType:
            description: FuelType Value
          InsuranceCompany:
            description: InsuranceCompany Value
          PolicyNumber:
            description: PolicyNumber Value
          MOTExpiryDate:
            description: MOTExpiryDate Value
          InsuranceExpiryDate:
            description: InsuranceExpiryDate Value
          Comments:
            description: Comments Value
          CustomColumns:
            description: CustomColumns to get vehicle detail
          AddFiles:
            description: AddFiles to get vehicle detail
    ResultGetVehicleDetailByVehicleIdObject:
      description: ' Result Array'
      type: object
      properties:
        VehicleId:
          $ref: '#/components/schemas/VehicleId'
        Registration:
          $ref: '#/components/schemas/Registration'
        Make:
          $ref: '#/components/schemas/Make'
        Model:
          $ref: '#/components/schemas/Model'
        Color:
          $ref: '#/components/schemas/Colour'
        EngineSize:
          $ref: '#/components/schemas/EngineSize'
        FuelType:
          $ref: '#/components/schemas/FuelType'
        InsuranceCompany:
          $ref: '#/components/schemas/InsuranceCompany'
        PolicyNumber:
          $ref: '#/components/schemas/PolicyNumber'
        MOTExpiryDate:
          $ref: '#/components/schemas/MOTExpiryDate'
        InsuranceExpiryDate:
          $ref: '#/components/schemas/InsuranceExpiryDate'
        Comments:
          $ref: '#/components/schemas/Comments'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForGetVehicleByIdArray'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForGetVehicleByIdArray'
      x-konfig-properties:
        VehicleId:
          description: Vehicle Id Value
        Registration:
          description: Registration Value
        Make:
          description: Make Value
        Model:
          description: Model Value
        Color:
          description: Color Value
        EngineSize:
          description: EngineSize Value
        FuelType:
          description: FuelType Value
        InsuranceCompany:
          description: InsuranceCompany Value
        PolicyNumber:
          description: PolicyNumber Value
        MOTExpiryDate:
          description: MOTExpiryDate Value
        InsuranceExpiryDate:
          description: InsuranceExpiryDate Value
        Comments:
          description: Comments Value
        CustomColumns:
          description: CustomColumns to get vehicle detail
        AddFiles:
          description: AddFiles to get vehicle detail
    CustomColumnsForGetVehicleByIdArray:
      description: ' CustomColumns Result Array'
      type: array
      items:
        type: object
        properties:
          ColumnName:
            description: Column name
            type: string
            example: Vehicle 1
          ColumnValue:
            description: Column value
            type: string
            example: ABC
    AddFilesForGetVehicleByIdArray:
      description: AddFiles Result Array
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: Document name value
            type: string
            example: my.txt
          FileUrl:
            description: FileUrl value
            type: string
            example: >-
              http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?a7897690-633a-46df-aefd-bc4ae479c5b7
          Descriptions:
            description: Descriptions value
            type: string
            example: Descriptions goes here
          Category:
            description: category value
            type: string
            example: Custom Catagory
          SignatureRequired:
            description: Signature required value
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: false
    AddNewQualificationParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Qualification
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Qualification:
          $ref: '#/components/schemas/Qualification'
        Subject:
          $ref: '#/components/schemas/Subject'
        DatePassed:
          $ref: '#/components/schemas/DatePassed'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        Comments:
          $ref: '#/components/schemas/Comments'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeQualification'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeQualification'
      x-konfig-properties:
        APIKey:
          description: APIKey for add new qualification
          type: string
        Action:
          description: Action name = AddNewQualification
          example: AddNewQualification
        EmployeeId:
          description: Employee id for add new qualification
        Qualification:
          description: Qualification for add new qualification
        Subject:
          description: Subject for add new qualification
        DatePassed:
          description: Date passed for add new qualification
        ExpiryDate:
          description: Expiry date for add new qualification
        Comments:
          description: Comments for add new qualification
          maxLength: '256'
        CustomColumns:
          description: CustomColumns for add new qualification
        AddFiles:
          description: AddFiles for add new qualification
    UpdateQualificationParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - QualificationId
        - Qualification
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        QualificationId:
          $ref: '#/components/schemas/QualificationId'
        Qualification:
          $ref: '#/components/schemas/Qualification'
        Subject:
          $ref: '#/components/schemas/Subject'
        DatePassed:
          $ref: '#/components/schemas/DatePassed'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        Comments:
          $ref: '#/components/schemas/Comments'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeQualification'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeQualification'
      x-konfig-properties:
        APIKey:
          description: APIKey for update qualification
          type: string
        Action:
          description: Action name = UpdateQualification
          example: UpdateQualification
        EmployeeId:
          description: Employee id for update qualification
        QualificationId:
          description: Qualification Id for update qualification
        Qualification:
          description: Qualification for update qualification
        Subject:
          description: Subject for update qualification
        DatePassed:
          description: Date passed for update qualification
        ExpiryDate:
          description: Expiry date for update qualification
        Comments:
          description: Comments for update qualification
          maxLength: '256'
        CustomColumns:
          description: Custom columns
        AddFiles:
          description: Add files
    DeleteQualificationParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - QualificationId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        QualificationId:
          $ref: '#/components/schemas/QualificationId'
      x-konfig-properties:
        APIKey:
          description: APIKey for delete qualification
          type: string
        Action:
          description: Action name = DeleteQualification
          example: DeleteQualification
        EmployeeId:
          description: Employee id for delete qualification
        QualificationId:
          description: QualificationId for delete qualification
    DeleteTrainingDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TrainingId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TrainingId:
          $ref: '#/components/schemas/TrainingId'
      x-konfig-properties:
        APIKey:
          description: APIKey for delete training detail
          type: string
        Action:
          description: Action name = deletetrainingdetail
          example: deletetrainingdetail
        EmployeeId:
          description: Employee id for delete training detail
        TrainingId:
          description: Training Id for delete training detail
    ResultForGetQualificationByQualificationIdObject:
      description: The Result For Get Qualification By QualificationId Result Array
      type: object
      properties:
        QualificationId:
          description: QualificationId Value
          type: integer
          example: 1
        Qualification:
          description: Qualification Value
          type: string
          example: MSC
        Subject:
          description: Subject Value
          type: string
          example: Computer science
        DatePassed:
          description: DatePassed Value
          type: string
          format: date
          example: '2017-05-01'
        ExpiryDate:
          description: ExpiryDate Value
          type: string
          format: date
          example: '2018-07-07'
        Comments:
          description: Comments Value
          type: string
          example: Comments goes here
        Customfields:
          $ref: '#/components/schemas/CustomColumnsForGetEmployeeQualification'
        Files:
          $ref: '#/components/schemas/AddFilesForGetEmployeeQualification'
      x-konfig-properties:
        Customfields:
          description: Custom fields array
        Files:
          description: Files array
    ResultForGetQualificationByEmployeeId:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          QualificationId:
            description: QualificationId value
            type: integer
            example: 1
          Qualification:
            description: Qualification value
            type: string
            example: MSC
          Subject:
            description: Subject value
            type: string
            example: Computer science
          DatePassed:
            description: DatePassed value
            type: string
            format: date
            example: '2017-05-01'
          ExpiryDate:
            description: ExpiryDate value
            type: string
            format: date
            example: '2018-07-07'
          Comments:
            description: Comments value
            type: string
            example: Comments goes here
          Customfields:
            $ref: '#/components/schemas/CustomColumnsForGetEmployeeQualification'
          Files:
            $ref: '#/components/schemas/AddFilesForGetEmployeeQualification'
        x-konfig-properties:
          Customfields:
            description: Customfields array
          Files:
            description: Files array
    ResultForGetDrivingLicenseByEmployeeId:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          DrivingId:
            description: DrivingId value
            type: integer
            example: 2
          LicenseNumber:
            description: LicenseNumber value
            type: string
            example: Li555
          LicenseType:
            description: LicenseType value
            type: string
            example: 2 wheeler
          ExpiryDate:
            description: ExpiryDate value
            type: string
            format: date
            example: '2018-07-07'
          Comments:
            description: Comments value
            type: string
            example: Comments goes here
          Customfields:
            $ref: '#/components/schemas/CustomColumnsForGetEmployeeDriving'
          Files:
            $ref: '#/components/schemas/AddFilesForGetEmployeeDriving'
        x-konfig-properties:
          Customfields:
            description: Custom fields array
          Files:
            description: Files array
    ResultForGetDrivingLicenseByDrivingIdObject:
      description: ' Result Array'
      type: object
      properties:
        DrivingId:
          description: DrivingId value
          type: integer
          example: 2
        LicenseNumber:
          description: LicenseNumber value
          type: string
          example: Li555
        LicenseType:
          description: LicenseType value
          type: string
          example: 2 wheeler
        ExpiryDate:
          description: ExpiryDate value
          type: string
          format: date
          example: '2018-07-07'
        Comments:
          description: Comments value
          type: string
          example: Comments goes here
        Customfields:
          $ref: '#/components/schemas/CustomColumnsForGetEmployeeDriving'
        Files:
          $ref: '#/components/schemas/AddFilesForGetEmployeeDriving'
      x-konfig-properties:
        Customfields:
          description: Customfields array
        Files:
          description: Files array
    CustomColumnsForEmployeeQualification:
      description: ' Result Array'
      type: array
      items:
        type: object
        required:
          - ColumnName
        properties:
          ColumnName:
            description: ColumnName for employee qualification
            type: string
            maxLength: 100
            example: Vehicle 1
          ColumnValue:
            description: ColumnValue for employee qualification
            type: string
            example: ABC
    AddFilesForEmployeeQualification:
      description: ' Result Array'
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        properties:
          DocumentName:
            description: DocumentName for employee qualification
            type: string
            maxLength: 100
            example: my.txt
          File:
            description: File for employee qualification
            type: string
            example: Base 64 code
          Descriptions:
            description: Descriptions for employee qualification
            type: string
            maxLength: 256
            example: Descriptions goes here
          DocumentCategory:
            description: DocumentCategory for employee qualification
            type: string
            maxLength: 100
            example: Custom Catagory
          SignatureRequired:
            description: SignatureRequired for employee qualification
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: 'False'
    ResultForGetTrainingDetail:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          TrainingId:
            description: TrainingId Value
            type: integer
            example: 565
          TrainingType:
            description: Training type Value
            type: string
            example: Java
          Description:
            description: Description Value
            type: string
            example: Opps Concepts
          Importance:
            description: Importance Value
            type: integer
            example: 1
          Status:
            description: Status Value
            type: integer
            example: 2
          PercentComplete:
            description: Percent complete Value
            type: integer
            format: decimal
            example: 0.01
          TrainingDate:
            description: Training date Value
            type: string
            format: date
            example: '2017-10-10'
          TrainingEndDate:
            description: TrainingEndDate Value
            type: string
            format: date
            example: '2015-10-11'
          TrainingExpiryDate:
            description: TrainingExpiryDate Value
            type: string
            format: date
            example: '2015-10-12'
          Provider:
            description: Provider Value
            type: string
            example: John
          Cost:
            description: Cost Value
            type: string
            format: decimal
            example: 0.01
          Note:
            description: Note Value
            type: string
            example: Note goes here
          CustomColumns:
            $ref: '#/components/schemas/CustomColumnsForGetTrainingDetail'
        x-konfig-properties:
          CustomColumns:
            description: CustomColumns Value
    ResultGetByAppraisalIdObject:
      description: ' Result Array'
      type: object
      properties:
        AppraisalId:
          description: ' appraisal id value'
          type: number
          format: integer
          example: 383
        AppraisalReviewDate:
          description: ' appraisal review date value'
          type: string
          format: date
          example: '2017-05-01'
        Reviewer:
          description: ' Reviewer value'
          type: string
          example: Krushna Bapat
        Note:
          description: note value
          type: string
          example: Notes goes here
        ActionPlan:
          description: ' action plan value'
          type: string
          example: '11'
        Objectives:
          description: ' Objectives value'
          type: string
          example: '121'
        Customfields:
          $ref: '#/components/schemas/ArrayForGetByAppraisalIdArray'
        Files:
          $ref: '#/components/schemas/ArrayForGetAppraisalByIdFile'
      x-konfig-properties:
        Customfields:
          description: ' Custom fields value'
        Files:
          description: ' Files '
    GetEmployeeByIdArray:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          AppraisalId:
            description: ' appraisal id value'
            type: number
            format: integer
            example: 355
          AppraisalReviewDate:
            description: ' appraisal review date value'
            type: string
            format: date
            example: '2017-05-01'
          Reviewer:
            description: ' Reviewer value'
            type: string
            example: Notification 1 Admin
          Note:
            description: Note value
            type: string
            example: Notes goes here
          ActionPlan:
            description: Action plan value
            type: string
            example: '11'
          Objectives:
            description: ' Objectives value'
            type: string
            example: '121'
          Customfields:
            $ref: '#/components/schemas/ArrayForGetByAppraisalIdArray'
          Files:
            $ref: '#/components/schemas/ArrayForGetAppraisalByIdFile'
        x-konfig-properties:
          Customfields:
            description: ' Custom fields value'
          Files:
            description: Files
    ArrayForGetByAppraisalIdArray:
      type: array
      items:
        type: object
        properties:
          ColumnName:
            description: ColumnName value
            type: string
            example: MNO
          ColumnValue:
            description: Column Value
            type: string
            example: file
    ArrayForGetAppraisalByIdFile:
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            example: filelode.pdf
          Description:
            description: Description value
            type: string
            example: dsddsds
          FileUrl:
            description: FileUrl value
            type: string
            format: url
            example: >-
              http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?bf26a772-3891-449e-b8f6-a06248b455b3
          Category:
            description: Category value
            type: string
            example: catagory
          SignatureRequired:
            description: SignatureRequired value
            type: string
            enum:
              - 'false'
              - 'true'
            example: 'false'
    ResultCreateNewApplicant:
      type: object
      properties:
        IsDuplicate:
          description: 'Is duplicate value '
          type: string
          example: true
          enum:
            - 'false'
            - 'true'
        ApplicantId:
          description: 'ApplicantId value '
          type: integer
          example: 4
    ResultCheckDuplicateApplicant:
      type: object
      properties:
        IsDuplicate:
          description: 'IsDuplicate value '
          type: string
          example: true
          enum:
            - 'false'
            - 'true'
    ResultWorkPatternApplicant:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          WorkPatternId:
            description: Work pattern id value
            type: integer
            example: 2
          WorkPatternName:
            description: Work pattern name value
            type: string
            example: Monday to Friday 9am to 5.30pm (37.5 Hrs)
          Week:
            $ref: '#/components/schemas/WeekArrayForWorkPattern'
          AssignedTo:
            $ref: '#/components/schemas/AssignedToArrayForWorkPattern'
        x-konfig-properties:
          Week:
            description: Array of Week
          AssignedTo:
            description: Array of assignee to
    AssignedToArrayForWorkPattern:
      description: Result array
      type: array
      items:
        type: object
        properties:
          EmployeeId:
            description: Employee Id value
            type: string
            example: PW66
          FirstName:
            description: First name  value
            type: string
            example: Vaibhavi
          LastName:
            description: Last name value
            type: string
            example: Desai
    WeekArrayForWorkPattern:
      description: Result array
      type: array
      items:
        type: object
        properties:
          WeekNumber:
            description: Week number value
            type: integer
            example: 2
          WeekDetail:
            $ref: '#/components/schemas/WeekDetailArrayForWorkPattern'
        x-konfig-properties:
          WeekDetail:
            description: Array For Work Detail
    WeekDetailArrayForWorkPattern:
      description: Result array
      type: array
      items:
        type: object
        properties:
          WeekNumber:
            description: Week number value
            type: integer
            example: 2
          WorkPatternDay:
            description: Week detail contains array For work pattren
            type: string
            example: Monday
            enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
          TotalWorkingDays:
            description: Total working days value
            type: double
            example: 1.00"
          TotalWorkingMins:
            description: Total working days value
            type: integer
            example: 450
          ShiftStartTime:
            description: Shift start time value
            type: string
            example: '9.30'
          ShiftEndTime:
            description: Shift end time value
            type: string
            example: '6.30'
          BreakTime:
            description: ' break time value'
            type: string
            example: 1.30pm
    ResultGetLateByEmployeeId:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          EmployeeId:
            description: 'Employee id value '
            type: integer
            example: 22957
          LateDate:
            description: 'Late Date value '
            type: string
            format: date
            example: '2017-07-18'
          LateMinutes:
            description: 'Late minutes value '
            type: integer
            example: 10
          Comments:
            description: 'Comments  value '
            type: string
            example: Comments goes here
    ResultGetVacancyObject:
      description: ' Result Array'
      type: object
      properties:
        VacancyName:
          description: Vacancy name value
          type: string
          example: IT Programmer
        VacancyDescription:
          description: Vacancy description value
          type: string
          example: IT Programmer
        Company:
          description: Company name value
          type: string
          example: Company name
        Location:
          description: Location value
          type: string
          example: Mumbai
        Department:
          description: Department value
          type: string
          example: IT
        Status:
          description: Status value
          type: integer
          example: 2
        ClosingDate:
          description: Closing date value
          type: string
          format: date
          example: '2016-07-31'
        Reference:
          description: Reference value
          type: string
          example: VA4
        SalaryRange:
          description: Salary range value
          type: string
          example: '10000'
        JobDescription:
          description: Job description value
          type: string
          example: Job Description
        IsHideSalary:
          description: IsHideSalary value
          type: string
          example: false
          enum:
            - 'false'
            - 'true'
        JobTitle:
          description: Job title value
          type: string
          example: Software Engineer
        VacancyType:
          description: Vacancy type value
          type: string
          example: Internal
          enum:
            - External
            - Internal
            - Both
        City:
          description: City value
          type: string
          example: Mumbai
        Country:
          description: Country value
          type: string
          example: India
        Experience:
          description: Experience value
          type: string
          example: 4 Year
        JobBordUrl:
          description: JobBordUrl value
          type: string
          format: url
          example: >-
            http://itgpeoplehr.localhost.net:12345/Pages/JobBoard/Opening.aspx?v=b3df0ea6-69ec-458e-a045-a85c92de6514
        AdditionalQuestions:
          $ref: '#/components/schemas/ResultAdditionalQuestionsArrayobject'
        InternalQuestions:
          $ref: '#/components/schemas/ResultInternalQuestionsArrayobject'
      x-konfig-properties:
        AdditionalQuestions:
          description: Additional questions array list
        InternalQuestions:
          description: Internal questions array list
    ResultGetAllVacancyObject:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          VacancyName:
            description: Vacancy name value
            type: string
            example: IT Programmer
          VacancyDescription:
            description: Vacancy description value
            type: string
            example: IT Programmer
          Company:
            description: Company name value
            type: string
            example: Company name
          Location:
            description: Location value
            type: string
            example: Mumbai
          Department:
            description: Department value
            type: string
            example: IT
          Status:
            description: Status value
            type: integer
            example: 2
          ClosingDate:
            description: Closing date value
            type: string
            format: date
            example: '2016-07-31'
          Reference:
            description: Reference value
            type: string
            example: VA4
          SalaryRange:
            description: Salary range value
            type: string
            example: '10000'
          JobDescription:
            description: Job description value
            type: string
            example: Job Description
          IsHideSalary:
            description: IsHideSalary value
            type: string
            example: false
            enum:
              - 'false'
              - 'true'
          JobTitle:
            description: Job title value
            type: string
            example: Software Engineer
          VacancyType:
            description: Vacancy type value
            type: string
            example: Internal
            enum:
              - External
              - Internal
              - Both
          City:
            description: City value
            type: string
            example: Mumbai
          Country:
            description: Country value
            type: string
            example: India
          Experience:
            description: Experience value
            type: string
            example: 4 Year
          JobBordUrl:
            description: JobBordUrl value
            type: string
            format: url
            example: >-
              http://itgpeoplehr.localhost.net:12345/Pages/JobBoard/Opening.aspx?v=b3df0ea6-69ec-458e-a045-a85c92de6514
          AdditionalQuestions:
            $ref: '#/components/schemas/ResultAdditionalQuestionsArrayobject'
          InternalQuestions:
            $ref: '#/components/schemas/ResultInternalQuestionsArrayobject'
        x-konfig-properties:
          AdditionalQuestions:
            description: Additional questions array list
          InternalQuestions:
            description: Internal questions array list
    ResultInternalQuestionsArrayobject:
      type: array
      items:
        type: object
        properties:
          QuestionId:
            description: 'Question id value '
            type: byte
            example: '2'
          QuestionType:
            description: 'Question type value '
            type: byte
            example: '1'
          IsMandatory:
            description: 'Is mandatory type value '
            type: string
            example: true
            enum:
              - 'true'
              - 'false'
          Question:
            description: 'Question type value '
            type: string
            example: Please indicate your gender
          AdditionalOrInternalType:
            description: 'Additional or internal type value '
            type: integer
            example: 1
          QuestionOptions:
            $ref: '#/components/schemas/ResultlstInternalQuestions'
        x-konfig-properties:
          QuestionOptions:
            description: Question options list value
    ResultlstInternalQuestions:
      description: Question options list
      type: array
      items:
        type: object
        properties:
          QuestionOptions:
            description: QuestionOptions value
            type: string
    Result1GetTimesheetArray:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          TimesheetDate:
            description: 'timesheetDate default value '
            type: string
            format: date
            example: '2014-01-01'
          TimeIn1:
            description: 'TimeIn1 value '
            type: string
            format: timespan
            example: '09:35'
          TimeOut1:
            description: 'TimeOut1 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn2:
            description: 'TimeIn2 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut2:
            description: 'TimeOut2 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn3:
            description: 'TimeIn3 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut3:
            description: 'TimeOut3 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn4:
            description: 'TimeIn4 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut4:
            description: 'TimeOut4 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn5:
            description: 'TimeIn5 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut5:
            description: 'TimeOut5 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn6:
            description: 'TimeIn6 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut6:
            description: 'TimeOut6 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn7:
            description: 'TimeIn7 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut7:
            description: 'TimeOut7 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn8:
            description: 'TimeIn8 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut8:
            description: 'TimeOut8 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn9:
            description: 'TimeIn9 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut9:
            description: 'TimeOut9 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn10:
            description: 'TimeIn10 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut10:
            description: 'TimeOut10 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn11:
            description: 'TimeIn11 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut11:
            description: 'TimeOut11 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn12:
            description: 'TimeIn12 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut12:
            description: 'TimeOut12 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn13:
            description: 'TimeIn13 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut13:
            description: 'TimeOut13 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn14:
            description: 'TimeIn14 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut14:
            description: 'TimeOut14 value '
            type: string
            format: timespan
            example: '04:00'
          TimeIn15:
            description: 'TimeIn15 value '
            type: string
            format: timespan
            example: '09:45'
          TimeOut15:
            description: 'TimeOut15 value '
            type: string
            format: timespan
            example: '04:00'
          TotalTimeWorkedTodayInMins:
            description: Total time worked today in mins value
            type: string
            example: '405'
          TotalTimeWorkedThisWeekInMins:
            description: Total time worked this week in mins value
            type: string
            example: '405'
          TotalTimeWorkedThisMonthInMins:
            description: Total time worked this month in mins value
            type: string
            example: '405'
          IPAddressTimeIn1:
            description: IP address time in 1 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn2:
            description: IP address time in 2 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn3:
            description: IP address time in 3 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn4:
            description: IP address time in 4 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn5:
            description: IP address time in 5 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn6:
            description: IP address time in 6 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn7:
            description: IP address time in 7 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn8:
            description: IP address time in 8 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn9:
            description: IP address time in 9 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn10:
            description: IP address time in 10 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn11:
            description: IP address time in 11 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn12:
            description: IP address time in 12 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn13:
            description: IP address time in 13 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn14:
            description: IP address time in 14 value
            type: string
            example: 192.168.0.156
          IPAddressTimeIn15:
            description: IP address time in 15 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut1:
            description: IP address time out 1 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut2:
            description: IP address time out 2 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut3:
            description: IP address time out 3 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut4:
            description: IP address time out 4 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut5:
            description: IP address time out 5 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut6:
            description: IP address time out 6 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut7:
            description: IP address time out 7 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut8:
            description: IP address time out 8 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut9:
            description: IP address time out 9 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut10:
            description: IP address time out 10 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut11:
            description: IP address time out 11 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut12:
            description: IP address time out 12 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut13:
            description: IP address time out 13 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut14:
            description: IP address time out 14 value
            type: string
            example: 192.168.0.156
          IPAddressTimeOut15:
            description: IP address time out 15 value
            type: string
            example: 192.168.0.156
          TimesheetState:
            description: 'TimesheetState value '
            type: string
            format: date
            example: Complete
          Comments:
            description: Comments value
            type: string
            example: Complete
          ChangedDate:
            description: ChangedDate value
            type: string
            format: date
            example: '2017-07-19'
    Result1GetHolidayDetailArray:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          StartDate:
            description: Start date value
            type: string
            format: date
            example: '2016-07-27'
          EndDate:
            description: End date value
            type: string
            format: date
            example: '2017-07-27'
          DurationType:
            description: DurationType value
            type: integer
            example: 1
          DurationInDays:
            description: DurationInDays value
            type: integer
            format: decimal
            example: 1
          DurationInMinutes:
            description: DurationInMinutes value
            type: integer
            example: 450
          DurationInDaysThisPeriod:
            description: DurationInDaysThisPeriod value
            type: integer
            format: decimal
            example: 1
          DurationInMinutesThisPeriod:
            description: DurationInMinutesThisPeriod value
            type: integer
            example: 450
          PartOfDay:
            description: PartOfDay value
            type: string
            enum:
              - AM
              - PM
            example: AM
          RequesterComments:
            description: RequesterComments value
            type: string
            example: asach test 20
          ApproverComments:
            description: ApproverComments value
            type: string
            example: Auto Approved
          Approver:
            description: Approver value
            type: string
            example: Vaibhavi Desai
          Status:
            description: Status value
            type: string
            enum:
              - Submitted
              - Approved
              - Rejected
            example: Approved
          LastActionDateTime:
            description: LastActionDateTime value
            type: string
            format: datetime
            example: '2017-07-20 19:06:17'
          IsToilHoliday:
            description: IsToilHoliday value
            type: string
            enum:
              - 'false'
              - 'true'
            example: false
    Result1GetList5Array:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          EmployeeId:
            $ref: '#/components/schemas/EmployeeIdArrayObject'
          Title:
            $ref: '#/components/schemas/TitleObject'
          FirstName:
            $ref: '#/components/schemas/FirstNameObject'
          LastName:
            $ref: '#/components/schemas/LastNameObject'
          OtherName:
            $ref: '#/components/schemas/OtherNameObject'
          KnownAs:
            $ref: '#/components/schemas/KnownAsObject'
          EmailId:
            $ref: '#/components/schemas/EmailIdObject'
          StartDate:
            $ref: '#/components/schemas/StartDateObject'
          DateOfBirth:
            $ref: '#/components/schemas/DateOfBirthObject'
          JobRole:
            $ref: '#/components/schemas/JobRoleObject'
          Company:
            $ref: '#/components/schemas/CompanyObject'
          CompanyEffectiveDate:
            description: Company effective date value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Company effective date value
                type: string
                format: date
                example: '2014-01-01'
          Location:
            $ref: '#/components/schemas/LocationObject'
          LocationEffectiveDate:
            description: Location effective date value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Location effective date value
                type: string
                format: date
                example: '2017-02-02'
          Department:
            $ref: '#/components/schemas/DepartmentObject'
          DepartmentEffectiveDate:
            description: Department effective date value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Department effective date value
                type: string
                format: date
                example: '2017-05-01'
          JobRoleChangeDate:
            description: Job role change date value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Job role change date value
                type: string
                format: date
                example: '2017-05-05'
          ReportsTo:
            $ref: '#/components/schemas/ReportsToObject'
          ReportsToEffectiveDate:
            description: Reports to effective date value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Reports to effective date value
                type: string
                format: date
                example: '2016-06-06'
          ReportsToEmployeeId:
            description: Reports to employee id value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Reports to employee id value
                type: string
                example: PW6
          ReportsToEmailAddress:
            description: Reports to email address value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Reports to email address value
                type: string
                format: email
                example: abc.xyz@itgurusssoftware.com
          NISNumber:
            $ref: '#/components/schemas/NISNumberObject'
          Nationality:
            $ref: '#/components/schemas/NationalityObject'
          EmploymentType:
            $ref: '#/components/schemas/EmploymentTypeObject'
          EmploymentTypeEffectiveDate:
            description: Employment type effective date value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Employment type effective date value
                type: string
                format: date
                example: '2017-07-01'
          EmployeeStatus:
            description: Employee status value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Employee status value
                type: string
                example: '1'
          HolidayAllowanceDays:
            description: Holiday allowance days value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Holiday allowance days value
                type: string
                example: '0.00'
          HolidayAllowanceMins:
            description: Holiday allowance mins value
            type: object
            properties:
              DisplayValue:
                $ref: '#/components/schemas/DisplayValue'
            x-konfig-properties:
              DisplayValue:
                description: Holiday allowance mins value
                type: string
                example: '0'
          NoticePeriod:
            $ref: '#/components/schemas/NoticePeriodObject'
          ProbationEndDate:
            $ref: '#/components/schemas/ProbationEndDateObject'
          Gender:
            $ref: '#/components/schemas/GenderObject'
          ContactDetail:
            $ref: '#/components/schemas/ContactDetailObject'
          OtherContact:
            $ref: '#/components/schemas/OtherContactObject'
          RightToWork:
            $ref: '#/components/schemas/RightToWorkObject'
          BackgroundDetail:
            $ref: '#/components/schemas/BackgroundDetailObject'
          BankDetail:
            $ref: '#/components/schemas/BankDetailObject'
          EmploymentDetail:
            $ref: '#/components/schemas/EmploymentDetailObject'
          LeavingDate:
            $ref: '#/components/schemas/LeavingDate'
          ReasonForLeaving:
            $ref: '#/components/schemas/ReasonforLeaving'
          EmployeeImage:
            $ref: '#/components/schemas/EmployeeImagePath'
          APIColumn1:
            $ref: '#/components/schemas/APIColumn1'
          APIColumn2:
            $ref: '#/components/schemas/APIColumn2'
          APIColumn3:
            $ref: '#/components/schemas/APIColumn3'
          APIColumn4:
            $ref: '#/components/schemas/APIColumn4'
          APIColumn5:
            $ref: '#/components/schemas/APIColumn5'
          lstFieldHistoryJobrole:
            $ref: '#/components/schemas/lstFieldHistoryJobrole'
        x-konfig-properties:
          EmployeeId:
            description: EmployeeId contain displayValue and FieldHistory array
          Title:
            description: ' Title '
          FirstName:
            description: 'FirstName of employee '
          LastName:
            description: 'LastName of employee '
          OtherName:
            description: 'OtherName of employee '
          KnownAs:
            description: KnownAs
          EmailId:
            description: EmailId of employee
          StartDate:
            description: StartDate of employee
          DateOfBirth:
            description: DateOfBirth of employee
          JobRole:
            description: JobRole of employee
          Company:
            description: Company name of employee
          Location:
            description: Location name of employee
          Department:
            description: Department name of employee
          ReportsTo:
            description: Reports to value
          NISNumber:
            description: NIS number value
          Nationality:
            description: Nationality value
          EmploymentType:
            description: Employment type value
          NoticePeriod:
            description: Notice period value
          ProbationEndDate:
            description: Probation end date value
          Gender:
            description: Gender value
          ContactDetail:
            description: Contact detail value
          OtherContact:
            description: Other Contact detail value
          RightToWork:
            description: Right to work value
          BackgroundDetail:
            description: Background detail value
          BankDetail:
            description: Bank detail value
          EmploymentDetail:
            description: Employment detail value
          LeavingDate:
            description: LeavingDate value
          ReasonForLeaving:
            description: Reason for leaving value
          EmployeeImage:
            description: Employee image value
          APIColumn1:
            description: API column 1 value
          APIColumn2:
            description: API column 2 value
          APIColumn3:
            description: API column 3 value
          APIColumn4:
            description: API column 4 value
          APIColumn5:
            description: API column 5 value
          lstFieldHistoryJobrole:
            description: list of Field history job role
    ResultGetEmployeeDetail:
      description: ' Result Array'
      type: object
      properties:
        EmployeeId:
          $ref: '#/components/schemas/EmployeeIdArrayObject'
        Title:
          $ref: '#/components/schemas/TitleObject'
        FirstName:
          $ref: '#/components/schemas/FirstNameObject'
        LastName:
          $ref: '#/components/schemas/LastNameObject'
        OtherName:
          $ref: '#/components/schemas/OtherNameObject'
        KnownAs:
          $ref: '#/components/schemas/KnownAsObject'
        EmailId:
          $ref: '#/components/schemas/EmailIdObject'
        StartDate:
          $ref: '#/components/schemas/StartDateObject'
        DateOfBirth:
          $ref: '#/components/schemas/DateOfBirthObject'
        JobRole:
          $ref: '#/components/schemas/JobRoleObject'
        Company:
          $ref: '#/components/schemas/CompanyObject'
        CompanyEffectiveDate:
          description: Company effective date value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Company effective date value
              type: string
              format: date
              example: '2017-01-01'
        Location:
          $ref: '#/components/schemas/LocationObject'
        LocationEffectiveDate:
          description: Location effective date value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Location effective date value
              type: string
              format: date
              example: '2017-02-02'
        Department:
          $ref: '#/components/schemas/DepartmentObject'
        DepartmentEffectiveDate:
          description: Department effective date value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Department effective date value
              type: string
              format: date
              example: '2017-05-01'
        JobRoleChangeDate:
          description: Job role change date value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Job role change date value
              type: string
              format: date
              example: '2017-05-05'
        ReportsTo:
          $ref: '#/components/schemas/ReportsToObject'
        ReportsToEffectiveDate:
          description: Reports to effective date value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Reports to effective date value
              type: string
              format: date
              example: '2016-06-06'
        ReportsToEmployeeId:
          description: Reports to employee id value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Reports to employee id value
              type: string
              example: PW6
        ReportsToEmailAddress:
          description: Reports to email address value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Reports to email address value
              type: string
              format: email
              example: abc.xyz@itgurusssoftware.com
        NISNumber:
          $ref: '#/components/schemas/NISNumberObject'
        Nationality:
          $ref: '#/components/schemas/NationalityObject'
        EmploymentType:
          $ref: '#/components/schemas/EmploymentTypeObject'
        EmploymentTypeEffectiveDate:
          description: Employment type effective date value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Employment type effective date value
              type: string
              format: date
              example: '2017-07-01'
        EmployeeStatus:
          description: Employee status value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Employee status value
              type: string
              example: '1'
        HolidayAllowanceDays:
          description: Holiday allowance days value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Holiday allowance days value
              type: string
              example: '0.00'
        HolidayAllowanceMins:
          description: Holiday allowance mins value
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Holiday allowance mins value
              type: string
              example: '0'
        NoticePeriod:
          $ref: '#/components/schemas/NoticePeriodObject'
        ProbationEndDate:
          $ref: '#/components/schemas/ProbationEndDateObject'
        Gender:
          $ref: '#/components/schemas/GenderObject'
        ContactDetail:
          $ref: '#/components/schemas/ContactDetailObject'
        OtherContact:
          $ref: '#/components/schemas/OtherContactObject'
        RightToWork:
          $ref: '#/components/schemas/RightToWorkObject'
        BackgroundDetail:
          $ref: '#/components/schemas/BackgroundDetailObject'
        BankDetail:
          $ref: '#/components/schemas/BankDetailObject'
        EmploymentDetail:
          $ref: '#/components/schemas/EmploymentDetailObject'
        LeavingDate:
          $ref: '#/components/schemas/LeavingDate'
        ReasonForLeaving:
          $ref: '#/components/schemas/ReasonforLeaving'
        EmployeeImage:
          $ref: '#/components/schemas/EmployeeImagePath'
        APIColumn1:
          $ref: '#/components/schemas/APIColumn1'
        APIColumn2:
          $ref: '#/components/schemas/APIColumn2'
        APIColumn3:
          $ref: '#/components/schemas/APIColumn3'
        APIColumn4:
          $ref: '#/components/schemas/APIColumn4'
        APIColumn5:
          $ref: '#/components/schemas/APIColumn5'
        lstFieldHistoryJobrole:
          $ref: '#/components/schemas/lstFieldHistoryJobrole'
      x-konfig-properties:
        EmployeeId:
          description: EmployeeId contain displayValue and FieldHistory array
        Title:
          description: ' Title '
        FirstName:
          description: 'FirstName of employee '
        LastName:
          description: 'LastName of employee '
        OtherName:
          description: 'OtherName of employee '
        KnownAs:
          description: KnownAs
        EmailId:
          description: EmailId of employee
        StartDate:
          description: StartDate of employee
        DateOfBirth:
          description: DateOfBirth of employee
        JobRole:
          description: JobRole of employee
        Company:
          description: Company name of employee
        Location:
          description: Location name of employee
        Department:
          description: Department name of employee
        ReportsTo:
          description: Reports to value
        NISNumber:
          description: NIS number value
        Nationality:
          description: Nationality value
        EmploymentType:
          description: Employment type value
        NoticePeriod:
          description: Notice period value
        ProbationEndDate:
          description: Probation end date value
        Gender:
          description: Gender value
        ContactDetail:
          description: Contact detail value
        OtherContact:
          description: Other Contact detail value
        RightToWork:
          description: Right to work value
        BackgroundDetail:
          description: Background detail value
        BankDetail:
          description: Bank detail value
        EmploymentDetail:
          description: Employment detail value
        LeavingDate:
          description: LeavingDate value
        ReasonForLeaving:
          description: Reason for leaving value
        EmployeeImage:
          description: Employee image value
        APIColumn1:
          description: API column 1 value
        APIColumn2:
          description: API column 2 value
        APIColumn3:
          description: API column 3 value
        APIColumn4:
          description: API column 4 value
        APIColumn5:
          description: API column 5 value
        lstFieldHistoryJobrole:
          description: list of Field history job role
    EmployeeIdArrayObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: PW180
        FieldHistory:
          description: FieldHistory array list
    TitleObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Mr.
        FieldHistory:
          description: FieldHistory array list
    FirstNameObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Employee first name
        FieldHistory:
          description: FieldHistory array list
    LastNameObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Employee last name
        FieldHistory:
          description: FieldHistory array list
    OtherNameObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Other name
        FieldHistory:
          description: FieldHistory array list
    KnownAsObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Known as value
        FieldHistory:
          description: FieldHistory array list
    EmailIdObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          format: email
          example: firstname.lastname@itgurusssoftware.com
        FieldHistory:
          description: FieldHistory array list
    StartDateObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          format: date
          example: '2014-01-01'
        FieldHistory:
          description: FieldHistory array list
    DateOfBirthObject:
      description: ' Result Array'
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          format: date
          example: '1991-08-07'
        FieldHistory:
          description: FieldHistory array list
    JobRoleObject:
      description: Job role object contain displayValue and fieldHistoryForJobRole array
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistoryForJobRole:
          $ref: '#/components/schemas/FieldHistoryForJobRoleObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Software Enginner
        FieldHistoryForJobRole:
          description: Field history for job role array list
    CompanyObject:
      description: >-
        company object contain displayValue and fieldHistoryForEffectiveDate
        array
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistoryForEffectiveDate:
          $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Company name
        FieldHistoryForEffectiveDate:
          description: Field history for effective date array list
    LocationObject:
      description: >-
        Location object contain displayValue and fieldHistoryForEffectiveDate
        array
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistoryForEffectiveDate:
          $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Mumbai
        FieldHistoryForEffectiveDate:
          description: Field history for effective date array list
    DepartmentObject:
      description: >-
        Department object contain displayValue and fieldHistoryForEffectiveDate
        array
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistoryForEffectiveDate:
          $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: IT
        FieldHistoryForEffectiveDate:
          description: Field history for effective date array list
    ReportsToObject:
      description: >-
        Department object contain displayValue and fieldHistoryForEffectiveDate
        array
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistoryForEffectiveDate:
          $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: FirstName LastName
        FieldHistoryForEffectiveDate:
          description: Field history for effective date array list
    NISNumberObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: AAAAAAAAAAAAAA
        FieldHistory:
          description: FieldHistory array list
    NationalityObject:
      description: The Result Array
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Indian
        FieldHistory:
          description: FieldHistory array list
    EmploymentTypeObject:
      description: >-
        company object contain displayValue and fieldHistoryForEffectiveDate
        array
      type: object
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistoryForEffectiveDate:
          $ref: '#/components/schemas/FieldHistoryForEffectiveDateObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Full Time
        FieldHistoryForEffectiveDate:
          description: Field history for effective date array list
    NoticePeriodObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: don't know
        FieldHistory:
          description: FieldHistory array list
    ProbationEndDateObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          format: date
          example: '2017-04-03'
        FieldHistory:
          description: FieldHistory array list
    GenderObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Male
        FieldHistory:
          description: FieldHistory array list
    ContactDetailObject:
      description: ContactDetail contain displayValue and FieldHistory array values
      type: object
      properties:
        Address:
          $ref: '#/components/schemas/AddressObject'
        WorkPhoneNumber:
          $ref: '#/components/schemas/WorkPhoneNumberObject'
        PersonalPhoneNumber:
          $ref: '#/components/schemas/PersonalPhoneNumberObject'
        PersonalEmail:
          $ref: '#/components/schemas/PersonalEmailObject'
        Mobile:
          $ref: '#/components/schemas/MobileObject'
      x-konfig-properties:
        Address:
          description: Address contain displayValue and FieldHistory array values
        WorkPhoneNumber:
          description: WorkPhoneNumber contain displayValue and FieldHistory array values
        PersonalPhoneNumber:
          description: >-
            PersonalPhoneNumber contain displayValue and FieldHistory array
            values
        PersonalEmail:
          description: PersonalEmail contain displayValue and FieldHistory array values
        Mobile:
          description: Mobile contain displayValue and FieldHistory array values
    AddressObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Address
        FieldHistory:
          description: FieldHistory array list
    WorkPhoneNumberObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: '9966005500'
        FieldHistory:
          description: FieldHistory array list
    PersonalPhoneNumberObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: '9988776655'
        FieldHistory:
          description: FieldHistory array list
    PersonalEmailObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          format: email
          example: abc@itgurussoftware.com
        FieldHistory:
          description: FieldHistory array list
    MobileObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: '9988990099'
        FieldHistory:
          description: FieldHistory array list
    OtherContactObject:
      type: object
      properties:
        OtherContactName:
          description: OtherContactName contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Other contact name value
              type: string
              example: xyz
        Relationship:
          description: Relationship contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Relationship value
              type: string
              example: Relationship value
        OtheContactAddress:
          description: OtheContactAddress contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Other contact address value
              type: string
              example: Other contact address
        Telephone:
          description: Telephone contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Telephone value
              type: string
              example: Telephone number
        Mobile:
          description: Mobile contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Mobile value
              type: string
              example: '9900998877'
        Comments:
          description: Comments contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Comments value
              type: string
              example: Comments here
    RightToWorkObject:
      type: object
      properties:
        DocumentType:
          description: DocumentType contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Document type value
              type: string
              example: don't know
        DocumentId:
          description: DocumentId contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: DocumentId value
              type: string
              example: '1'
        ValidFrom:
          description: ValidFrom contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: ValidFrom value
              type: string
              format: date
              example: '2017-02-02'
        ValidTo:
          description: ValidTo contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: ValidTo value
              type: string
              format: date
              example: '2017-03-03'
        Duration:
          description: Duration contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Duration value
              type: string
              example: '1'
        RightToWorkComments:
          description: RightToWorkComments contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Right to work comments value
              type: string
              example: Right to work comments
    BackgroundDetailObject:
      type: object
      properties:
        CheckType:
          description: CheckType contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Check type value
              type: string
              example: check type value
        CompletionDate:
          description: CompletionDate contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Completion date value
              type: string
              format: date
              example: '2016-06-06'
        ExpiryDate:
          description: ExpiryDate contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: ExpiryDate value
              type: string
              format: date
              example: '2016-07-07'
        BackgroundDetailComments:
          description: BackgroundDetailComments contain displayValue
          type: object
          properties:
            DisplayValue:
              $ref: '#/components/schemas/DisplayValue'
          x-konfig-properties:
            DisplayValue:
              description: Background detail comments value
              type: string
              example: Background detail comments
    BankDetailObject:
      description: Bank detail contain displayValue and FieldHistory array values
      type: object
      properties:
        BankName:
          $ref: '#/components/schemas/BankNameObject'
        BankAddress:
          $ref: '#/components/schemas/BankAddressObject'
        BankCode:
          $ref: '#/components/schemas/BankCodeObject'
        AccountNumber:
          $ref: '#/components/schemas/AccountNumberObject'
        AccountName:
          $ref: '#/components/schemas/AccountNameObject'
      x-konfig-properties:
        BankName:
          description: BankName contain displayValue and FieldHistory array values
        BankAddress:
          description: BankAddress contain displayValue and FieldHistory array values
        BankCode:
          description: BankCode contain displayValue and FieldHistory array values
        AccountNumber:
          description: AccountNumber contain displayValue and FieldHistory array values
        AccountName:
          description: AccountName contain displayValue and FieldHistory array values
    BankNameObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: SBI
        FieldHistory:
          description: FieldHistory array list
    BankAddressObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Pune
        FieldHistory:
          description: FieldHistory array list
    BankCodeObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: '6789'
        FieldHistory:
          description: FieldHistory array list
    AccountNumberObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: '8411540414'
        FieldHistory:
          description: FieldHistory array list
    AccountNameObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Account Name
        FieldHistory:
          description: FieldHistory array list
    EmploymentDetailObject:
      description: Employment detail contain displayValue and FieldHistory array values
      type: object
      properties:
        PayrollCompany:
          $ref: '#/components/schemas/PayrollCompanyObject'
        PayrollID:
          $ref: '#/components/schemas/PayrollIDObject'
        TimeAndAttendanceID:
          $ref: '#/components/schemas/TimeAndAttendanceIDObject'
        RotaID:
          $ref: '#/components/schemas/RotaIDObject'
        CRMID:
          $ref: '#/components/schemas/CRMIDObject'
        ATSID:
          $ref: '#/components/schemas/ATSIDObject'
        PerformanceID:
          $ref: '#/components/schemas/PerformanceIDObject'
        BenefitsID:
          $ref: '#/components/schemas/BenefitsIDObject'
        System1ID:
          $ref: '#/components/schemas/System1IDObject'
        System2ID:
          $ref: '#/components/schemas/System2IDObject'
        System3ID:
          $ref: '#/components/schemas/System3IDObject'
        MethodOfRecruitment:
          $ref: '#/components/schemas/MethodOfRecruitmentObject'
      x-konfig-properties:
        PayrollCompany:
          description: PayrollCompany contain displayValue and FieldHistory array values
        PayrollID:
          description: PayrollID contain displayValue and FieldHistory array values
        TimeAndAttendanceID:
          description: >-
            TimeAndAttendanceID contain displayValue and FieldHistory array
            values
        RotaID:
          description: RotaID contain displayValue and FieldHistory array values
        CRMID:
          description: CRMID contain displayValue and FieldHistory array values
        ATSID:
          description: ATSID contain displayValue and FieldHistory array values
        PerformanceID:
          description: PerformanceID contain displayValue and FieldHistory array values
        BenefitsID:
          description: BenefitsID contain displayValue and FieldHistory array values
        System1ID:
          description: System1ID contain displayValue and FieldHistory array values
        System2ID:
          description: System2ID contain displayValue and FieldHistory array values
        System3ID:
          description: System3ID contain displayValue and FieldHistory array values
        MethodOfRecruitment:
          description: >-
            MethodOfRecruitment contain displayValue and FieldHistory array
            values
    PayrollCompanyObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your payroll company's name
        FieldHistory:
          description: FieldHistory array list
    PayrollIDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your payroll id
        FieldHistory:
          description: FieldHistory array list
    TimeAndAttendanceIDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your time and attendance id
        FieldHistory:
          description: FieldHistory array list
    RotaIDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your Rota id
        FieldHistory:
          description: FieldHistory array list
    CRMIDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your CRM id
        FieldHistory:
          description: FieldHistory array list
    ATSIDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your ATS id
        FieldHistory:
          description: FieldHistory array list
    PerformanceIDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your performance id
        FieldHistory:
          description: FieldHistory array list
    BenefitsIDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your benefits id
        FieldHistory:
          description: FieldHistory array list
    System1IDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your system one id
        FieldHistory:
          description: FieldHistory array list
    System2IDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your system two id
        FieldHistory:
          description: FieldHistory array list
    System3IDObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Your system three id
        FieldHistory:
          description: FieldHistory array list
    MethodOfRecruitmentObject:
      description: ' Result Array'
      type: object
      required:
        - EmployeeId
      properties:
        DisplayValue:
          $ref: '#/components/schemas/DisplayValue'
        FieldHistory:
          $ref: '#/components/schemas/EmployeeIdObject'
      x-konfig-properties:
        DisplayValue:
          description: DisplayValue value
          type: string
          example: Method of recruitment
        FieldHistory:
          description: FieldHistory array list
    lstFieldHistoryJobrole:
      description: lst Field history job role contain fieldHistoryForJobRole array
      type: object
      properties:
        FieldHistoryForJobRole:
          $ref: '#/components/schemas/FieldHistoryForJobRoleObject'
      x-konfig-properties:
        FieldHistoryForJobRole:
          description: Field history for job role array list
    Result1:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          EffectiveFrom:
            description: ' EffectiveFrom Value'
            type: string
            example: '2014-01-01'
          SalaryType:
            description: Salary type value
            type: string
            example: Annual
          PaymentFrequency:
            description: Payment frequency value
            type: string
            example: Monthly
          SalaryAmount:
            description: Salary amount value
            type: integer
            format: decimal
            example: 1000
          TotalSalaryAmount:
            description: Total salary amount value
            type: integer
            format: decimal
            example: 1000
          Currency:
            description: Currency value
            type: string
            example: ASD
          ChangeReason:
            description: ChangeReason value
            type: string
            example: New Resion
          Comments:
            description: Comments goes here
            type: string
            example: Comments goes here
          Deductions:
            $ref: '#/components/schemas/DeductionsObject'
          Entitlements:
            $ref: '#/components/schemas/EntitlementsObject'
        x-konfig-properties:
          Deductions:
            description: Deductions array list
          Entitlements:
            description: Entitlements array list
    DeductionsObject:
      type: array
      items:
        type: object
        properties:
          Deduction:
            description: Deduction value
            type: string
            example: Social Club 1
          Amount:
            description: ' contact last name'
            type: integer
            example: 100
          Percentage:
            description: Percentage
            type: integer
            format: decimal
            example: 10
          Comments:
            description: Comments
            type: string
            example: Comments for deduction social
          IncludeInTotalSalary:
            description: IncludeInTotalSalary
            type: string
            enum:
              - 'false'
              - 'true'
          DisplayAsAmountOrPercentage:
            description: Display as amount or percentage
            type: string
            enum:
              - 'false'
              - 'true'
    EntitlementsObject:
      type: array
      items:
        type: object
        properties:
          Entitlement:
            description: Entitlement value
            type: string
            example: Car Allowance 1
          Amount:
            description: ' contact last name'
            type: integer
            example: 100
          Percentage:
            description: Percentage
            type: integer
            format: decimal
            example: 10
          Comments:
            description: Comments
            type: string
            example: Comments
          IncludeInTotalSalary:
            description: IncludeInTotalSalary
            type: string
            enum:
              - 'false'
              - 'true'
          DisplayAsAmountOrPercentage:
            description: Display as amount or percentage
            type: string
            enum:
              - 'false'
              - 'true'
    ResultEmployeeAbsenceArray:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          StartDate:
            description: ' Start Date Value'
            type: string
            format: date
            example: '2014-01-01'
          EndDate:
            description: ' End Date  value'
            type: string
            format: date
            example: '2014-01-01'
          DurationDays:
            description: ' Duration Days value'
            type: integer
            format: double
            example: 22
          DurationInDaysThisPeriod:
            description: ' Duration In Days This Period value'
            type: integer
            format: double
            example: 22
          PartOfDay:
            description: Part Of Day value
            type: string
            enum:
              - AM
              - PM
            example: true
          BackToWorkInterviewRequried:
            description: The Back To Work Interview Requried  value
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
          BackToWorkInterviewDate:
            description: ' Back To Work Interview Date value'
            type: string
            example: '2013-05-01'
          MedicalCertificateType:
            description: ' Comments goes here'
            type: integer
          MedicalCertificateReceivedDate:
            description: ' Comments goes here'
            type: string
            example: '2013-05-01'
          Reason:
            description: ' Reason for Absence'
            MaxLength: 100
            type: string
            example: Not feeling well
          Comments:
            $ref: '#/components/schemas/CommentsArray'
          AbsencePaidStatus:
            description: ' Absence Paid Status '
            type: integer
            example: 1
          EmergencyLeave:
            description: ' Emergency Leave'
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
        x-konfig-properties:
          Comments:
            description: Comments Array  list
    ResultAdditionalQuestionsArrayobject:
      type: array
      items:
        type: object
        properties:
          QuestionId:
            description: 'Question id value '
            type: byte
            example: '2'
          QuestionType:
            description: 'Question type value '
            type: byte
            example: '1'
          IsMandatory:
            description: 'Is mandatory type value '
            type: string
            example: true
            enum:
              - 'false'
              - 'true'
          Question:
            description: 'Question type value '
            type: string
            example: Please indicate your gender
          AdditionalOrInternalType:
            description: 'Additional Or internal type value '
            type: integer
            example: 1
          QuestionOptions:
            $ref: '#/components/schemas/ResultlstQuestionOptions'
        x-konfig-properties:
          QuestionOptions:
            description: Question Options list value
    ResultlstQuestionOptions:
      description: Question options list
      type: array
      items:
        type: object
        properties:
          QuestionOptions:
            description: QuestionOptions value
            type: string
    GetBenefitByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to GetBenefitByEmployeeId
          type: string
        Action:
          description: Action name = GetBenefitByEmployeeId
          example: GetBenefitByEmployeeId
        EmployeeId:
          description: Employee id for get benefit by employee id
    GetByBenefitIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - BenefitId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        BenefitId:
          $ref: '#/components/schemas/BenefitId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to GetBenefitByBenefitId
          type: string
        Action:
          description: Action name = GetBenefitByBenefitId
          example: GetBenefitByBenefitId
        EmployeeId:
          description: Employee Id for get benefit by benefit id
        BenefitId:
          description: Benefit id for get benefit by benefit id
    ResultGetByBenefitIdObject:
      description: ' Result Array'
      type: object
      properties:
        BenefitId:
          description: Benefit Id value
          type: number
          format: integer
          example: 378
        Benefit:
          description: Benefit value
          type: string
          example: Date Awarded
        DateAwarded:
          description: DateAwarded value
          type: string
          format: date
          example: '2017-03-07'
        ExpiryDate:
          description: ExpiryDate value
          type: string
          format: date
          example: '2018-03-07'
        Value:
          description: Value
          type: number
          format: decimal
          example: 1000.1
        Comments:
          description: Comments value
          type: string
          example: Comments goes here
        RecoverOnTermination:
          description: RecoverOnTermination value
          type: string
          enum:
            - 'Yes'
            - 'No'
          example: 'Yes'
        Customfields:
          $ref: '#/components/schemas/CustomfieldArrayForEmployeeBenefit'
        Files:
          $ref: '#/components/schemas/FileArrayForEmployeeBenefit'
      x-konfig-properties:
        Customfields:
          description: Customfields value
        Files:
          description: Files info.
    Result1GetCustomScreenDetail:
      description: Result Array
      type: array
      items:
        type: object
        required: []
        properties:
          ScreenId:
            description: ScreenId value
            type: integer
            example: 1014
          ScreenName:
            description: ScreenName value
            type: string
            example: Grievance
    Result1GetByCustomScreenByEmployeeId:
      description: ' Result Array'
      type: array
      items:
        type: object
        required: []
        properties:
          TxnId:
            description: TxnId value
            type: integer
            example: 521
          Customfields:
            $ref: '#/components/schemas/CustomfieldsForGetCustomScreenDetailObject'
          Files:
            $ref: '#/components/schemas/FilesForGetByCustomScreenTransactionIdObject'
        x-konfig-properties:
          Customfields:
            description: Customfields value
          Files:
            description: Files value
    Result1GetByCustomScreenTransactionIdObject:
      description: ' Result Array'
      type: object
      required: []
      properties:
        TxnId:
          description: TxnId value
          type: integer
          example: 521
        Customfields:
          $ref: '#/components/schemas/CustomfieldsForGetCustomScreenDetailObject'
        Files:
          $ref: '#/components/schemas/FilesForGetByCustomScreenTransactionIdObject'
      x-konfig-properties:
        Customfields:
          description: Customfields value
        Files:
          description: Files value
    Result1GetHoildayEntittlement:
      description: ' Result Array'
      type: array
      items:
        type: object
        required: []
        properties:
          StartDate:
            description: StartDate value
            type: string
            format: date
            example: '2016-07-27'
          EndDate:
            description: ' EndDate value'
            type: string
            format: date
            example: '2017-07-27'
          MeasuredIn:
            description: MeasuredIn value
            type: string
            example: Days
          Entitlement:
            description: Entitlement value
            type: integer
            format: decimal
            example: 0
    Result1GetNextYearHolidayEntitlement:
      description: ' Result Array'
      type: array
      items:
        type: object
        required: []
        properties:
          StartDate:
            description: StartDate value
            type: string
            format: date
            example: '2016-07-27'
          EndDate:
            description: ' EndDate value'
            type: string
            format: date
            example: '2017-07-27'
          MeasuredIn:
            description: MeasuredIn value
            type: string
            example: Days
          Entitlement:
            description: Entitlement value
            type: integer
            format: decimal
            example: 0
    Result1GetHistoryByEmployeeIdAndFieldName:
      description: ' Result Array'
      type: array
      items:
        type: object
        required: []
        properties:
          JobRole:
            description: JobRole value
            type: string
            example: Software Enginner
          EffectiveDate:
            description: ' EffectiveDate value'
            type: string
            format: date
            example: '2014-01-01'
          ReasonForChange:
            description: ' ReasonForChange value'
            type: string
            example: New Starter
          ChangedOn:
            description: ChangedOn value
            type: string
            format: date
            example: '2017-07-13'
          CreatedBy:
            description: CreatedBy value
            type: string
            example: Vaibhavi Desai
    Result2GetHistoryByEmployeeIdAndFieldName:
      description: ' Result Array'
      type: array
      items:
        type: object
        required: []
        properties:
          FieldData:
            description: FieldData value
            type: string
            example: Addy Mark
          EffectiveDate:
            description: ' EffectiveDate value'
            type: string
            format: date
            example: '2014-01-01'
          ReasonForChange:
            description: ' ReasonForChange value'
            type: string
            example: New Starter
          ChangedOn:
            description: ChangedOn value
            type: string
            format: date
            example: '2017-07-13'
          CreatedBy:
            description: CreatedBy value
            type: string
            example: Vaibhavi Desai
    Result3GetHistoryByEmployeeIdAndFieldName:
      description: ' Result Array'
      type: array
      items:
        type: object
        required: []
        properties:
          OldValue:
            description: OldValue value
            type: string
            example: Dinklage
          NewValue:
            description: NewValue value
            type: string
            example: Jones
          ReasonForChange:
            description: ' ReasonForChange value'
            type: string
            example: New Starter
          ChangedOn:
            description: ChangedOn value
            type: string
            format: date
            example: '2017-07-13'
          CreatedBy:
            description: CreatedBy value
            type: string
            example: Vaibhavi Desai
    Result1GetQueryResult:
      description: ' Result Array'
      type: array
      items:
        type: object
        required: []
        properties:
          Employee Id:
            description: EmployeeId value
            type: string
            example: PW180
          First Name:
            description: ' First name value'
            type: string
            example: Bhumi
          Last Name:
            description: Last name value
            type: string
            example: Bapat
          Holiday Start Date:
            description: ' Holiday start date value'
            type: string
            format: date
            example: 28/08/2017
          Holiday End Date:
            description: Holiday end date value
            type: string
            format: date
            example: 28/08/2017
          Holiday Type:
            description: Holiday type value
            type: string
            example: Public Holiday Inclusive
          Holiday Duration Type:
            description: Holiday duration type value
            type: string
            example: Full day
          Part of the Day:
            description: Part of the day value
            type: string
            example: 'null'
          Holiday Duration (Days):
            description: Holiday duration (days) value
            type: string
            format: decimal
            example: 1.5
          Holiday Duration (Hrs):
            description: Holiday duration (hrs) value
            type: string
            example: '7:30'
          Holiday Comments:
            description: Holiday comments value
            type: string
            example: comment here
          Holiday Status:
            description: Holiday status value
            type: string
            example: Approved
    Result1GetQueryResultByQueryName:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          Employee Id:
            description: Employee id value
            type: string
            example: '180'
          First Name:
            description: ' First name value'
            type: string
            example: Bhumi
          Last Name:
            description: Last name value
            type: string
            example: Bapat
          Annual Leave Start Date:
            description: ' Annual leave start date value'
            type: string
            format: date
            example: 2014/04/01
          Annual Leave End Date:
            description: Annual leave end date value
            type: string
            format: date
            example: 2015/03/31
          Allowance Type:
            description: Allowance type value
            type: string
            example: Yearly
          Allowance (Days):
            description: Allowance (days) value
            type: string
            format: double
            example: 28.5
    GetBenefitByEmployeeIdArray:
      description: ' Result Array'
      type: array
      items:
        type: object
        properties:
          BenefitId:
            description: Benefit Id value
            type: integer
            example: 271
          Benefit:
            description: Benefit value
            type: string
            example: Pension
          DateAwarded:
            description: DateAwarded value
            type: string
            format: date
            example: '2016-06-01'
          ExpiryDate:
            description: ExpiryDate value
            type: string
            format: date
            example: '2026-06-30'
          Value:
            description: Value
            type: number
            format: decimal
            example: 1000.05
          Comments:
            description: Comments value
            type: string
            example: Comments goes here
          RecoverOnTermination:
            description: RecoverOnTermination value
            type: string
            enum:
              - 'Yes'
              - 'No'
            example: 'Yes'
          Customfields:
            $ref: '#/components/schemas/CustomfieldArrayForEmployeeBenefit'
          Files:
            $ref: '#/components/schemas/FileArrayForEmployeeBenefit'
        x-konfig-properties:
          Customfields:
            description: Customfields value
          Files:
            description: Files info.
    CustomfieldArrayForEmployeeBenefit:
      type: array
      items:
        type: object
        properties:
          ColumnName:
            description: Column Name
            type: string
            example: abc
          ColumnValue:
            description: column value
            type: string
            example: ''
    FileArrayForEmployeeBenefit:
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            example: 123.png
          Description:
            description: Description value
            type: string
            example: dsadsadasdasd
          FileUrl:
            description: File
            type: string
            format: url
            example: >-
              http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?89ed26fe-03cd-4c95-88f4-183fcdff0de4
          Category:
            description: category
            type: string
            example: catagory
          SignatureRequired:
            description: Signature Required
            type: string
            enum:
              - 'false'
              - 'true'
            example: false
    DeleteBenefitParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - BenefitId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        BenefitId:
          $ref: '#/components/schemas/BenefitId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to DeleteBenefit
          type: string
        Action:
          description: Action name = DeleteBenefit
          example: DeleteBenefit
        EmployeeId:
          description: Employee Id for delete benefit
        BenefitId:
          description: Benefit id for delete benefit
    GetCPDByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get cpd by employee id
          type: string
        Action:
          description: Action name = GetCPDByEmployeeId
          example: GetCPDByEmployeeId
        EmployeeId:
          description: Employeeid for get cpd by employee id
    GetByCPDIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - CPDId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        CPDId:
          $ref: '#/components/schemas/CPDId'
      x-konfig-properties:
        APIKey:
          description: APIKey for get by cpd id
          type: string
        Action:
          description: Action name = GetByCPDId
          example: GetByCPDId
        EmployeeId:
          description: Employeeid for get by cpd id
        CPDId:
          description: CPID for get by cpd id
    AddnewCPDParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Activity
        - StartDate
        - CustomColumns
        - AddFiles
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Activity:
          $ref: '#/components/schemas/Activity'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        RollNumber:
          $ref: '#/components/schemas/RollNumber'
        DateAdmitted:
          $ref: '#/components/schemas/DateAdmitted'
        HoursRequired:
          $ref: '#/components/schemas/HoursRequired'
        HoursAccredited:
          $ref: '#/components/schemas/HoursAccredited'
        Notes:
          $ref: '#/components/schemas/Notes'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsArrayForEmployeeCPD'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForEmployeeCPD'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to add CPD detail
          type: string
        Action:
          description: Action name = AddNewCPD
          example: AddNewCPD
        EmployeeId:
          description: Employeeid for add new CPD
        Activity:
          description: Activity for add new CPD
        StartDate:
          description: StartDate for add new CPD
        EndDate:
          description: EndDate for add new CPD
        RollNumber:
          description: RollNumber for add new CPD
        DateAdmitted:
          description: DateAdmitted for add new CPD
        HoursRequired:
          description: HoursRequired for add new CPD
        HoursAccredited:
          description: HoursAccredited for add new CPD
        Notes:
          description: Notes for add new CPD
          maxLength: '256'
        CustomColumns:
          description: CustomColumns for add new cpd
        AddFiles:
          description: AddFiles for add new cpd
    UpdateCPDParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - CPDId
        - Activity
        - StartDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        CPDId:
          $ref: '#/components/schemas/CPDId'
        Activity:
          $ref: '#/components/schemas/Activity'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        RollNumber:
          $ref: '#/components/schemas/RollNumber'
        DateAdmitted:
          $ref: '#/components/schemas/DateAdmitted'
        HoursRequired:
          $ref: '#/components/schemas/HoursRequired'
        HoursAccredited:
          $ref: '#/components/schemas/HoursAccredited'
        Notes:
          $ref: '#/components/schemas/Notes'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsArrayForEmployeeCPD'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForEmployeeCPD'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to update CPD detail
          type: string
        Action:
          description: Action name = UpdateCPD
          example: UpdateCPD
        EmployeeId:
          description: Employeeid for update CPD
        CPDId:
          description: CPID for update CPD
        Activity:
          description: Activity for update CPD
        StartDate:
          description: StartDate for update CPD
        EndDate:
          description: EndDate for update CPD
        RollNumber:
          description: RollNumber for update CPD
        DateAdmitted:
          description: DateAdmitted for update CPD
        HoursRequired:
          description: HoursRequired for update CPD
        HoursAccredited:
          description: HoursAccredited for update CPD
        Notes:
          description: Notes for update CPD
          maxLength: '256'
        CustomColumns:
          description: CustomColumns for update CPD
        AddFiles:
          description: AddFiles for update CPD
    DeleteCPDParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - CPDId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        CPDId:
          $ref: '#/components/schemas/CPDId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to delete CPD detail
          type: string
        Action:
          description: Action name = DeleteCPD
          example: DeleteCPD
        EmployeeId:
          description: Employeeid for delete CPD
        CPDId:
          description: CPID for delete CPD
    GetCustomScreenDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee custom screen api to GetCustomScreenDetail
          type: string
        Action:
          description: Action name = GetCustomScreenDetail
          example: GetCustomScreenDetail
    GetCustomScreenByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - ScreenId
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ScreenId:
          $ref: '#/components/schemas/ScreenId'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee custom screen api to GetCustomScreenByEmployeeId
          type: string
        Action:
          description: Action name = GetCustomScreenByEmployeeId
          example: GetCustomScreenByEmployeeId
        ScreenId:
          description: ScreenId for get custom screen by employeeId
        EmployeeId:
          description: EmployeeId for get custom screen by employeeId
    GetByCustomScreenTransactionIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ScreenId
        - DocumentName
        - CustomScreenTransactionId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        ScreenId:
          $ref: '#/components/schemas/ScreenId'
        CustomScreenTransactionId:
          $ref: '#/components/schemas/CustomScreenTransactionId'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for employee custom screen api to
            GetByCustomScreenTransactionId
          type: string
        Action:
          description: Action name = GetByCustomScreenTransactionId
          example: GetByCustomScreenTransactionId
        EmployeeId:
          description: EmployeeId for employee custom screen
        ScreenId:
          description: ScreenId for employee custom screen
        CustomScreenTransactionId:
          description: CustomScreenTransactionId for employee custom screen
    UpdateCustomScreenTransactionParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ScreenId
        - CustomScreenTransactionId
        - CustomColumns
        - AddFiles
        - DocumentName
        - File
        - Description
        - DocumentCategory
        - SignatureRequired
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        ScreenId:
          $ref: '#/components/schemas/ScreenId'
        CustomScreenTransactionId:
          $ref: '#/components/schemas/CustomScreenTransactionId'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeCustomScreenObject'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeCustomScreenObject'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for employee custom screen api to
            UpdateCustomScreenTransaction
          type: string
        Action:
          description: Action name = UpdateCustomScreenTransaction
          example: UpdateCustomScreenTransaction
        EmployeeId:
          description: EmployeeId for update custom screen transaction
        ScreenId:
          description: ScreenId for update custom screen transaction
        CustomScreenTransactionId:
          description: CustomScreenTransactionId for update custom screen transaction
        CustomColumns:
          description: CustomColumns for update custom screen transaction
        AddFiles:
          description: AddFiles for update custom screen transaction
    DeleteCustomScreenTransactionParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ScreenId
        - CustomScreenTransactionId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        ScreenId:
          $ref: '#/components/schemas/ScreenId'
        CustomScreenTransactionId:
          $ref: '#/components/schemas/CustomScreenTransactionId'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for employee custom screen api to
            DeleteCustomScreenTransaction
          type: string
        Action:
          description: Action name = DeleteCustomScreenTransaction
          example: DeleteCustomScreenTransaction
        EmployeeId:
          description: EmployeeId for delete custom screen transaction
        ScreenId:
          description: ScreenId for delete custom screen transaction
        CustomScreenTransactionId:
          description: CustomScreenTransactionId for delete custom screen transaction
    GetHolidayEntitlementParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for holiday entitlement api to GetHolidayEntitlement
          type: string
        Action:
          description: Action name = GetHolidayEntitlement
          example: GetHolidayEntitlement
        EmployeeId:
          description: Employeeid for get holiday entitlement
        StartDate:
          description: Startdate for get holiday entitlement
        EndDate:
          description: EndDate for get holiday entitlement
    GetNextYearHolidayEntitlementParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for holiday entitlement api to GetNextYearHolidayEntitlement
          type: string
        Action:
          description: Action name = GetNextYearHolidayEntitlement
          example: GetNextYearHolidayEntitlement
        EmployeeId:
          description: EmployeeId for get next year holiday entitlement
    UpdateHolidayEntitlementParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ReasonForChange
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        EntitlementThisYear:
          $ref: '#/components/schemas/EntitlementThisYear'
        ReasonForChange:
          $ref: '#/components/schemas/ReasonForChange'
      x-konfig-properties:
        APIKey:
          description: APIKey for holiday entitlement api to UpdateHolidayEntitlement
          type: string
        Action:
          description: Action name = UpdateHolidayEntitlement
          example: UpdateHolidayEntitlement
        EmployeeId:
          description: EmployeeId for update holiday entitlement
        EntitlementThisYear:
          description: EntitlementThisYear for update holiday entitlement
        ReasonForChange:
          description: ReasonForChange for update holiday entitlement
    UpdateNextYearHolidayEntitlementParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ReasonForChange
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        EntitlementNextYear:
          $ref: '#/components/schemas/EntitlementNextYear'
        ReasonForChange:
          $ref: '#/components/schemas/ReasonForChange'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for holiday entitlement api to
            UpdateNextYearHolidayEntitlement
          type: string
        Action:
          description: Action name = UpdateNextYearHolidayEntitlement
          example: UpdateNextYearHolidayEntitlement
        EmployeeId:
          description: EmployeeId for update next year holiday entitlement
        EntitlementNextYear:
          description: EntitlementNextYear for update next year holiday entitlement
        ReasonForChange:
          description: ReasonForChange for update next year holiday entitlement
    GetHistoryByEmployeeIdAndFieldNameParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - FieldName
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        FieldName:
          $ref: '#/components/schemas/FieldName'
      x-konfig-properties:
        APIKey:
          description: APIKey for History to GetHistoryByEmployeeIdAndFieldName
          type: string
        Action:
          description: Action name = GetHistoryByEmployeeIdAndFieldName
          example: GetHistoryByEmployeeIdAndFieldName
        EmployeeId:
          description: EmployeeId for get history by employeeId and fieldName
        FieldName:
          description: >-
            Field Name for get history by employeeId and fieldName As
            Follows:<br/> 1] EMPLOYEE_PERSONAL_TITLE<br/> 2]
            EMPLOYEE_PERSONAL_FIRST_NAME<br/> 3]
            EMPLOYEE_PERSONAL_LAST_NAME<br/> 4]
            EMPLOYEE_PERSONAL_OTHER_NAME<br/> 5] EMPLOYEE_PERSONAL_KNOWN_AS<br/>
            6] EMPLOYEE_PERSONAL_EMAIL<br/> 7] EMPLOYEE_PERSONAL_GENDER<br/> 8]
            EMPLOYEE_PERSONAL_DATE_OF_BIRTH<br/> 9]
            EMPLOYEE_PERSONAL_START_DATE<br/> 10]
            EMPLOYEE_PERSONAL_REPORTS_TO<br/> 11]
            EMPLOYEE_PERSONAL_JOB_ROLE<br/> 12] EMPLOYEE_PERSONAL_LOCATION<br/>
            13] EMPLOYEE_PERSONAL_DEPARTMENT<br/> 14]
            EMPLOYEE_PERSONAL_UNIQUE_ID<br/> 15]
            EMPLOYEE_PERSONAL_NATIONAL_INSURANCE_NUMBER<br/> 16]
            EMPLOYEE_PERSONAL_NATIONALITY<br/> 17]
            EMPLOYEE_PERSONAL_EMPLOYMENT_TYPE<br/> 18]
            EMPLOYEE_EMPLOYMENT_PROBATION_END_DATE<br/> 19]
            EMPLOYEE_EMPLOYMENT_NOTICE_PERIOD<br/> 20]
            EMPLOYEE_EMPLOYMENT_METHOD_OF_RECRUITMENT<br/> 21]
            EMPLOYEE_EMPLOYMENT_RECRUITMENT_COST<br/> 22]
            EMPLOYEE_CONTACT_INFORMATION_POST_CODE<br/> 23]
            EMPLOYEE_CONTACT_INFORMATION_ADDRESS<br/> 24]
            EMPLOYEE_CONTACT_INFORMATION_WORK_PHONE<br/> 25]
            EMPLOYEE_CONTACT_INFORMATION_PERSONAL_PHONE<br/> 26]
            EMPLOYEE_CONTACT_INFORMATION_BANK_NAME<br/> 27]
            EMPLOYEE_CONTACT_INFORMATION_BANK_CODE<br/> 28]
            EMPLOYEE_CONTACT_INFORMATION_ACCOUNT_NUMBER<br/>
            29]EMPLOYEE_CONTACT_INFORMATION_OTHER_ACCOUNT_INFORMATION<br/> 30]
            EMPLOYEE_CONTACT_INFORMATION_ACCOUNT_NAME<br/> 31]
            EMPLOYEE_CONTACT_INFORMATION_BANK_ADDRESS
    GetQueryResultParameter:
      type: object
      required:
        - APIKey
        - Action
        - QueryName
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        QueryName:
          $ref: '#/components/schemas/QueryName'
      x-konfig-properties:
        APIKey:
          description: APIKey for Query api to GetQueryResult
          type: string
        Action:
          description: Action name = GetQueryResult
          example: GetQueryResult
        QueryName:
          description: QueryName for get query result
    GetQueryResultByQueryNameParameter:
      type: object
      required:
        - APIKey
        - Action
        - QueryName
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        QueryName:
          $ref: '#/components/schemas/QueryName'
      x-konfig-properties:
        APIKey:
          description: APIKey for query api to GetQueryResultByQueryName
          type: string
        Action:
          description: Action name = GetQueryResultByQueryName
          example: GetQueryResultByQueryName
        QueryName:
          description: QueryName get query result by query name
    AddNewCustomScreenTransactionParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ScreenId
        - CustomColumns
        - AddFiles
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        ScreenId:
          $ref: '#/components/schemas/ScreenId'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeCustomScreenObject'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeCustomScreenObject'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for employee custom screen api to
            AddNewCustomScreenTransaction
          type: string
        Action:
          description: Action name = AddNewCustomScreenTransaction
          example: AddNewCustomScreenTransaction
        EmployeeId:
          description: EmployeeId for add new custom screen transaction
        ScreenId:
          description: ScreenId for add new custom screen transaction
        CustomColumns:
          description: CustomColumns for add new custom screen transaction
        AddFiles:
          description: AddFiles for add new custom screen transaction
    UpdateBenefitParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Benefit
        - BenefitId
        - DateAwarded
        - RecoverOnTermination
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Benefit:
          $ref: '#/components/schemas/Benefit'
        BenefitId:
          $ref: '#/components/schemas/BenefitId'
        DateAwarded:
          $ref: '#/components/schemas/DateAwarded'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        Value:
          $ref: '#/components/schemas/Value'
        RecoverOnTermination:
          $ref: '#/components/schemas/RecoverOnTermination'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsArrayForAddNewBenefit'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForUpdateBenefit'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to UpdateBenefit
          type: string
        Action:
          description: Action name = UpdateBenefit
          example: UpdateBenefit
        EmployeeId:
          description: Employee Id for update benefit
        Benefit:
          description: Benefit for update benefit
        BenefitId:
          description: Benefit id for update benefit
        DateAwarded:
          description: DateAwarded for update benefit
        ExpiryDate:
          description: ExpiryDate for update benefit
        Value:
          description: Value for update benefit
        RecoverOnTermination:
          description: RecoverOnTermination for update benefit
        CustomColumns:
          description: CustomColumns contain column name and column value
        AddFiles:
          description: AddFiles contain file info.
    AddNewBenefitParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Benefit
        - DateAwarded
        - ExpiryDate
        - RecoverOnTermination
        - CustomColumns
        - AddFiles
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Benefit:
          $ref: '#/components/schemas/Benefit'
        DateAwarded:
          $ref: '#/components/schemas/DateAwarded'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        Value:
          $ref: '#/components/schemas/Value'
        Comments:
          $ref: '#/components/schemas/Comments'
        RecoverOnTermination:
          $ref: '#/components/schemas/RecoverOnTermination'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsArrayForAddNewBenefit'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForAddNewBenefit'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to AddNewBenefit
          type: string
        Action:
          description: Action name = AddNewBenefit
          example: AddNewBenefit
        EmployeeId:
          description: Employee Id for add new benefit
        Benefit:
          description: Benefit for add new benefit
        DateAwarded:
          description: DateAwarded for add new benefit
        ExpiryDate:
          description: ExpiryDate for add new benefit
        Value:
          description: Value for add new benefit
        Comments:
          description: Comments for add new benefit
          maxLength: '256'
        RecoverOnTermination:
          description: RecoverOnTermination for add new benefit
        CustomColumns:
          description: CustomColumns value
        AddFiles:
          description: AddFiles contain file info.
    CustomColumnsArrayForAddNewBenefit:
      type: array
      items:
        required:
          - ColumnName
        type: object
        properties:
          ColumnName:
            description: ColumnName value
            type: string
            example: abc
          ColumnValue:
            description: ColumnValue value
            type: string
            example: ''
    AddFilesArrayForUpdateBenefit:
      type: array
      items:
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            maxLength: '100'
            example: 123.png
          File:
            description: File base64 value
            type: string
            example: pass base64 string
          Description:
            description: Description value
            type: string
            maxLength: '256'
            example: dsadsadasdasd
          DocumentCategory:
            description: Document category value
            type: string
            maxLength: '100'
            example: catagory
          SignatureRequired:
            description: Signature Required value
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
    AddFilesArrayForAddNewBenefit:
      type: array
      items:
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            maxLength: '100'
            example: 123.png
          File:
            description: File base64 value
            type: string
            example: pass base64 string
          Description:
            description: Description value
            type: string
            maxLength: '256'
            example: dsadsadasdasd
          DocumentCategory:
            description: Document category value
            type: string
            maxLength: '100'
            example: catagory
          SignatureRequired:
            description: Signature required value
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
    EmailInboxParameter:
      type: object
      required:
        - Action
        - EmailFrom
        - EmailTo
        - EmailSubject
      properties:
        Action:
          $ref: '#/components/schemas/Action'
        EmailFrom:
          $ref: '#/components/schemas/EmailFrom'
        EmailTo:
          $ref: '#/components/schemas/Result1ForEmailToForEmailInbox'
        EmailCc:
          $ref: '#/components/schemas/Result1ForEmailCcForEmailInbox'
        EmailBcc:
          $ref: '#/components/schemas/Result1ForEmailBccForEmailInbox'
        EmailSubject:
          $ref: '#/components/schemas/EmailSubject'
        Attachment:
          $ref: '#/components/schemas/Result1ForAttachmentForEmailInbox'
      x-konfig-properties:
        Action:
          description: Action name = EmailInbox
          example: EmailInbox
        EmailFrom:
          description: Email From for Email Inbox
        EmailTo:
          description: Email To for Email Inbox
        EmailCc:
          description: Email Cc for Email Inbox
        EmailBcc:
          description: Email Bcc for Email Inbox
        EmailSubject:
          description: Email Subject for Email Inbox
        Attachment:
          description: Attachment for Email Inbox
    AddNewRightToWorkDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DocumentName
        - File
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
        DocumentId:
          $ref: '#/components/schemas/DocumentId'
        ValidFrom:
          $ref: '#/components/schemas/ValidFrom'
        ValidTo:
          $ref: '#/components/schemas/ValidTo'
        Duration:
          $ref: '#/components/schemas/Duration'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        File:
          $ref: '#/components/schemas/File'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for right to work  api to addrighttoworkdetail
          type: string
        Action:
          description: Action name = addrighttoworkdetail
          example: addrighttoworkdetail
        EmployeeId:
          description: Employee id for add right to work detail
        DocumentType:
          description: Document type for add right to work detail
        DocumentId:
          description: Document Id for add right to work detail
        ValidFrom:
          description: Valid From for add right to work detail
        ValidTo:
          description: Valid To for add right to work detail
        Duration:
          description: Duration for add right to work detail
        DocumentName:
          description: Duration for add right to work detail
        File:
          description: File for add right to work detail
        Comments:
          description: Comments for add right to work detail
          maxLength: '256'
    GetRightToWorkDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for right to work api to GetRightToWorkDetail
          type: string
        Action:
          description: Action name = getrighttoworkdetail
          example: getrighttoworkdetail
        EmployeeId:
          description: Employee id to get employee detail
    updaterighttoworkdetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - RightToWorkTxnId
        - DocumentName
        - File
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        RightToWorkTxnId:
          $ref: '#/components/schemas/RightToWorkTxnId'
        DocumentType:
          $ref: '#/components/schemas/DocumentType'
        DocumentId:
          $ref: '#/components/schemas/DocumentId'
        ValidFrom:
          $ref: '#/components/schemas/ValidFrom'
        ValidTo:
          $ref: '#/components/schemas/ValidTo'
        Duration:
          $ref: '#/components/schemas/Duration'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        File:
          $ref: '#/components/schemas/File'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for right to work api to updaterighttoworkdetail
          type: string
        Action:
          description: Action name = updaterighttoworkdetail
          example: updaterighttoworkdetail
        EmployeeId:
          description: Employee id for update right to work detail
        RightToWorkTxnId:
          description: Right To Work Txn Id for update right to work detail
        DocumentType:
          description: Document Type for update right to work detail
        DocumentId:
          description: Document Id for update right to work detail
        ValidFrom:
          description: Valid From for update right to work detail
        ValidTo:
          description: Valid To for update right to work detail
        Duration:
          description: Duration for update right to work detail
        DocumentName:
          description: Document Name for update right to work detail
        File:
          description: File for update right to work detail
        Comments:
          description: Comments for update right to work detail
          maxLength: '256'
    deleterighttoworkdetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - RightToWorkTxnId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        RightToWorkTxnId:
          $ref: '#/components/schemas/RightToWorkTxnId'
      x-konfig-properties:
        APIKey:
          description: APIKey for right to work api to deleterighttoworkdetail
          type: string
        Action:
          description: Action name = deleterighttoworkdetail
          example: deleterighttoworkdetail
        EmployeeId:
          description: Employee id for delete right to work detail
        RightToWorkTxnId:
          description: Right To Work Txn Id for delete right to work detail
    GetBackgroundCheckDetailByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: >-
            APIKey for background check api to Get Background Check Detail By
            EmployeeId
          type: string
        Action:
          description: Action name = GetBackgroundCheckDetailByEmployeeId
          example: GetBackgroundCheckDetailByEmployeeId
        EmployeeId:
          description: Employee id to Get Background Check Detail By EmployeeId
    AddBackgroundCheckDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TypeOfCheck
        - DocumentName
        - File
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TypeOfCheck:
          $ref: '#/components/schemas/TypeOfCheck'
        DateCompleted:
          $ref: '#/components/schemas/DateCompleted'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        File:
          $ref: '#/components/schemas/File'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for background check api to AddBackgroundCheckDetail
          type: string
        Action:
          description: Action name = AddBackgroundCheckDetail
          example: AddBackgroundCheckDetail
        EmployeeId:
          description: Employee id for Add Background Check Detail
        TypeOfCheck:
          description: Type Of Check for Add Background Check Detail
        DateCompleted:
          description: Date Completed for Add Background Check Detail
        ExpiryDate:
          description: Expiry Date for  Add Background Check Detail
        DocumentName:
          description: Document Name for  Add Background Check Detail
        File:
          description: File for Add Background Check Detail
        Comments:
          description: Comments for Add Background Check Detail
          maxLength: '1024'
    UpdateBackgroundCheckDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - BackgroundCheckTxnId
        - TypeOfCheck
        - DocumentName
        - File
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        BackgroundCheckTxnId:
          $ref: '#/components/schemas/BackgroundCheckTxnId'
        TypeOfCheck:
          $ref: '#/components/schemas/TypeOfCheck'
        DateCompleted:
          $ref: '#/components/schemas/DateCompleted'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        File:
          $ref: '#/components/schemas/File'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for background check api to UpdateBackgroundCheckDetail
          type: string
        Action:
          description: Action name = UpdateBackgroundCheckDetail
          example: UpdateBackgroundCheckDetail
        EmployeeId:
          description: Employee id for Update Background Check Detail
        BackgroundCheckTxnId:
          description: Background Check Txn Id  for update background check detail
        TypeOfCheck:
          description: Type Of Check for update background check detail
        DateCompleted:
          description: Date Completed for update background check detail
        ExpiryDate:
          description: Expiry Date for update background check detail
        DocumentName:
          description: Document Name for update background check detail
        File:
          description: File for update background check detail
        Comments:
          description: Comments for update background check detail
          maxLength: '1024'
    DeleteBackgroundCheckDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - BackgroundCheckTxnId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        BackgroundCheckTxnId:
          $ref: '#/components/schemas/BackgroundCheckTxnId'
      x-konfig-properties:
        APIKey:
          description: APIKey for background check api to  delete background check detail
          type: string
        Action:
          description: Action name = DeleteBackgroundCheckDetail
          example: DeleteBackgroundCheckDetail
        EmployeeId:
          description: Employee id for delete background check detail
        BackgroundCheckTxnId:
          description: Background Check Txn Id for delete background check detail
    getothereventdetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for other event api to getothereventdetail
          type: string
        Action:
          description: Action name = getothereventdetail
          example: getothereventdetail
        EmployeeId:
          description: Employee id to get other event detail
        StartDate:
          description: Start Date to get other event detail
        EndDate:
          description: End Date to get other event detail
    getotherevententitlementParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for other event api to getotherevententitlement
          type: string
        Action:
          description: Action name = getotherevententitlement
          example: getotherevententitlement
        EmployeeId:
          description: Employee id to get other event entitlement
    DeleteOtherEventParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - OtherLeaveTxnId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        OtherLeaveTxnId:
          $ref: '#/components/schemas/OtherLeaveTxnId'
      x-konfig-properties:
        APIKey:
          description: APIKey for other event api to DeleteOtherEvent
          type: string
        Action:
          description: Action name = DeleteOtherEvent
          example: DeleteOtherEvent
        EmployeeId:
          description: Employee id for Delete Other Event
        OtherLeaveTxnId:
          description: Other Leave Txn Id for Delete Other Event
    addothereventleaveParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DurationType
        - Other Event Reason
        - StartDate
        - EndDate
        - DurationInDays
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DurationType:
          $ref: '#/components/schemas/DurationType'
        Other Event Reason:
          $ref: '#/components/schemas/OtherEventReason'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        StartTime:
          $ref: '#/components/schemas/StartTime'
        EndTime:
          $ref: '#/components/schemas/EndTime'
        DurationInDays:
          $ref: '#/components/schemas/DurationInDays'
        Comments:
          $ref: '#/components/schemas/Comments'
        AddFiles:
          $ref: '#/components/schemas/Result1Foraddothereventleave'
      x-konfig-properties:
        APIKey:
          description: APIKey for other event api to add other event leave
          type: string
        Action:
          description: Action name = addothereventleave
          example: addothereventleave
        EmployeeId:
          description: Employee id for add other event leave
        DurationType:
          description: Duration type for add other event leave
        Other Event Reason:
          description: Other event reason for add other event leave
        StartDate:
          description: Start date for add other event leave
        EndDate:
          description: End date for add other event leave
        StartTime:
          description: Start time for add other event leave
        EndTime:
          description: End time for add other event leave
        DurationInDays:
          description: Duration in days for add other event leave
        Comments:
          description: Comments for add other event leave
          maxLength: '256'
        AddFiles:
          description: Add files for add other event leave
    updateothereventleaveParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - OtherEventTxnId
        - DurationType
        - Other Event Reason
        - StartDate
        - EndDate
        - DurationInDays
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        OtherEventTxnId:
          $ref: '#/components/schemas/OtherEventTxnId'
        DurationType:
          $ref: '#/components/schemas/DurationType'
        Other Event Reason:
          $ref: '#/components/schemas/OtherEventReason'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        StartTime:
          $ref: '#/components/schemas/StartTime'
        EndTime:
          $ref: '#/components/schemas/EndTime'
        DurationInDays:
          $ref: '#/components/schemas/DurationInDays'
        Comments:
          $ref: '#/components/schemas/Comments'
        AddFiles:
          $ref: '#/components/schemas/Result1Forupdateothereventleave'
      x-konfig-properties:
        APIKey:
          description: APIKey for other event api to update other event leave
          type: string
        Action:
          description: Action name = updateothereventleave
          example: updateothereventleave
        EmployeeId:
          description: Employee id for update other event leave
        OtherEventTxnId:
          description: Other event txn Id for update other event leave
        DurationType:
          description: Duration Type for update other event leave
        Other Event Reason:
          description: Other event reason for update other event leave
        StartDate:
          description: Start date for update other event leave
        EndDate:
          description: End date for update other event leave
        StartTime:
          description: Start Time for update other event leave
        EndTime:
          description: End time for update other event leave
        DurationInDays:
          description: Duration in days for update other event leave
        Comments:
          description: Comments for update other event leave
          maxLength: '256'
        AddFiles:
          description: Add Files for update other event leave
    addotherevententitlementParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Other Event Reason
        - Entitlement RecordedIn
        - ThisYearEntitlement
        - NextYearEntitlement
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Other Event Reason:
          $ref: '#/components/schemas/OtherEventReason'
        Entitlement RecordedIn:
          $ref: '#/components/schemas/EntitlementRecordedIn'
        ThisYearEntitlement:
          $ref: '#/components/schemas/ThisYearEntitlement'
        NextYearEntitlement:
          $ref: '#/components/schemas/NextYearEntitlement'
      x-konfig-properties:
        APIKey:
          description: APIKey for other event api to addotherevententitlement
          type: string
        Action:
          description: Action name = addotherevententitlement
          example: addotherevententitlement
        EmployeeId:
          description: Employee id for add other event entitlement
        Other Event Reason:
          description: Other event reason for add other event entitlement
        Entitlement RecordedIn:
          description: Entitlement recorded in for add other event entitlement
        ThisYearEntitlement:
          description: This year entitlement for add other event entitlement
        NextYearEntitlement:
          description: Next year entitlement add other event entitlement
    GetDrivingLicenseByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for get driving license by EmployeeId
          type: string
        Action:
          description: Action name = GetDrivingLicenseByEmployeeId
          example: GetDrivingLicenseByEmployeeId
        EmployeeId:
          description: Employeeid for get driving license by EmployeeId
    GetDrivingLicenseByDrivingIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DrivingId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DrivingId:
          $ref: '#/components/schemas/DrivingId'
      x-konfig-properties:
        APIKey:
          description: APIKey for get driving license by drivingid
          type: string
        Action:
          description: Action name = GetDrivingLicenseByDrivingId
          example: GetDrivingLicenseByDrivingId
        EmployeeId:
          description: EmployeeId for get driving license by drivingid
        DrivingId:
          description: Drivingid for get driving license by drivingid
    AddNewDrivingLicenseParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - LicenseNumber
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        LicenseNumber:
          $ref: '#/components/schemas/LicenseNumber'
        LicenseType:
          $ref: '#/components/schemas/LicenseType'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        Comments:
          $ref: '#/components/schemas/Comments'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeDriving'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeDriving'
      x-konfig-properties:
        APIKey:
          description: APIKey for add new driving license
          type: string
        Action:
          description: Action name = AddNewDrivingLicense
          example: AddNewDrivingLicense
        EmployeeId:
          description: EmployeeId for add new driving license
        LicenseNumber:
          description: License number for add new driving license
        LicenseType:
          description: License type for add new driving license
        ExpiryDate:
          description: Expirydate for add new driving license
        Comments:
          description: Comments for add new driving license
          maxLength: '256'
        CustomColumns:
          description: Custom columns for add new driving license
        AddFiles:
          description: Add files for add new driving license
    UpdateDrivingLicenseParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DrivingId
        - LicenseNumber
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DrivingId:
          $ref: '#/components/schemas/DrivingId'
        LicenseNumber:
          $ref: '#/components/schemas/LicenseNumber'
        LicenseType:
          $ref: '#/components/schemas/LicenseType'
        ExpiryDate:
          $ref: '#/components/schemas/ExpiryDate'
        Comments:
          $ref: '#/components/schemas/Comments'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeDriving'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeDriving'
      x-konfig-properties:
        APIKey:
          description: APIKey for update driving license
          type: string
        Action:
          description: Action name = UpdateDrivingLicense
          example: UpdateDrivingLicense
        EmployeeId:
          description: EmployeeId for update driving license
        DrivingId:
          description: License number for update driving license
        LicenseNumber:
          description: License number for update driving license
        LicenseType:
          description: License type for update driving license
        ExpiryDate:
          description: Expiry date for update driving license
        Comments:
          description: Comments for update driving license
          maxLength: '256'
        CustomColumns:
          description: Custom columns for update driving license
        AddFiles:
          description: Add files for update driving license
    DeleteDrivingLicenseParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DrivingId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DrivingId:
          $ref: '#/components/schemas/DrivingId'
      x-konfig-properties:
        APIKey:
          description: APIKey for delete driving license
          type: string
        Action:
          description: Action name = DeleteDrivingLicense
          example: DeleteDrivingLicense
        EmployeeId:
          description: Employeeid for delete driving license
        DrivingId:
          description: Drivingid for delete driving license
    AddTrainingDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TrainingType
        - Description
        - Importance
        - Status
        - Progress
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TrainingType:
          $ref: '#/components/schemas/TrainingType'
        Description:
          $ref: '#/components/schemas/Description'
        Importance:
          $ref: '#/components/schemas/Importance'
        Status:
          $ref: '#/components/schemas/Status'
        InProgress:
          $ref: '#/components/schemas/InProgress'
        TrainingDate:
          $ref: '#/components/schemas/TrainingDate'
        TrainindEndDate:
          $ref: '#/components/schemas/TrainingEndDate'
        TrainingExpiryDate:
          $ref: '#/components/schemas/TrainingExpiryDate'
        Cost:
          $ref: '#/components/schemas/Cost'
        Provider:
          $ref: '#/components/schemas/Provider'
        Notes:
          $ref: '#/components/schemas/Notes'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeTraining'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeTraining'
      x-konfig-properties:
        APIKey:
          description: APIKey for add training detail
          type: string
        Action:
          description: Action name = AddTrainingDetail
          example: addtrainingdetail
        EmployeeId:
          description: Employee id for add training detail
        TrainingType:
          description: Training type for add training detail
        Description:
          description: Description for add training detail
          maxLength: '512'
        Importance:
          description: Importance for add training detail
        Status:
          description: Status for add training detail
        InProgress:
          description: InProgress for add training detail
        TrainingDate:
          description: Training date for add training detail
        TrainindEndDate:
          description: Training end date for add training detail
        TrainingExpiryDate:
          description: Training expiry date for add training detail
        Cost:
          description: Cost for add training detail
        Provider:
          description: Provider for add training detail
        Notes:
          description: Notes for add training detail
          maxLength: '256'
        CustomColumns:
          description: Custom columns for add training detail
        AddFiles:
          description: Add files for add training detail
    UpdateTrainingDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TrainingId
        - TrainingType
        - Description
        - Importance
        - Status
        - Progress
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TrainingType:
          $ref: '#/components/schemas/TrainingType'
        Description:
          $ref: '#/components/schemas/Description'
        Importance:
          $ref: '#/components/schemas/Importance'
        Status:
          $ref: '#/components/schemas/Status'
        InProgress:
          $ref: '#/components/schemas/InProgress'
        TrainingDate:
          $ref: '#/components/schemas/TrainingDate'
        TrainindEndDate:
          $ref: '#/components/schemas/TrainingEndDate'
        TrainingExpiryDate:
          $ref: '#/components/schemas/TrainingExpiryDate'
        Cost:
          $ref: '#/components/schemas/Cost'
        Provider:
          $ref: '#/components/schemas/Provider'
        Notes:
          $ref: '#/components/schemas/Notes'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeTraining'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeTraining'
      x-konfig-properties:
        APIKey:
          description: APIKey for update training detail
          type: string
        Action:
          description: Action name = updatetrainingdetail
          example: updatetrainingdetail
        EmployeeId:
          description: Employee id for update training detail
        TrainingType:
          description: Training type for update training detail
        Description:
          description: Description for update training detail
          maxLength: '512'
        Importance:
          description: Importance for update training detail
        Status:
          description: Status for update training detail
        InProgress:
          description: InProgress for update training detail
        TrainingDate:
          description: Training date for update training detail
        TrainindEndDate:
          description: Training end date for update training detail
        TrainingExpiryDate:
          description: Training expiry date for update training detail
        Cost:
          description: Cost for update training detail
        Provider:
          description: Provider for update training detail
        Notes:
          description: Notes for update training detail
          maxLength: '256'
        CustomColumns:
          description: Custom columns for update training detail
        AddFiles:
          description: Add files for update training detail
    GetTrainingDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for get training detail
          type: string
        Action:
          description: Action name = GetTrainingDetail
          example: GetTrainingDetail
        EmployeeId:
          description: Employeeid for get training detail
    GetQualificationByQualificationIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - QualificationId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        QualificationId:
          $ref: '#/components/schemas/QualificationId'
      x-konfig-properties:
        APIKey:
          description: APIkey for get qualification by qualificationId
          type: string
        Action:
          description: Action name = GetQualificationByQualificationId
          example: GetQualificationByQualificationId
        EmployeeId:
          description: EmployeeId for get qualification by qualificationId
        QualificationId:
          description: QualificationId for get qualification by qualificationId
    GetQualificationByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: API key for get qualification by employeeid
          type: string
        Action:
          description: Action name = GetQualificationByEmployeeId
          example: GetQualificationByEmployeeId
        EmployeeId:
          description: Employeeid for get qualification by employeeid
    AddNewVehicleDetailDefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Registration
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Registration:
          $ref: '#/components/schemas/Registration'
        Make:
          $ref: '#/components/schemas/Make'
        Model:
          $ref: '#/components/schemas/Model'
        Colour:
          $ref: '#/components/schemas/Colour'
        EngineSize:
          $ref: '#/components/schemas/EngineSize'
        FuelType:
          $ref: '#/components/schemas/FuelType'
        InsuranceCompany:
          $ref: '#/components/schemas/InsuranceCompany'
        PolicyNumber:
          $ref: '#/components/schemas/PolicyNumber'
        MOTExpiryDate:
          $ref: '#/components/schemas/MOTExpiryDate'
        InsuranceExpiryDate:
          $ref: '#/components/schemas/InsuranceExpiryDate'
        Comments:
          $ref: '#/components/schemas/Comments'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeVehicleAddArray'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeVehicleAddArray'
      x-konfig-properties:
        APIKey:
          description: APIKey to add employee's new vehicle detail
          type: string
        Action:
          description: Action name = AddNewVehicleDetail
          example: AddNewVehicleDetail
        EmployeeId:
          description: Employee id to add employee's new vehicle detail
        Registration:
          description: Registration to add employee's new vehicle detail
          maxLength: '100'
        Make:
          description: Make to add employee's new vehicle detail
          maxLength: '100'
        Model:
          description: Model to add employee's new vehicle detail
          maxLength: '100'
        Colour:
          description: Colour to add employee's new vehicle detail
          maxLength: '50'
        EngineSize:
          description: EngineSize to add employee's new vehicle detail
          maxLength: '50'
        FuelType:
          description: FuelType to add employee's new vehicle detail
          maxLength: '50'
        InsuranceCompany:
          description: InsuranceCompany to add employee's new vehicle detail
          maxLength: '100'
        PolicyNumber:
          description: PolicyNumber to add employee's new vehicle detail
          maxLength: '100'
        MOTExpiryDate:
          description: MOTExpiryDate to add employee's new vehicle detail
        InsuranceExpiryDate:
          description: InsuranceExpiryDate to add employee's new vehicle detail
        Comments:
          description: Comments to add employee's new vehicle detail
          maxLength: '256'
        CustomColumns:
          description: CustomColumns to add employee's new vehicle detail
        AddFiles:
          description: AddFiles to add employee's new vehicle detail
    UpdateVehicleDetailDefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Registration
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Registration:
          $ref: '#/components/schemas/Registration'
        Make:
          $ref: '#/components/schemas/Make'
        Model:
          $ref: '#/components/schemas/Model'
        Colour:
          $ref: '#/components/schemas/Colour'
        EngineSize:
          $ref: '#/components/schemas/EngineSize'
        FuelType:
          $ref: '#/components/schemas/FuelType'
        InsuranceCompany:
          $ref: '#/components/schemas/InsuranceCompany'
        PolicyNumber:
          $ref: '#/components/schemas/PolicyNumber'
        MOTExpiryDate:
          $ref: '#/components/schemas/MOTExpiryDate'
        InsuranceExpiryDate:
          $ref: '#/components/schemas/InsuranceExpiryDate'
        Comments:
          $ref: '#/components/schemas/Comments'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsForEmployeeVehicleUpdateArray'
        AddFiles:
          $ref: '#/components/schemas/AddFilesForEmployeeVehicleUpdateArray'
      x-konfig-properties:
        APIKey:
          description: APIKey to update employee vehicle detail
          type: string
        Action:
          description: Action name = UpdateVehicleDetail
          example: UpdateVehicleDetail
        EmployeeId:
          description: Employee id to update employee's vehicle detail
        Registration:
          description: Registration to update employee's vehicle detail
          maxLength: '100'
        Make:
          description: Make to update employee's vehicle detail
          maxLength: '100'
        Model:
          description: Model to update employee's vehicle detail
          maxLength: '100'
        Colour:
          description: Colour to update employee's vehicle detail
          maxLength: '50'
        EngineSize:
          description: EngineSize to update employee's vehicle detail
          maxLength: '50'
        FuelType:
          description: FuelType to update employee's vehicle detail
          maxLength: '50'
        InsuranceCompany:
          description: InsuranceCompany to update employee's vehicle detail
          maxLength: '100'
        PolicyNumber:
          description: PolicyNumber to update employee's vehicle detail
          maxLength: '100'
        MOTExpiryDate:
          description: MOTExpiryDate to update employee's vehicle detail
        InsuranceExpiryDate:
          description: InsuranceExpiryDate to update employee's vehicle detail
        Comments:
          description: Comments to update employee's vehicle detail
          maxLength: '256'
        CustomColumns:
          description: CustomColumns to update employee's vehicle detail
        AddFiles:
          description: AddFiles to update employee's vehicle detail
    DeleteVehicleDetailDefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - VehicleId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        VehicleId:
          $ref: '#/components/schemas/VehicleId'
      x-konfig-properties:
        APIKey:
          description: APIKey to delete employee vehicle detail
          type: string
        Action:
          description: Action name = DeleteVehicleDetail
          example: DeleteVehicleDetail
        EmployeeId:
          description: Employee id to delete employee's vehicle detail
        VehicleId:
          description: Vehicle Id to delete employee's vehicle detail
    GetVehicleDetailByVehicleIdDefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - VehicleId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        VehicleId:
          $ref: '#/components/schemas/VehicleId'
      x-konfig-properties:
        APIKey:
          description: APIKey to get employee's vehicle detail by vehicle id
          type: string
        Action:
          description: Action name = GetByVehicleDetailId
          example: GetByVehicleDetailId
        EmployeeId:
          description: Employee id to get employee's vehicle detail
        VehicleId:
          description: Vehicle Id to get employee's vehicle detail
    GetVehicleDetailByEmployeeIdDefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey to get employee's vehicle detail by employee id
          type: string
        Action:
          description: Action name = GetVehicleByEmployeeId
          example: GetVehicleByEmployeeId
        EmployeeId:
          description: Employee id to get employee's vehicle detail
    CustomColumnsForGetEmployeeDriving:
      description: ' CustomColumns Result Array'
      type: array
      items:
        type: object
        properties:
          ColumnName:
            description: Columnname value
            type: string
            example: Vehicle 1
          ColumnValue:
            description: Columnvalue value
            type: string
            example: ABC
    AddFilesForGetEmployeeDriving:
      description: AddFiles Result Array
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: Document name value
            type: string
            example: my.txt
          FileUrl:
            description: FileUrl value
            type: string
            format: url
            example: >-
              http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?a7897690-633a-46df-aefd-bc4ae479c5b7
          Descriptions:
            description: Descriptions value
            type: string
            example: Descriptions goes here
          DocumentCategory:
            description: Document category value
            type: string
            example: Custom Catagory
          SignatureRequired:
            description: Signature required value
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: false
    InvalidError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            details:
              type: array
              items:
                type: string
    ResourceId:
      description: Resource Id. Defaults to UUID v4
      type: string
      maxLength: 50
      example: 4f6cf35x-2c4y-483z-a0a9-158621f77a21
    APIKey:
      description: The ApiKey. Defaults to UUID v4
      type: string
      maxLength: 50
      example: 5127e153-2c80-492b-a9e4-fb3e50af61a8
    ActionId:
      description: Action default value
      type: string
      example: UpdateEmployeeId
    Action:
      description: Action default value
      type: string
    ActionForGetAllEmployeeDetail:
      description: Action default value
      type: string
      example: GetAllEmployeeDetail
    ReasonForChange:
      description: 'ReasonForChange default value '
      type: string
      maxLength: 256
      example: Reason for change
    OldEmployeeId:
      description: 'Old Employee Id default value '
      type: string
      maxLength: 15
      example: PW1
    NewEmployeeId:
      description: 'New Employee Id default value '
      type: string
      maxLength: 15
      example: PW2
    EmailAddress:
      description: 'EmailAddress default value '
      type: string
      format: email
      maxLength: 320
      example: ranjit@peoplehr.com
    Password:
      description: 'Password default value '
      type: string
      format: password
      maxLength: 88
      example: Password2
    EmployeeId:
      description: 'EmployeeId default value '
      type: string
      maxLength: 15
      example: PW180
    IncludeLeavers:
      description: 'IncludeLeavers Default value '
      type: string
      example: false
      enum:
        - 'false'
        - 'true'
    ReasonforLeaving:
      description: 'ReasonforLeaving default value '
      type: string
      example: Reason for leaving employee
    AdditionalComments:
      description: 'AdditionalComments default value '
      type: string
      maxLength: 256
      example: Additional comments
    FinalEmploymentDate:
      description: 'FinalEmploymentDate default value '
      type: string
      format: date
      example: '2014-01-02'
    FinalWorkingDate:
      description: 'FinalWorkingDate default value '
      type: string
      example: '2014-01-02'
    MarkasLeaverImmediately:
      description: 'MarkasLeaverImmediately default value '
      type: boolean
      example: false
    ReportsTo:
      description: 'ReportsTo default value '
      type: string
      format: email
      maxLength: 256
      example: firstname.lastname@itgurusssoftware.com
    ReEmployable:
      description: 'ReEmployable default value '
      type: string
      example: 'No'
    SupportingComments:
      description: 'SupportingComments default value '
      type: string
      maxLength: 256
      example: xyzfgfdgd
    EmployeeImageName:
      description: 'EmployeeImageName default value '
      type: string
      example: xyz.png
    EmployeeImage:
      description: 'EmployeeImage default value '
      type: string
      example: Pass base64 string
    Title:
      description: 'Title default value '
      type: string
      maxLength: 100
      example: Mr.
    FirstName:
      description: 'First name default value '
      type: string
      maxLength: 50
      example: Ranjit
    LastName:
      description: 'Last name default value '
      type: string
      maxLength: 50
      example: Johnson
    Email:
      description: 'Email default value '
      type: string
      format: email
      maxLength: 254
      example: vaibhavid@itgurussoftware.com
    EmailId2:
      type: object
      required:
        - Email
      properties:
        Email:
          description: Email
          type: string
          format: email
    Gender:
      description: 'Gender default value '
      type: string
      enum:
        - Female
        - Male
      example: true
    DateOfBirth:
      description: 'DateOfBirth default value '
      type: string
      format: date
      example: '1999-01-02'
    StartDate:
      description: 'StartDate default value '
      type: string
      format: date
      example: '2016-07-27'
    EndDate:
      description: 'StartDate default value '
      type: string
      format: date
      example: '2017-07-27'
    ReportsToEffectiveDate:
      description: 'ReportsToEffectiveDate default value '
      type: string
      format: date
      example: '2014-01-01'
    Company:
      description: 'Company default value '
      type: string
      maxLength: 100
      example: Company name
    CompanyEffectiveDate:
      description: 'CompanyEffectiveDate default value '
      type: string
      format: date
      example: '2014-01-01'
    JobRole:
      description: 'JobRole default value '
      type: string
      maxLength: 100
      example: Software Enginner
    JobRoleEffectiveDate:
      description: 'JobRoleEffectiveDate default value '
      type: string
      format: date
      example: '2014-01-01'
    Location:
      description: 'Location default value '
      type: string
      example: Mumbai
    LocationEffectiveDate:
      description: 'LocationEffectiveDate default value '
      type: string
      format: date
      example: '2014-01-01'
    Department:
      description: 'Department default value '
      type: string
      example: IT
    DepartmentEffectiveDate:
      description: 'DepartmentEffectiveDate default value '
      type: string
      format: date
      example: '2014-01-01'
    NationalInsuranceNumber:
      description: 'NationalInsuranceNumber default value '
      type: string
      maxLength: 30
      example: AAAAAAAAAAAAAAAAAAA
    Nationality:
      description: 'Nationality default value '
      type: string
      maxLength: 100
      example: Indian
    EmploymentType:
      description: 'EmploymentType default value '
      type: string
      maxLength: 100
      example: Full time
    EntitlementThisYear:
      description: 'Entitlement this year default value '
      type: string
      format: decimal
      example: '12.50'
    EntitlementNextYear:
      description: 'Entitlement next year default value '
      type: string
      format: decimal
      example: '0'
    EmploymentTypeEffectiveDate:
      description: 'EmploymentTypeEffectiveDate default value '
      type: string
      format: date
      example: '2014-01-01'
    Address:
      description: 'Address default value '
      type: string
      maxLength: '512'
      example: Shiv Colony, Thergaon - Pune
    PersonalPhoneNumber:
      description: 'PersonalPhoneNumber default value '
      type: string
      maxLength: 80
      example: '999890988772'
    PayrollCompany:
      description: 'Payroll Company default value '
      type: string
      maxLength: 200
      example: 'Your payroll company''s name '
    PayrollID:
      description: 'Payroll ID default value '
      type: string
      maxLength: 200
      example: Your Payroll ID
    RotaID:
      description: 'RotaID default value '
      type: string
      maxLength: 200
      example: Your Rota ID
    CRMID:
      description: 'CRM ID default value '
      type: string
      maxLength: 200
      example: Your CRM ID
    ATSID:
      description: 'ATS ID default value '
      type: string
      maxLength: 200
      example: Your ATS ID
    PerformanceID:
      description: 'Performance ID default value '
      type: string
      maxLength: 200
      example: Your Performance ID
    BenefitsID:
      description: 'Benefits ID default value '
      type: string
      maxLength: 200
      example: Your Benefits ID
    System1ID:
      description: 'System1 ID default value '
      type: string
      maxLength: 200
      example: Your System One ID
    System2ID:
      description: 'System2 ID default value '
      type: string
      maxLength: 200
      example: Your System Two ID
    System3ID:
      description: 'System3 ID default value '
      type: string
      maxLength: 200
      example: Your System Three ID
    APIColumn1:
      description: 'APIColumn1 default value '
      type: string
      example: APIColumn1 Value
    APIColumn2:
      description: 'APIColumn2 default value '
      type: string
      example: APIColumn2 Value
    APIColumn3:
      description: 'APIColumn3 default value '
      type: string
      example: APIColumn3 Value
    APIColumn4:
      description: 'APIColumn4 default value '
      type: string
      example: APIColumn4 Value
    APIColumn5:
      description: 'APIColumn5 default value '
      type: string
      example: APIColumn5 Value
    PersonalEmail:
      description: 'PersonalEmail default value '
      type: string
      format: email
      maxLength: 254
      example: abc@itgurussoftware.com
    MethodOfRecruitment:
      description: 'MethodOfRecruitment default value '
      type: string
      maxLength: 512
      example: Method Of Recruitment
    DisplayValue:
      description: 'DisplayValue default value '
      type: string
    LeavingDate:
      description: 'LeavingDate default value '
      type: string
      example: '2017-07-07'
    EmployeeImagePath:
      description: 'Employee Image default value '
      type: string
      example: 'don''t know please check '
    DurationType:
      description: 'Duration type default value '
      type: byte
      example: '1'
    DurationInDays:
      description: 'Duration in days default value '
      type: integer
      format: decimal
      example: 1
    DurationInMinutes:
      description: 'Duration in minutes default value '
      type: integer
      example: 450
    PartOfDay:
      description: 'Part of day default value '
      type: string
      enum:
        - AM
        - PM
      example: AM
    IsIncludeHistory:
      description: 'IsIncludeHistory Default value '
      type: boolean
      example: true
    EffectiveFrom:
      description: 'EffectiveFrom default value '
      type: string
      example: '2014-01-01'
      format: date
    SalaryType:
      description: 'SalaryType default value '
      type: string
      enum:
        - Annual
        - Hourly
        - Daily
        - Weekly
        - Monthly
      example: Annual
    PaymentFrequency:
      description: 'PaymentFrequency default value '
      type: string
      enum:
        - Monthly
        - Fortnightly
        - Weekly
        - Four Weekly
        - Daily
        - Two Weekly
      example: Monthly
    SalaryAmount:
      description: 'SalaryAmount default value '
      type: integer
      example: 1000
    CurrencyCode:
      description: 'CurrencyCode default value '
      type: string
      maxLength: '100'
      example: ASD
    ChangeReason:
      description: 'ChangeReason default value '
      type: string
      maxLength: '100'
      example: New Reason1
    Comments:
      description: 'Comments default value '
      type: string
      example: Comments goes here
    OldStartDate:
      description: 'Old start date default value '
      type: string
      format: date
      example: '2017-07-18'
    OldEndDate:
      description: 'Old end date default value '
      type: string
      format: date
      example: '2017-07-18'
    Category:
      description: 'Category default value '
      type: string
      maxLength: '100'
      example: Catagory
    EmployeeAccess:
      description: 'EmployeeAccess default value '
      type: string
      enum:
        - 'false'
        - 'true'
      example: true
    ManagerAccess:
      description: 'ManagerAccess default value '
      type: string
      enum:
        - 'false'
        - 'true'
      example: true
    SignatureRequired:
      description: 'SignatureRequired default value '
      type: string
      enum:
        - 'false'
        - 'true'
      example: true
    DocumentName:
      description: DocumentName value
      type: string
      maxLength: '100'
      example: Abc.txt
    Description:
      description: Description value
      type: string
      maxLength: '256'
      example: Description here
    File:
      description: File value
      type: string
      example: Pass base64 string
    DocumentId:
      description: 'DocumentId default value '
      type: long integer
      example: '1'
    PartOfDayForUpdateAbsence:
      description: 'Part of day value '
      type: string
      enum:
        - AM
        - PM
      example: true
    Reason:
      description: 'Duration Default value '
      type: string
      maxLength: '100'
      example: Resaon here
    PartOfDayForAddAbsence:
      description: 'Part of day value '
      type: string
      enum:
        - AM
        - PM
      example: AM
    Duration:
      description: 'Duration Default value '
      type: integer
      format: decimal
      example: 1
    AbsencePaidStatus:
      description: 'AbsencePaidStatus default value '
      type: byte
      example: '1'
    EmergencyLeave:
      description: 'Emergency Leave default value '
      type: string
      enum:
        - 'false'
        - 'true'
      example: true
    TimesheetDate:
      description: 'TimesheetDate default value '
      type: string
      format: date
      example: '2017-01-01'
    TimeIn1:
      type: string
      format: timespan
      example: '09:35'
    TimeIn2:
      description: TimeIn2 default value
      type: string
      format: timespan
      example: '09:45'
    TimeIn3:
      description: TimeIn3 default value
      type: string
      format: timespan
      example: '09:55'
    TimeIn4:
      description: TimeIn4 default value
      type: string
      format: timespan
      example: '10:00'
    TimeIn5:
      description: TimeIn5 default value
      type: string
      format: timespan
      example: '10:10'
    TimeIn6:
      description: TimeIn6 default value
      type: string
      format: timespan
      example: '10:30'
    TimeIn7:
      description: TimeIn7 default value
      type: string
      format: timespan
      example: '10:50'
    TimeIn8:
      description: TimeIn8 default value
      type: string
      format: timespan
      example: '11:10'
    TimeIn9:
      description: TimeIn9 default value
      type: string
      format: timespan
      example: '11:30'
    TimeIn10:
      description: TimeIn10 default value
      type: string
      format: timespan
      example: '11:50'
    TimeIn11:
      description: TimeIn11 default value
      type: string
      format: timespan
      example: '12:00'
    TimeIn12:
      description: TimeIn12 default value
      type: string
      format: timespan
      example: '12:30'
    TimeIn13:
      description: TimeIn13 default value
      type: string
      format: timespan
      example: '12:50'
    TimeIn14:
      description: TimeIn14 default value
      type: string
      format: timespan
      example: '3:00'
    TimeIn15:
      description: TimeIn15 default value
      type: string
      format: timespan
      example: '03:10'
    TimeOut1:
      description: TimeOut1 default value
      type: string
      format: timespan
      example: '04:00'
    TimeOut2:
      description: TimeOut2 default value
      type: string
      format: timespan
      example: '04:10'
    TimeOut3:
      description: TimeOut3 default value
      type: string
      format: timespan
      example: '04:20'
    TimeOut4:
      description: TimeOut4 default value
      type: string
      format: timespan
      example: '04:40'
    TimeOut5:
      description: TimeOut5 default value
      type: string
      format: timespan
      example: '04:50'
    TimeOut6:
      description: TimeOut6 default value
      type: string
      format: timespan
      example: '05:00'
    TimeOut7:
      description: TimeOut7 default value
      type: string
      format: timespan
      example: '05:10'
    TimeOut8:
      description: TimeOut8 default value
      type: string
      format: timespan
      example: '05:20'
    TimeOut9:
      description: TimeOut9 default value
      type: string
      format: timespan
      example: '05:30'
    TimeOut10:
      description: TimeOut10 default value
      type: string
      format: timespan
      example: '06:00'
    TimeOut11:
      description: TimeOut11 default value
      type: string
      format: timespan
      example: '06:10'
    TimeOut12:
      description: TimeOut12 default value
      type: string
      format: timespan
      example: '06:20'
    TimeOut13:
      description: TimeOut13 default value
      type: string
      format: timespan
      example: '06:30'
    TimeOut14:
      description: TimeOut14 default value
      type: string
      format: timespan
      example: '06:50'
    TimeOut15:
      description: TimeOut15 default value
      type: string
      format: timespan
      example: '7:00'
    IPAddressTimeIn1ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn2ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn3ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn4ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn5ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn6ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn7ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn8ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn9ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn10ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn11ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn12ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn13ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn14ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeIn15ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut1ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut2ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut3ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut4ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut5ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut6ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut7ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut8ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut9ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut10ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut11ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut12ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut13ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut14ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    IPAddressTimeOut15ForEmployeeTimesheet:
      description: ''
      type: string
      example: 192.168.0.156
    TotalTimeWorkedTodayInMinsForEmployeeTimesheet:
      description: ''
      type: string
      example: '405'
    TotalTimeWorkedThisWeekInMinsForEmployeeTimesheet:
      description: ''
      type: string
      example: '405'
    TotalTimeWorkedThisMonthInMinsForEmployeeTimesheet:
      description: ''
      type: string
      example: '405'
    TimesheetStateForEmployeeTimesheet:
      description: ''
      type: string
      example: Complete
    ChangedDateForEmployeeTimesheet:
      description: ''
      type: string
      format: date
      example: '2017-07-19'
    VacancyName:
      description: 'Vacancy name default value '
      type: string
      maxLength: '512'
      example: IT Programmer
    VacancyDescription:
      description: 'Title default value '
      type: string
      example: IT Programmer
    ClosingDate:
      description: 'ClosingDate default value '
      type: string
      format: date
      example: '2016-07-31'
    Reference:
      description: 'Reference default value '
      type: string
      example: VA4
    Comment:
      description: 'Comment default value '
      type: string
      maxLength: 1024
      example: Comment
    SalaryRange:
      description: 'SalaryRange default value '
      type: string
      maxLength: '100'
      example: '10000'
    JobDescription:
      description: 'Job description default value '
      type: string
      example: Job Description
    IsCoverLetterMandatory:
      description: 'Is coverLetter mandatory default value '
      type: string
      example: false
      enum:
        - 'false'
        - 'true'
    IsResumeMandatory:
      description: 'Is resume mandatory default value '
      type: string
      example: false
      enum:
        - 'false'
        - 'true'
    IsHideSalary:
      description: 'Is hide salary default value '
      type: string
      example: false
      enum:
        - 'false'
        - 'true'
    VacancyType:
      description: 'Is hide salary default value '
      type: string
      example: Internal
      enum:
        - external
        - internal
        - both
    JobTitle:
      description: 'Job title default value '
      type: string
      example: Software Engineer
      maxLength: '512'
    City:
      description: 'city default value '
      type: string
      maxLength: '256'
      example: Mumbai
    Country:
      description: 'Country default value '
      type: string
      maxLength: '256'
      example: India
    Experience:
      description: 'Experience default value '
      type: string
      maxLength: '256'
      example: 4 Year
    VacancyReference:
      description: 'VacancyReference default value '
      type: string
      maxLength: '100'
      example: VA4
    CustomScreenTransactionId:
      description: Custom Screen Transaction Id
      type: integer
      example: 12345
    ScreenId:
      description: Screen Id value
      type: integer
      example: 123
    QueryName:
      description: 'QueryName default value '
      type: string
      example: Absence
    FieldName:
      description: 'FieldName default value '
      type: string
      example: EMPLOYEE_PERSONAL_FIRST_NAME
    CustomColumnsForEmployeeCustomScreenObject:
      type: array
      items:
        type: object
        required:
          - ColumnName
          - ColumnValue
        properties:
          ColumnName:
            description: 'ColumnName for employee custom screen '
            type: string
            maxLength: 100
            example: Column 1 Name
          ColumnValue:
            description: ColumnValue for employee custom screen
            type: string
            example: Abcd
    AddFilesForEmployeeCustomScreenObject:
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        properties:
          DocumentName:
            description: DocumentName for employee custom screen
            type: string
            maxLength: 100
            example: 123.pdf
          File:
            description: File for employee custom screen
            type: string
            example: Pass base64 string
          Description:
            description: Description for employee custom screen
            type: string
            maxLength: 256
            example: File description
          DocumentCategory:
            description: DocumentCategory for employee custom screen
            type: string
            maxLength: 100
            example: Custom Category
          SignatureRequired:
            description: SignatureRequired for employee custom screen
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: false
    Benefit:
      description: Benefit default value
      type: string
      maxLength: '100'
      example: Date Awarded
    BenefitIdForAddNewBenefit:
      description: Benefit id value
      type: string
      example: '1'
    BenefitId:
      description: Benefit id default value
      type: integer
      example: 382
    DateAwarded:
      description: Date awarded default value
      type: String
      format: date
      example: '2017-05-05'
    ExpiryDate:
      description: ExpiryDate default value
      type: string
      format: date
      example: '2018-07-07'
    CustomfieldsForGetCustomScreenDetailObject:
      type: array
      items:
        type: object
        properties:
          ColumnName:
            description: ColumnName value
            type: string
            example: Text Field
          ColumnValue:
            description: ColumnValue value
            type: string
            example: '126'
    FilesForGetByCustomScreenTransactionIdObject:
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            example: 2.pdf
          Description:
            description: Description value
            type: string
            example: File description
          FileUrl:
            description: FileUrl value
            type: string
            format: url
            example: >-
              http://techinfo.localhost.net:12345/Handlers/MyDocsViewer.ashx?3489f8dc-629f-4830-b1de-fdc0f943596e
          Category:
            description: Document category value
            type: string
            example: Custom Category
          SignatureRequired:
            description: SignatureRequired value
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: false
    Value:
      description: Value default value
      type: string
      format: decimal
      example: '1000.10'
    RecoverOnTermination:
      description: RecoverOnTermination
      type: string
      enum:
        - 'yes'
        - 'No'
      example: 'yes'
    EmailFrom:
      description: 'Email From default value '
      type: string
      format: email
      maxLength: 254
      example: rajendra.petave@itgurussoftware.com
    EmailSubject:
      description: 'Email Subject default value '
      type: string
      maxLength: 2147483647
      example: '[Recipient email address] Email Subject'
    Result1ForEmailToForEmailInbox:
      type: array
      items:
        type: object
        required:
          - EmailId
        properties:
          EmailId:
            description: Email Id Value
            type: string
            format: email
            maxLength: 254
            example: raj@itgurus.com
    Result1ForEmailCcForEmailInbox:
      type: array
      items:
        type: object
        required:
          - EmailId
        properties:
          EmailId:
            description: Email Id Value
            type: string
            format: email
            maxLength: 254
            example: raj@itgurus.com
    Result1ForEmailBccForEmailInbox:
      type: array
      items:
        type: object
        required:
          - EmailId
        properties:
          EmailId:
            description: Email Id Value
            type: string
            format: email
            maxLength: 254
            example: raj@itgurus.com
    Result1ForAttachmentForEmailInbox:
      type: array
      items:
        type: object
        required:
          - FileName
          - Size
        properties:
          FileName:
            description: File Name Value
            type: string
            example: abc.doc
          Size:
            description: Size Value
            type: string
            maxLength: 15MB
            example: '15728640'
    DocumentType:
      description: 'Document Type default value '
      type: string
      maxLength: '100'
      example: Insurance Period
    ValidFrom:
      description: 'Valid From default value '
      type: string
      format: date
      example: '2014-04-01'
    ValidTo:
      description: 'Valid To default value '
      type: string
      format: date
      example: '2014-04-01'
    RightToWorkTxnId:
      description: RightToWorkTxnId default value
      type: integer
      example: 215
    TypeOfCheck:
      description: 'Type Of Check default value '
      type: string
      maxLength: '100'
      example: DBS Enhanced
    DateCompleted:
      description: 'Date Completed default value '
      type: string
      format: date
      example: '2016-04-15'
    BackgroundCheckTxnId:
      description: 'BackgroundCheckTxnId default value '
      type: integer
      example: 1
    OtherLeaveTxnId:
      description: 'Other Leave Txn Id default value '
      type: integer
      example: 1
    OtherEventReason:
      description: 'Other Event Reason default value '
      type: string
      maxLength: '100'
      example: Jury Duty
    Result1Foraddothereventleave:
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
        properties:
          DocumentName:
            description: Document Name Value
            type: string
            example: 123.pdf
          File:
            description: File value
            type: string
            example: Pass base64 string
          Descriptions:
            description: Descriptions value
            type: string
            maxLength: 1024
            example: dsadsadasdasd
    OtherEventTxnId:
      description: 'OtherEventTxnId default value '
      type: integer
      example: 1
    Result1Forupdateothereventleave:
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
        properties:
          DocumentName:
            description: Document Name Value
            type: string
            example: 123.pdf
          File:
            description: File value
            type: string
            example: Pass base64 string
          Descriptions:
            description: Descriptions value
            type: string
            maxLength: 1024
            example: dsadsadasdasd
    EntitlementRecordedIn:
      description: 'Entitlement Recorded In default value '
      type: integer
      example: 1
    ThisYearEntitlement:
      description: 'This Year Entitlement default value '
      type: number
      maxLength: '4'
      format: decimal
      example: 0
    NextYearEntitlement:
      description: 'Next Year Entitlement default value '
      type: number
      maxLength: '4'
      format: decimal
      example: 0
    WorkPatternId:
      description: Work pattern id default value
      type: integer
      example: 2
    WorkPatternName:
      description: Work pattern name default value
      type: string
      maxLength: '100'
      example: xyz
    PostCode:
      description: Post code default value
      type: string
      maxLength: 20
      example: '413608'
    PhoneNumber:
      description: Phone number default value
      type: string
      maxLength: '80'
      example: '8899556885'
    OtherContactDetails:
      description: Other contact details default value
      type: string
      maxLength: '1024'
      example: '8899556885'
    Source:
      description: Source default value
      type: string
      example: Facebook
    Skills:
      description: Skills default value
      type: string
      example: C#, Asp.net, JQuery
    RecruitmentCost:
      description: Recruitment cost default value
      type: integer
      example: 50
    DateLastContacted:
      description: Date last contacted default value
      type: string
      format: date
      example: '2016-01-13'
    ApplicantId:
      description: Applicant id default value
      type: bigint
      maxLength: '15'
      example: '90'
    LateDate:
      description: 'Late Date default value '
      type: string
      format: date
      example: '2017-07-18'
    HowLate:
      description: 'How late default value '
      type: integer
      example: 10
    AppraisalId:
      description: Appraisal id  default value
      type: integer
      example: 383
    AppraisalReviewDate:
      description: 'AppraisalReviewDate Default value '
      type: string
      format: date
      example: '2017-05-01'
    Reviewer:
      description: 'Reviewer value '
      type: string
      format: email
      example: rajendra.petave@itgurussoftware.com
    Notes:
      type: string
      maxLength: '1024'
      example: notes goes here
    ActionPlan:
      type: string
      maxLength: '1024'
      example: '11'
    Objectives:
      type: string
      maxLength: '1024'
      example: '121'
    CustomColumnsArrayForAddNewAppraisal:
      type: array
      items:
        required:
          - ColumnName
          - ColumnValue
        type: object
        properties:
          ColumnName:
            description: ColumnName value
            type: string
            example: 123.pdf
          ColumnValue:
            description: Column value
            type: string
            example: asddds
    AddFilesArrayForAddNewAppraisal:
      type: array
      items:
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            example: 123.pdf
            maxLength: '100'
          File:
            description: File
            type: string
            example: pass base64 string
          Description:
            description: Description value
            type: string
            example: dsadsadasdasd
            maxLength: '256'
          DocumentCategory:
            description: Document category value
            type: string
            example: catagory
            maxLength: '100'
          SignatureRequired:
            description: Signature Required value
            type: string
            enum:
              - 'false'
              - 'true'
            example: false
    CustomColumnsArrayForUpdateAppraisal:
      type: array
      items:
        required:
          - ColumnName
          - ColumnValue
        type: object
        properties:
          ColumnName:
            description: ColumnName value
            type: string
            example: 123.pdf
          ColumnValue:
            description: Column value
            type: string
            example: adsdsd
    AddFilesArrayForUpdateAppraisal:
      type: array
      items:
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            example: 123.pdf
            maxLength: '100'
          File:
            description: File
            type: string
            example: pass base64 string
          Description:
            description: Description value
            type: string
            example: dsadsadasdasd
            maxLength: '256'
          DocumentCategory:
            description: Document category value
            type: string
            example: catagory
            maxLength: '100'
          SignatureRequired:
            description: Signature Required value
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
    DrivingId:
      description: Driving id default value
      type: integer
      example: 2
    LicenseNumber:
      description: License number
      type: string
      maxLength: 50
      example: Li555
    LicenseType:
      description: License type
      type: string
      maxLength: '100'
      example: 2 wheeler
    TrainingType:
      description: Training type
      type: string
      maxLength: '100'
      example: Java
    Importance:
      description: Importance default value
      type: integer
      example: 1
    Status:
      description: Status default value
      type: integer
      example: 2
    InProgress:
      description: InProgress default value
      type: byte
      example: '10'
    TrainingDate:
      description: Training date default value
      type: string
      format: date
      example: '2017-10-10'
    TrainingEndDate:
      description: Training end date default value
      type: string
      format: date
      example: '2015-10-11'
    TrainingExpiryDate:
      description: Training expiry date default value
      type: string
      format: date
      example: '2015-10-12'
    Cost:
      description: Cost default value
      type: string
      format: decimal
      example: '0.01'
    Provider:
      description: Provider default value
      type: string
      maxLength: '256'
      example: John
    QualificationId:
      description: Qualification id default value
      type: integer
      example: 1
    Qualification:
      description: Qualification
      type: string
      maxLength: '100'
      example: MSC
    Subject:
      description: Subject
      type: string
      maxLength: '100'
      example: Computer science
    DatePassed:
      description: Date passed default value
      type: string
      format: date
      example: '2017-05-01'
    TrainingId:
      description: Training Id default value
      type: integer
      example: 1
    Registration:
      description: 'Registration default value '
      type: string
      example: RG003
    Make:
      description: 'Make default value '
      type: string
      example: ABC
    Model:
      description: 'Model default value '
      type: string
      example: A123
    Colour:
      description: 'Colour default value '
      type: string
      example: Black
    EngineSize:
      description: 'EngineSize default value '
      type: string
      example: A101
    FuelType:
      description: 'FuelType default value '
      type: string
      example: DF001
    InsuranceCompany:
      description: 'InsuranceCompany default value '
      type: string
      example: DF001
    PolicyNumber:
      description: 'PolicyNumber default value '
      type: string
      example: 123456A
    MOTExpiryDate:
      description: 'MOTExpiryDate default value '
      type: string
      format: date
      example: '2017-01-01'
    InsuranceExpiryDate:
      description: 'InsuranceExpiryDate default value '
      type: string
      format: date
      example: '2017-01-01'
    VehicleId:
      description: 'VehicleId default value '
      type: integer
      example: 123
    MaternityPaternityTxnId:
      description: 'MaternityPaternityTxnId default value '
      type: integer
      example: 339
    DueDate:
      description: Due Date default value
      type: string
      format: date
      example: '2017-05-20'
    ActualStartDate:
      description: 'Actual start date default value '
      type: string
      format: date
      example: '2017-05-20'
    ActualEndDate:
      description: 'Actual end date default value '
      type: string
      format: date
      example: '2017-05-21'
    TransactionId:
      description: 'TransactionId default value '
      type: integer
      example: 1
    ProjectTimesheetDate:
      description: 'ProjectTimesheetDate default value '
      type: string
      format: date
      example: '2014-01-01'
    TimesheetProject:
      description: 'TimesheetProject default value '
      type: string
      maxLength: '100'
      example: Project name goes here
    TimesheetTask:
      description: 'TimesheetTask default value '
      type: string
      maxLength: '100'
      example: Time sheet tasks goes here
    TimesheetDetail:
      description: 'TimesheetDetail default value '
      type: string
      maxLength: '100'
      example: Time sheet details goes here
    StartTime:
      description: 'StartTime default value '
      type: string
      format: timespan
      example: '02:00'
    EndTime:
      description: 'EndTime default value '
      type: string
      format: timespan
      example: '04:00'
    TotalHours:
      description: 'TotalHours default value '
      type: string
      format: timespan
      example: '02:00'
    Quantity:
      description: 'Quantity default value '
      type: integer
      format: decimal
      example: 0
    CPDId:
      description: 'CPDId default value '
      type: integer
      example: 148
    Activity:
      description: 'Activity default value '
      type: string
      maxLength: '100'
      example: Activity name
    RollNumber:
      description: 'Roll number default value '
      type: string
      maxLength: '30'
      example: '45'
    DateAdmitted:
      description: 'Date admitted default value '
      type: string
      format: date
      example: '2017-01-01'
    HoursRequired:
      description: 'Hours required default value '
      type: integer
      example: 20
    HoursAccredited:
      description: 'Hours accredited default value '
      type: integer
      example: 21
    ProjectName:
      description: 'ProjectName default value '
      type: string
      maxLength: '100'
      example: Project Name
    InUse:
      description: 'InUse default value '
      type: string
      example: 'Yes'
    NewProjectName:
      description: 'NewProjectName default value '
      type: string
      maxLength: '100'
      example: updated Project Name
    ProjectTaskName:
      description: 'ProjectTaskName default value '
      type: string
      maxLength: 100
      example: ABC
    New_ProjectTaskName:
      description: New_ProjectTaskName value
      type: string
      maxLength: 100
      example: XYZ
    ProjectTaskDetailName:
      description: ProjectTaskDetailName value
      type: string
      maxLength: 100
      example: XYZ
    New_ProjectTaskDetailName:
      description: 'New ProjectTaskDetailName default value '
      type: string
      maxLength: '100'
      example: New Project Task Detail Name goes here
    CustomColumnsArrayForEmployeeCPD:
      type: array
      items:
        type: object
        required:
          - ColumnName
        properties:
          ColumnName:
            description: ColumnName value
            type: string
            example: Column_Name
          ColumnValue:
            description: ColumnValue value
            type: string
            example: '29153'
    CustomColumnsForGetTrainingDetail:
      description: GetTrainingDetail Result Array
      type: array
      items:
        type: object
        properties:
          ColumnName:
            description: ColumnName for get training detail
            type: string
            example: Vehicle 1
          ColumnValue:
            description: ColumnValue for get training detail
            type: string
            example: ABC
    AddFilesArrayForEmployeeCPD:
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            maxLength: 100
            example: DocumentName.pdf
          File:
            description: File value
            type: string
            maxLength: 50
            example: Base64 Data
          Description:
            description: Description value
            type: string
            maxLength: 256
            example: Description goes here
          DocumentCategory:
            description: Document category value
            type: string
            maxLength: 100
            example: Benefit
          SignatureRequired:
            description: Signature required value
            type: string
            enum:
              - 'false'
              - 'true'
    ResultEmployeeIdId:
      description: ' Result Array'
      type: object
      properties:
        EmployeeId:
          description: EmployeeId value
          type: string
          example: PW1
    EmployeeIdObject:
      type: array
      items:
        type: object
        properties:
          OldValue:
            description: OldValue value
            type: string
            example: Old value
          NewValue:
            description: NewValue value
            type: string
            example: New value
          ChangedOn:
            description: Changed On value
            type: string
            example: '2017-07-12'
          ReasonForChange:
            description: Reason for change
            type: string
            example: Reason for change
    FieldHistoryForJobRoleObject:
      type: array
      items:
        type: object
        properties:
          JobRole:
            description: Job role value
            type: string
            example: Software enginner
          EffectiveDate:
            description: Effective date value
            type: string
            format: date
            example: '2015-06-20'
          ChangedOn:
            description: Changed On value
            type: string
            format: date
            example: '2017-07-12'
          ReasonForChange:
            description: Reason for change
            type: string
            example: Reason for change
    FieldHistoryForEffectiveDateObject:
      type: array
      items:
        type: object
        properties:
          FieldData:
            description: Field data value
            type: string
            example: don't know
          EffectiveDate:
            description: Effective date value
            type: string
            format: date
            example: '2014-07-12'
          ChangedOn:
            description: Changed On value
            type: string
            format: date
            example: '2017-07-12'
          ReasonForChange:
            description: Reason for change
            type: string
            example: Reason for change
    DeductionsArray:
      type: array
      items:
        type: object
        required:
          - Deduction
          - DisplayAsAmountOrPercentage
          - Amount
          - IncludeInTotalSalary
        properties:
          Deduction:
            description: Deduction value
            type: string
            example: Social Club 1
          DisplayAsAmountOrPercentage:
            description: Display as amount or percentage
            type: string
            enum:
              - 'false'
              - 'true'
          Amount:
            description: ' contact last name'
            type: integer
            example: 100
          Percentage:
            description: Percentage
            type: integer
            format: decimal
            example: 10
          Comments:
            description: Comments
            type: string
            maxLength: '512'
            example: Comments for deduction social
          IncludeInTotalSalary:
            description: IncludeInTotalSalary
            type: string
            enum:
              - 'false'
              - 'true'
    EntitlementsArray:
      type: array
      items:
        type: object
        required:
          - Entitlement
          - DisplayAsAmountOrPercentage
          - Amount
          - IncludeInTotalSalary
        properties:
          Entitlement:
            description: Entitlement value
            type: string
            maxLength: '100'
          DisplayAsAmountOrPercentage:
            description: Display as amount or percentage
            type: string
            enum:
              - 'false'
              - 'true'
          Amount:
            description: ' contact last name'
            type: integer
            example: 100
          Percentage:
            description: Percentage
            type: integer
            format: decimal
            example: 10
          Comments:
            description: Comments
            type: string
            maxLength: '512'
            example: Comments for deduction social
          IncludeInTotalSalary:
            description: IncludeInTotalSalary
            type: string
            enum:
              - 'false'
              - 'true'
    GetAllDocumentArray:
      description: The get all document array
      type: array
      items:
        type: object
        properties:
          EmployeeId:
            description: ' employee id value'
            type: integer
            example: 22956
          DocumentId:
            description: ' document id value'
            type: long integer
            example: 129541
          DocumentName:
            description: ' document name value'
            type: string
            example: 123.pdf
          URL:
            description: ' URL value'
            type: string
            format: url
            example: >-
              http://itgpeoplehr.localhost.net:12345/Handlers/MyDocsViewer.ashx?177e5884-af67-44e6-af86-f9d19715b5cf
          Comments:
            description: ' comments value'
            type: string
            example: dsadsadasdasd
          EmployeeAccess:
            description: ' employee access value'
            type: string
            enum:
              - 'true'
              - 'false'
          ManagerAccess:
            description: ' manager access value'
            type: string
            enum:
              - 'true'
              - 'false'
          SignRequired:
            description: ' SignRequired '
            type: string
            enum:
              - 'true'
              - 'false'
          Category:
            description: Category
            type: string
            example: Absence
          AddedOn:
            description: Added On
            type: string
            example: Mon, 17 Jul 2017
    GetDocumentByIdArray:
      description: Get document by id document array
      type: array
      items:
        type: object
        properties:
          EmployeeId:
            description: ' employee id value'
            type: integer
            example: 22956
          DocumentId:
            description: ' document id value'
            type: integer
            example: 129556
          DocumentName:
            description: ' document name value'
            type: string
            example: bird1.png
          URL:
            description: ' URL value'
            type: string
            format: url
            example: >-
              http://itgpeoplehr.localhost.net:12345/Handlers/MyDocsViewer.ashx?d1537b64-55cf-429c-aaa0-1e0223fc2974
          Comments:
            description: ' comments value'
            type: string
            example: xyz
          EmployeeAccess:
            description: ' employee access value'
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
          ManagerAccess:
            description: ' manager access value'
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
          SignRequired:
            description: ' SignRequired '
            type: string
            enum:
              - 'false'
              - 'true'
            example: true
          Category:
            description: Category
            type: string
            example: Category
          AddedOn:
            description: Added On
            type: string
            example: Tue, 18 Jul 2017
    CommentsArray:
      type: array
      items:
        type: object
        properties:
          Comments:
            description: Comments
            type: string
            example: Not feeling well
          PostedBy:
            description: Post by
            type: integer
            example: null
    AddCommentsArrayForAbsence:
      type: array
      items:
        type: object
        properties:
          Comment:
            description: Comment value
            type: string
            example: Comment goes here
            maxLength: '1024'
    AddFilesArrayForAbsence:
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            example: bird1.png
          File:
            description: File value
            type: string
            example: pass base64 string
          Description:
            description: Description value
            type: string
            example: Something write here
            maxLength: '1024'
    CustomColumnsForEmployeeDriving:
      description: ' Result Array'
      type: array
      items:
        type: object
        required:
          - ColumnName
        properties:
          ColumnName:
            description: ColumnName for employee driving
            type: string
            maxLength: 100
            example: Vehicle 1
          ColumnValue:
            description: ColumnValue for employee driving
            type: string
            example: ABC
    AddFilesForEmployeeDriving:
      description: ' Result Array'
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        properties:
          DocumentName:
            description: DocumentName for employee driving
            type: string
            maxLength: 100
            example: my.txt
          File:
            description: File for employee driving
            type: string
            example: Base 64 code
          Descriptions:
            description: Descriptions for employee driving
            type: string
            maxLength: 256
            example: Descriptions goes here
          DocumentCategory:
            description: DocumentCategory for employee driving
            type: string
            maxLength: 100
            example: Custom Catagory
          SignatureRequired:
            description: SignatureRequired for employee driving
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: 'False'
    CustomColumnsForEmployeeTraining:
      description: ' Result Array'
      type: array
      items:
        type: object
        required:
          - ColumnName
        properties:
          ColumnName:
            description: ColumnName for employee training
            type: string
            maxLength: 100
            example: Vehicle 1
          ColumnValue:
            description: ColumnValue for employee training
            type: string
            example: ABC
    AddFilesForEmployeeTraining:
      description: ' Result Array'
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        properties:
          DocumentName:
            description: DocumentName for employee training
            type: string
            maxLength: 100
            example: my.txt
          File:
            description: File for employee training
            type: string
            example: Base 64 code
          Descriptions:
            description: Descriptions for employee training
            type: string
            maxLength: 256
            example: Descriptions goes here
          DocumentCategory:
            description: DocumentCategory for employee training
            type: string
            maxLength: 100
            example: Custom Catagory
          SignatureRequired:
            description: SignatureRequired for employee training
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: 'False'
    CustomColumnsForGetEmployeeQualification:
      description: ' CustomColumns Result Array'
      type: array
      items:
        type: object
        properties:
          ColumnName:
            description: Columnname Value
            type: string
            example: Vehicle 1
          ColumnValue:
            description: Columnvalue value
            type: string
            example: ABC
    AddFilesForGetEmployeeQualification:
      description: AddFiles Result Array
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: Document name value
            type: string
            example: my.txt
          FileUrl:
            description: FileUrl value
            type: string
            format: Url
            example: >-
              http://reportsto.localhost.net:12345/Handlers/MyDocsViewer.ashx?a7897690-633a-46df-aefd-bc4ae479c5b7
          Descriptions:
            description: Descriptions value
            type: string
            example: Descriptions goes here
          Category:
            description: Document category value
            type: string
            example: Custom Catagory
          SignatureRequired:
            description: Signature required value
            type: string
            format: boolean
            enum:
              - 'false'
              - 'true'
            example: false
    CustomColumnsForEmployeeVehicleAddArray:
      type: array
      items:
        type: object
        required:
          - ColumnName
        properties:
          ColumnName:
            description: ColumnName to add employee's new vehicle detail
            type: string
            example: Demo
          ColumnValue:
            description: ColumnValue to add employee's new vehicle detail
            type: string
            example: ''
    CustomColumnsForEmployeeVehicleUpdateArray:
      type: array
      items:
        type: object
        required:
          - ColumnName
        properties:
          ColumnName:
            description: ColumnName to update employee's new vehicle detail
            type: string
            example: Demo
          ColumnValue:
            description: ColumnValue to update employee's new vehicle detail
            type: string
            example: ''
    AddFilesForEmployeeVehicleAddArray:
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        properties:
          DocumentName:
            description: DocumentName to add employee's new vehicle detail
            type: string
            example: my.txt
          File:
            description: File to add employee's new vehicle detail
            type: string
            example: Pass base64 string
          Description:
            description: Description to add employee's new vehicle detail
            type: string
            example: XYZ
          DocumentCategory:
            description: DocumentCategory to add employee's new vehicle detail
            type: string
            example: XYZ
          SignatureRequired:
            description: SignatureRequired to add employee's new vehicle detail
            type: string
            enum:
              - 'false'
              - 'true'
    AddFilesForEmployeeVehicleUpdateArray:
      type: array
      items:
        type: object
        required:
          - DocumentName
          - File
          - DocumentCategory
          - SignatureRequired
        properties:
          DocumentName:
            description: DocumentName to update employee's new vehicle detail
            type: string
            example: my.txt
          File:
            description: File to add employee's new vehicle detail
            type: string
            example: Pass base64 string
          Description:
            description: Description to updtae employee's new vehicle detail
            type: string
            example: XYZ
          DocumentCategory:
            description: DocumentCategory to update employee's new vehicle detail
            type: string
            example: XYZ
          SignatureRequired:
            description: SignatureRequired to update employee's new vehicle detail
            type: string
            enum:
              - 'false'
              - 'true'
    RedirectUrls:
      description: The redirect URIs
      type: object
      required:
        - error
        - success
        - decline
        - cancel
      properties:
        error:
          type: string
          format: url
        success:
          type: string
          format: url
        decline:
          type: string
          format: url
        cancel:
          type: string
          format: url
    UserPermissions:
      type: array
      minItems: 1
      items:
        type: object
        properties:
          resourceName:
            type: string
            enum:
              - UpdateEmployeeId
              - CheckAuthentication
              - api-keys
              - api-tracking
              - authentication-tokens
              - bank-accounts
              - blacklists
              - checkout-pages
              - contacts
              - coupons
              - coupons-redemptions
              - credentials
              - custom-events
              - custom-fields
              - customers
              - disputes
              - events
              - gateway-accounts
              - invoices
              - layouts
              - lead-sources
              - lists
              - matched-rules
              - notes
              - oct-batch
              - organizations
              - password-tokens
              - payments
              - payment-cards
              - payment-cards-migrations
              - paypal-accounts
              - plans
              - reports
              - reset-sandbox
              - rulesets
              - sessions
              - subscriptions
              - subscription-tracking
              - tokens
              - transactions
              - users
              - webhook
              - webhook-tracking
              - websites
          methods:
            type: array
            minItems: 1
            items:
              type: string
              enum:
                - HEAD
                - GET
                - POST
                - PUT
                - DELETE
                - PATCH
          resourceIds:
            type: array
            items:
              $ref: '#/components/schemas/ResourceId'
      example:
        - resourceName: plans
          methods:
            - GET
            - POST
            - PUT
            - HEAD
            - DELETE
        - resourceName: invoices
          methods:
            - GET
            - HEAD
          resourceIds:
            - 4f6cf35x-2c4y-483z-a0a9-158621f77a21
            - 1586f35x-4f6c-483z-a0a9-2c4y21f77a21
        - resourceName: null
          methods: null
          resourceIds: null
    GenericRestriction:
      description: All restriction
      type: object
      discriminator:
        propertyName: type
      properties:
        type:
          description: Restriction type
          type: string
    ServerTimestamp:
      description: Read-only timestamp, automatically assigned on back-end.
      type: string
      format: date-time
      readOnly: true
    UpdateEmployeeId2:
      type: object
      required:
        - APIKey
        - Action
        - ReasonForChange
        - OldEmployeeId
        - NewEmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ReasonForChange:
          $ref: '#/components/schemas/ReasonForChange'
        OldEmployeeId:
          $ref: '#/components/schemas/OldEmployeeId'
        NewEmployeeId:
          $ref: '#/components/schemas/NewEmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to updateEmployeeId
          type: string
        Action:
          description: Action name = UpdateEmployeeId
          example: UpdateEmployeeId
        ReasonForChange:
          description: Reason for change employee id
        OldEmployeeId:
          description: Old employee id for update employee data
        NewEmployeeId:
          description: New employee id for update employee data
    GetAllEmployeeDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - IncludeLeavers
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        IncludeLeavers:
          $ref: '#/components/schemas/IncludeLeavers'
      x-konfig-properties:
        APIKey:
          description: APIKey for GetAllEmployeeDetail
          type: string
        Action:
          description: Action name = GetAllEmployeeDetail
          example: GetAllEmployeeDetail
        IncludeLeavers:
          description: Include leavers for get all employee detail
    GetEmployeeDetailByIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to GetEmployeeDetailById
          type: string
        Action:
          description: Action name = GetEmployeeDetailById
          example: GetEmployeeDetailById
        EmployeeId:
          description: Employee id to get employee detail
    CreateEmployeeDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - FirstName
        - LastName
        - StartDate
        - JobRole
        - JobRoleEffectiveDate
        - Location
        - Department
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Title:
          $ref: '#/components/schemas/Title'
        FirstName:
          $ref: '#/components/schemas/FirstName'
        LastName:
          $ref: '#/components/schemas/LastName'
        Email:
          $ref: '#/components/schemas/Email'
        Gender:
          $ref: '#/components/schemas/Gender'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        DateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        ReportsTo:
          $ref: '#/components/schemas/ReportsTo'
        JobRole:
          $ref: '#/components/schemas/JobRole'
        JobRoleEffectiveDate:
          $ref: '#/components/schemas/JobRoleEffectiveDate'
        Company:
          $ref: '#/components/schemas/Company'
        Location:
          $ref: '#/components/schemas/Location'
        Department:
          $ref: '#/components/schemas/Department'
        NationalInsuranceNumber:
          $ref: '#/components/schemas/NationalInsuranceNumber'
        Nationality:
          $ref: '#/components/schemas/Nationality'
        EmploymentType:
          $ref: '#/components/schemas/EmploymentType'
        EntitlementThisYear:
          $ref: '#/components/schemas/EntitlementThisYear'
        EntitlementNextYear:
          $ref: '#/components/schemas/EntitlementNextYear'
        Address:
          $ref: '#/components/schemas/Address'
        PersonalPhoneNumber:
          $ref: '#/components/schemas/PersonalPhoneNumber'
        Payroll Company:
          $ref: '#/components/schemas/PayrollCompany'
        Payroll ID:
          $ref: '#/components/schemas/PayrollID'
        Time & Attendance ID:
          $ref: '#/components/schemas/Time_AttendanceID'
        Rota ID:
          $ref: '#/components/schemas/RotaID'
        CRM ID:
          $ref: '#/components/schemas/CRMID'
        ATS ID:
          $ref: '#/components/schemas/ATSID'
        Performance ID:
          $ref: '#/components/schemas/PerformanceID'
        Benefits ID:
          $ref: '#/components/schemas/BenefitsID'
        System1 ID:
          $ref: '#/components/schemas/System1ID'
        System2 ID:
          $ref: '#/components/schemas/System2ID'
        System3 ID:
          $ref: '#/components/schemas/System3ID'
        APIColumn1:
          $ref: '#/components/schemas/APIColumn1'
        APIColumn2:
          $ref: '#/components/schemas/APIColumn2'
        APIColumn3:
          $ref: '#/components/schemas/APIColumn3'
        APIColumn4:
          $ref: '#/components/schemas/APIColumn4'
        APIColumn5:
          $ref: '#/components/schemas/APIColumn5'
        PersonalEmail:
          $ref: '#/components/schemas/PersonalEmail'
        MethodOfRecruitment:
          $ref: '#/components/schemas/MethodOfRecruitment'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to createNewEmployee
          type: string
        Action:
          description: Action name = CreateNewEmployee
          example: CreateNewEmployee
        EmployeeId:
          description: Employee id for create new employee
        Title:
          description: Title for create new employee
        FirstName:
          description: FirstName for create new employee
        LastName:
          description: LastName for create new employee
        Email:
          description: Email for create new employee
        Gender:
          description: Gender value for create new employee
          enum:
            - Female
            - Male
          type: string
        StartDate:
          description: Start date for create new employee
        DateOfBirth:
          description: Date of birth for create new employee
        ReportsTo:
          description: Reports To for create new employee
        JobRole:
          description: Job role for create new employee
        JobRoleEffectiveDate:
          description: Job role effective date for create new employee
        Company:
          description: Company name for create new employee
        Location:
          description: Location for create new employee
        Department:
          description: Department for create new employee
        NationalInsuranceNumber:
          description: National insurance number for create new employee
        Nationality:
          description: Nationality for create new employee
        EmploymentType:
          description: Employment type for create new employee
        EntitlementThisYear:
          description: Entitlement This Year for create new employee
        EntitlementNextYear:
          description: Entitlement Next Year for create new employee
        Address:
          description: Address for create new employee
        PersonalPhoneNumber:
          description: PersonalPhoneNumber for create new employee
        Payroll Company:
          description: Payroll company for create new employee
        Payroll ID:
          description: Payroll id for create new employee
        Time & Attendance ID:
          description: Time & attendance id for create new employee
        Rota ID:
          description: Rota id for create new employee
        CRM ID:
          description: CRM id for create new employee
        ATS ID:
          description: ATS id for create new employee
        Performance ID:
          description: Performance id for create new employee
        Benefits ID:
          description: Benefits id for create new employee
        System1 ID:
          description: System1 id for create new employee
        System2 ID:
          description: System2 id for create new employee
        System3 ID:
          description: System3 id for create new employee
        APIColumn1:
          description: API column 1 for create new employee
          maxLength: '1000'
        APIColumn2:
          description: API column 2 for create new employee
          maxLength: '1000'
        APIColumn3:
          description: API column 3 for create new employee
          maxLength: '1000'
        APIColumn4:
          description: API column 4 for create new employee
          maxLength: '1000'
        APIColumn5:
          description: API column 5 for create new employee
          maxLength: '1000'
        PersonalEmail:
          description: Personal email for create new employee
        MethodOfRecruitment:
          description: Method of recruitment for create new employee
    UpdateEmployeeDetail3:
      type: object
      required:
        - APIKey
        - Action
        - ReasonForChange
        - EmployeeId
        - FirstName
        - LastName
        - Gender
        - StartDate
        - ReportsToEffectiveDate
        - CompanyEffectiveDate
        - JobRole
        - JobRoleEffectiveDate
        - Location
        - LocationEffectiveDate
        - Department
        - DepartmentEffectiveDate
        - EmploymentTypeEffectiveDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ReasonForChange:
          $ref: '#/components/schemas/ReasonForChange'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Title:
          $ref: '#/components/schemas/Title'
        FirstName:
          $ref: '#/components/schemas/FirstName'
        LastName:
          $ref: '#/components/schemas/LastName'
        Email:
          $ref: '#/components/schemas/Email'
        Gender:
          $ref: '#/components/schemas/Gender'
        DateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        ReportsTo:
          $ref: '#/components/schemas/ReportsTo'
        ReportsToEffectiveDate:
          $ref: '#/components/schemas/ReportsToEffectiveDate'
        Company:
          $ref: '#/components/schemas/Company'
        CompanyEffectiveDate:
          $ref: '#/components/schemas/CompanyEffectiveDate'
        JobRole:
          $ref: '#/components/schemas/JobRole'
        JobRoleEffectiveDate:
          $ref: '#/components/schemas/JobRoleEffectiveDate'
        Location:
          $ref: '#/components/schemas/Location'
        LocationEffectiveDate:
          $ref: '#/components/schemas/LocationEffectiveDate'
        Department:
          $ref: '#/components/schemas/Department'
        DepartmentEffectiveDate:
          $ref: '#/components/schemas/DepartmentEffectiveDate'
        NationalInsuranceNumber:
          $ref: '#/components/schemas/NationalInsuranceNumber'
        Nationality:
          $ref: '#/components/schemas/Nationality'
        EmploymentType:
          $ref: '#/components/schemas/EmploymentType'
        EmploymentTypeEffectiveDate:
          $ref: '#/components/schemas/EmploymentTypeEffectiveDate'
        Address:
          $ref: '#/components/schemas/Address'
        PersonalPhoneNumber:
          $ref: '#/components/schemas/PersonalPhoneNumber'
        Payroll Company:
          $ref: '#/components/schemas/PayrollCompany'
        Payroll ID:
          $ref: '#/components/schemas/PayrollID'
        Time & Attendance ID:
          $ref: '#/components/schemas/Time_AttendanceID'
        Rota ID:
          $ref: '#/components/schemas/RotaID'
        CRM ID:
          $ref: '#/components/schemas/CRMID'
        ATS ID:
          $ref: '#/components/schemas/ATSID'
        Performance ID:
          $ref: '#/components/schemas/PerformanceID'
        Benefits ID:
          $ref: '#/components/schemas/BenefitsID'
        System1 ID:
          $ref: '#/components/schemas/System1ID'
        System2 ID:
          $ref: '#/components/schemas/System2ID'
        System3 ID:
          $ref: '#/components/schemas/System3ID'
        APIColumn1:
          $ref: '#/components/schemas/APIColumn1'
        APIColumn2:
          $ref: '#/components/schemas/APIColumn2'
        APIColumn3:
          $ref: '#/components/schemas/APIColumn3'
        APIColumn4:
          $ref: '#/components/schemas/APIColumn4'
        APIColumn5:
          $ref: '#/components/schemas/APIColumn5'
        PersonalEmail:
          $ref: '#/components/schemas/PersonalEmail'
        MethodOfRecruitment:
          $ref: '#/components/schemas/MethodOfRecruitment'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to updateEmployeeId
          type: string
        Action:
          description: Action name = UpdateEmployeeDetail
          example: UpdateEmployeeDetail
        ReasonForChange:
          description: Reason for change employee id
        EmployeeId:
          description: Employee id for update employee data
        Title:
          description: Title for update employee data
        FirstName:
          description: FirstName for update employee data
        LastName:
          description: LastName for update employee data
        Email:
          description: Email for update employee data
        Gender:
          description: Gender value for update employee data
          enum:
            - Female
            - Male
          type: string
        DateOfBirth:
          description: Date of birth for update employee data
        StartDate:
          description: Start date for update employee data
        ReportsTo:
          description: Reports To for update employee data
        ReportsToEffectiveDate:
          description: Reports to effective date for update employee data
        Company:
          description: Company name for update employee data
        CompanyEffectiveDate:
          description: Company effective date for update employee data
        JobRole:
          description: Job role for update employee data
        JobRoleEffectiveDate:
          description: Job role effective date for update employee data
        Location:
          description: Location for update employee data
        LocationEffectiveDate:
          description: Location effective date for update employee data
        Department:
          description: Department for update employee data
        DepartmentEffectiveDate:
          description: Department effective date for update employee data
        NationalInsuranceNumber:
          description: National insurance number for update employee data
        Nationality:
          description: Nationality for update employee data
        EmploymentType:
          description: Employment type for update employee data
        EmploymentTypeEffectiveDate:
          description: Employment type effective date for update employee data
        Address:
          description: Address for update employee data
        PersonalPhoneNumber:
          description: PersonalPhoneNumber for update employee data
        Payroll Company:
          description: Payroll company for update employee data
        Payroll ID:
          description: Payroll id for update employee data
        Time & Attendance ID:
          description: Time & attendance id for update employee data
        Rota ID:
          description: Rota id for update employee data
        CRM ID:
          description: CRM id for update employee data
        ATS ID:
          description: ATS id for update employee data
        Performance ID:
          description: Performance id for update employee data
        Benefits ID:
          description: Benefits id for update employee data
        System1 ID:
          description: System1 id for update employee data"
        System2 ID:
          description: System2 id for update employee data"
        System3 ID:
          description: System3 id for update employee data"
        APIColumn1:
          description: API column 1 for update employee data"
          maxLength: '1000'
        APIColumn2:
          description: API column 2 for update employee data"
          maxLength: '1000'
        APIColumn3:
          description: API column 3 for update employee data"
          maxLength: '1000'
        APIColumn4:
          description: API column 4 for update employee data"
          maxLength: '1000'
        APIColumn5:
          description: API column 5 for update employee data"
          maxLength: '1000'
        PersonalEmail:
          description: Personal email for update employee data"
        MethodOfRecruitment:
          description: Method of recruitment for update employee data"
    CheckAuthentication2:
      type: object
      required:
        - APIKey
        - Action
        - EmailAddress
        - Password
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmailAddress:
          $ref: '#/components/schemas/EmailAddress'
        Password:
          $ref: '#/components/schemas/Password'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to checkAuthentication
          type: string
        Action:
          description: Action name = CheckAuthentication
          example: CheckAuthentication
        EmailAddress:
          description: Email address of user
        Password:
          description: Password of user
    MarkAsLeaverById2:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - ReasonforLeaving
        - FinalEmploymentDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        ReasonforLeaving:
          $ref: '#/components/schemas/ReasonforLeaving'
        AdditionalComments:
          $ref: '#/components/schemas/AdditionalComments'
        FinalEmploymentDate:
          $ref: '#/components/schemas/FinalEmploymentDate'
        FinalWorkingDate:
          $ref: '#/components/schemas/FinalWorkingDate'
        MarkasLeaverImmediately:
          $ref: '#/components/schemas/MarkasLeaverImmediately'
        ReportsTo:
          $ref: '#/components/schemas/ReportsTo'
        ReEmployable:
          $ref: '#/components/schemas/ReEmployable'
        SupportingComments:
          $ref: '#/components/schemas/SupportingComments'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to markAsLeaverById
          type: string
        Action:
          description: Action name = MarkAsLeaverById
          example: MarkAsLeaverById
        EmployeeId:
          description: Employee id for mark as leaver by id
        ReasonforLeaving:
          description: Reason for leaving employee
          maxLength: '100'
        AdditionalComments:
          description: Additional comments for mark as leaver by id
        FinalEmploymentDate:
          description: Final employment date for mark as leaver by id
        FinalWorkingDate:
          description: Final working date for mark as leaver by id
        MarkasLeaverImmediately:
          description: Mark as leaver immediately for mark as leaver by id
        ReportsTo:
          description: Reports to for mark as leaver by id
        ReEmployable:
          description: Re employable for mark as leaver by id
        SupportingComments:
          description: Supporting comments for mark as leaver by id
    AddEmployeeImageById2:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - EmployeeImageName
        - EmployeeImage
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        EmployeeImageName:
          $ref: '#/components/schemas/EmployeeImageName'
        EmployeeImage:
          $ref: '#/components/schemas/EmployeeImage'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to AddEmployeeImage
          type: string
        Action:
          description: Action name = AddEmployeeImage
          example: AddEmployeeImage
        EmployeeId:
          description: 'Employee id for add employee image '
        EmployeeImageName:
          description: Employee image name for add employee image
          enum:
            - .jpeg
            - .jpg
            - .png
          type: string
        EmployeeImage:
          description: Employee image for add employee image
    AddNewHolidayParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DurationType
        - StartDate
        - EndDate
        - DurationInDays
        - DurationInMinutes
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DurationType:
          $ref: '#/components/schemas/DurationType'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        DurationInDays:
          $ref: '#/components/schemas/DurationInDays'
        DurationInMinutes:
          $ref: '#/components/schemas/DurationInMinutes'
        PartOfDay:
          $ref: '#/components/schemas/PartOfDay'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee holiday to AddNewHoliday
          type: string
        Action:
          description: Action name = AddNewHoliday
          example: AddNewHoliday
        EmployeeId:
          description: Employee id for add new holiday
        DurationType:
          description: Duration type for add new holiday
        StartDate:
          description: StartDate for add new holiday
        EndDate:
          description: End date for add new holiday
        DurationInDays:
          description: Duration in days for add new holiday
        DurationInMinutes:
          description: Duration in minutes for add new holiday
        PartOfDay:
          description: Part of day for add new holiday
        Comments:
          description: Comments for add new holiday
          maxLength: '256'
    UpdateHolidayParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - OldStartDate
        - OldEndDate
        - DurationType
        - StartDate
        - EndDate
        - DurationInDays
        - DurationInMinutes
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        OldStartDate:
          $ref: '#/components/schemas/OldStartDate'
        OldEndDate:
          $ref: '#/components/schemas/OldEndDate'
        DurationType:
          $ref: '#/components/schemas/DurationType'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        DurationInDays:
          $ref: '#/components/schemas/DurationInDays'
        DurationInMinutes:
          $ref: '#/components/schemas/DurationInMinutes'
        PartOfDay:
          $ref: '#/components/schemas/PartOfDay'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for UpdateHoliday
          type: string
        Action:
          description: Action name = UpdateHoliday
          example: UpdateHoliday
        EmployeeId:
          description: Employee id for update holiday
        OldStartDate:
          description: OldStartDate for update holiday
        OldEndDate:
          description: OldEndDate for update holiday
        DurationType:
          description: Duration type for update holiday
        StartDate:
          description: StartDate for update holiday
        EndDate:
          description: End date for update holiday
        DurationInDays:
          description: Duration in days for update holiday
        DurationInMinutes:
          description: Duration in minutes for update holiday
        PartOfDay:
          description: Part of day for update holiday
        Comments:
          description: Comments for update holiday
          maxLength: '256'
    GetHolidayDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for GetHolidayDetail
          type: string
        Action:
          description: Action name = GetHolidayDetail
          example: GetHolidayDetail
        EmployeeId:
          description: Employee id for get holiday detail
        StartDate:
          description: StartDate for get holiday detail
        EndDate:
          description: End date for get holiday detail
    DeleteHolidayParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - StartDate
        - EndDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for DeleteHoliday
          type: string
        Action:
          description: Action name = DeleteHoliday
          example: DeleteHoliday
        EmployeeId:
          description: Employee Id for delete holiday
        StartDate:
          description: Start date for delete holiday
        EndDate:
          description: End date for delete holiday
    GetAbsenceDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - StartDate
        - EndDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to GetAbsenceDetail
          type: string
        Action:
          description: Action name = GetAbsenceDetail
          example: GetAbsenceDetail
        EmployeeId:
          description: ' Employee id for get absence detail'
        StartDate:
          description: Start date for get absence detail
        EndDate:
          description: 'End Date for get absence detail '
    DeleteAbsenceOfEmployeeParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - StartDate
        - EndDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to delete absence
          type: string
        Action:
          description: Action name = DeleteAbsence
          example: DeleteAbsence
        EmployeeId:
          description: Employee Id for delete absence
        StartDate:
          description: StartDate for delete absence"
        EndDate:
          description: EndDate for delete absence
    UpdateAbsenceDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - OldStartDate
        - OldEndDate
        - DurationType
        - Reason
        - StartDate
        - EndDate
        - Duration
        - AbsencePaidStatus
        - EmergencyLeave
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        OldStartDate:
          $ref: '#/components/schemas/OldStartDate'
        OldEndDate:
          $ref: '#/components/schemas/OldEndDate'
        DurationType:
          $ref: '#/components/schemas/DurationType'
        Reason:
          $ref: '#/components/schemas/Reason'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        PartOfDay:
          $ref: '#/components/schemas/PartOfDayForUpdateAbsence'
        Duration:
          $ref: '#/components/schemas/Duration'
        AbsencePaidStatus:
          $ref: '#/components/schemas/AbsencePaidStatus'
        EmergencyLeave:
          $ref: '#/components/schemas/EmergencyLeave'
        AddComments:
          $ref: '#/components/schemas/AddCommentsArrayForAbsence'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForAbsence'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to UpdateAbsence
          type: string
        Action:
          description: Action name = UpdateAbsence
          example: UpdateAbsence
        EmployeeId:
          description: Employee Id for update absence
        OldStartDate:
          description: OldStartDate for update absence
        OldEndDate:
          description: Old End Date for update absence
        DurationType:
          description: DurationType for update absence
        Reason:
          description: Reason For update absence of user
        StartDate:
          description: Start Date for update absence
        EndDate:
          description: End Date for update absence
        PartOfDay:
          description: PartOfDay for update absence
        Duration:
          description: Duration for update absence
        AbsencePaidStatus:
          description: AbsencePaidStatus for update absence
        EmergencyLeave:
          description: EmergencyLeave for update absence
        AddComments:
          description: AddComments array list
        AddFiles:
          description: AddFiles array list
    AddAbsenceOfEmployeeParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DurationType
        - Reason
        - StartDate
        - EndDate
        - PartOfDay
        - Duration
        - AbsencePaidStatus
        - EmergencyLeave
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DurationType:
          $ref: '#/components/schemas/DurationType'
        Reason:
          $ref: '#/components/schemas/Reason'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
        PartOfDay:
          $ref: '#/components/schemas/PartOfDay'
        Duration:
          $ref: '#/components/schemas/Duration'
        AbsencePaidStatus:
          $ref: '#/components/schemas/AbsencePaidStatus'
        EmergencyLeave:
          $ref: '#/components/schemas/EmergencyLeave'
        AddComments:
          $ref: '#/components/schemas/AddCommentsArrayForAbsence'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForAbsence'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to checkAuthentication
          type: string
        Action:
          description: Action name = AddNewAbsence
          example: AddNewAbsence
        EmployeeId:
          description: Employee Id for add new absence
        DurationType:
          description: DurationType of user
        Reason:
          description: Reason for add new absence
        StartDate:
          description: Start date for add new absence
        EndDate:
          description: EndDate for add new absence
        PartOfDay:
          description: PartOfDay for add new absence
        Duration:
          description: Duration for add new absence
        AbsencePaidStatus:
          description: AbsencePaidStatus for add new absence
        EmergencyLeave:
          description: EmergencyLeave for add new absence
        AddComments:
          description: AddComments array list
        AddFiles:
          description: AddFiles array list
    GetSalaryDetail2:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - IsIncludeHistory
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        IsIncludeHistory:
          $ref: '#/components/schemas/IsIncludeHistory'
      x-konfig-properties:
        APIKey:
          description: APIKey for GetSalaryDetail of employee
          type: string
        Action:
          description: Action name = GetSalaryDetail
          example: GetSalaryDetail
        EmployeeId:
          description: Employee id for get salary detail
        IsIncludeHistory:
          description: Include hostory for get salary detail
          enum:
            - 'false'
            - 'true'
          type: string
    CreateNewSalaryParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - EffectiveFrom
        - SalaryType
        - PaymentFrequency
        - SalaryAmount
        - CurrencyCode
        - ChangeReason
        - Deductions
        - DisplayAsAmountOrPercentage
        - Amount
        - Percentage
        - IncludeInTotalSalary
        - Deduction
        - Entitlements
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        EffectiveFrom:
          $ref: '#/components/schemas/EffectiveFrom'
        SalaryType:
          $ref: '#/components/schemas/SalaryType'
        PaymentFrequency:
          $ref: '#/components/schemas/PaymentFrequency'
        SalaryAmount:
          $ref: '#/components/schemas/SalaryAmount'
        CurrencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        ChangeReason:
          $ref: '#/components/schemas/ChangeReason'
        Comments:
          $ref: '#/components/schemas/Comments'
        Deductions:
          $ref: '#/components/schemas/DeductionsArray'
        Entitlements:
          $ref: '#/components/schemas/EntitlementsArray'
      x-konfig-properties:
        APIKey:
          description: 'APIKey for Create New Salary of employee '
          type: string
        Action:
          description: Action name = CreateNewSalary
          example: CreateNewSalary
        EmployeeId:
          description: Employee Id for create new salary
        EffectiveFrom:
          description: EffectiveFrom for create new salary
        SalaryType:
          description: SalaryType for create new salary
        PaymentFrequency:
          description: PaymentFrequency for create new salary
        SalaryAmount:
          description: SalaryAmount for create new salary
        CurrencyCode:
          description: CurrencyCode for create new salary
        ChangeReason:
          description: ChangeReason for create new salary
        Comments:
          description: Comments for create new salary
          maxLength: '1024'
        Deductions:
          description: Deductions of user Array
        Entitlements:
          description: Entitlements of user
    DeleteSalaryParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - EffectiveFrom
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        EffectiveFrom:
          $ref: '#/components/schemas/EffectiveFrom'
      x-konfig-properties:
        APIKey:
          description: APIKey for delete Salary of employee
          type: string
        Action:
          description: Action name = DeleteSalary
          example: DeleteSalary
        EmployeeId:
          description: Employee Id for delete salary
        EffectiveFrom:
          description: EffectiveFrom for delete salary
    UploadEmployeeDocumentParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Category
        - EmployeeAccess
        - ManagerAccess
        - SignatureRequired
        - DocumentName
        - Description
        - File
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        Category:
          $ref: '#/components/schemas/Category'
        EmployeeAccess:
          $ref: '#/components/schemas/EmployeeAccess'
        ManagerAccess:
          $ref: '#/components/schemas/ManagerAccess'
        SignatureRequired:
          $ref: '#/components/schemas/SignatureRequired'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        Description:
          $ref: '#/components/schemas/Description'
        File:
          $ref: '#/components/schemas/File'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to Upload Employee Document
          type: string
        Action:
          description: Action name = UploadEmployeeDocument
          example: UploadEmployeeDocument
        EmployeeId:
          description: ' Employee id for upload employee document'
        Category:
          description: Category for upload employee document
        EmployeeAccess:
          description: 'EmployeeAccess for upload employee document '
        ManagerAccess:
          description: 'ManagerAccess for upload employee document '
        SignatureRequired:
          description: SignatureRequired for upload employee document
        DocumentName:
          description: DocumentName for upload employee document
        Description:
          description: Description for upload employee document
        File:
          description: File for upload employee document
    GetAllDocumentParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
      x-konfig-properties:
        APIKey:
          description: APIKey for get all document
          type: string
        Action:
          description: Action name = GetAllDocument
          example: GetAllDocument
        EmployeeId:
          description: 'Employee Id for get all document '
    GetDocumentByIDParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DocumentId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DocumentId:
          $ref: '#/components/schemas/DocumentId'
      x-konfig-properties:
        APIKey:
          description: APIKey for GetDocumentByID
          type: string
        Action:
          description: Action name = GetDocumentById
          example: GetDocumentById
        EmployeeId:
          description: Employee id for get document by id
        DocumentId:
          description: DocumentId of user
    CreateNewTimesheetDefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TimesheetDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TimesheetDate:
          $ref: '#/components/schemas/TimesheetDate'
        TimeIn1:
          $ref: '#/components/schemas/TimeIn1'
        TimeOut1:
          $ref: '#/components/schemas/TimeOut1'
        TimeIn2:
          $ref: '#/components/schemas/TimeIn2'
        TimeOut2:
          $ref: '#/components/schemas/TimeOut2'
        TimeIn3:
          $ref: '#/components/schemas/TimeIn3'
        TimeOut3:
          $ref: '#/components/schemas/TimeOut3'
        TimeIn4:
          $ref: '#/components/schemas/TimeIn4'
        TimeOut4:
          $ref: '#/components/schemas/TimeOut4'
        TimeIn5:
          $ref: '#/components/schemas/TimeIn5'
        TimeOut5:
          $ref: '#/components/schemas/TimeOut5'
        TimeIn6:
          $ref: '#/components/schemas/TimeIn6'
        TimeOut6:
          $ref: '#/components/schemas/TimeOut6'
        TimeIn7:
          $ref: '#/components/schemas/TimeIn7'
        TimeOut7:
          $ref: '#/components/schemas/TimeOut7'
        TimeIn8:
          $ref: '#/components/schemas/TimeIn8'
        TimeOut8:
          $ref: '#/components/schemas/TimeOut8'
        TimeIn9:
          $ref: '#/components/schemas/TimeIn9'
        TimeOut9:
          $ref: '#/components/schemas/TimeOut9'
        TimeIn10:
          $ref: '#/components/schemas/TimeIn10'
        TimeOut10:
          $ref: '#/components/schemas/TimeOut10'
        TimeIn11:
          $ref: '#/components/schemas/TimeIn11'
        TimeOut11:
          $ref: '#/components/schemas/TimeOut11'
        TimeIn12:
          $ref: '#/components/schemas/TimeIn12'
        TimeOut12:
          $ref: '#/components/schemas/TimeOut12'
        TimeIn13:
          $ref: '#/components/schemas/TimeIn13'
        TimeOut13:
          $ref: '#/components/schemas/TimeOut13'
        TimeIn14:
          $ref: '#/components/schemas/TimeIn14'
        TimeOut14:
          $ref: '#/components/schemas/TimeOut14'
        TimeIn15:
          $ref: '#/components/schemas/TimeIn15'
        TimeOut15:
          $ref: '#/components/schemas/TimeOut15'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee timesheet api to create employee's new timesheet
          type: string
        Action:
          description: Action name = CreateNewTimesheet
          example: CreateNewTimesheet
        EmployeeId:
          description: Employee id to create new employee timesheet
        TimesheetDate:
          description: 'Employee Timesheet created date '
        TimeIn1:
          description: TimeIn1 value for create new timesheet
        TimeOut1:
          description: TimeOut1 value for create new timesheet
        TimeIn2:
          description: TimeIn2 value for create new timesheet
        TimeOut2:
          description: TimeOut2 value for create new timesheet
        TimeIn3:
          description: TimeIn3 value for create new timesheet
        TimeOut3:
          description: TimeOut3 value for create new timesheet
        TimeIn4:
          description: TimeIn4 value for create new timesheet
        TimeOut4:
          description: TimeOut4 value for create new timesheet
        TimeIn5:
          description: TimeIn5 value for create new timesheet
        TimeOut5:
          description: TimeOut5 value for create new timesheet
        TimeIn6:
          description: TimeIn6 value for create new timesheet
        TimeOut6:
          description: TimeOut6 value for create new timesheet
        TimeIn7:
          description: TimeIn7 value for create new timesheet
        TimeOut7:
          description: TimeOut7 value for create new timesheet
        TimeIn8:
          description: TimeIn8 value for create new timesheet
        TimeOut8:
          description: TimeOut8 value for create new timesheet
        TimeIn9:
          description: TimeIn9 value for create new timesheet
        TimeOut9:
          description: TimeOut9 value for create new timesheet
        TimeIn10:
          description: TimeIn10 value for create new timesheet
        TimeOut10:
          description: TimeOut10 value for create new timesheet
        TimeIn11:
          description: TimeIn11 value for create new timesheet
        TimeOut11:
          description: TimeOut11 value for create new timesheet
        TimeIn12:
          description: TimeIn12 value for create new timesheet
        TimeOut12:
          description: TimeOut12 value for create new timesheet
        TimeIn13:
          description: TimeIn13 value for create new timesheet
        TimeOut13:
          description: TimeOut13 value for create new timesheet
        TimeIn14:
          description: TimeIn14 value for create new timesheet
        TimeOut14:
          description: TimeOut14 value for create new timesheet
        TimeIn15:
          description: TimeIn15 value for create new timesheet
        TimeOut15:
          description: TimeOut15 value for create new timesheet
        Comments:
          description: Comments value for create new timesheet
          maxLength: '1024'
    UpdateTimesheetDefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TimesheetDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TimesheetDate:
          $ref: '#/components/schemas/TimesheetDate'
        TimeIn1:
          $ref: '#/components/schemas/TimeIn1'
        TimeOut1:
          $ref: '#/components/schemas/TimeOut1'
        TimeIn2:
          $ref: '#/components/schemas/TimeIn2'
        TimeOut2:
          $ref: '#/components/schemas/TimeOut2'
        TimeIn3:
          $ref: '#/components/schemas/TimeIn3'
        TimeOut3:
          $ref: '#/components/schemas/TimeOut3'
        TimeIn4:
          $ref: '#/components/schemas/TimeIn4'
        TimeOut4:
          $ref: '#/components/schemas/TimeOut4'
        TimeIn5:
          $ref: '#/components/schemas/TimeIn5'
        TimeOut5:
          $ref: '#/components/schemas/TimeOut5'
        TimeIn6:
          $ref: '#/components/schemas/TimeIn6'
        TimeOut6:
          $ref: '#/components/schemas/TimeOut6'
        TimeIn7:
          $ref: '#/components/schemas/TimeIn7'
        TimeOut7:
          $ref: '#/components/schemas/TimeOut7'
        TimeIn8:
          $ref: '#/components/schemas/TimeIn8'
        TimeOut8:
          $ref: '#/components/schemas/TimeOut8'
        TimeIn9:
          $ref: '#/components/schemas/TimeIn9'
        TimeOut9:
          $ref: '#/components/schemas/TimeOut9'
        TimeIn10:
          $ref: '#/components/schemas/TimeIn10'
        TimeOut10:
          $ref: '#/components/schemas/TimeOut10'
        TimeIn11:
          $ref: '#/components/schemas/TimeIn11'
        TimeOut11:
          $ref: '#/components/schemas/TimeOut11'
        TimeIn12:
          $ref: '#/components/schemas/TimeIn12'
        TimeOut12:
          $ref: '#/components/schemas/TimeOut12'
        TimeIn13:
          $ref: '#/components/schemas/TimeIn13'
        TimeOut13:
          $ref: '#/components/schemas/TimeOut13'
        TimeIn14:
          $ref: '#/components/schemas/TimeIn14'
        TimeOut14:
          $ref: '#/components/schemas/TimeOut14'
        TimeIn15:
          $ref: '#/components/schemas/TimeIn15'
        TimeOut15:
          $ref: '#/components/schemas/TimeOut15'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey to update employee Timesheet
          type: string
        Action:
          description: Action name = UpdateTimesheet
          example: UpdateTimesheet
        EmployeeId:
          description: Employee id for update employee timesheet
        TimesheetDate:
          description: 'Employee timesheet date to update '
        TimeIn1:
          description: TimeIn1
        TimeOut1:
          description: TimeOut1 value for for update employee timesheet
        TimeIn2:
          description: TimeIn2 value for update employee timesheet
        TimeOut2:
          description: TimeOut2 value for update employee timesheet
        TimeIn3:
          description: TimeIn3 value for update employee timesheet
        TimeOut3:
          description: TimeOut3 value for update employee timesheet
        TimeIn4:
          description: TimeIn4 value for update employee timesheet
        TimeOut4:
          description: TimeOut4 value for update employee timesheet
        TimeIn5:
          description: TimeIn5 value for update employee timesheet
        TimeOut5:
          description: TimeOut5 value for update employee timesheet
        TimeIn6:
          description: TimeIn6 value for update employee timesheet
        TimeOut6:
          description: TimeOut6 value for update employee timesheet
        TimeIn7:
          description: TimeIn7 value for update employee timesheet
        TimeOut7:
          description: TimeOut7 value for update employee timesheet
        TimeIn8:
          description: TimeIn8 value for update employee timesheet
        TimeOut8:
          description: TimeOut8 value for update employee timesheet
        TimeIn9:
          description: TimeIn9 value for update employee timesheet
        TimeOut9:
          description: TimeOut9 value for update employee timesheet
        TimeIn10:
          description: TimeIn10 value for update employee timesheet
        TimeOut10:
          description: TimeOut10 value for update employee timesheet
        TimeIn11:
          description: TimeIn11 value for update employee timesheet
        TimeOut11:
          description: TimeOut11 value for update employee timesheet
        TimeIn12:
          description: TimeIn12 value for update employee timesheet
        TimeOut12:
          description: TimeOut12 value for update employee timesheet
        TimeIn13:
          description: TimeIn13 for update employee timesheet
        TimeOut13:
          description: TimeOut13 value for update employee timesheet
        TimeIn14:
          description: TimeIn14 value for update employee timesheet
        TimeOut14:
          description: TimeOut14 value for update employee timesheet
        TimeIn15:
          description: TimeIn15 value for update employee timesheet
        TimeOut15:
          description: TimeOut15 value for update employee timesheet
        Comments:
          description: Comments value for update employee timesheet
          maxLength: '1024'
    DeleteTimesheetdefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - TimesheetDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        TimesheetDate:
          $ref: '#/components/schemas/TimesheetDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for delete employee timesheet
          type: string
        Action:
          description: Action name = DeleteTimesheet
          example: DeleteTimesheet
        EmployeeId:
          description: Employee id for delete employee timesheet
        TimesheetDate:
          description: 'Employee Timesheet Date to delete '
    GetTimesheetdefinition:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for get employee timesheet detail
          type: string
        Action:
          description: Action name = GetTimesheetDetail
          example: GetTimesheetDetail
        EmployeeId:
          description: Employee id for get employee timesheet detail
        StartDate:
          description: Start Date to get employee timesheet detail
        EndDate:
          description: End Date to get employee timesheet detail
    GetProjectTimesheetDetail:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to get project time sheet detail
          type: string
        Action:
          description: Action name = GetProjectTimesheetDetail
          example: GetProjectTimesheetDetail
        EmployeeId:
          description: Employee id
        StartDate:
          description: Employee project timesheet start date
        EndDate:
          description: Employee project timesheet end date
    CreateVacancyDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - VacancyName
        - VacancyDescription
        - Reference
        - IsHideSalary
        - VacancyType
        - IsCoverLetterMandatory
        - IsResumeMandatory
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        VacancyName:
          $ref: '#/components/schemas/VacancyName'
        VacancyDescription:
          $ref: '#/components/schemas/VacancyDescription'
        Company:
          $ref: '#/components/schemas/Company'
        Location:
          $ref: '#/components/schemas/Location'
        Department:
          $ref: '#/components/schemas/Department'
        ClosingDate:
          $ref: '#/components/schemas/ClosingDate'
        Reference:
          $ref: '#/components/schemas/Reference'
        Comment:
          $ref: '#/components/schemas/Comment'
        SalaryRange:
          $ref: '#/components/schemas/SalaryRange'
        JobDescription:
          $ref: '#/components/schemas/JobDescription'
        IsCoverLetterMandatory:
          $ref: '#/components/schemas/IsCoverLetterMandatory'
        IsResumeMandatory:
          $ref: '#/components/schemas/IsResumeMandatory'
        IsHideSalary:
          $ref: '#/components/schemas/IsHideSalary'
        VacancyType:
          $ref: '#/components/schemas/VacancyType'
        JobTitle:
          $ref: '#/components/schemas/JobTitle'
        City:
          $ref: '#/components/schemas/City'
        Country:
          $ref: '#/components/schemas/Country'
        Experience:
          $ref: '#/components/schemas/Experience'
      x-konfig-properties:
        APIKey:
          description: APIKey for vacancy api to create new vacancy
          type: string
        Action:
          description: Action name = CreateNewVacancy
          example: CreateNewVacancy
        VacancyName:
          description: Vacancy name for create new vacancy
        VacancyDescription:
          description: Vacancy description for create new vacancy
        Company:
          description: Company name for create new vacancy
        Location:
          description: Location for create new vacancy
          maxLength: '100'
        Department:
          description: Department for create new vacancy
          maxLength: '100'
        ClosingDate:
          description: Closing date for create new vacancy
        Reference:
          description: Reference for create new vacancy
          maxLength: '100'
        Comment:
          description: Comment for create new vacancy
        SalaryRange:
          description: Salary range for create new vacancy
        JobDescription:
          description: Job description for create new vacancy
        IsCoverLetterMandatory:
          description: Is cover letter mandatory for create new vacancy
        IsResumeMandatory:
          description: Is resume mandatory for create new vacancy
        IsHideSalary:
          description: Is hide salary for create new vacancy
        VacancyType:
          description: Vacancy type for create new vacancy
        JobTitle:
          description: Job title for create new vacancy
        City:
          description: City for create new vacancy
        Country:
          description: Country value
        Experience:
          description: 'Experience '
    GetVacancyParameters:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - Reference
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        VacancyReference:
          $ref: '#/components/schemas/VacancyReference'
      x-konfig-properties:
        APIKey:
          description: APIKey for vacancy api to get vacancy
          type: string
        Action:
          description: Action name = GetVacancy
          example: GetVacancy
        VacancyReference:
          description: Vacancy reference for get vacancy
    GetAllVacancyParameters:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
      x-konfig-properties:
        APIKey:
          description: APIKey for vacancy api to get all vacancy
          type: string
        Action:
          description: Action name = GetAllVacancies
          example: GetAllVacancies
    CreateApplicantDetailParameter:
      type: object
      required:
        - APIKey
        - Action
        - FirstName
        - LastName
        - QuestionId
        - Documents
        - Skills
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        VacancyReference:
          $ref: '#/components/schemas/VacancyReference'
        FirstName:
          $ref: '#/components/schemas/FirstName'
        LastName:
          $ref: '#/components/schemas/LastName'
        Email:
          $ref: '#/components/schemas/Email'
        Gender:
          $ref: '#/components/schemas/Gender'
        DateOfBirth:
          $ref: '#/components/schemas/DateOfBirth'
        PostCode:
          $ref: '#/components/schemas/PostCode'
        Address:
          $ref: '#/components/schemas/Address'
        PhoneNumber:
          $ref: '#/components/schemas/PhoneNumber'
        OtherContactDetails:
          $ref: '#/components/schemas/OtherContactDetails'
        Source:
          $ref: '#/components/schemas/Source'
        AdditionalQuestions:
          $ref: '#/components/schemas/AdditionalQuestionsForCreatenewApplicantArray'
        InternalQuestions:
          $ref: '#/components/schemas/InternalQuestionsForCreateNewApplicantArray'
        Documents:
          $ref: '#/components/schemas/DocumentsForCreateNewApplicantArray'
        Skills:
          $ref: '#/components/schemas/Skills'
        RecruitmentCost:
          $ref: '#/components/schemas/RecruitmentCost'
        DateLastContacted:
          $ref: '#/components/schemas/DateLastContacted'
      x-konfig-properties:
        APIKey:
          description: APIKey for applicant api to Create new applicant
          type: string
        Action:
          description: Action name = CreateNewApplicant
          example: CreateNewApplicant
        VacancyReference:
          description: Vacancy reference for create new applicant
        FirstName:
          description: First name for create new applicant
        LastName:
          description: Last name for create new applicant
        Email:
          description: Email for create new applicant
        Gender:
          description: Gender for create new applicant
        DateOfBirth:
          description: Date of birth for create new applicant
        PostCode:
          description: Post code for create new applicant
        Address:
          description: Address for create new applicant
        PhoneNumber:
          description: PhoneNumber for create new applicant
        OtherContactDetails:
          description: Other contact details for create new applicant
        Source:
          description: Source for create new applicant
        AdditionalQuestions:
          description: Source for create new applicant
        InternalQuestions:
          description: Internal questions for create new applicant
        Documents:
          description: Documents for create new applicant
        Skills:
          description: Skills for create new applicant
        RecruitmentCost:
          description: Recruitment cost for create new applicant
        DateLastContacted:
          description: Date last contacted for create new applicant
    uploadapplicantdocumentParameter:
      type: object
      required:
        - APIKey
        - Action
        - ApplicantId
        - DocumentName
        - File
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        ApplicantId:
          $ref: '#/components/schemas/ApplicantId'
        DocumentName:
          $ref: '#/components/schemas/DocumentName'
        Description:
          $ref: '#/components/schemas/Description'
        File:
          $ref: '#/components/schemas/File'
      x-konfig-properties:
        APIKey:
          description: APIKey for Employee late api to upload applicant document
          type: string
        Action:
          description: Action name = uploadapplicantdocument
          example: uploadapplicantdocument
        ApplicantId:
          description: ApplicantId for upload applicant document
        DocumentName:
          description: Document name for upload applicant document
        Description:
          description: Description for upload applicant document
        File:
          description: File for upload applicant document
    GetLateByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for Employee late api for Get late by employee
          type: string
        Action:
          description: Action name = GetLateByEmployeeId
          example: GetLateByEmployeeId
        EmployeeId:
          description: Employee id for Get late by employee
        StartDate:
          description: Start date for Get late by employee
        EndDate:
          description: End date for Get late by employee
    AddNewLateParameters:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - LateDate
        - HowLate
        - Comments
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        LateDate:
          $ref: '#/components/schemas/LateDate'
        HowLate:
          $ref: '#/components/schemas/HowLate'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for Employee late to add new late
          type: string
        Action:
          description: Action name = AddNewLate
          example: AddNewLate
        EmployeeId:
          description: Employee id for add new late
        LateDate:
          description: Late date for add new late
        HowLate:
          description: How late for add new late
        Comments:
          description: Comments for add new late
          maxLength: '256'
    UpdateLateParameters:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - LateDate
        - HowLate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        LateDate:
          $ref: '#/components/schemas/LateDate'
        HowLate:
          $ref: '#/components/schemas/HowLate'
        Comments:
          $ref: '#/components/schemas/Comments'
      x-konfig-properties:
        APIKey:
          description: APIKey for Employee late to update late
          type: string
        Action:
          description: Action name = UpdateLate
          example: UpdateLate
        EmployeeId:
          description: Employee id for update late
        LateDate:
          description: Late date for update late
        HowLate:
          description: How late for update late
        Comments:
          description: Comments for update late
          maxLength: '256'
    EmployeedeletelateParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - LateDate
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        LateDate:
          $ref: '#/components/schemas/LateDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for Employee late api to delete late record
          type: string
        Action:
          description: Action name = DeleteLate
          example: DeleteLate
        EmployeeId:
          description: Employee id for delete late record
        LateDate:
          description: Late date for delete late record
    CheckDuplicateApplicantParameter:
      type: object
      required:
        - APIKey
        - Action
        - FirstName
        - LastName
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        VacancyReference:
          $ref: '#/components/schemas/VacancyReference'
        FirstName:
          $ref: '#/components/schemas/FirstName'
        LastName:
          $ref: '#/components/schemas/LastName'
        Email:
          $ref: '#/components/schemas/Email'
      x-konfig-properties:
        APIKey:
          description: APIKey for applicant api to check duplicate applicant
          type: string
        Action:
          description: Action name = CheckDuplicateApplicant
          example: CheckDuplicateApplicant
        VacancyReference:
          description: Vacancy reference for check duplicate applicant
        FirstName:
          description: First name for check duplicate applicant
        LastName:
          description: Last name for check duplicate applicant
        Email:
          description: Email for check duplicate applicant
    WorkPatternParameter:
      type: object
      required:
        - APIKey
        - Action
        - WorkPatternId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        WorkPatternId:
          $ref: '#/components/schemas/WorkPatternId'
        WorkPatternName:
          $ref: '#/components/schemas/WorkPatternName'
      x-konfig-properties:
        APIKey:
          description: APIKey for applicant api to get Work pattern parameter detail
          type: string
        Action:
          description: Action name = GetWorkPatternDetail
          example: GetWorkPatternDetail
        WorkPatternId:
          description: Work patternId for get work pattern
        WorkPatternName:
          description: Work pattern name for get work pattern
    AdditionalQuestionsForCreatenewApplicantArray:
      type: array
      items:
        type: object
        properties:
          QuestionId:
            description: 'Question id default value '
            type: byte
            example: '2'
          Value:
            description: 'Value  default value '
            type: byte
            example: '1'
    InternalQuestionsForCreateNewApplicantArray:
      type: array
      items:
        type: object
        properties:
          QuestionId:
            description: 'Question id default value '
            type: byte
            example: '2'
          Value:
            description: 'Value  default value '
            type: byte
            example: '1'
    DocumentsForCreateNewApplicantArray:
      type: array
      items:
        type: object
        properties:
          DocumentName:
            description: 'Document name id default value '
            type: string
            maxLength: '100 '
            example: xyz.png
          Url:
            description: Doc2
            type: string
            format: url
            maxLength: '256'
            example: www.google.com/doc2.docx
    GetByEmployeeIdForEmployeeAppraisal:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        StartDate:
          $ref: '#/components/schemas/StartDate'
        EndDate:
          $ref: '#/components/schemas/EndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to GetByEmployeeId
          type: string
        Action:
          description: Action name = GetByEmployeeId
          example: GetByEmployeeId
        EmployeeId:
          description: ' Employee id for get by employee id'
        StartDate:
          description: 'Start date for get by employee id '
        EndDate:
          description: End Date for get by employee id
    GetByAppraisalIdForEmployeeAppraisal:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - AppraisalId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        AppraisalId:
          $ref: '#/components/schemas/AppraisalId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to GetByAppraisalId
          type: string
        Action:
          description: Action name = GetByAppraisalId
          example: GetByAppraisalId
        EmployeeId:
          description: ' Employee id for get by appraisal id'
        AppraisalId:
          description: Appraisal id for get by appraisal id
    AddNewAppraisalParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - AppraisalReviewDate
        - Reviewer
        - Notes
        - ActionPlan
        - Objectives
        - CustomColumns
        - AddFiles
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        AppraisalReviewDate:
          $ref: '#/components/schemas/AppraisalReviewDate'
        Reviewer:
          $ref: '#/components/schemas/Reviewer'
        Notes:
          $ref: '#/components/schemas/Notes'
        ActionPlan:
          $ref: '#/components/schemas/ActionPlan'
        Objectives:
          $ref: '#/components/schemas/Objectives'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsArrayForAddNewAppraisal'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForAddNewAppraisal'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to AddNewAppraisal
          type: string
        Action:
          description: Action name = AddNewAppraisal
          example: AddNewAppraisal
        EmployeeId:
          description: Employee id for add new appraisal
        AppraisalReviewDate:
          description: Appraisal review date for add new appraisal
        Reviewer:
          description: Reviewer for add new appraisal
        Notes:
          description: Notes for add new appraisal
        ActionPlan:
          description: Action Plan for add new appraisal
        Objectives:
          description: 'Objectives for add new appraisal '
        CustomColumns:
          description: Custom columns
        AddFiles:
          description: Add Files info.
    UpdateAppraisalParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - AppraisalId
        - AppraisalReviewDate
        - Reviewer
        - Notes
        - ActionPlan
        - Objectives
        - CustomColumns
        - AddFiles
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        AppraisalReviewDate:
          $ref: '#/components/schemas/AppraisalReviewDate'
        Reviewer:
          $ref: '#/components/schemas/Reviewer'
        Notes:
          $ref: '#/components/schemas/Notes'
        ActionPlan:
          $ref: '#/components/schemas/ActionPlan'
        Objectives:
          $ref: '#/components/schemas/Objectives'
        CustomColumns:
          $ref: '#/components/schemas/CustomColumnsArrayForUpdateAppraisal'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForUpdateAppraisal'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to UpdateAppraisal
          type: string
        Action:
          description: Action name = UpdateAppraisal
          example: UpdateAppraisal
        EmployeeId:
          description: Employee Id for update appraisal
        AppraisalReviewDate:
          description: Appraisal review date  for update appraisal
        Reviewer:
          description: Reviewer for update appraisal
        Notes:
          description: Notes for update appraisal
        ActionPlan:
          description: Action Plan for update appraisal
        Objectives:
          description: Objectives for update appraisal
        CustomColumns:
          description: Custom Columns of user
        AddFiles:
          description: Add Files Info.
    DeleteAppraisalParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - AppraisalId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        AppraisalId:
          $ref: '#/components/schemas/AppraisalId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to DeleteAppraisal
          type: string
        Action:
          description: Action name = DeleteAppraisal
          example: DeleteAppraisal
        EmployeeId:
          description: Employee Id for delete appraisal
        AppraisalId:
          description: Appraisal Id for delete appraisal
    GetByMaternityPaternityParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - MaternityPaternityTxnId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        MaternityPaternityTxnId:
          $ref: '#/components/schemas/MaternityPaternityTxnId'
      x-konfig-properties:
        APIKey:
          description: APIKey for get by maternity paternity
          type: string
        Action:
          description: Action name = GetByMaternityPaternityId
          example: GetByMaternityPaternityId
        EmployeeId:
          description: Employeeid for get by maternity paternity
        MaternityPaternityTxnId:
          description: CPID for get by maternity paternity
    GetMaternityPaternityByEmployeeIdParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        ActualStartDate:
          $ref: '#/components/schemas/ActualStartDate'
        ActualEndDate:
          $ref: '#/components/schemas/ActualEndDate'
      x-konfig-properties:
        APIKey:
          description: APIKey for get by maternity paternity by employeeid
          type: string
        Action:
          description: Action name = GetMaternityPaternityByEmployeeId
          example: GetMaternityPaternityByEmployeeId
        EmployeeId:
          description: Employeeid for get by maternity paternity by employeeid
        ActualStartDate:
          description: CPID for get by maternity paternity by employee id
        ActualEndDate:
          description: CPID for get by maternity paternity by employee id
    AddNewMaternityPaternityParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - DueDate
        - ActualStartDate
        - ActualEndDate
        - AddComments
        - AddFiles
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        DueDate:
          $ref: '#/components/schemas/DueDate'
        ActualStartDate:
          $ref: '#/components/schemas/ActualStartDate'
        ActualEndDate:
          $ref: '#/components/schemas/ActualEndDate'
        AddComments:
          $ref: '#/components/schemas/AddCommentsArrayForMaternityPaternity'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForAddNewMaternityPaternity'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to AddNewMaternityPaternity
          type: string
        Action:
          description: Action name = AddNewMaternityPaternity
          example: AddNewMaternityPaternity
        EmployeeId:
          description: Employee Id for add new maternity paternity
        DueDate:
          description: DueDate for add new maternity paternity
        ActualStartDate:
          description: Actual Start Date for add new maternity paternity
        ActualEndDate:
          description: Actual End Date for add new maternity paternity
        AddComments:
          description: AddComments value
        AddFiles:
          description: AddFiles info.
    AddCommentsArrayForMaternityPaternity:
      type: array
      items:
        required:
          - Comment
        type: object
        properties:
          Comment:
            description: Comments goes here
            type: string
            example: Comments goes here
            maxLength: '1024'
    AddFilesArrayForAddNewMaternityPaternity:
      type: array
      items:
        required:
          - DocumentName
          - File
        type: object
        properties:
          DocumentName:
            description: DocumentName value
            type: string
            example: 123.png
            maxLength: '100'
          File:
            description: File
            type: string
            example: pass base64 string
          Description:
            description: Description value
            type: string
            example: dsadsadasdasd
            maxLength: '256'
    UpdateMaternityPaternityParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - MaternityPaternityTxnId
        - DueDate
        - ActualStartDate
        - ActualEndDate
        - AddComments
        - AddFiles
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        MaternityPaternityTxnId:
          $ref: '#/components/schemas/MaternityPaternityTxnId'
        DueDate:
          $ref: '#/components/schemas/DueDate'
        ActualStartDate:
          $ref: '#/components/schemas/ActualStartDate'
        ActualEndDate:
          $ref: '#/components/schemas/ActualEndDate'
        AddComments:
          $ref: '#/components/schemas/AddCommentsArrayForMaternityPaternity'
        AddFiles:
          $ref: '#/components/schemas/AddFilesArrayForAddNewMaternityPaternity'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to UpdateMaternityPaternity
          type: string
        Action:
          description: Action name = UpdateMaternityPaternity
          example: UpdateMaternityPaternity
        EmployeeId:
          description: Employee Id for update maternity paternity
        MaternityPaternityTxnId:
          description: MaternityPaternityTxnId for update maternity paternity
        DueDate:
          description: DueDate for update maternity paternity
        ActualStartDate:
          description: ActualStartDate for update maternity paternity
        ActualEndDate:
          description: ActualEndDate for update maternity paternity
        AddComments:
          description: AddComments
        AddFiles:
          description: AddFiles info.
    DeleteMaternityPaternityParameter:
      type: object
      required:
        - APIKey
        - Action
        - EmployeeId
        - MaternityPaternityTxnId
      properties:
        APIKey:
          $ref: '#/components/schemas/APIKey'
        Action:
          $ref: '#/components/schemas/Action'
        EmployeeId:
          $ref: '#/components/schemas/EmployeeId'
        MaternityPaternityTxnId:
          $ref: '#/components/schemas/MaternityPaternityTxnId'
      x-konfig-properties:
        APIKey:
          description: APIKey for employee api to DeleteMaternityPaternity
          type: string
        Action:
          description: Action name = DeleteMaternityPaternity
          example: DeleteMaternityPaternity
        EmployeeId:
          description: Employee Id value
        MaternityPaternityTxnId:
          description: MaternityPaternityTxnId Value
    Time_AttendanceID:
      description: 'Time & Attendance ID default value '
      type: string
      maxLength: 200
      example: Your Time & Attendance ID
security:
  - ApiKey: []
