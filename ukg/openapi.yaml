openapi: 3.0.0
info:
  title: User Defined Fields
  description: This API is for UTA customers only.
  version: v1
  x-api-status-urls: false
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: '{hostname}'
tags:
  - name: time
  - name: BusinessRuleImportTool
  - name: CompensationDetails
  - name: PersonDetails
  - name: Earnings
  - name: EmployeePayStatement
  - name: EmploymentDetails
  - name: Single Organization Level
  - name: allergy
  - name: awardType
  - name: careerProvider
  - name: childSupportType
  - name: cobraStatus
  - name: companyProperty
  - name: courseCategory
  - name: courseDeliveryMet
  - name: courseSubCategory
  - name: disability
  - name: employeeType
  - name: jobFamily
  - name: licenseType
  - name: loanType
  - name: maritalStatus
  - name: militaryBranches
  - name: militaryEra
  - name: namePrefix
  - name: otherPhoneTypes
  - name: project
  - name: school
  - name: skillProficiencyLevel
  - name: skills
  - name: termType
  - name: waiveReason
  - name: UserDefinedFields
  - name: Candidate Request
  - name: CodeTables
  - name: Contact
  - name: DirectDeposit
  - name: EmployeeJobHistoryDetail
  - name: CompanyPayStatement
  - name: GeneralLedgerRunDetailsV2
  - name: ImportTool
  - name: New Hires
  - name: InternationalEmployee
  - name: locations
  - name: jobs
  - name: View or Create Organization Levels
  - name: AuditDetails
  - name: Order Requests
  - name: BusinessStructureStatus
  - name: CompanyDetails
  - name: EmpDeductions
  - name: DependentDeductions
  - name: EarningsHistory
  - name: Changes By Date
  - name: Employee Changes
  - name: EmployeeContract
  - name: EmployeeCobraDetails
  - name: EmpDedBenOptionDate
  - name: Employee Deduction History Effective Date
  - name: Employee Demographic Details
  - name: EmployeeEducation
  - name: EmployeeExtendedElements
  - name: EmployeeEmploymentDetails
  - name: Employee ID Lookup
  - name: EmployeeMultipleJobsOPP
  - name: EmployeeMultiPhoneNumbers
  - name: EmpMultiplePositions
  - name: NationalDocument
  - name: KronosEmployeeProfiles
  - name: Employee Security User Details
  - name: KronosEmployeeStatus
  - name: EmployeeSupervisorDetails
  - name: EmployeeGlobalBank
  - name: EmployeePayDeductionElement
  - name: EmpGlobalLocalizationElement
  - name: InsRate
  - name: IntegrationAuditConfiguration
  - name: JobGroup
  - name: OptionRate
  - name: OpenEnrollmentEmployeeDeductions
  - name: Post new token request
  - name: OpenEnrollmentDependentDeductions
  - name: PayRegister
  - name: PayGroupPayPeriod
  - name: Organization Reporting Category
  - name: PayrollDeductionsHistory
  - name: v1 PlatformConfigurationCustomFieldsData
  - name: v2 PlatformConfigurationCustomFieldsData
  - name: PlatformConfigurationCustomFieldsSchema
  - name: PositionReport
  - name: Positions
  - name: Get All PTO Plans
  - name: PTO Plan Post
  - name: Get Specific PTO Plan
  - name: PTO Plan Patch
  - name: Get Specific Employees PTO Plans
  - name: RolesGet
  - name: ShiftCode
  - name: Tax Groups
  - name: Get Job Postings
  - name: UserDetails
  - name: User Preferences
  - name: Activities
  - name: Assigned Holidays
  - name: Employee Jobs
  - name: Employees
  - name: Hour Types
  - name: Schedule Details
  - name: Teams
  - name: Time Codes
  - name: Time Off Requests
  - name: UTA Employee
  - name: User Profile Details
paths:
  /personnel/v1/audit-details:
    get:
      tags:
        - AuditDetails
      summary: Get Audit Details Data
      operationId: AuditDetails_getData
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Personnel Integration\" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}) .
      parameters:
        - name: startDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: tableName
          in: query
          required: true
          schema:
            type: string
        - name: fieldName
          in: query
          required: true
          schema:
            type: string
        - name: action
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetDataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData400Response'
            text/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData400Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData400Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData400Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData400Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/AuditDetailsGetData500Response'
  /configuration/v1/businessruleimport-tool/fileupload:
    post:
      tags:
        - BusinessRuleImportTool
      summary: Takes an XML transaction and feeds it into the Business Rule Import Tool
      operationId: BusinessRuleImportTool_BusinessRuleImportFileUpload
      requestBody:
        $ref: '#/components/requestBodies/BusinessRuleImportRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUploadResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload200Response
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleFileUpload'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolBusinessRuleImportFileUpload500Response
  /configuration/v1/businessruleimport-tool/filestatus/{fileId}:
    get:
      tags:
        - BusinessRuleImportTool
      summary: Retrieves the status of an Business Rule Import Tool transaction
      operationId: BusinessRuleImportTool_GetFileUploadStatus
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            text/json:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/FileStatusModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetFileUploadStatusResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetFileUploadStatus500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetFileUploadStatus500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetFileUploadStatus500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetFileUploadStatus500Response
  /configuration/v1/businessruleimport-tool/transactionstatus/{stagingId}:
    get:
      tags:
        - BusinessRuleImportTool
      summary: Retrieves the status of an Business Rule Import Tool transaction
      operationId: BusinessRuleImportTool_GetStagingStatus
      parameters:
        - name: stagingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStagingStatus'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetStagingStatusResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetStagingStatus500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetStagingStatus500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetStagingStatus500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolGetStagingStatus500Response
  /configuration/v1/businessruleimport-tool/transaction:
    post:
      tags:
        - BusinessRuleImportTool
      summary: >-
        Takes an XML transaction and feeds it into the Business Rule Import Tool
        (Staging)
      operationId: BusinessRuleImportTool_ImportsBusinessRuleStagingData
      requestBody:
        $ref: '#/components/requestBodies/BusinessRuleImportRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
            text/xml:
              schema:
                $ref: '#/components/schemas/BusinessRuleImportFileStaging'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolImportsBusinessRuleStagingDataResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolImportsBusinessRuleStagingData500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolImportsBusinessRuleStagingData500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolImportsBusinessRuleStagingData500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessRuleImportToolImportsBusinessRuleStagingData500Response
  /{tenant-alias}/api/candidates/{candidate-id}/background-checks:
    post:
      tags:
        - Candidate Request
      summary: Background Check Request
      operationId: CandidateRequest_addBackgroundCheck
      description: Add Background Check to Candidate
      parameters:
        - description: ''
          name: candidate-id
          in: path
          required: true
          schema:
            type: string
        - description: ''
          name: tenant-alias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: New background check to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backgroundChecks'
      responses:
        '201':
          description: Response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backgroundChecks'
        '400':
          description: >-
            “Bad Request”. Indicates request failure due to bad/invalid data.
            Also includes respective validation message(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
  /{tenant-alias}/api/candidates/{candidate-id}/background-checks/{background-check-id}:
    put:
      tags:
        - Candidate Request
      summary: Background Check Status
      operationId: CandidateRequest_updateBackgroundCheck
      description: Update Candidate Background Check
      parameters:
        - description: ''
          name: candidate-id
          in: path
          required: true
          schema:
            type: string
        - description: ''
          name: background-check-id
          in: path
          required: true
          schema:
            type: string
        - description: ''
          name: tenant-alias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Background check status to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/backgroundChecks'
      responses:
        '201':
          description: Response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/backgroundChecks'
        '400':
          description: >-
            “Bad Request”. Indicates request failure due to bad/invalid data.
            Also includes respective validation message(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
  /{tenant-alias}/api/background-check-order-requests:
    get:
      tags:
        - Order Requests
      summary: Background Check Details
      operationId: OrderRequests_backgroundCheckDetails
      description: >-
        Background Check Order Request with Candidate, Application, and
        Opportunity info
      parameters:
        - description: >-
            A temporary Background Check Request tokena ssociated with the
            background check request that has been previously provided in the
            Background Check Request Redirect URL
          name: token
          in: query
          required: true
          schema:
            type: string
        - description: ''
          name: tenant-alias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Response object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
        '400':
          description: >-
            “Bad Request”. Indicates request failure due to bad/invalid data.
            Also includes respective validation message(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/badRequest'
  /configuration/v1/code-tables:
    get:
      tags:
        - CodeTables
      summary: Get Code Tables information
      operationId: CodeTables_getInfo
      description: >-
        UKG Pro codes table lookup, will contain list of all tables with HATEOAS
        links to make a subsequent call to get all the codes for that table. If
        no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo200Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo403Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo403Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo403Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo403Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo403Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo404Response'
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo429Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo429Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo429Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo429Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesGetInfo429Response'
    post:
      tags:
        - CodeTables
      summary: Post Code Tables information
      operationId: CodeTables_createCodeTables
      description: >-
        Creates a new UKG Pro Code table configuration, Array of objects is
        permitted for multi-records support. Permissions - UKG Pro service
        account must have "Add" role for the "Company Configuration Integration"
        Web Service. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}). There is a white list of code tables
        that we allow to be written, only these codes can be created: Allergy,
        Awardtype, Careerprovider, Childsupporttype, Cobrastatus,
        Coursecategory, Coursedeliverymet, Coursesubcategory, Disability,
        Educlevel, Educmajor, Emptype, Jobfamily, Licensetype, Loantype,
        Maritalstatus, Military, Militaryera, Otherphone, Prefix, Proficiency,
        Project, Property, School, Skills, Suffix, Termtype, Wellness.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeTablesCreateCodeTablesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CodeTablesCreateCodeTablesRequest1'
          application/problem+json:
            schema:
              $ref: '#/components/schemas/CodeTablesCreateCodeTablesRequest2'
          application/xml:
            schema:
              $ref: '#/components/schemas/CodeTablesCreateCodeTablesRequest3'
          text/xml:
            schema:
              $ref: '#/components/schemas/CodeTablesCreateCodeTablesRequest4'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CodeTablesCreateCodeTablesRequest5'
        required: true
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTablesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables207Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables207Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables207Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables207Response'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables403Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables403Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables403Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables403Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables403Response'
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables429Response'
            text/json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables429Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables429Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables429Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/CodeTablesCreateCodeTables429Response'
  /personnel/v1/integration/kronos/business-structure-status:
    get:
      tags:
        - BusinessStructureStatus
      summary: >-
        Gets a list of Employees for which there is a change in business
        structure
      operationId: BusinessStructureStatus_listEmployeesChangeBusinessStructure
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}) .
      parameters:
        - name: modifiedAfterDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: companyId
          in: query
          required: true
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructureResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/BusinessStructureStatusListEmployeesChangeBusinessStructure500Response
  /configuration/v1/company-details:
    get:
      tags:
        - CompanyDetails
      summary: Get Company Details
      operationId: CompanyDetails_GetCompanyDetails
      description: >-
        Get all master company and component company details. If no pagination
        parameters specified, the default/max is applied. Permissions - UKG Pro
        service account must have "View" role for the "Company Configuration
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password}).
      parameters:
        - description: 5 character value represents a UKG Pro CompanyID
          name: companyId
          in: query
          required: false
          schema:
            type: string
        - description: 5 character value represents a UKG Pro Master CompanyID
          name: masterCompanyId
          in: query
          required: false
          schema:
            type: string
        - description: 5 character value represents a UKG Pro Company Code
          name: companyCode
          in: query
          required: false
          schema:
            type: string
        - description: >-
            true/false values represent if this company is a UKG Pro Master
            Company
          name: isMasterCompany
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDetailsGetCompanyDetailsResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails200Response
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompanyDetailsGetCompanyDetails500Response
  /personnel/v1/emp-deductions:
    get:
      tags:
        - EmpDeductions
      summary: Get employee deductions
      operationId: EmpDeductions_list
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Api endpoints. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})


        Correct syntax when using parameters are as follows:

        <ul>

        <li>Get Employee deductions for companyid
          <ul>
          <li>Example: /personnel/v1/companies/{companyId}/emp-deductions?DedCode={DedCode}</li>
          </ul>
          </li>
        <li>Get Employee deductions for companyid and employeeid
          <ul>
          <li>Example: /personnel/v1/companies/{companyId}/employees/{employeeId}/emp-deductions?DedCode={DedCode}}</li>
          </ul>
          </li>
        <li>Get Employee deductions per page
          <ul>
          <li>Example: personnel/v1/emp-deductions?DedCode={DedCode}&page=1&per_page=100</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: dedCode
          in: query
          required: true
          schema:
            type: string
        - name: benStatus
          in: query
          required: false
          schema:
            type: string
        - name: benefitOption
          in: query
          required: false
          schema:
            type: string
        - name: endDateTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpDeductionsList500Response'
  /personnel/v1/compensation-details:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details
      operationId: CompensationDetails_getAllDetails
      description: >
        Get all compensation details.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /compensation-details?dateInJob=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /compensation-details?dateInJob=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /compensation-details?dateInJob=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /compensation-details?dateInJob={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[\s*a-zA-Z0-9,\[\]]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: salaryOrHourlyCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - description: >-
            Used to find date in job less than, greater than, equal to, or
            between passed date(s)
          name: dateInJob
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date last paid less than, greater than, equal to, or
            between passed date(s)
          name: dateLastPaid
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date paid through less than, greater than, equal to, or
            between passed date(s)
          name: datePaidThru
          in: query
          required: false
          schema:
            type: string
        - name: isAutoAllocated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isAutoPaid
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isSeasonalWorker
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isHighlyCompensated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isMultipleJob
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewRating
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewType
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationDetailsGetAllDetailsResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails200Response
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllDetails500Response
  /personnel/v1/companies/{companyId}/compensation-details:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details by company
      operationId: CompensationDetails_getAllByCompany
      description: >
        Get all compensation details by company.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /companies/{companyId}/compensation-details?dateInJob=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /companies/{companyId}/compensation-details?dateInJob=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /companies/{companyId}/compensation-details?dateInJob=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /companies/{companyId}/compensation-details?dateInJob={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[\s*a-zA-Z0-9,\[\]]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: salaryOrHourlyCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - description: >-
            Used to find date in job less than, greater than, equal to, or
            between passed date(s)
          name: dateInJob
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date last paid less than, greater than, equal to, or
            between passed date(s)
          name: dateLastPaid
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date paid through less than, greater than, equal to, or
            between passed date(s)
          name: datePaidThru
          in: query
          required: false
          schema:
            type: string
        - name: isAutoAllocated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isAutoPaid
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isSeasonalWorker
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isHighlyCompensated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isMultipleJob
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewRating
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewType
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompanyResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany200Response
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetAllByCompany500Response
  /personnel/v1/companies/{companyId}/employees/{employeeId}/compensation-details:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details by company and employee
      operationId: CompensationDetails_getByCompanyAndEmployee
      description: >
        Get all compensation details by company and employee.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[\s*a-zA-Z0-9,\[\]]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: salaryOrHourlyCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryShiftGroupCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - description: >-
            Used to find date in job less than, greater than, equal to, or
            between passed date(s)
          name: dateInJob
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date last paid less than, greater than, equal to, or
            between passed date(s)
          name: dateLastPaid
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date paid through less than, greater than, equal to, or
            between passed date(s)
          name: datePaidThru
          in: query
          required: false
          schema:
            type: string
        - name: isAutoAllocated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isAutoPaid
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isSeasonalWorker
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isHighlyCompensated
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: isMultipleJob
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 1
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewRating
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: performanceReviewType
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployeeResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee200Response
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/CompensationDetailsGetByCompanyAndEmployee500Response
  /personnel/v1/compensation-details/{employeeId}:
    get:
      tags:
        - CompensationDetails
      summary: Get all compensation details by employee
      operationId: CompensationDetails_getByEmployee
      description: >
        Get all compensation details by employee.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Compensation Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /compensation-details/{employeeId}?dateInJob=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /compensation-details/{employeeId}?dateInJob=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /compensation-details/{employeeId}?dateInJob=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /compensation-details/{employeeId}?dateInJob={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpCompensationDetails'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/dep-deductions:
    get:
      tags:
        - DependentDeductions
      summary: Get Dependent Deductions
      operationId: DependentDeductions_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: contactId
          in: query
          required: false
          schema:
            type: string
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: currentCOID
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/DependentDeductionsGet500Response'
  /payroll/v1/earnings-history-base-elements:
    get:
      tags:
        - EarningsHistory
      summary: Get Earnings History Base Elements
      operationId: EarningsHistory_GetInsRate
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: companyID
          in: query
          required: false
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeID
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: periodControl
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: startPerControl
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: endPerControl
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EarningsHistoryGetInsRate500Response'
  /personnel/v1/employee-changes:
    get:
      tags:
        - Changes By Date
      summary: Changes By Date
      operationId: ChangesByDate_getAllEmployeeChangesSinceLastCall
      description: >-
        Gets all of the employee information since the last API call (3 hour
        minimum). A time span can be defined by the query parameters, but to get
        near real time updates on when the employee has changed, you should call
        this service 8 times per day and no more frequent than three hours
        between calls. It should also be understood that you must compare the
        results for an employee with the results from a previous call to see
        what property or properties have changed. Permissions - Ultipro service
        account must have "View" role for the EmployeeExport Web Service.
        Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      parameters:
        - description: Used to lookup employee changes within time span
          name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Used to lookup employee changes within time span
          name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: Pagination, which page you want to see
          name: page
          in: query
          required: false
          schema:
            type: number
        - description: Pagination, how many records per page you want to see
          name: per_page
          in: query
          required: false
          schema:
            type: number
            minLength: 1
            maxLength: 200
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ChangesByDateGetAllEmployeeChangesSinceLastCallResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/ChangesByDateGetAllEmployeeChangesSinceLastCall200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/ChangesByDateGetAllEmployeeChangesSinceLastCall200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/ChangesByDateGetAllEmployeeChangesSinceLastCall200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/ChangesByDateGetAllEmployeeChangesSinceLastCall200Response
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/employee-changes/{employeeId}:
    get:
      tags:
        - Employee Changes
      summary: Changes By Employee ID
      operationId: EmployeeChanges_Get
      description: >-
        Gets all of the employee information since the last API call (minimum 3
        hours), for a specific employeeId. The data is windowed in 3 hour
        increments. To get near real time updates on when the employee has
        changed, you should call this service 8 times per day and no more
        frequent than three hours between calls. It should also be understood
        that you must compare the results for an employee with the results from
        a previous call to see what property or properties have changed. The
        Permissions - Ultipro service account must have "View" role for the
        EmployeeExport Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password})
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeChangesGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeChangesGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeChangesGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeChangesGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeChangesGet200Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            text/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
            text/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /configuration/v1/earnings:
    get:
      tags:
        - Earnings
      summary: Get a list of all earnings configurations
      operationId: Earnings_listEarningsConfigurations
      description: >-
        Get details of all earnings configuration setup at company level.
        </br>If no pagination parameters specified, the default/max is applied.
        It is a public API that user can access once they have a valid username
        and password. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      parameters:
        - name: calculationRule
          in: query
          required: false
          schema:
            type: string
        - name: taxCategory
          in: query
          required: false
          schema:
            type: string
        - name: useDeductionOffset
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInShiftDiffrential
          in: query
          required: false
          schema:
            type: string
        - name: includeInManualCheck
          in: query
          required: false
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInAccruals
          in: query
          required: false
          schema:
            type: string
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurationsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsListEarningsConfigurations500Response
  /configuration/v1/earnings/{calculationRule}/{taxCategory}/{useDeductionOffset}/{countryCode}/{includeInShiftDiffrential}/{includeInManualCheck}:
    get:
      tags:
        - Earnings
      summary: >-
        Get list of earnings configurations filtered by Parameter including
        pagination params
      operationId: Earnings_getConfigurationsFilteredByParameter
      description: >-
        Get all the earning configuration filtered by the parameter(s) passed.
        </br>If no pagination parameters specified, the default/max is applied.
        It is a public API that user can access once they have a valid username
        and password. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      parameters:
        - name: calculationRule
          in: path
          required: true
          schema:
            type: string
        - name: taxCategory
          in: path
          required: true
          schema:
            type: string
        - name: useDeductionOffset
          in: path
          required: true
          schema:
            type: string
        - name: countryCode
          in: path
          required: true
          schema:
            type: string
        - name: includeInShiftDiffrential
          in: path
          required: true
          schema:
            type: string
        - name: includeInManualCheck
          in: path
          required: true
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInAccruals
          in: query
          required: false
          schema:
            type: string
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameterResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsGetConfigurationsFilteredByParameter500Response
  /configuration/v1/earnings/{earningCode}:
    get:
      tags:
        - Earnings
      summary: Get a specific earning configuration
      operationId: Earnings_specificConfigurationGet
      description: >-
        Get details of the earning configuration requested. </br>If no
        pagination parameters specified, the default/max is applied. It is a
        public API that user can access once they have a valid username and
        password. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: earningCode
          in: path
          required: true
          schema:
            type: string
        - name: calculationRule
          in: query
          required: false
          schema:
            type: string
        - name: taxCategory
          in: query
          required: false
          schema:
            type: string
        - name: useDeductionOffset
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInShiftDiffrential
          in: query
          required: false
          schema:
            type: string
        - name: includeInManualCheck
          in: query
          required: false
          schema:
            type: string
        - name: earningCode
          in: query
          required: false
          schema:
            type: string
        - name: includeInAccruals
          in: query
          required: false
          schema:
            type: string
        - name: includeInDeferredCompensation
          in: query
          required: false
          schema:
            type: boolean
        - name: includeInDeferredCompensationHours
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsSpecificConfigurationGetResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EarningsSpecificConfigurationGet500Response
  /personnel/v1/employee-contract-details:
    get:
      tags:
        - EmployeeContract
      summary: Get all employment contract details
      operationId: EmployeeContract_Get
      description: >
        Get all employment contract details.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /employee-contract-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /employee-contract-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /employee-contract-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /employee-contract-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: contractNumber
          in: query
          required: false
          schema:
            type: string
        - name: contractTypeCode
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find contracts effective date less than, greater than, equal
            to, or between passed date(s)
          name: effectiveDate
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find contract record created date less than, greater than,
            equal to, or between passed date(s)
          name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find contract record changed date less than, greater than,
            equal to, or between passed date(s)
          name: rowLastChanged
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeContract'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-cobra-details:
    get:
      tags:
        - EmployeeCobraDetails
      summary: Get Employee Cobra Details
      operationId: EmployeeCobraDetails_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: boolean
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - name: dateOfCobraEvent
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeCobraDetailsGet500Response'
  /personnel/v1/contacts:
    get:
      tags:
        - Contact
      summary: Get all details for a person assigned to an employee as a contact
      operationId: Contact_getPersonnelDetails
      description: >
        Get all details for a person assigned to an employee as a contact.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /contacts?statusAsOfDate=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /contacts?statusAsOfDate=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /contacts?statusAsOfDate=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /contacts?statusAsOfDate={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: isActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: relationshipCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: contactId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isBeneficiary
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isDependent
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          name: dateOfCobraEvent
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find contact status as of date less than, greater than,equal
            to, or between passed date(s)
          name: statusAsOfDate
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
            text/json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contact'
            text/xml:
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/contacts/{contactId}:
    get:
      tags:
        - Contact
      summary: Get all details for a single person assigned to an employee as a contact
      operationId: Contact_getPersonnelContactDetails
      description: >
        Get all details for a single person assigned to an employee as a
        contact.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /contacts/{contactId}?statusAsOfDate=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /contacts/{contactId}?statusAsOfDate=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /contacts/{contactId}?statusAsOfDate=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /contacts/{contactId}?statusAsOfDate={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: contactId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: isActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: relationshipCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: contactId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isBeneficiary
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: isDependent
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          name: dateOfCobraEvent
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find contact status as of date less than, greater than,
            equal to, or between passed date(s)
          name: statusAsOfDate
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
            text/json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Contact'
            application/xml:
              schema:
                $ref: '#/components/schemas/Contact'
            text/xml:
              schema:
                $ref: '#/components/schemas/Contact'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/emp-deductions-benefit-option-change-date:
    get:
      tags:
        - EmpDedBenOptionDate
      summary: Get Employee Deduction Benefit Option Change Date
      operationId: EmpDedBenOptionDate_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpDedBenOptionDateGet500Response'
  /payroll/v1/direct-deposit:
    get:
      tags:
        - DirectDeposit
      summary: Get list of direct deposit details for US and Canadian employees
      operationId: DirectDeposit_listEmployeeDirectDepositDetails
      description: >
        Get list of direct deposit details for US and Canadian employees.

        If no pagination parameters specified, the default/max is applied.
        Permissions - UltiPro service account must have "View" role for the
        "Employee Direct Deposit" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /direct-deposit?dateTimeChanged=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /direct-deposit?dateTimeChanged=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /direct-deposit?dateTimeChanged=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: accountIsInactive
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeBankRoutingNumber
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find direct deposit record changed date less than, greater
            than, equal to, or between passed date(s)
          name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListEmployeeDirectDepositDetailsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListEmployeeDirectDepositDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListEmployeeDirectDepositDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListEmployeeDirectDepositDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListEmployeeDirectDepositDetails200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/companies/{companyId}/direct-deposit:
    get:
      tags:
        - DirectDeposit
      summary: >-
        Get list of direct deposit details for US and Canadian employees by
        company
      operationId: DirectDeposit_listDirectDepositDetailsByCompany
      description: >
        Get list of direct deposit details for US and Canadian employees by
        company.

        If no pagination parameters specified, the default/max is applied.
        Permissions - UltiPro service account must have "View" role for the
        "Employee Direct Deposit" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /companies/{companyId}/direct-deposit?dateTimeChanged={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: accountIsInactive
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeBankRoutingNumber
          in: query
          required: false
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find direct deposit record changed date less than, greater
            than, equal to, or between passed date(s)
          name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListDirectDepositDetailsByCompanyResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListDirectDepositDetailsByCompany200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListDirectDepositDetailsByCompany200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListDirectDepositDetailsByCompany200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/DirectDepositListDirectDepositDetailsByCompany200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/deduction-history-effective-change-dates:
    get:
      tags:
        - Employee Deduction History Effective Date
      summary: Deductions History Effective Change Date
      operationId: EmployeeDeductionHistoryEffectiveDate_getByDeductionCodeAndField
      description: |
        If no pagination parameters specified, the default/max is applied.
         Permissions - UKG Pro service account must have "View" role for the "Personnel Integration" Api endpoints. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).</br>
          fieldName is a required parameter that takes one of the following:
           <ul>
           <li>changeReason</li>
           <li>benefitStartDate</li>
           <li>benefitStopDate</li>
           <li>benefitOption</li>
           <li>employeeAmount</li>
           <li>employeeBenefitAmount</li>
           <li>employeeGoalAmount</li>
           <li>eoiDesiredAmount</li>
           <li>eoiDesiredCalcRateOrPercent</li>
           <li>declinedByCarrier</li>
           <li>declinedByCarrierReason</li>
           <li>waiveReason</li>
           <li>deductionStartDate</li>
           <li>deductionStopDate</li>
           </ul>
           sessionDate is an optional parameter that defaults to today's date if null.</br>
          deductionCode is a required parameter that takes a list of codes [ded1,ded2].</br>
          CompanyId is an optional parameter that takes a list of IDs [coid1,coid2].</br>


         Correct syntax when using parameters are as follows:
         <ul>
           <li>Get deductions history change date by single deduction code
           <ul>
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&deductionCode={dedCode}</li>
           </ul>
           </li>
         <li>Get deductions history change date by multiple deduction code
           <ul>
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&deductionCode={dedCode1,dedCode2}</li>
           </ul>
           </li>
           <li>Get deductions history change date multiple deduction code with multiple company
           <ul>
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&deductionCode={dedCode1,dedCode2}&companyId={companyId1,companyId1}</li>
           </ul>
           </li>
           <li>Get deductions history change date by sessionDate,deduction code and company
           <ul>
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&sessionDate={sessionDate}deductionCode={deductionCode}&companyId={companyId}</li>
           </ul>
           </li>
         <li>Get deductions history change date per page
           <ul>
           <li>Example: /personnel/v1/deduction-history-effective-change-dates?fieldName={fieldName}&page=1&per_page=100</li>
           </ul>
           </li>
         </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: sessionDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: fieldName
          in: query
          required: true
          schema:
            type: string
        - name: deductionCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndFieldResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField400Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField400Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField400Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField400Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField400Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField500Response
  /personnel/v1/employee-demographic-details:
    get:
      tags:
        - Employee Demographic Details
      summary: Get Employee Demographic Details
      operationId: EmployeeDemographicDetails_get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: lastName
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z]*$
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z]*$
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet404Response'
        '429':
          description: '429'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet429Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet429Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet429Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet429Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet429Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeDemographicDetailsGet500Response'
  /personnel/v1/employee-education:
    get:
      tags:
        - EmployeeEducation
      summary: Get all education details
      operationId: EmployeeEducation_Get
      description: >
        Get all education details. If no pagination parameters specified, the
        default/max is applied. Permissions - UKG Pro service account must have
        "View" role for the "Personnel Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeEducationModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-extended-elements:
    get:
      tags:
        - EmployeeExtendedElements
      summary: Get Employee Extended Elements
      operationId: EmployeeExtendedElements_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeExtendedElementsGet500Response'
  /personnel/v1/employee-employment-details:
    get:
      tags:
        - EmployeeEmploymentDetails
      summary: Get Employee Employment Details
      operationId: EmployeeEmploymentDetails_getDetails
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>Company ID parameter can take in multiple deduction codes

        separated by coma. ex: [ABC, DEF]</li> <li>Primary Job Code parameter

        can take in multiple pay frequencies separated by coma. ex: [ABC,

        DEF]</li> <li>Primary Work Location Code parameter can take in multiple

        pay frequencies separated by coma. ex: [ABC, DEF]</li> <li>Primary

        Project Code parameter can take in multiple pay frequencies separated by

        coma. ex: [ABC, DEF]</li> <li>Deduction Group Code parameter can take in

        multiple pay frequencies separated by coma. ex: [ABC, DEF]</li>

        <li>Earning Group Code parameter can take in multiple pay frequencies

        separated by coma. ex: [ABC, DEF]</li> <li>Employee Type Code parameter

        can take in multiple pay frequencies separated by coma. ex: [ABC,

        DEF]</li> <li>Employee Status Code parameter can take in multiple pay

        frequencies separated by coma. ex: [ABC, DEF]</li> <li>Pay Group

        parameter can take in multiple pay frequencies separated by coma. ex:

        [ABC, DEF]</li> </ul>
      parameters:
        - name: companyID
          in: query
          required: false
          schema:
            type: string
        - name: employeeID
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z]*$
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
            pattern: ^[0-9]*$
        - name: supervisorId
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: string
            pattern: ^[yY]{1}$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetailsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails400Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails400Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails400Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails400Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails400Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeEmploymentDetailsGetDetails500Response
  /personnel/v1/employee-job-history-details:
    get:
      tags:
        - EmployeeJobHistoryDetail
      summary: Get all employee job history details
      operationId: EmployeeJobHistoryDetail_Get
      description: >
        Get all employee job history details. If no pagination parameters
        specified, the default/max is applied. Permissions - UKG Pro service
        account must have "View" role for the "Employee Job History Details" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /employee-job-history-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /employee-job-history-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /employee-job-history-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /employee-job-history-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: isOrgChange
          in: query
          required: false
          schema:
            type: string
        - name: isJobChange
          in: query
          required: false
          schema:
            type: string
        - name: isRateChange
          in: query
          required: false
          schema:
            type: string
        - name: isPromotion
          in: query
          required: false
          schema:
            type: string
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find job history effective date less than, greater than,
            equal to, or between passed date(s)
          name: jobEffectiveDate
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find job history created less than, greater than, equal to,
            or between passed date(s)
          name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-job-history-details/{systemId}:
    get:
      tags:
        - EmployeeJobHistoryDetail
      summary: Get a single job history detail record
      operationId: EmployeeJobHistoryDetail_getSingleRecord
      description: >
        Get a single job history detail record.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Job History Details" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /employee-job-history-details/systemID/[systemID]?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: systemId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: isOrgChange
          in: query
          required: false
          schema:
            type: string
        - name: isJobChange
          in: query
          required: false
          schema:
            type: string
        - name: isRateChange
          in: query
          required: false
          schema:
            type: string
        - name: isPromotion
          in: query
          required: false
          schema:
            type: string
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find job history effective date less than, greater than,
            equal to, or between passed date(s)
          name: jobEffectiveDate
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find job history created less than, greater than, equal to,
            or between passed date(s)
          name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeJobHistoryDetail'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-ids:
    post:
      tags:
        - Employee ID Lookup
      summary: Employee ID Lookup
      operationId: EmployeeIdLookup_byCompanyIds
      description: >-
        Look up Employee ID/Company ID. This operation is a POST due the
        sensitive nature of the lookup properties not appropriate for URI. This
        service also supports multiple records to be looked up in the body of
        the request (array of Identifier objects). Permissions - Ultipro service
        account must have the "View" and "Add" roles for the "Personnel
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password})
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeIdLookupByCompanyIdsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeeIdLookupByCompanyIdsRequest1'
          application/problem+json:
            schema:
              $ref: '#/components/schemas/EmployeeIdLookupByCompanyIdsRequest2'
          application/xml:
            schema:
              $ref: '#/components/schemas/EmployeeIdLookupByCompanyIdsRequest3'
          text/xml:
            schema:
              $ref: '#/components/schemas/EmployeeIdLookupByCompanyIdsRequest4'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeIdLookupByCompanyIdsRequest5'
        required: true
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeIdLookupByCompanyIdsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeIdLookupByCompanyIds207Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeIdLookupByCompanyIds207Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeIdLookupByCompanyIds207Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeIdLookupByCompanyIds207Response'
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/empl-multiple-jobs:
    get:
      tags:
        - EmployeeMultipleJobsOPP
      summary: Get employee multiple jobs details
      operationId: EmployeeMultipleJobsOpp_listDetails
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

         Correct syntax when using parameters are as follows:
        <ul>

        <li>Get Multiple jobs for employee ID

        <ul>

        <li>Example:
        /personnel/v1/empl-multiple-jobs?employeeId={employeeId}</li>

        </ul>

        </li>

        <li>Get Multiple jobs for company ID

        <ul>

        <li>Example: /personnel/v1/empl-multiple-jobs?companyId={companyId}</li>

        </ul>

        </li>

        <li>Get Multiple jobs for employee ID and company Id

        <ul>

        <li>Example:
        /personnel/v1/empl-multiple-jobs?employeeId={employeeId}&companyId={companyId}</li>

        </ul>

        </li>

        <li>Get Multiple jobs per page

        <ul>

        <li>Example: /personnel/v1/empl-multiple-jobs?page=1&per_page=10000</li>

        </ul>

        </li>

        </ul>
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: jobCode
          in: query
          required: false
          schema:
            type: string
        - name: isPrimaryJob
          in: query
          required: false
          schema:
            type: string
        - name: jobIsInActive
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetailsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeMultipleJobsOppListDetails500Response
  /personnel/v1/employee-multi-phone-numbers:
    get:
      tags:
        - EmployeeMultiPhoneNumbers
      summary: Get employee multiple phone numbers
      operationId: EmployeeMultiPhoneNumbers_Get
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[*a-zA-Z0-9]*$
        - name: systemId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeMultiPhoneNumbersGet500Response'
  /personnel/v1/empl-multiple-positions:
    get:
      tags:
        - EmpMultiplePositions
      summary: Get Employee Multiple Positions
      operationId: EmpMultiplePositions_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: jobCode
          in: query
          required: false
          schema:
            type: string
        - name: positionCode
          in: query
          required: false
          schema:
            type: string
        - name: isPrimary
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpMultiplePositionsGet500Response'
  /personnel/v1/national-documents:
    get:
      tags:
        - NationalDocument
      summary: All employee national document details
      operationId: NationalDocument_Get
      description: >
        All employee national document details. If no pagination parameters
        specified, the default/max is applied. Permissions - UKG Pro service
        account must have "View" role for the "Personnel Integration" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: contactId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: nationalDocumentIssuingCountryCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            text/json:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/NationalDocumentModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/integration/kronos/employee-profiles:
    get:
      tags:
        - KronosEmployeeProfiles
      summary: Get list of employees profile
      operationId: KronosEmployeeProfiles_getList
      description: |-
        If no pagination parameters specified, the default/max is applied.

          Permissions - UKG Pro service account must have "View" role for the "Personnel Integration" Api endpoints. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). <br><br>/personnel/v1/integration/kronos/employee-profiles can take following optional parameter:<br><ul><li>Product: Required parameter </li> <li>companyId: Can take in multiple IDs separated by comma. ex: {id1}, {id2}</li><li>employeeId: Can take in multiple IDs separated by comma. ex: {id1}, {id2}</li><li>includeHistoryIfChangeDetected</li><li>effectiveDate</li><li>changeWindow</li><li>per_Page</li><li>page</li><br>Correct syntax when using parameters are as follows:<ul><li>Get kronos employee profiles with required product parameter<ul>   <li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}</ul></li><li>Get kronos employee profiles by companyId and employeeId<ul><li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}&companyId={COID1}&employeeId={EEID1}, {EEID2}&effectiveDate={date}</li></ul></li><li>Get employee profiles by includeHistoryIfChangeDetected<ul><li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}&companyId={COID1}&employeeId={EEID1}&effectiveDate={date}&includeHistoryIfChangeDetected=true</li></ul></li><li>Get kronos employee profiles by perPage and page<ul><li>Example: personnel/v1/integration/kronos/employee-profiles?product={productCode}&page=1&per_Page={pageSize}</li></ul></ul>
      parameters:
        - name: product
          in: query
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: changeWindow
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: includeHistoryIfChangeDetected
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeProfilesGetList500Response'
  /personnel/v1/employee-security-user-details:
    get:
      tags:
        - Employee Security User Details
      summary: Get employee security user details
      operationId: EmployeeSecurityUserDetails_getDetails
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: userName
          in: query
          required: false
          schema:
            type: string
        - name: employeeID
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetailsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeSecurityUserDetailsGetDetails500Response
  /personnel/v1/integration/kronos/employee-status:
    get:
      tags:
        - KronosEmployeeStatus
      summary: Get Employee Status
      operationId: KronosEmployeeStatus_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeIds
          in: query
          required: false
          schema:
            type: string
        - name: inactiveTermWindow
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: inactiveDisabledWindow
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/KronosEmployeeStatusGet500Response'
  /payroll/v1/companies/pay-statements-summary:
    post:
      tags:
        - CompanyPayStatement
      summary: >-
        Get employee(s) pay statement(s) summary for a company or pay group for
        a given date range.
      operationId: CompanyPayStatement_getPaySummaries
      description: >-
        This method returns zero or more pay statement summaries for a given
        start date and end date. The pay summary information gives you a quick
        view of the total earnings, deductions and taxes. You may also pass in a
        PayGroup or CompanyIdentifer to further filter the list of pay summaries
        returned. <br />If no pagination parameters specified, the default is
        applied. Permissions - UKG Pro service account must have "View" role for
        the "Employee Pay Statements" Web Service. Headers -
        US-Customer-Api-Key, US-Client-id, Authorization
        ({username}:{password}).
      requestBody:
        $ref: '#/components/requestBodies/CompanyPayStatementFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyPayStatementGetPaySummariesResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyPayStatementGetPaySummaries200Response
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/companies/pay-statements:
    post:
      tags:
        - CompanyPayStatement
      summary: >-
        Get employee(s) pay statement(s) for a company or pay group for a given
        date range.
      operationId: CompanyPayStatement_getByDateRange
      description: >-
        This method returns zero or more full pay statement documents for a
        given start date and end date. You may also pass in a PayGroup or
        CompanyIdentifer to further filter the list of pay summaries returned.
        <br />If no pagination parameters specified, the default is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Employee Pay Statements" Web Service. Headers - US-Customer-Api-Key,
        US-Client-id, Authorization ({username}:{password}).
      requestBody:
        $ref: '#/components/requestBodies/CompanyPayStatementFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyPayStatementGetByDateRangeResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/CompanyPayStatementGetByDateRange200Response
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/employees/pay-statements:
    post:
      tags:
        - EmployeePayStatement
      summary: >-
        Get employee pay statement(s) based on the passed employee identifier
        for a given date range.
      operationId: EmployeePayStatement_getByDateRange
      description: >-
        This method returns zero or more pay statements for a specific employee
        identified by the passed-in employee identifier. The pay statement
        returned is based on the start date and the end date passed in. <br />If
        no pagination parameters specified, the default is applied. Permissions
        - UKG Pro service account must have "View" role for the "Employee Pay
        Statements" Web Service. Headers - US-Customer-Api-Key, US-Client-id,
        Authorization ({username}:{password}).
      requestBody:
        $ref: '#/components/requestBodies/EmployeePayStatementRangeFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeePayStatementGetByDateRangeResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeePayStatementGetByDateRange200Response
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/employees/pay-statement/last:
    post:
      tags:
        - EmployeePayStatement
      summary: Get employee last pay statement based on the passed employee identifier.
      operationId: EmployeePayStatement_getLastPayStatement
      description: >-
        This method allows you to retrieve an individual pay statement by
        providing an employee identifier. This is helpful if you are designing
        an application that is aware of the employees to retrieve. <br />If no
        pagination parameters specified, the default is applied. Permissions -
        UKG Pro service account must have "View" role for the "Employee Pay
        Statements" Web Service. Headers - US-Customer-Api-Key, US-Client-id,
        Authorization ({username}:{password})
      requestBody:
        $ref: '#/components/requestBodies/EmployeePayStatementRangeFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v1/employees/pay-statement/{PayIdentifier}:
    get:
      tags:
        - EmployeePayStatement
      summary: Get employee pay statement based on the given pay identifier.
      operationId: EmployeePayStatement_getByPayIdentifier
      description: >-
        This method returns zero or one pay statements based on the given pay
        identifier. The pay identifier is a string value that represents a
        unique pay statement.<br /> If no pagination parameters specified, the
        default is applied. Permissions - UKG Pro service account must have
        "View" role for the "Employee Pay Statements" Web Service. Headers -
        US-Customer-Api-Key, US-Client-id, Authorization
        ({username}:{password}).
      parameters:
        - name: PayIdentifier
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayStatementModel'
        '400':
          description: BadRequest
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-supervisor-details:
    get:
      tags:
        - EmployeeSupervisorDetails
      summary: Get Employee Supervisor Details
      operationId: EmployeeSupervisorDetails_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: supervisorCompanyId
          in: query
          required: false
          schema:
            type: string
        - name: supervisorEmployeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: supervisorCompanyCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeSupervisorDetailsGet500Response'
  /personnel/v1/employment-details:
    get:
      tags:
        - EmploymentDetails
      summary: Get Employment Details
      operationId: EmploymentDetails_getDetails
      description: >
        Get all employment record details.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /employment-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /employment-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /employment-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /employment-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: supervisorID
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails200Response'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsGetDetails500Response'
  /personnel/v1/companies/{companyId}/employment-details:
    get:
      tags:
        - EmploymentDetails
      summary: Get Employment Details
      operationId: EmploymentDetails_listByCompany
      description: >
        Get all employment record details by company.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /companies/{companyId}/employment-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: supervisorID
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompanyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany200Response'
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmploymentDetailsListByCompany500Response'
  /personnel/v1/companies/{companyId}/employees/{employeeId}/employment-details:
    get:
      tags:
        - EmploymentDetails
      summary: Get Employment Details
      operationId: EmploymentDetails_getByCompanyIdAndEmployeeId
      description: >
        Get a single employment detail by company.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: primaryJobCode
          in: query
          required: false
          schema:
            type: string
        - name: jobTitle
          in: query
          required: false
          schema:
            type: string
        - name: fullTimeOrPartTimeCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryWorkLocationCode
          in: query
          required: false
          schema:
            type: string
        - name: primaryProjectCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: earningGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: supervisorID
          in: query
          required: false
          schema:
            type: string
        - name: originalHireDate
          in: query
          required: false
          schema:
            type: string
        - name: lastHireDate
          in: query
          required: false
          schema:
            type: string
        - name: dateOfTermination
          in: query
          required: false
          schema:
            type: string
        - name: dateOfRetirement
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: dateLastPayDatePaid
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: isHomeCompany
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeIdResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId200Response
        '404':
          description: NotFound
        '429':
          description: '429'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/EmploymentDetailsGetByCompanyIdAndEmployeeId500Response
  /payroll/v2/general-ledger:
    get:
      tags:
        - GeneralLedgerRunDetailsV2
      summary: >-
        Returns a list of details for a general ledger run, filterable by runId
        and blockId
      operationId: GeneralLedgerRunDetailsV2_Get
      parameters:
        - name: runId
          in: query
          required: false
          schema:
            type: string
        - name: blockId
          in: query
          required: false
          schema:
            type: string
        - name: mostRecent
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralLedgerRunDetailsV2GetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GeneralLedgerRunDetailsV2Get200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GeneralLedgerRunDetailsV2Get200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/GeneralLedgerRunDetailsV2Get200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/GeneralLedgerRunDetailsV2Get200Response'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /payroll/v2/general-ledger/{runId}:
    get:
      tags:
        - GeneralLedgerRunDetailsV2
      summary: >-
        Returns a list of details for a general ledger run, filterable by runId
        and blockId
      operationId: GeneralLedgerRunDetailsV2_GetByRunId
      parameters:
        - name: runId
          in: path
          required: true
          schema:
            type: string
        - name: runId
          in: query
          required: false
          schema:
            type: string
        - name: blockId
          in: query
          required: false
          schema:
            type: string
        - name: mostRecent
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GeneralLedgerRunDetailsV2GetByRunIdResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/GeneralLedgerRunDetailsV2GetByRunId200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/GeneralLedgerRunDetailsV2GetByRunId200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/GeneralLedgerRunDetailsV2GetByRunId200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/GeneralLedgerRunDetailsV2GetByRunId200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-global-banks:
    get:
      tags:
        - EmployeeGlobalBank
      summary: Get all direct deposit details for global employees
      operationId: EmployeeGlobalBank_Get
      description: >
        Get all direct deposit details for global employees.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Global Employee Direct Deposit" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /employee-global-banks?dateModified=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /employee-global-banks?dateModified=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /employee-global-banks?dateModified=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /employee-global-banks?dateModified={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: employeeCountry
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find global employee's direct deposit modified date less
            than, greater than, equal to, or between passed date(s)
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeeGlobalBanksModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/employee-pay-deduction-elements:
    get:
      tags:
        - EmployeePayDeductionElement
      summary: Get Global Employee Payments and Deductions Service
      operationId: EmployeePayDeductionElement_Get
      description: >
        Get all global employee payments and deductions.

        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /employee-pay-deduction-elements?modifiedDate=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /employee-pay-deduction-elements?modifiedDate=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /employee-pay-deduction-elements?modifiedDate=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /employee-pay-deduction-elements?modifiedDate={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: payDeductionName
          in: query
          required: false
          schema:
            type: string
        - name: periodStartName
          in: query
          required: false
          schema:
            type: string
        - name: paymentOrDeductionIndicator
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find a payment or deduction modified less than, greater
            than, equal to, or between passed date(s)
          name: modifiedDate
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find a payment or deduction where the pay period start is
            less than, greater than, equal to, or between passed date(s)
          name: startDate
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find a payment or deduction where the pay period end is less
            than, greater than, equal to, or between passed date(s)
          name: endDate
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmployeePayDeductionElementsModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/import-tool:
    post:
      tags:
        - ImportTool
      summary: Takes an XML transaction and feeds it into the Import Tool
      operationId: ImportTool_Post
      description: >-
        Submits an encoded XML transaction to the Import Tool. Transaction
        results can be viewed on the Administration > Integration Studio >
        Import Tool > Results page. Reference the Import Tool XML and
        Configuration Settings Guide for transaction details. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}). UltiPro service account must have the View and
        Add roles for the Personnel Integration Web Service. This POST call has
        a requirement of PersonnelResourceAuthorize(ApiOperation.Create)
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportToolPostResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ImportToolPost200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ImportToolPost200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportToolPost200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportToolPost200Response'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportToolPost500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/ImportToolPost500Response1'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ImportToolPost500Response2'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportToolPost500Response3'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportToolPost500Response4'
  /personnel/v1/import-tool/status/{stagingId}:
    get:
      tags:
        - ImportTool
      summary: Retrieves the status of an import tool transaction
      operationId: ImportTool_GetStatus
      description: >-
        Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}). UltiPro service account must have View role for
        the Personnel Integration Web Service. This GET call has a requirement
        of PersonnelResourceAuthorize(ApiOperation.Read)
      parameters:
        - name: stagingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportToolGetStatusResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ImportToolGetStatus500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ImportToolGetStatus500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ImportToolGetStatus500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ImportToolGetStatus500Response'
  /personnel/v1/employee-global-localization-elements:
    get:
      tags:
        - EmpGlobalLocalizationElement
      summary: Get all global employee localization fields added to UKG Pro
      operationId: EmpGlobalLocalizationElement_Get
      description: >
        Get all global employee localization fields added to UKG Pro through
        platform configuration with the prefix of 'GBLPay'.

        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /employee-global-localization-elements?created=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /employee-global-localization-elements?created=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /employee-global-localization-elements?created=01-01-1900</li>
          </ul>
          </li>
        <li>between ({minimum date,maximum date})
          <ul>
          <li>Example: /employee-global-localization-elements?created={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find employee localization fields created less than, greater
            than, equal to, or between passed date(s)
          name: created
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - description: >-
            Used to find employee localization fields effective less than,
            greater than, equal to, or between passed date(s)
          name: effective
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpGlobalLocalizationElementModel'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /configuration/v1/insurance-rate:
    get:
      tags:
        - InsRate
      summary: Get Insurance Rate
      operationId: InsRate_GetInsRate
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payFrequency
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRateResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate200Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InsRateGetInsRate500Response'
  /tenants/{tenantIdentifier}/new-hires/{id}:
    get:
      tags:
        - New Hires
      summary: Gets a single New Hire by Id
      operationId: NewHires_getById
      description: Gets a single New Hire by Id
      parameters:
        - description: >-
            Unique identifier of the tenant to interact with. Can be either the
            tenant alias or tenant ID.
          name: tenantIdentifier
          in: path
          required: true
          schema:
            type: string
        - description: Unique identifier for the New Hire
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: New Hire retrieved
          headers:
            Location:
              description: Location of resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewHiresGetByIdResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NewHiresGetById200Response'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewHiresGetById404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NewHiresGetById404Response'
              examples:
                response:
                  value:
                    title: Resource not found error
                    type: >-
                      https://www.ultimatesoftware.com/error.onboarding.not-found-error
                    general:
                      type: error.onboarding.new-hires.not-found-error
                      message: >-
                        A New Hire with the Id:
                        1e70300e-6653-40e5-8383-ee3341857357 was not found.
  /tenants/{tenantIdentifier}/new-hires:
    post:
      tags:
        - New Hires
      summary: Creates a single New Hire
      operationId: NewHires_createSingleNewHire
      description: Creates a single New Hire
      parameters:
        - description: >-
            Unique identifier of the tenant to interact with. Can be either the
            tenant alias or tenant ID.
          name: tenantIdentifier
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: New Hire object to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewHiresCreateSingleNewHireRequest'
        required: true
      responses:
        '201':
          description: New Hire created
          headers:
            Location:
              description: Location of resource
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewHiresCreateSingleNewHireResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NewHiresCreateSingleNewHire201Response'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewHiresCreateSingleNewHire400Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NewHiresCreateSingleNewHire400Response'
              examples:
                response:
                  value:
                    title: One or more validation errors have occurred
                    type: >-
                      https://www.ultimatesoftware.com/error.onboarding.validation-error
                    errors:
                      modelState:
                        contactInformation.name.first:
                          - type: >-
                              error.onboarding.new-hires.contact-information.name.first.required
                            message: First name is required.
                      general: null
        '409':
          description: Conflict with the current state of the resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewHiresCreateSingleNewHire409Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NewHiresCreateSingleNewHire409Response'
              examples:
                response:
                  value:
                    title: One or more validation errors have occurred
                    type: >-
                      https://www.ultimatesoftware.com/error.onboarding.validation-error
                    errors:
                      modelState:
                        title:
                          - type: error.onboarding.new-hires.duplicate-new-hire-id
                            message: >-
                              New hire with id
                              '0fde172d-5664-481a-9aea-df78861ff270' conflicts
                              with another new hire.
                      general: null
  /hoursWorked:
    post:
      tags:
        - time
      summary: Add hours worked entries
      operationId: Time_addTimeEntries
      security:
        - basicAuth: []
          basic: []
          BasicAuth: []
          OauthSecurity: []
      description: Add multiple Time entries
      parameters:
        - $ref: '#/components/parameters/xCorrelationIdParam'
        - $ref: '#/components/parameters/usTenantIdParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeItemList'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeItemList'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /personnel/v1/integration-audit-configuration:
    get:
      tags:
        - IntegrationAuditConfiguration
      summary: Get Integration Audit Configuration Data
      operationId: IntegrationAuditConfiguration_getData
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: tableName
          in: query
          required: false
          schema:
            type: string
        - name: fieldName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetDataResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData400Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData400Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData400Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData400Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData400Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/IntegrationAuditConfigurationGetData500Response
  /personnel/v1/international-employees:
    get:
      tags:
        - InternationalEmployee
      summary: Get international employee details for all employees
      operationId: InternationalEmployee_Get
      description: >
        Get all international employee details. If no pagination parameters
        specified, the default/max is applied. Permissions - UKG Pro service
        account must have "View" role for the "Personnel Integration" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternationalEmployeeGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/InternationalEmployeeGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/InternationalEmployeeGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/InternationalEmployeeGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/InternationalEmployeeGet200Response'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/international-employees/{employeeId}:
    get:
      tags:
        - InternationalEmployee
      summary: Get a single employees international details
      operationId: InternationalEmployee_getDetails
      description: >
        Get a single employees international details. If no pagination
        parameters specified, the default/max is applied. Permissions - UKG Pro
        service account must have "View" role for the "Personnel Integration"
        Web Service. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: countryCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternationalEmployeeGetDetailsResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/InternationalEmployeeGetDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/InternationalEmployeeGetDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/InternationalEmployeeGetDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/InternationalEmployeeGetDetails200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /configuration/v1/jobgroup:
    get:
      tags:
        - JobGroup
      summary: Get All Job Groups
      operationId: JobGroup_Get
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      parameters:
        - name: jobGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: jobGroupCountryCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGroupGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/JobGroupGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/JobGroupGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobGroupGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/JobGroupGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGroupGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/JobGroupGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/JobGroupGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobGroupGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/JobGroupGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGroupGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/JobGroupGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/JobGroupGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/JobGroupGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/JobGroupGet500Response'
  /locations/{code}:
    get:
      tags:
        - locations
      summary: Retrieve a single location configuration
      operationId: Locations_getConfiguration
      description: >
        The locations endpoint returns information about the UltiPro locations
        configuration. The unique identifier for a locations configuration is
        the code property. Permissions - Ultipro service account must have
        "View" role for the "Company Configuration Integration" Web Service.
        Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: location code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locations'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /jobs/{code}:
    get:
      tags:
        - jobs
      summary: Retrieve a single job configuration
      operationId: Jobs_getConfiguration
      description: >
        The jobs endpoint returns information about the UltiPro jobs
        configuration. The unique identifier for a jobs configuration is the
        code property. Permissions - Ultipro service account must have "View"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Job code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobs'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /configuration/v1/option-rate:
    get:
      tags:
        - OptionRate
      summary: Get Option Rate Data
      operationId: OptionRate_getData
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Company Configuration Integration\" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).


        Effective date parameter gets effective record as of the given date. If
        it's not passed, effected date is defaulted to current date.


        Deduction code parameter can take in multiple deduction codes separated
        by coma. ex: [DEN, MED, VIS] .


        Pay frequency parameter can take in multiple pay frequencies separated
        by coma. ex: [B, M] .
      parameters:
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: benefitOption
          in: query
          required: false
          schema:
            type: string
        - name: effectiveDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payFrequency
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionRateGetDataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OptionRateGetData200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/OptionRateGetData200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/OptionRateGetData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionRateGetData200Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionRateGetData500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/OptionRateGetData500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/OptionRateGetData500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/OptionRateGetData500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/OptionRateGetData500Response'
  /personnel/v1/open-enrollment-emp-deductions:
    get:
      tags:
        - OpenEnrollmentEmployeeDeductions
      summary: Get Open Enrollment Employee Deductions
      operationId: OpenEnrollmentEmployeeDeductions_GetAuditDetails
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      parameters:
        - name: startDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sessionType
          in: query
          required: true
          schema:
            type: string
        - name: deductionCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetailsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentEmployeeDeductionsGetAuditDetails500Response
  /signin/oauth2/t/{tenant-name}/access_token:
    post:
      tags:
        - Post new token request
      summary: Obtain new oAuth token
      operationId: PostNewTokenRequest_obtainOAuthToken
      description: >-
        Obtain new token to use in subsequent service requests <b>ONLY</b> for
        services that use oAuth.
      parameters:
        - description: Tenant Name provided to you from UltiPro
          name: tenant-name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostNewTokenRequestObtainOAuthTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token-response'
  /personnel/v1/open-enrollment-dep-deductions:
    get:
      tags:
        - OpenEnrollmentDependentDeductions
      summary: Get Open Enrollment Dependent Deductions Data
      operationId: OpenEnrollmentDependentDeductions_getData
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
         <ul><li>StartDateTime is a required parameter. </li><li>EndDateTime is a required parameter.</li>  <li>SessionType is a required parameter. </li><li>DeductionCode is a required parameter that takes a list of deduction codes [ded1, ded2].</li></ul>
      parameters:
        - name: startDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: sessionType
          in: query
          required: true
          schema:
            type: string
        - name: deductionCode
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetDataResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData400Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData400Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData400Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData400Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData400Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OpenEnrollmentDependentDeductionsGetData500Response
  /configuration/v1/org-levels/{level}/{code}:
    get:
      tags:
        - Single Organization Level
      summary: Get single org-level
      operationId: SingleOrganizationLevel_get
      description: >
        The org-levels endpoint returns information about the UltiPro
        organizational level configurations. The unique identifier for an
        org-levels configuration, is level and code properties concatenated,
        therefore both values are needed. Permissions - Ultipro service account
        must have "View" role for the "Company Configuration Integration" Web
        Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Description of the org-level.
          name: level
          in: path
          required: true
          schema:
            type: string
        - description: Organization code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-levels'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/org-levels'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    patch:
      tags:
        - Single Organization Level
      summary: Patch one org-level
      operationId: SingleOrganizationLevel_updateProperties
      description: >
        Allows the ability update one or more properties of a single org-level
        configuration. Permissions - Ultipro service account must have "Edit"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Description of the org-level.
          name: level
          in: path
          required: true
          schema:
            type: string
        - description: Organization code.
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/org-levels'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-levels'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/org-levels'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    put:
      tags:
        - Single Organization Level
      summary: Update one org-level
      operationId: SingleOrganizationLevel_updateOrgLevel
      description: >
        Allows the ability update a single organizational level configuration.
        Permissions - Ultipro service account must have "Edit" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Description of the org-level.
          name: level
          in: path
          required: true
          schema:
            type: string
        - description: Organization code.
          name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/org-levels'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-levels'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/org-levels'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /configuration/v1/org-levels:
    get:
      tags:
        - View or Create Organization Levels
      summary: Get all org-levels
      operationId: ViewOrCreateOrganizationLevels_getAllOrgLevels
      description: >
        Returns information about the UltiPro org-level configurations.
        Permissions - Ultipro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Description of the org-level.
          name: levelDescription
          in: query
          required: false
          schema:
            type: string
        - description: Organization code.
          name: code
          in: query
          required: false
          schema:
            type: string
        - description: Organizational budget group.
          name: budgetGroup
          in: query
          required: false
          schema:
            type: string
        - description: Reporting category.
          name: reportingCategory
          in: query
          required: false
          schema:
            type: string
        - description: Active status.
          name: isActive
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ViewOrCreateOrganizationLevelsGetAllOrgLevelsResponse
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/ViewOrCreateOrganizationLevelsGetAllOrgLevels200Response
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    post:
      tags:
        - View or Create Organization Levels
      summary: Create org-level configuration
      operationId: ViewOrCreateOrganizationLevels_createOrgLevelConfig
      description: >
        Creates a new UltiPro org-level configuration, Array of objects is
        permitted for multi-records support. Permissions - Ultipro service
        account must have "Add" role for the "Company Configuration Integration"
        Web Service. Headers - US-Customer-Api-Key, Authorization (base64
        encoded {username}:{password}).
      requestBody:
        description: The org-level to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/org-levels-body'
        required: true
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /payroll/v1/pay-register:
    get:
      tags:
        - PayRegister
      summary: Get Pay Register
      operationId: PayRegister_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: checkId
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: documentNumber
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: periodControl
          in: query
          required: false
          schema:
            type: string
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: periodEndDate
          in: query
          required: false
          schema:
            type: string
        - name: periodStartDate
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayRegisterGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayRegisterGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayRegisterGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayRegisterGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayRegisterGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PayRegisterGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayRegisterGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayRegisterGet500Response'
  /payroll/v1/paygroup-payperiods:
    get:
      tags:
        - PayGroupPayPeriod
      summary: Get PayGroup PayPeriods
      operationId: PayGroupPayPeriod_GetPayGroupPayPeriod
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: payDateSeq
          in: query
          required: false
          schema:
            type: integer
        - name: periodEndDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: periodStartDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: startPerControl
          in: query
          required: false
          schema:
            type: string
        - name: endPerControl
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriodResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/PayGroupPayPeriodGetPayGroupPayPeriod500Response
  /configuration/v1/organization-reporting-category:
    get:
      tags:
        - Organization Reporting Category
      summary: Get Organization Reporting Category
      operationId: OrganizationReportingCategory_get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReportingCategoryGetResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet404Response
        '429':
          description: '429'
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet429Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet429Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet429Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet429Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet429Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/OrganizationReportingCategoryGet500Response
  /payroll/v1/payroll-deductions-history:
    get:
      tags:
        - PayrollDeductionsHistory
      summary: Get Payroll Deductions History
      operationId: PayrollDeductionsHistory_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Payroll Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: checkId
          in: query
          required: false
          schema:
            type: string
        - name: employeeNumber
          in: query
          required: false
          schema:
            type: string
        - name: deductionCode
          in: query
          required: false
          schema:
            type: string
        - name: deductionType
          in: query
          required: false
          schema:
            type: string
        - name: benefitOption
          in: query
          required: false
          schema:
            type: string
        - name: benefitProvider
          in: query
          required: false
          schema:
            type: string
        - name: payGroup
          in: query
          required: false
          schema:
            type: string
        - name: periodControl
          in: query
          required: false
          schema:
            type: string
        - name: payDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: is401K
          in: query
          required: false
          schema:
            type: string
        - name: is403B
          in: query
          required: false
          schema:
            type: string
        - name: is408K
          in: query
          required: false
          schema:
            type: string
        - name: is408P
          in: query
          required: false
          schema:
            type: string
        - name: is457
          in: query
          required: false
          schema:
            type: string
        - name: is457B
          in: query
          required: false
          schema:
            type: string
        - name: is457F
          in: query
          required: false
          schema:
            type: string
        - name: is501C
          in: query
          required: false
          schema:
            type: string
        - name: isD125
          in: query
          required: false
          schema:
            type: string
        - name: isDeductionOffSet
          in: query
          required: false
          schema:
            type: string
        - name: isDeferredCompensation
          in: query
          required: false
          schema:
            type: string
        - name: isDependentCare
          in: query
          required: false
          schema:
            type: string
        - name: isHousing
          in: query
          required: false
          schema:
            type: string
        - name: isNonQualifiedPlan
          in: query
          required: false
          schema:
            type: string
        - name: startPerControl
          in: query
          required: false
          schema:
            type: string
        - name: endPerControl
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayrollDeductionsHistoryGet500Response'
  /personnel/v1/platform-configuration-fields/class-name/{className}:
    get:
      tags:
        - v1 PlatformConfigurationCustomFieldsData
      summary: Platform Configuration Fields Data v1
      operationId: PcFieldsData_GetFieldsData
      description: "Returns information about the UKG Pro Platform Configuration Custom Fields Data. Specifically, each of a classes' custom fields and their respective values. The keyNames, keyValues, employment status, and fields vary and are dependent on the class in question. Classes marked '(not emp specific)' in the list below will not work with the employmentStatus parameter.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />\r\n1. Address<br />\r\n2. Person<br />\r\n3. PersonName<br />\r\n4. Employee<br />\r\n5. PhoneNumber<br />\r\n6. Employment<br />\r\n7. InternationalEmployee<br />\r\n8. ComponentCompany - (not emp specific)<br />\r\n9. Location - (not emp specific)<br />\r\n10. Job -(not emp specific)<br />\r\n11. OrgLevel1 - (not emp specific)<br />\r\n12. OrgLevel2 - (not emp specific)<br />\r\n13. OrgLevel3 - (not emp specific)<br />\r\n14. OrgLevel4 - (not emp specific)."
      parameters:
        - description: >-
            The name of a supported class, as listed above, to pull custom
            fields from.
          name: className
          in: path
          required: true
          schema:
            type: string
        - description: >-
            Optional keyName to allow filtering results by the corresponding
            keyValue. keyNames are specific IDs that apply to the class in
            question.
          name: keyName
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Optional keyValue. Allows filtering results to only include a
            specific keyValue(s). keyValues correspond to a supplied keyName.
          name: keyValue
          in: query
          required: false
          schema:
            type: string
        - description: >-
            The exact name of a custom field or fields in a comma seperated
            list. Filters results to only fields with those names.
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Use in junction with employment specific queries to filter custom
            field results by an internal employment status.
          name: employmentStatus
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Offsets results. Used with page number to allow filtering results to
            a specific range of custom fields.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - description: >-
            Offsets results. Used with page to allow filtering results to a
            specific range of custom fields.
          name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsDataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData200Response'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataGetFieldsData500Response'
  /personnel/v2/platform-configuration-fields/class-name/{className}:
    get:
      tags:
        - v2 PlatformConfigurationCustomFieldsData
      summary: Platform Configuration Fields Data v2
      operationId: PCFieldsDataV2_GetFieldsData
      description: "This API is similar to the v1 Platform Configuration Fields className API with added support of filtering data by KeyValue. The fields and keyValues are dependent on the class in question - expected key values are listed along with the supported classes below.<br /> \r\nThis API uses pre-defined Views in the UKG Pro database to retrieve the data whereas the v1 version of this API uses functions to retrieve the data.<br />UKG Pro service account must have \"View\" role for the \"Personnel Integration\" Web Service.<br /><b>Supported classes</b>:<br />\r\n1. Address (takes value of an employee Id as keyValue)<br />\r\n2. Person (takes value of an employee Id as keyValue)<br />\r\n3. Employee (takes value of an employee Id as keyValue)<br />\r\n4. PhoneNumber (takes value of an employee Id as keyValue)<br />\r\n5. Employment (takes value of an employee Id and a company code as keyValue. Accepted format for keyValue <b>employeeId:companyCode</b>)<br />\r\n6. Location (takes value of a location code as keyValue)<br />\r\n7. Job (takes value of a job code as keyValue)<br />\r\n8. OrgLevel1 (takes value of an org code as keyValue)<br />\r\n9. OrgLevel2 (takes value of an org code as keyValue)<br />\r\n10. OrgLevel3 (takes value of an org code as keyValue)<br />\r\n11. OrgLevel4 (takes value of an org code as keyValue)<br />\r\n12. InternationalEmployee (takes value of an employee Id and a country code as keyValue. Accepted format for keyValue <b>employeeId:countryCode</b>)<br />\r\n13. Contacts (takes value of a SystemId as keyValue)<br /><br /><b>Classes NOT supported</b>:<br />\r\n1. ComponentCompany<br />\r\n2. PersonNames (fields of this class are available in class Person)<br />"
      parameters:
        - description: >-
            The name of a supported class, as listed above, to pull custom
            fields from.
          name: className
          in: path
          required: true
          schema:
            type: string
        - description: >-
            The exact name of a custom field or fields in a comma seperated
            list. Filters results to only fields with those names.
          name: fields
          in: query
          required: false
          schema:
            type: string
        - description: >-
            keyValue to filter results by, allowing filtering by specific Ids.
            This value is dependent on the className, as listed in the
            implementation notes.
          name: keyValue
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Offsets results. Used with page number to allow filtering results to
            a certain range of custom fields.
          name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - description: >-
            Offsets results. Used with page to allow filtering results to a
            certain range of custom fields.
          name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsDataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData200Response'
        '404':
          description: NotFound
        '500':
          description: Invalid ClassName or any other Exceptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PcFieldsDataV2GetFieldsData500Response'
  /personnel/v1/person-details:
    get:
      tags:
        - PersonDetails
      summary: Get all person details
      operationId: PersonDetails_getAllDetails
      description: >
        Get all person details.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /person-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /person-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /person-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /person-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          name: dateOfCobraEvent
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find person record created less than, greater than, equal
            to, or between passed date(s)
          name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find person record changed less than, greater than, equal
            to, or between passed date(s)
          name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: nationalId
          in: query
          required: false
          schema:
            type: string
        - name: nationalIdCountry
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails200Response'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetAllDetails500Response'
  /personnel/v1/companies/{companyId}/person-details:
    get:
      tags:
        - PersonDetails
      summary: Get all person details for a single company
      operationId: PersonDetails_getSingleCompanyDetails
      description: >
        Get all person details for a single company.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /companies/{companyId}/person-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          name: dateOfCobraEvent
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find person record created less than, greater than, equal
            to, or between passed date(s)
          name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find person record changed less than, greater than, equal
            to, or between passed date(s)
          name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: nationalId
          in: query
          required: false
          schema:
            type: string
        - name: nationalIdCountry
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetailsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails200Response
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/PersonDetailsGetSingleCompanyDetails500Response
  /personnel/v1/companies/{companyId}/employees/{employeeId}/person-details:
    get:
      tags:
        - PersonDetails
      summary: Get a single person detail record for a single company
      operationId: PersonDetails_getSingleRecord
      description: >
        Get a single person detail record for a single company.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: emailAddress
          in: query
          required: false
          schema:
            type: string
        - name: addressState
          in: query
          required: false
          schema:
            type: string
        - name: addressCountry
          in: query
          required: false
          schema:
            type: string
        - name: cobraIsActive
          in: query
          required: false
          schema:
            type: string
        - name: cobraStatus
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find date of COBRA event less than, greater than, equal to,
            or between passed date(s)
          name: dateOfCobraEvent
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find person record created less than, greater than, equal
            to, or between passed date(s)
          name: dateTimeCreated
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Used to find person record changed less than, greater than, equal
            to, or between passed date(s)
          name: dateTimeChanged
          in: query
          required: false
          schema:
            type: string
        - name: nationalId
          in: query
          required: false
          schema:
            type: string
        - name: nationalIdCountry
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecordResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord200Response'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PersonDetailsGetSingleRecord500Response'
  /personnel/v1/person-details/{employeeId}:
    get:
      tags:
        - PersonDetails
      summary: Get a single person detail record
      operationId: PersonDetails_getSingleDetailRecord
      description: >
        Get a single person detail record.

        If no pagination parameters specified, the default/max is applied.

        Permissions - UKG Pro service account must have "View" role for the
        "Employee Person Details" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).

        Correct syntax when using date-time parameters are as follows:

        <ul>

        <li>less than (=<)
          <ul>
          <li>Example: /person-details/{employeeId}?dateTimeCreated=<01-01-1900</li>
          </ul>
          </li>
        <li>greater than (=>)
          <ul>
          <li>Example: /person-details/{employeeId}?dateTimeCreated=>01-01-1900</li>
          </ul>
          </li>
        <li>equal to (=)
          <ul>
          <li>Example: /person-details/{employeeId}?dateTimeCreated=01-01-1900</li>
          </ul>
          </li>
        <li>between (={minimum date,maximum date})
          <ul>
          <li>Example: /person-details/{employeeId}?dateTimeCreated={01-01-1900,01-01-1901}</li>
          </ul>
          </li>
        </ul>
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            application/xml:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
            text/xml:
              schema:
                $ref: '#/components/schemas/EmpPersonDetails'
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /services/payroll/v1/import-pay-items/earnings:
    post:
      tags:
        - Earnings
      summary: Add UKG Pro time clock data
      operationId: Earnings_addTimeClockData
      security:
        - basicAuth: []
      parameters:
        - name: X-Correlation-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: US-Client-Id
          in: header
          required: true
          schema:
            type: string
        - description: >-
            failAllOnRequest, evaluating this to true will cause the entire
            request to fail given any errors, otherwise valid earnings will be
            staged for import.
          in: query
          name: failAllOnRequest
          schema:
            type: boolean
            default: true
      requestBody:
        description: Add earnings from WFM for the purpose of processing payroll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EarningsAddTimeClockDataRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsAddTimeClockDataResponse'
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorStatusResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /services/payroll/v1/import-pay-items/earnings/{refId}:
    delete:
      tags:
        - Earnings
      summary: Delete a earning
      operationId: Earnings_deleteEarning
      security:
        - basicAuth: []
      parameters:
        - name: X-Correlation-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: US-Client-Id
          in: header
          required: true
          schema:
            type: string
        - description: Earning unique Identifier for earning
          in: path
          name: refId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
        '405':
          description: Method not allowed
    get:
      tags:
        - Earnings
      summary: Get status details for specified earning
      operationId: Earnings_getStatusDetails
      security:
        - basicAuth: []
      parameters:
        - name: X-Correlation-Id
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: US-Client-Id
          in: header
          required: true
          schema:
            type: string
        - description: Earning unique Identifier for earning
          in: path
          name: refId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Sucess
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningStatusResponse'
        '404':
          description: Not Found
  /configuration/v1/platform-configuration/custom-fields-schema:
    get:
      tags:
        - PlatformConfigurationCustomFieldsSchema
      summary: Gets Platform Configuration standard classes custom fields schema
      operationId: PcSchema_GetFieldsSchema
      description: >-
        Gets Platform Configuration standard classes custom fields schema info
        from the MetaDocument table. <br /> UKG Pro service account must have
        "View" role for the "Company Configuration Integration" Web Service.
      parameters:
        - name: className
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema
        '404':
          description: NotFound
        '500':
          description: InternalServerError
  /personnel/v1/position-report:
    get:
      tags:
        - PositionReport
      summary: Get Position Report
      operationId: PositionReport_Get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: positionCode
          in: query
          required: false
          schema:
            type: string
        - name: reportsToPositionCode
          in: query
          required: false
          schema:
            type: string
        - name: effectiveStartDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: effectiveStopDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionReportGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionReportGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PositionReportGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PositionReportGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PositionReportGet200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionReportGet404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionReportGet404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PositionReportGet404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PositionReportGet404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PositionReportGet404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionReportGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionReportGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PositionReportGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PositionReportGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PositionReportGet500Response'
  /configuration/v1/positions:
    get:
      tags:
        - Positions
      summary: >-
        Returns list of employee position information filtered on various
        parameters
      operationId: Positions_listFiltered
      description: |
        If no pagination parameters specified, the default/max is applied.
          Permissions - UKG Pro service account must have "View" role for the "Company Configuration Integration" Api endpoints. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}).</br></br>


           /configuration/v1/position endpoint can take following optional parameter:
          <ul>
            <li>
            companyId :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            employeeType :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            payGroupCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            statusCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            positionCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
             <li>
            projectCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
              <li>
            shiftGroupCode :- Can take in multiple IDs separated by comma. ex: [id1, id2]
            </li>
            <li>
            isProrated
            </li>
            <li>
            isApproved
            </li>
             <li>
            isEligibleForBenefits
          </li>
         <ul><br/>

         Correct syntax when using parameters are as follows:
          <ul>
            <li>Get positions without parameter
            <ul>
            <li>Example: /configuration/v1/positions
            </ul>
            </li>
            <li>Get positions by single companyid
            <ul>
            <li>Example: /configuration/v1/positions?companyid={companyid}</li>
            </ul>
            </li>
          <li>Get positions by multiple companyid
            <ul>
            <li>Example: /configuration/v1/positions?companyid=[companyid1,companyid2]</li>
            </ul>
            </li>
            <li>Get positions by positionsCode
            <ul>
            <li>Example: configuration/v1/positions?positionCode={positionCode}</li>
            </ul>
            </li>
            <li>Get positions by isEligibleForBenefits
            <ul>
            <li>Example: configuration/v1/positions?isEligibleForBenefits={isEligibleForBenefit}</li>
            </ul>
            </li>
            <li>Get positions by employeeType
            <ul>
            <li>Example: configuration/v1/positions?employeeType={employeeType}</li>
            </ul>
            </li>
            <li>Get positions by statusCode
            <ul>
            <li>Example: configuration/v1/positions?statusCode={statusCode}</li>
            </ul>
            </li>
            <li>Get positions by shiftGroupCode
            <ul>
            <li>Example: configuration/v1/positions?shiftGrouptCode={shiftGrouptCode}</li>
            </ul>
            </li>
             <li>Get positions by using all parameter
            <ul>
            <li>Example: configuration/v1/positions?isApproved={isApproved}&employeeType={employeeType}&shiftGroupCode={shiftGroupCode}&isEligibleForBenefits={isEligibleForBenefits}&isProrated={isProrated}&statusCode={statusCode}&payGroupCode={payGroup}&positionCode={positionCode}&projectCode={projectCode}&companyId={companyId}&page={page}&per_Page={per_Page}</li>
            </ul>
            </li>

          </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeType
          in: query
          required: false
          schema:
            type: string
        - name: statusCode
          in: query
          required: false
          schema:
            type: string
        - name: payGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: positionCode
          in: query
          required: false
          schema:
            type: string
        - name: projectCode
          in: query
          required: false
          schema:
            type: string
        - name: shiftGroupCode
          in: query
          required: false
          schema:
            type: string
        - name: isProrated
          in: query
          required: false
          schema:
            type: boolean
        - name: isApproved
          in: query
          required: false
          schema:
            type: boolean
        - name: isEligibleForBenefits
          in: query
          required: false
          schema:
            type: boolean
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsListFilteredResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered404Response'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered429Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered429Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered429Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered429Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered429Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PositionsListFiltered500Response'
  /personnel/v1/pto-plans:
    get:
      tags:
        - Get All PTO Plans
      summary: Get all pto-plans
      operationId: GetAllPtoPlans_information
      description: >
        Returns information about an UltiPro employees PTO Plans. Permissions -
        Ultipro service account must have "View" role for the "PTO Plan
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password}).
      parameters:
        - description: Pagination, which page you want to see
          name: page
          in: query
          required: false
          schema:
            type: number
        - description: Pagination, how many records per page you want to see
          name: per_page
          in: query
          required: false
          schema:
            type: number
            minLength: 1
            maxLength: 200
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPtoPlansInformationResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GetAllPtoPlansInformation200Response'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    post:
      tags:
        - PTO Plan Post
      summary: Create A PTO Plan
      operationId: PtoPlanPost_ultiproRecord
      description: >
        Creates a new UltiPro PTO plan record. Array of objects is permitted for
        multi-records support. Work Flow or Approvers is not supported.
        Permissions - Ultipro service account must have "Add" role for the "PTO
        Plan Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      requestBody:
        description: The pto-plan to be written
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pto-plans-body'
        required: true
      responses:
        '207':
          description: Multi-Status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/MultiStatusResponse'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/companies/{companyId}/employees/{employeeId}/pto-plans/{ptoPlan}:
    patch:
      tags:
        - PTO Plan Patch
      summary: Patch one PTO Plan
      operationId: PtoPlanPatch_onePtoPlan
      description: >
        Allows the ability to update one PTO Plan for an employee. Work Flow or
        Approvers is not supported. Permissions - Ultipro service account must
        have "Edit" role for the "PTO Plan Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Company Identifier
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Employee Identifier
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: PTO Plan Identifier
          name: ptoPlan
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: The pto-plan to be written
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/pto-plans'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pto-plans'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/pto-plans'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
    get:
      tags:
        - Get Specific PTO Plan
      summary: Get a specific pto-plan
      operationId: GetSpecificPtoPlan_info
      description: >
        Returns information about an UltiPro employees PTO Plans. Work flow or
        Approvers is not supported. Permissions - Ultipro service account must
        have "View" role for the "PTO Plan Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Company Identifier
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Employee Identifier
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: PTO Plan Identifier
          name: ptoPlan
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpecificPtoPlanInfoResponse'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GetSpecificPtoPlanInfo200Response'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/companies/{companyId}/employees/{employeeId}/pto-plans:
    get:
      tags:
        - Get Specific Employees PTO Plans
      summary: Get a specific employees pto-plans
      operationId: GetSpecificEmployeesPtoPlans_info
      description: >
        Returns information about an UltiPro employees PTO Plans. Permissions -
        Ultipro service account must have "View" role for the "PTO Plan
        Integration" Web Service. Headers - US-Customer-Api-Key, Authorization
        (base64 encoded {username}:{password}).
      parameters:
        - description: Company Identifier
          name: companyId
          in: path
          required: true
          schema:
            type: string
        - description: Employee Identifier
          name: employeeId
          in: path
          required: true
          schema:
            type: string
        - description: Pagination, which page you want to see
          name: page
          in: query
          required: false
          schema:
            type: number
        - description: Pagination, how many records per page you want to see
          name: per_page
          in: query
          required: false
          schema:
            type: number
            minLength: 1
            maxLength: 200
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSpecificEmployeesPtoPlansInfoResponse'
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/GetSpecificEmployeesPtoPlansInfo200Response
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /configuration/v1/roles:
    get:
      tags:
        - RolesGet
      summary: Gets Roles from security roles table
      operationId: RolesGet_securityRoles
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Company Configuration Integration\" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: rolName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
            text/json:
              schema:
                $ref: '#/components/schemas/Roles'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Roles'
            application/xml:
              schema:
                $ref: '#/components/schemas/Roles'
            text/xml:
              schema:
                $ref: '#/components/schemas/Roles'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRolesResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/RolesGetSecurityRoles500Response'
  /configuration/v1/shift-codes:
    get:
      tags:
        - ShiftCode
      summary: Shift Codes API Data
      operationId: ShiftCode_getData
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Company Configuration Integration\" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetDataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData404Response'
        '429':
          description: '429'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData429Response'
            text/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData429Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData429Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData429Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData429Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/ShiftCodeGetData500Response'
  /configuration/v1/tax-groups:
    get:
      tags:
        - Tax Groups
      summary: Get all tax group details
      operationId: TaxGroups_getAllDetails
      description: >-
        taxCalcGroupIdCode optional parameter can take in multiple IDs separated
        by comma. ex: [id1, id2] and taxGroupIsInactive is also optional.
        Permissions - UKG Pro service account must have 'View' role for the
        'Company Configuration Integration' Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password})
      parameters:
        - name: taxCalcGroupIdCode
          in: query
          required: false
          schema:
            type: string
        - name: taxGroupIsInactive
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails404Response'
        '429':
          description: '429'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails429Response'
            text/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails429Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails429Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails429Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails429Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxGroupsGetAllDetails500Response'
  /talent/recruiting/v2/third-party-job-board-integrations/{integrationId}/postings:
    get:
      tags:
        - Get Job Postings
      summary: Get job postings
      operationId: GetJobPostings_details
      description: >
        The Job Postings API returns detailed information about jobs in UltiPro
        Recruiting such as title, description, compensation, available
        locations, company, talent factors like skills, work experience,
        education, licenses, behaviors and motivations, the published date, and
        the url to the job on UltiPro's Recruiting. Consumers should iterate
        through the pages until no more records are returned.


        The "company" property contains "name" and "doing_business_as", if the
        company name needs to be publicly exposed, the "doing_business_as" name
        should be used. Some properties may have several translations available,
        the possible language codes are: en_us, en_gb, es_es, fr_ca, de_de, and
        pr_br.
      parameters:
        - description: >
            A unique integration id provided by Ultimate Software to the Partner
            during the integration registration process.
          name: integrationId
          in: path
          required: true
          schema:
            type: string
        - description: Pagination page number
          name: page
          in: query
          required: false
          schema:
            type: number
        - description: Pagination amount of records per page to display
          name: per_page
          in: query
          required: false
          schema:
            type: number
            default: 30
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postings'
            application/xml:
              schema:
                $ref: '#/components/schemas/postings'
            application/vnd.ultimatesoftware+json:
              schema:
                $ref: '#/components/schemas/postings'
            application/vnd.ultimatesoftware+xml:
              schema:
                $ref: '#/components/schemas/postings'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests (Exceeded Rate Limit)
  /personnel/v1/user-details:
    get:
      tags:
        - UserDetails
      summary: Get User Details
      operationId: UserDetails_GetUserDetails
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})
      parameters:
        - name: userName
          in: query
          required: false
          schema:
            type: string
        - name: userStatus
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetailsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails200Response'
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails404Response'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails404Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails404Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails404Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails404Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserDetailsGetUserDetails500Response'
  /personnel/v1/user-preferences:
    get:
      tags:
        - User Preferences
      summary: Get User Preferences Details
      operationId: UserPreferences_getUserPreferencesDetails
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Personnel Integration\" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: userID
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetailsResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails404Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserPreferencesGetUserPreferencesDetails500Response
  /simpleschedule/activities:
    get:
      tags:
        - Activities
      summary: Obtains all activities.
      operationId: Activities_getAll
      description: Obtains all activities.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoActivityDto'
  /simpleschedule/assigned_holidays:
    get:
      tags:
        - Assigned Holidays
      summary: Obtains all assigned holidays.
      operationId: AssignedHolidays_getAll
      description: >-
        Obtains all assigned holidays for a given employee.  Employee can be
        specified by their emp_name or emp_id.  At least one parameter must be
        specified.
      parameters:
        - name: emp_name
          in: query
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Start range for holidays
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: End range for holidays
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoHolidayDto'
  /simpleschedule/employee_jobs:
    get:
      tags:
        - Employee Jobs
      summary: Obtains all jobs for an employee.
      operationId: EmployeeJobs_getAll
      description: >-
        Obtains all jobs for an employee.  Employee can be specified by their
        emp_name or emp_id.  At least one parameter must be specified.
      parameters:
        - name: emp_name
          in: query
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoEmployeeJobDto'
  /simpleschedule/employees:
    get:
      tags:
        - Employees
      summary: Obtains all employees.
      operationId: Employees_getAll
      description: Obtains all employees which have been setup for scheduling.
      parameters:
        - description: Index when paging is to be used.
          name: index
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Max elements per page
          name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoEmployeeDto'
  /simpleschedule/hour_types:
    get:
      tags:
        - Hour Types
      summary: Obtains all hour types.
      operationId: HourTypes_obtainAll
      description: Obtains all hour types.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoHourTypeDto'
  /simpleschedule/schedule_details:
    put:
      tags:
        - Schedule Details
      summary: Publish schedule details.
      operationId: ScheduleDetails_publishDetails
      description: >-
        Publish schedule details. Returns a multi-status messages based on
        detail validation.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishScheduleDetailDto'
      responses:
        '207':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleDetailsPublishDetailsResponse'
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseStatusDto'
  /simpleschedule/teams:
    get:
      tags:
        - Teams
      summary: Obtains all teams.
      operationId: Teams_getAll
      description: Obtains all teams.
      parameters:
        - description: Index when paging is to be used.
          name: index
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: Max elements per page
          name: max
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoWorkbrainTeamDto'
  /simpleschedule/time_codes:
    get:
      tags:
        - Time Codes
      summary: Obtains all time codes.
      operationId: TimeCodes_getAll
      description: Obtains all time codes.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoTimeCodeDto'
  /simpleschedule/timeoff_requests:
    get:
      tags:
        - Time Off Requests
      summary: Obtains all time off requests.
      operationId: TimeOffRequests_getAll
      description: Obtains all time off requests between the specified range.
      parameters:
        - name: emp_name
          in: query
          required: false
          schema:
            type: string
        - name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Start range for requests
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: End range for requests
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoTimeOffRequestDto'
  /simpleschedule/{coid}/employees/{eeid}:
    get:
      tags:
        - UTA Employee
      summary: Obtains a UTA Employee by coId and eeId.
      operationId: UtaEmployee_getByCoIdAndEeId
      parameters:
        - description: coid of employee.
          in: path
          name: coid
          required: true
          schema:
            type: string
        - description: eeid of employee.
          in: path
          name: eeid
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResultDtoEmployeeDto'
  /allergy/{code}:
    put:
      tags:
        - allergy
      summary: Update a single allergy configuration
      operationId: Allergy_updateSingleConfiguration
      description: |
        'Allows the ability update a single allergy configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /awardType/{code}:
    put:
      tags:
        - awardType
      summary: Update a single awardType configuration
      operationId: AwardType_updateConfiguration
      description: |
        'Allows the ability update a single awardType configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /careerProvider/{code}:
    put:
      tags:
        - careerProvider
      summary: Update a single careerProvider configuration
      operationId: CareerProvider_updateConfiguration
      description: |
        'Allows the ability update a single careerProvider configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /childSupportType/{code}:
    put:
      tags:
        - childSupportType
      summary: Update a single childSupportType configuration
      operationId: ChildSupportType_updateConfiguration
      description: |
        'Allows the ability update a single childSupportType configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /cobraStatus/{code}:
    put:
      tags:
        - cobraStatus
      summary: Update a single cobraStatus configuration
      operationId: CobraStatus_updateSingleConfiguration
      description: |
        'Allows the ability update a single cobraStatus configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /companyProperty/{code}:
    put:
      tags:
        - companyProperty
      summary: Update a single companyProperty configuration
      operationId: CompanyProperty_updateConfiguration
      description: |
        'Allows the ability update a single companyProperty configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseCategory/{code}:
    put:
      tags:
        - courseCategory
      summary: Update a single courseCategory configuration
      operationId: CourseCategory_updateConfiguration
      description: |
        'Allows the ability update a single courseCategory configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseDeliveryMet/{code}:
    put:
      tags:
        - courseDeliveryMet
      summary: Update a single courseDeliveryMet configuration
      operationId: CourseDeliveryMet_updateConfiguration
      description: |
        'Allows the ability update a single courseDeliveryMet configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseSubCategory/{code}:
    put:
      tags:
        - courseSubCategory
      summary: Update a single courseSubCategory configuration
      operationId: CourseSubCategory_updateConfiguration
      description: |
        'Allows the ability update a single courseSubCategory configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /disability/{code}:
    put:
      tags:
        - disability
      summary: Update a single disability configuration
      operationId: Disability_updateConfiguration
      description: |
        'Allows the ability update a single disability configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /employeeType/{code}:
    put:
      tags:
        - employeeType
      summary: Update a single employeeType configuration
      operationId: EmployeeType_updateConfiguration
      description: |
        'Allows the ability update a single employeeType configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /jobFamily/{code}:
    put:
      tags:
        - jobFamily
      summary: Update a single jobFamily configuration
      operationId: JobFamily_updateConfiguration
      description: |
        'Allows the ability update a single jobFamily configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /licenseType/{code}:
    put:
      tags:
        - licenseType
      summary: Update a single licenseType configuration
      operationId: LicenseType_updateConfiguration
      description: |
        'Allows the ability update a single licenseType configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /loanType/{code}:
    put:
      tags:
        - loanType
      summary: Update a single loanType configuration
      operationId: LoanType_updateConfiguration
      description: |
        'Allows the ability update a single loanType configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /maritalStatus/{code}:
    put:
      tags:
        - maritalStatus
      summary: Update a single maritalStatus configuration
      operationId: MaritalStatus_updateConfiguration
      description: |
        'Allows the ability update a single maritalStatus configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryBranches/{code}:
    put:
      tags:
        - militaryBranches
      summary: Update a single militaryBranches configuration
      operationId: MilitaryBranches_updateConfiguration
      description: |
        'Allows the ability update a single militaryBranches configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryEra/{code}:
    put:
      tags:
        - militaryEra
      summary: Update a single militaryEra configuration
      operationId: MilitaryEra_updateConfiguration
      description: |
        'Allows the ability update a single militaryEra configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /namePrefix/{code}:
    put:
      tags:
        - namePrefix
      summary: Update a single namePrefix configuration
      operationId: NamePrefix_updateConfiguration
      description: |
        'Allows the ability update a single namePrefix configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /otherPhoneTypes/{code}:
    put:
      tags:
        - otherPhoneTypes
      summary: Update a single otherPhoneTypes configuration
      operationId: OtherPhoneTypes_updateConfiguration
      description: |
        'Allows the ability update a single otherPhoneTypes configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /project/{code}:
    put:
      tags:
        - project
      summary: Update a single project configuration
      operationId: Project_updateConfiguration
      description: |
        'Allows the ability update a single project configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /school/{code}:
    put:
      tags:
        - school
      summary: Update a single school configuration
      operationId: School_updateConfiguration
      description: |
        'Allows the ability update a single school configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skillProficiencyLevel/{code}:
    put:
      tags:
        - skillProficiencyLevel
      summary: Update a single skillProficiencyLevel configuration
      operationId: SkillProficiencyLevel_updateConfiguration
      description: >
        'Allows the ability update a single skillProficiencyLevel
        configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skills/{code}:
    put:
      tags:
        - skills
      summary: Update a single skills configuration
      operationId: Skills_updateConfiguration
      description: |
        'Allows the ability update a single skills configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /termType/{code}:
    put:
      tags:
        - termType
      summary: Update a single termType configuration
      operationId: TermType_updateConfiguration
      description: |
        'Allows the ability update a single termType configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /waiveReason/{code}:
    put:
      tags:
        - waiveReason
      summary: Update a single waiveReason configuration
      operationId: WaiveReason_updateSingleConfiguration
      description: |
        'Allows the ability update a single waiveReason configuration.'
      parameters:
        - description: Project code.
          name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /personnel/v1/user-profile-details:
    get:
      tags:
        - User Profile Details
      summary: Get all user profile details
      operationId: UserProfileDetails_getAllDetails
      description: >-
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have \"View\" role for the
        \"Personnel Integration\" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password}).
      parameters:
        - name: masterCompany
          in: query
          required: false
          schema:
            type: string
        - name: userStatus
          in: query
          required: false
          schema:
            type: string
        - name: userId
          in: query
          required: false
          schema:
            type: string
        - name: roleId
          in: query
          required: false
          schema:
            type: string
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9,]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDetailsGetAllDetailsResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails200Response
        '404':
          description: NotFound
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails404Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails404Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails404Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails404Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails404Response
        '429':
          description: '429'
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails429Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails429Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails429Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails429Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails429Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserProfileDetailsGetAllDetails500Response
  /time/clock_transactions:
    get:
      tags:
        - time
      summary: Get processed clock transactions.
      operationId: Time_getProcessedTransactions
      description: Obtain all processed clock transactions for a given date.
      parameters:
        - description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          name: emp_name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Date of clock transaction
          name: date
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoClockTransactionDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /time/pending_clock_transactions:
    get:
      tags:
        - time
      summary: Get pending clock transactions.
      operationId: Time_getPendingTransactions
      description: Obtain all pending clock transactions.
      parameters:
        - description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          name: emp_name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResultDtoClockTransactionDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /time/work_summaries:
    get:
      tags:
        - time
      summary: Obtain work summaries.
      operationId: Time_getWorkSummaries
      description: Obtain work summaries between the provided date range.
      parameters:
        - description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          name: emp_name
          in: query
          required: false
          schema:
            type: string
        - description: >-
            Employee can be specified by their emp_name or emp_id.  At least one
            parameter must be specified.
          name: emp_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Start range for work summaries
          name: from
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: End range for work summaries
          name: to
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: Specifies if both clock and work detail data should be loaded
          name: full
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - description: >-
            If specified will load only work summaries with Authorized status
            equal to true or false
          name: authStatus
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetDtoWorkSummaryDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /time/work_summary:
    get:
      tags:
        - time
      summary: Obtain a work summary.
      operationId: Time_getWorkSummaryById
      description: >-
        Obtain a work summary by the specified id.  Will load a full work
        summary (includes clock and work detail information).
      parameters:
        - description: Work Summary id
          name: workSummaryId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkSummaryDto'
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
  /personnel/v1/user-defined-fields:
    get:
      tags:
        - UserDefinedFields
      summary: Get User Defined Fields
      operationId: UserDefinedFields_get
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>CompanyId parameter can take in multiple company Ids

        separated by comma. ex: [ABC, DEF]</li> <li>EmployeeId parameter

        can take in multiple employee Ids separated by comma. ex: [ABC,

        DEF]</li> </ul>
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGetResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet200Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet200Response'
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet400Response'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet400Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet400Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet400Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet400Response'
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet500Response'
            text/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet500Response'
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet500Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet500Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGet500Response'
  /personnel/v1/companies/{companyId}/user-defined-fields:
    get:
      tags:
        - UserDefinedFields
      summary: Get User Defined Fields for single company
      operationId: UserDefinedFields_getSingleCompany
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>CompanyId parameter can take in multiple company Ids

        separated by comma. ex: [ABC, DEF]</li> <li>EmployeeId parameter

        can take in multiple employee Ids separated by comma. ex: [ABC,

        DEF]</li> </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: query
          required: false
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDefinedFieldsGetSingleCompanyResponse'
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany400Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany400Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany400Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany400Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany400Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleCompany500Response
  /personnel/v1/companies/{companyId}/employees/{employeeId}/user-defined-fields:
    get:
      tags:
        - UserDefinedFields
      summary: Get User Defined Fields for a single employee in a single company
      operationId: UserDefinedFields_getSingleEmployee
      description: >
        If no pagination parameters specified, the default/max is applied.
        Permissions - UKG Pro service account must have "View" role for the
        "Personnel Integration" Web Service. Headers - US-Customer-Api-Key,
        Authorization (base64 encoded {username}:{password})

        <ul> <li>CompanyId parameter can take in multiple company Ids

        separated by comma. ex: [ABC, DEF]</li> <li>EmployeeId parameter

        can take in multiple employee Ids separated by comma. ex: [ABC,

        DEF]</li> </ul>
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: employeeId
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-zA-Z0-9]*$
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - name: per_Page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployeeResponse
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee200Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee200Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee200Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee200Response
        '400':
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee400Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee400Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee400Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee400Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee400Response
        '500':
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee500Response
            text/json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee500Response
            application/problem+json:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee500Response
            application/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee500Response
            text/xml:
              schema:
                $ref: >-
                  #/components/schemas/UserDefinedFieldsGetSingleEmployee500Response
  /locations:
    get:
      tags:
        - locations
      summary: Retrieve all locations configurations
      operationId: Locations_getConfigurations
      description: >
        The locations endpoint returns information about the UltiPro locations
        configurations. Permissions - Ultipro service account must have "View"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: location country code.
          name: countryCode
          in: query
          required: false
          schema:
            type: string
        - description: Active status.
          name: isActive
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationsGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /jobs:
    get:
      tags:
        - jobs
      summary: Retrieve all jobs configurations
      operationId: Jobs_getAllConfigurations
      description: >
        The jobs endpoint returns information about the UltiPro jobs
        configurations. Permissions - Ultipro service account must have "View"
        role for the "Company Configuration Integration" Web Service. Headers -
        US-Customer-Api-Key, Authorization (base64 encoded
        {username}:{password}).
      parameters:
        - description: Job country code.
          name: countryCode
          in: query
          required: false
          schema:
            type: string
        - description: Active status.
          name: isActive
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobsGetAllConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /allergy:
    get:
      tags:
        - allergy
      summary: Retrieve all allergy configurations
      operationId: Allergy_configurationsGet
      description: >
        'The allergy endpoint returns information about the UKG Pro allergy
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyConfigurationsGetResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - allergy
      summary: Create a new allergy configuration
      operationId: Allergy_createConfiguration
      description: |
        'Creates a new UKG Pro allergy configuration.'
      requestBody:
        description: The allergy code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The allergy provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /awardType:
    get:
      tags:
        - awardType
      summary: Retrieve all awardType configurations
      operationId: AwardType_getAllConfigurations
      description: >
        'The awardType endpoint returns information about the UKG Pro awardType
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardTypeGetAllConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - awardType
      summary: Create a new awardType configuration
      operationId: AwardType_createConfiguration
      description: |
        'Creates a new UKG Pro awardType configuration.'
      requestBody:
        description: The awardType code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The awardType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /careerProvider:
    get:
      tags:
        - careerProvider
      summary: Retrieve all careerProvider configurations
      operationId: CareerProvider_getConfigurations
      description: >
        'The careerProvider endpoint returns information about the UKG Pro
        careerProvider configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CareerProviderGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - careerProvider
      summary: Create a new careerProvider configuration
      operationId: CareerProvider_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro careerProvider configuration.'
      requestBody:
        description: The careerProvider code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The careerProvider provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /childSupportType:
    get:
      tags:
        - childSupportType
      summary: Retrieve all childSupportType configurations
      operationId: ChildSupportType_getConfigurations
      description: >
        'The childSupportType endpoint returns information about the UKG Pro
        childSupportType configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildSupportTypeGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - childSupportType
      summary: Create a new childSupportType configuration
      operationId: ChildSupportType_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro childSupportType configuration.'
      requestBody:
        description: The childSupportType code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The childSupportType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /cobraStatus:
    get:
      tags:
        - cobraStatus
      summary: Retrieve all cobraStatus configurations
      operationId: CobraStatus_getConfigurations
      description: >
        'The cobraStatus endpoint returns information about the UKG Pro
        cobraStatus configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CobraStatusGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - cobraStatus
      summary: Create a new cobraStatus configuration
      operationId: CobraStatus_createConfiguration
      description: |
        'Creates a new UKG Pro cobraStatus configuration.'
      requestBody:
        description: The cobraStatus code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The cobraStatus provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /companyProperty:
    get:
      tags:
        - companyProperty
      summary: Retrieve all companyProperty configurations
      operationId: CompanyProperty_getConfigurations
      description: >
        'The companyProperty endpoint returns information about the UKG Pro
        companyProperty configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyPropertyGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - companyProperty
      summary: Create a new companyProperty configuration
      operationId: CompanyProperty_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro companyProperty configuration.'
      requestBody:
        description: The companyProperty code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The companyProperty provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseCategory:
    get:
      tags:
        - courseCategory
      summary: Retrieve all courseCategory configurations
      operationId: CourseCategory_getAllConfigurations
      description: >
        'The courseCategory endpoint returns information about the UKG Pro
        courseCategory configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CourseCategoryGetAllConfigurationsResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - courseCategory
      summary: Create a new courseCategory configuration
      operationId: CourseCategory_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro courseCategory configuration.'
      requestBody:
        description: The courseCategory code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The courseCategory provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseDeliveryMet:
    get:
      tags:
        - courseDeliveryMet
      summary: Retrieve all courseDeliveryMet configurations
      operationId: CourseDeliveryMet_getConfigurations
      description: >
        'The courseDeliveryMet endpoint returns information about the UKG Pro
        courseDeliveryMet configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CourseDeliveryMetGetConfigurationsResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - courseDeliveryMet
      summary: Create a new courseDeliveryMet configuration
      operationId: CourseDeliveryMet_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro courseDeliveryMet configuration.'
      requestBody:
        description: The courseDeliveryMet code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The courseDeliveryMet provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /courseSubCategory:
    get:
      tags:
        - courseSubCategory
      summary: Retrieve all courseSubCategory configurations
      operationId: CourseSubCategory_getConfigurations
      description: >
        'The courseSubCategory endpoint returns information about the UKG Pro
        courseSubCategory configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CourseSubCategoryGetConfigurationsResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - courseSubCategory
      summary: Create a new courseSubCategory configuration
      operationId: CourseSubCategory_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro courseSubCategory configuration.'
      requestBody:
        description: The courseSubCategory code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The courseSubCategory provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /disability:
    get:
      tags:
        - disability
      summary: Retrieve all disability configurations
      operationId: Disability_getConfigurations
      description: >
        'The disability endpoint returns information about the UKG Pro
        disability configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabilityGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - disability
      summary: Create a new disability configuration
      operationId: Disability_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro disability configuration.'
      requestBody:
        description: The disability code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The disability provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /employeeType:
    get:
      tags:
        - employeeType
      summary: Retrieve all employeeType configurations
      operationId: EmployeeType_getConfigurations
      description: >
        'The employeeType endpoint returns information about the UKG Pro
        employeeType configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTypeGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - employeeType
      summary: Create a new employeeType configuration
      operationId: EmployeeType_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro employeeType configuration.'
      requestBody:
        description: The employeeType code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The employeeType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /jobFamily:
    get:
      tags:
        - jobFamily
      summary: Retrieve all jobFamily configurations
      operationId: JobFamily_getAllConfigurations
      description: >
        'The jobFamily endpoint returns information about the UKG Pro jobFamily
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFamilyGetAllConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - jobFamily
      summary: Create a new jobFamily configuration
      operationId: JobFamily_createConfiguration
      description: |
        'Creates a new UKG Pro jobFamily configuration.'
      requestBody:
        description: The jobFamily code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The jobFamily provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /licenseType:
    get:
      tags:
        - licenseType
      summary: Retrieve all licenseType configurations
      operationId: LicenseType_getConfigurations
      description: >
        'The licenseType endpoint returns information about the UKG Pro
        licenseType configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseTypeGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - licenseType
      summary: Create a new licenseType configuration
      operationId: LicenseType_createConfiguration
      description: |
        'Creates a new UKG Pro licenseType configuration.'
      requestBody:
        description: The licenseType code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The licenseType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /loanType:
    get:
      tags:
        - loanType
      summary: Retrieve all loanType configurations
      operationId: LoanType_getConfigurations
      description: >
        'The loanType endpoint returns information about the UKG Pro loanType
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanTypeGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - loanType
      summary: Create a new loanType configuration
      operationId: LoanType_createConfiguration
      description: |
        'Creates a new UKG Pro loanType configuration.'
      requestBody:
        description: The loanType code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The loanType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /maritalStatus:
    get:
      tags:
        - maritalStatus
      summary: Retrieve all maritalStatus configurations
      operationId: MaritalStatus_getConfigurations
      description: >
        'The maritalStatus endpoint returns information about the UKG Pro
        maritalStatus configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaritalStatusGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - maritalStatus
      summary: Create a new maritalStatus configuration
      operationId: MaritalStatus_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro maritalStatus configuration.'
      requestBody:
        description: The maritalStatus code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The maritalStatus provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryBranches:
    get:
      tags:
        - militaryBranches
      summary: Retrieve all militaryBranches configurations
      operationId: MilitaryBranches_getAllConfigurations
      description: >
        'The militaryBranches endpoint returns information about the UKG Pro
        militaryBranches configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/MilitaryBranchesGetAllConfigurationsResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - militaryBranches
      summary: Create a new militaryBranches configuration
      operationId: MilitaryBranches_configureUkgPro
      description: |
        'Creates a new UKG Pro militaryBranches configuration.'
      requestBody:
        description: The militaryBranches code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The militaryBranches provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /militaryEra:
    get:
      tags:
        - militaryEra
      summary: Retrieve all militaryEra configurations
      operationId: MilitaryEra_getConfigurations
      description: >
        'The militaryEra endpoint returns information about the UKG Pro
        militaryEra configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MilitaryEraGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - militaryEra
      summary: Create a new militaryEra configuration
      operationId: MilitaryEra_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro militaryEra configuration.'
      requestBody:
        description: The militaryEra code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The militaryEra provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /namePrefix:
    get:
      tags:
        - namePrefix
      summary: Retrieve all namePrefix configurations
      operationId: NamePrefix_getConfigurations
      description: >
        'The namePrefix endpoint returns information about the UKG Pro
        namePrefix configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamePrefixGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - namePrefix
      summary: Create a new namePrefix configuration
      operationId: NamePrefix_configureNamePrefix
      description: |
        'Creates a new UKG Pro namePrefix configuration.'
      requestBody:
        description: The namePrefix code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The namePrefix provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /otherPhoneTypes:
    get:
      tags:
        - otherPhoneTypes
      summary: Retrieve all otherPhoneTypes configurations
      operationId: OtherPhoneTypes_getConfigurations
      description: >
        'The otherPhoneTypes endpoint returns information about the UKG Pro
        otherPhoneTypes configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OtherPhoneTypesGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - otherPhoneTypes
      summary: Create a new otherPhoneTypes configuration
      operationId: OtherPhoneTypes_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro otherPhoneTypes configuration.'
      requestBody:
        description: The otherPhoneTypes code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The otherPhoneTypes provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /project:
    get:
      tags:
        - project
      summary: Retrieve all Project configurations
      operationId: Project_getAllConfigurations
      description: >
        'The Project endpoint returns information about the UKG Pro Project
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetAllConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - project
      summary: Create a new project configuration
      operationId: Project_createConfiguration
      description: |
        'Creates a new UKG Pro project configuration.'
      requestBody:
        description: The project code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The project provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /school:
    get:
      tags:
        - school
      summary: Retrieve all school configurations
      operationId: School_getConfigurations
      description: >
        'The school endpoint returns information about the UKG Pro school
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchoolGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - school
      summary: Create a new school configuration
      operationId: School_createConfiguration
      description: |
        'Creates a new UKG Pro school configuration.'
      requestBody:
        description: The school code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The school provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skillProficiencyLevel:
    get:
      tags:
        - skillProficiencyLevel
      summary: Retrieve all skillProficiencyLevel configurations
      operationId: SkillProficiencyLevel_getAllConfigurations
      description: >
        'The skillProficiencyLevel endpoint returns information about the UKG
        Pro skillProficiencyLevel configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SkillProficiencyLevelGetAllConfigurationsResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - skillProficiencyLevel
      summary: Create a new skillProficiencyLevel configuration
      operationId: SkillProficiencyLevel_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro skillProficiencyLevel configuration.'
      requestBody:
        description: The skillProficiencyLevel code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The skillProficiencyLevel provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /skills:
    get:
      tags:
        - skills
      summary: Retrieve all skills configurations
      operationId: Skills_getConfigurations
      description: >
        'The skills endpoint returns information about the UKG Pro skills
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SkillsGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - skills
      summary: Create a new skills configuration
      operationId: Skills_createConfiguration
      description: |
        'Creates a new UKG Pro skills configuration.'
      requestBody:
        description: The skills code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The skills provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /termType:
    get:
      tags:
        - termType
      summary: Retrieve all termType configurations
      operationId: TermType_getConfigurations
      description: >
        'The termType endpoint returns information about the UKG Pro termType
        configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermTypeGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - termType
      summary: Create a new termType configuration
      operationId: TermType_createConfiguration
      description: |
        'Creates a new UKG Pro termType configuration.'
      requestBody:
        description: The termType code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The termType provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
  /waiveReason:
    get:
      tags:
        - waiveReason
      summary: Retrieve all waiveReason configurations
      operationId: WaiveReason_getConfigurations
      description: >
        'The waiveReason endpoint returns information about the UKG Pro
        waiveReason configurations.'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WaiveReasonGetConfigurationsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
    post:
      tags:
        - waiveReason
      summary: Create a new waiveReason configuration
      operationId: WaiveReason_createConfigurationUkgPro
      description: |
        'Creates a new UKG Pro waiveReason configuration.'
      requestBody:
        description: The waiveReason code to be written.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/codeObject'
        required: true
      responses:
        '200':
          description: The waiveReason provided has been created.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
components:
  parameters:
    employeeIdParam:
      in: path
      name: employeeId
      required: true
      schema:
        type: string
    idParam:
      in: path
      name: timeId
      required: true
      schema:
        type: string
        format: uuid
    xCorrelationIdParam:
      description: This value MUST be supplied by the originator, used for tracing
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
        format: uuid
    usTenantIdParam:
      in: header
      name: US-Tenant-Id
      required: true
      schema:
        type: string
        format: uuid
    usCustomerApiKeyParam:
      description: This is the API key value that is supplied to each time system
      in: header
      name: US-Customer-Api-Key
      required: true
      schema:
        type: string
    authParam:
      description: This should be in Bearer token format, the token is the shared key value
      in: header
      name: Authorization
      required: true
      schema:
        type: string
  securitySchemes:
    basicAuth:
      type: apiKey
      name: US-CUSTOMER-API-KEY
      in: header
      scheme: basic
    basic:
      description: Basic HTTP Authentication
      type: http
      name: US-CUSTOMER-API-KEY
      in: header
      scheme: basic
    BasicAuth:
      type: http
      scheme: basic
    OauthSecurity:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login-dev.ultipro.com/introspect
          tokenUrl: https://identity.mia.ucloud.int/t/ulticonnect/token
          scopes:
            recruiting.domain.third-party-job-board-integrations.auto-feed: Needed for all read requests
  schemas:
    AuditDetails:
      type: object
      properties:
        audDateTime:
          type: string
          format: date-time
        audKey1Label:
          type: string
        audKey2Label:
          type: string
        audKey3Label:
          type: string
        audKey1Value:
          type: string
        audKey2Value:
          type: string
        audKey3Value:
          type: string
        audTableName:
          type: string
        audFieldName:
          type: string
        audOldValue:
          type: string
        audNewValue:
          type: string
        audAction:
          type: string
        audSystemID:
          type: string
    BusinessRuleImportRequest:
      type: object
      properties:
        transaction:
          description: The XML Serialized transaction
          type: string
        uniqueFileName:
          description: An optionally provided unique file name
          type: string
    BusinessRuleFileUpload:
      type: object
      properties:
        dateTimeCreated:
          format: date-time
          type: string
        fileId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileName:
          type: string
    FileStatusModel:
      type: object
      properties:
        fileID:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileName:
          type: string
        fileNameUnique:
          type: string
        status:
          type: string
        fileProcessDate:
          format: date-time
          type: string
    BusinessRuleImportFileStagingStatus:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileProcessDate:
          format: date-time
          type: string
        serviceSubmittalDate:
          format: date-time
          type: string
        lastRepostDate:
          format: date-time
          type: string
        status:
          type: string
        transaction:
          type: string
        fileName:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/BusinessRuleImportMessage'
        childTransactionStatuses:
          type: array
          items:
            enum:
              - BusinessRuleImportFileStagingStatus object
            type: string
    BusinessRuleImportMessage:
      type: object
      properties:
        message:
          type: string
        severity:
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
    BusinessRuleImportFileStaging:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        dateTimeCreated:
          format: date-time
          type: string
        fileName:
          type: string
    Output:
      type: object
      properties:
        candidate:
          type: object
          items:
            $ref: '#/components/schemas/candidate'
        application:
          type: object
          items:
            $ref: '#/components/schemas/application'
        opportunity:
          type: object
          items:
            $ref: '#/components/schemas/opportunity'
        creator:
          type: object
          items:
            $ref: '#/components/schemas/creator'
    candidate:
      description: >-
        The section with details of a candidate whom the background check order
        is requested for
      type: object
      properties:
        id:
          description: >-
            The id of the candidate for whom the background check order has been
            requested.
          type: string
        created_at:
          description: The candidate creation date.
          type: string
        creator.id:
          description: The id of the person who has created the application.
          type: string
        person_id:
          description: The candidate id in the core HR system.
          type: string
        integration:
          description: >-
            The alternative user id that can be used in third-party vendors’
            integrations. Returned only for users with the “recruiter”,
            “hiring-manager”, or “recruiting-administrator” role.
          type: string
        is_internal:
          description: 'A flag indicating whether the candidate is an internal employee. '
          type: string
        is_active:
          description: >-
            A flag indicating whether the candidate is an active employee. Can
            only be specified when is_internal is true.
          type: string
        is_willing_to_relocate:
          description: 'A flag indicating whether the candidate is willing to relocate. '
          type: string
        preferred_locale:
          type: object
          properties:
            id:
              description: The id of the candidate’s preferred language.
              type: string
            code:
              description: |
                The preferred language code:
                en-US,

                en-GB,

                fr-CA,

                es-ES,

                pt-BR,

                de-DE,

                zh-CN
              type: string
        name:
          description: ''
          type: object
          items:
            $ref: '#/components/schemas/name'
        contact_info:
          type: object
          items:
            $ref: '#/components/schemas/contact_info'
        skills:
          description: An array containing candidate’s skills.
          type: array
          items:
            $ref: '#/components/schemas/skill'
        work_experience:
          type: array
          items:
            $ref: '#/components/schemas/workexperience'
        educations:
          type: array
          items:
            $ref: '#/components/schemas/educations'
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/licenses'
        behaviors:
          type: array
          items:
            $ref: '#/components/schemas/behaviors'
        motivations:
          type: array
          items:
            $ref: '#/components/schemas/motivations'
        roles:
          description: |-
            An array of  user roles associated with this candidate:

            recruiter

            hiring-manager

            onboarding-owner

            recruiting-administrator
          type: array
          items: {}
        hyperlinks:
          type: array
          items:
            $ref: '#/components/schemas/hyperlinks'
        updated_at:
          description: The last updated date.
          type: string
        org_units: {}
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    application:
      description: >-
        The section that contains details of an application which the background
        check order has been requested for
      type: object
      properties:
        id:
          description: The unique application id
          type: string
        updated_at:
          description: The application’s last updated date.
          type: string
        creator:
          type: object
          properties:
            id:
              description: 'The id of the person who has '
              type: string
        candidate:
          type: object
          properties:
            id:
              description: The id of the candidate who has applied to an opportunity.
              type: string
            is_inrernal:
              description: A flag indicating whether the candidate is an internal employee.
              type: boolean
            is_active:
              description: >-
                A flag indicating whether the candidate is an active employee.
                Can only be specified when is_internal is true.
              type: boolean
            name:
              description: >-
                The candidate name section. Captured at the moment of
                application submission. May be different from the one in the
                Candidate section
              type: object
              items:
                $ref: '#/components/schemas/name'
        opportunity:
          type: object
          properties:
            id:
              description: The id of the opportunity that the candidate has applied for.
              type: string
        job_board:
          type: object
          properties:
            id:
              description: >-
                The id of the job board on which the opportunity has been
                published to.
              type: string
        applicant_source:
          type: object
          properties:
            id:
              description: >-
                The id of the application source where the candidate has learned
                about the opportunity.
              type: string
            name:
              description: The application source name
              type: object
        job_posting:
          description: ''
          type: object
          properties:
            id:
              description: >-
                The id of a third party job board posting which the applicant is
                applying from.
              type: string
        available_start_date:
          description: The date that the candidate is available to start.
          type: string
        '':
          description: >-
            The array of candidate answers to the opportunity screening
            questions
          type: array
          items: {}
        screening_question_responses:
          type: array
          items:
            $ref: '#/components/schemas/screening_question_responses'
        country_question_responses:
          type: array
          items:
            $ref: '#/components/schemas/country_question_responses'
        applied_date:
          description: The date on which the candidate applied.
          type: string
        is_processed:
          description: The flag indicating if the application has been processed
          type: boolean
        hire_details:
          description: ''
          type: object
          properties:
            offer_date:
              description: >-
                The date on which the offer was presented to a candidate for the
                specified application Must not be before 1/1/1881 or after
                12/31/2199
              type: string
            accept_date:
              description: >-
                The date on which the offer was accepted by a candidate for the
                specified application Must not be before 1/1/1881 or after
                12/31/2199
              type: string
            hire_date:
              description: >-
                The date on which the candidate is hired for the opportunity
                associated with the specified application Must not be before
                1/1/1881 or after 12/31/2199
              type: string
            start_date:
              description: >-
                The date on which the candidate is set to start working Must not
                be before 1/1/1881 or after 12/31/2199
              type: string
            full_time_equivalent:
              description: >-
                The full time equivalent of the hire (decimal) Must be greater
                than 0 and no more than 9999999999.9999
              type: string
            compensation:
              description: ''
              type: object
              properties:
                is_fulltime:
                  description: >-
                    The flag indicating whether the applicant is full-time or
                    part-time.
                  type: string
                hours_per_week:
                  description: >-
                    The hours per week of the applicant Must not be less than 0
                    or greater than 999999999.99
                  type: string
                is_salaried:
                  description: Whether the applicant is salary or hourly
                  type: string
                pay_rate:
                  description: >-
                    The USD pay rate for the applicant If supplied, must not be
                    less than 0, greater than 99999999999999.9999, or have a
                    decimal with more than 4 digits
                  type: string
                currency:
                  type: object
                  properties:
                    code:
                      description: >-
                        Pay rate currency code. For USA it must be USD, for
                        Canada it must be CAD and for any other country it can
                        be either USD or CAD. If not provided it defaults to USD
                        for all countries except it is CAD for Canada.
                      type: string
            company:
              description: ''
              type: object
              properties:
                id:
                  description: >-
                    The id of the legal entity associated with the specified
                    application. If not specified, it will be defaulted to the
                    legal entity associated with the opportunity for the
                    application.
                  type: string
                name:
                  description: The legal entity name
                  type: string
                code:
                  description: The legal entity code
                  type: string
                doing_business_as:
                  description: The legal entity’s Doing Business As name
                  type: string
            tax_location:
              description: ''
              type: object
              properties:
                id:
                  description: >-
                    The id of the tax location associated with the legal entity
                    for the specified application
                  type: string
            hiring_manager:
              description: ''
              type: object
              properties:
                id:
                  description: >-
                    The id of the hiring manager for the opportunity associated
                    with the specified application
                  type: string
            onboarding_owner:
              description: ''
              type: object
              properties:
                id:
                  description: >-
                    The id of the onboarding owner for the opportunity
                    associated with the specified application
                  type: string
            org_units:
              description: ''
              type: object
              items:
                $ref: '#/components/schemas/org_units'
        educations:
          type: array
          items:
            $ref: '#/components/schemas/educations'
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/licenses'
        behaviors:
          type: array
          items:
            $ref: '#/components/schemas/behaviors'
        motivations:
          type: array
          items:
            $ref: '#/components/schemas/motivations'
        work_experience:
          type: array
          items:
            $ref: '#/components/schemas/workexperience'
        skills:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/skill'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    opportunity:
      description: >-
        The section that contains details of an opportunity associated with the
        candidate’s application
      type: object
      properties:
        title:
          type: object
        description:
          type: object
          properties:
            brief:
              type: object
              properties:
                externel:
                  type: object
                internal: {}
            detailed:
              type: object
              properties:
                externel:
                  type: object
                internal: {}
            eoe_text: {}
            pay_trabsparenct_text: {}
        id:
          description: The id of the opportunity associated with the candidate application.
          type: string
        updated_at: {}
        created_at: {}
        requisition_number: {}
        dedault_locale:
          type: object
          properties:
            id: {}
            code: {}
        compenasation:
          type: object
          properties:
            is_fulltime:
              type: boolean
            is_salaried:
              type: boolean
            pay_rate:
              type: number
              format: int34
            shown:
              type: string
            currency:
              type: object
              properties:
                code:
                  type: string
        job:
          type: object
          properties:
            code:
              type: string
        job_family:
          type: object
          properties:
            name:
              type: object
        locations:
          type: array
          items:
            $ref: '#/components/schemas/locations'
        company:
          type: object
          properties:
            id: {}
            name:
              type: object
            code: {}
            doing_business_as:
              type: object
        recruiter:
          type: object
        hiring_manager: {}
        onboarding_owner: {}
        recruiting_process:
          type: object
          properties:
            id: {}
        job_boards:
          type: object
          items:
            $ref: '#/components/schemas/job_boards'
        published_date: {}
        closed_date: {}
        status: {}
        is_featured: {}
        is_shared_with_everyone: {}
        internal_notes: {}
        skill_criteria:
          type: array
          items: {}
        work_experience_criteria:
          type: array
          items: {}
        education_criteria:
          type: object
          items:
            $ref: '#/components/schemas/education_criteria'
        license_criteria:
          type: array
          items: {}
        behavior_criteria:
          type: array
          items: {}
        motivation_criteria:
          type: array
          items: {}
        is_continuous_opening:
          type: boolean
        full_time_equivalent:
          type: object
          properties:
            budgeted: {}
            filled: {}
            remaining: {}
        head_count:
          type: object
          properties:
            max: {}
            hired: {}
            remaining: {}
        hours_per_week: {}
        hours_per_shift: {}
        staffing_plan_impact: {}
        target_start_date: {}
        incumbent:
          type: object
          properties:
            first_name: {}
            last_name: {}
            last_day_worked: {}
        priority: {}
        is_budgeted: {}
        opening_reason: {}
        justification_comments:
          type: array
          items: {}
        org_unit_groups:
          type: array
          items:
            $ref: '#/components/schemas/org_unit_groups'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    creator:
      description: >-
        The section that contains details of a recruiter who submitted this
        background check order.
      type: object
      properties:
        id:
          description: The id of the recruiter who created the background check order.
          type: string
        person_id:
          description: The recruiter id in the core HR system.
          type: string
        created_at:
          description: The date of this user creation date.
          type: string
        integration_user_id:
          description: >-
            The alternative user id that can be used in third-party vendors’
            integrations. Returned only for users with the “recruiter”,
            “hiring-manager”, or “recruiting-administrator” role.
          type: string
        is_internal:
          description: 'A flag indicating whether the recruiter is an internal employee. '
          type: boolean
        is_active:
          description: >-
            A flag indicating whether the recruiter is an active employee. Can
            only be specified when is_internal is true.
          type: boolean
        preferred_locale:
          type: object
          properties:
            id:
              description: The id of the recruiter’s preferred language.
              type: string
            code:
              description: |-
                The preferred language code:

                en-US

                en-GB

                fr-CA

                es-ES

                pt-BR

                de-DE

                zh-CN
              type: string
        name:
          type: object
          items:
            $ref: '#/components/schemas/name'
        contact_info:
          type: object
          items:
            $ref: '#/components/schemas/contact_info'
        roles:
          description: ''
          type: array
          items: {}
        hyperlinks:
          type: array
          items:
            $ref: '#/components/schemas/hyperlinks'
        updated_at:
          description: ''
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
        background_check_integration:
          type: object
          properties:
            id:
              description: >-
                The internal Recruiting id of the third party background check
                vendor associated with the request.
              type: string
    skill:
      description: An array containing candidate’s skills.
      type: object
      properties:
        id:
          description: 'The id of the candidate’s skill/proficiency level record '
          type: string
        skill:
          type: object
          properties:
            id:
              description: The id of a standard skill.
              type: string
            name:
              description: The name of the skill in all available languages.
              type: object
              properties:
                en_us: {}
        proficiency_level:
          type: object
          properties:
            id:
              description: The id of a standard proficiency level.
              type: string
            name:
              description: 'The proficiency level name in all available languages. '
              type: object
            ordinal_value:
              description: |-
                A numerical equivalent of proficiency_level.name:

                1 – Novice

                2 – Some Knowledge

                3 – Intermediate

                4 – Advanced

                5 – Expert
              type: number
              format: int32
    workexperience:
      description: An array containing candidate’s work experience records.
      type: object
      properties:
        description:
          description: The job description. Maximum of 2000 characters.
          type: string
        id:
          description: 'The id of the candidate’s work experience record. '
          type: string
        job_title:
          description: The job title of the experience. Maximum of 100 characters.
          type: string
        company:
          description: The company name of the experience. Maximum of 100 characters.
          type: string
        location:
          description: The job location. Maximum of 20 characters.
          type: string
        from:
          type: object
          properties:
            month:
              description: The month number of the job start date.
              type: string
            year:
              description: The year number of the job start date.
              type: string
        to:
          type: object
          properties:
            month:
              description: >-
                The month number of the job end date. Null means that the
                candidate currently works here.
              type: string
            year:
              description: >-
                The year number of the job end date. Null means that the
                candidate currently works here.
              type: string
    educations:
      description: An array containing candidate’s educations.
      type: object
      properties:
        description:
          description: The education description. Maximum of 1500 characters.
          type: string
        id:
          description: The id of the candidate’s education record.
          type: string
        degree:
          type: object
          properties:
            id:
              description: The id of the candidate’s degree.
              type: string
            name:
              description: The name of the candidate’s degree in all available languages.
              type: object
        school:
          type: object
          properties:
            id:
              description: The id of a standard school.
              type: string
            name:
              description: The candidate’s school name in all available languages.
              type: object
        major:
          type: object
          properties:
            id:
              description: The id of a standard education major.
              type: string
            name:
              description: The education major name in all available languages.
              type: object
        minor:
          type: object
          properties:
            id:
              description: The id of a standard education major
              type: string
            name:
              description: The education major name in all available languages.
              type: object
        from:
          type: object
          properties:
            month:
              description: >-
                A value between 1 and 12 of the month when the education
                started.
              type: string
            year:
              description: >-
                An integer no less than 100 years ago and no greater than the
                to.year.
              type: string
        to:
          type: object
          properties:
            month:
              description: >-
                A value between 1 and 12 of the month when the education was or
                will be finished.
              type: string
            year:
              description: >-
                An integer no less than 100 years ago and no greater than 5
                years from now.
              type: string
    licenses:
      description: >-
        An array containing candidate’s professional licenses and
        certifications.
      type: object
      properties:
        id:
          description: 'The id of the candidate’s license record. '
          type: string
        license:
          type: object
          properties:
            id:
              description: The id of one of pre-defined licenses.
              type: string
            name:
              description: The license name in all available languages. Max length of 250.
              type: object
        number:
          description: The license number. Max length of 20.
          type: string
        achieved_date:
          description: 'The date when the license was achieved. '
          type: string
        renewal_date:
          description: The date when the license was renewed.
          type: string
    behaviors:
      description: An array containing candidate’s behaviors
      type: object
      properties:
        description:
          description: The behavior description in all available languages.
          type: object
        id:
          description: The id of one of pre-defined behaviors.
          type: string
        created_at:
          description: ''
          type: string
        updated_at:
          description: ''
          type: string
        name:
          description: The behavior name in all available languages.
          type: object
        is_archived:
          description: ''
          type: boolean
    motivations:
      description: An array containing candidate’s motivations
      type: object
      properties:
        description:
          description: The motivation description in all available languages.
          type: object
        id:
          description: The id of one of pre-defined motivations.
          type: string
        name:
          description: The motivation name in all available languages.
          type: object
    hyperlinks:
      description: >-
        An array containing hyperlinks to candidate information: LinkedIn
        profile, personal web page, etc.
      type: object
      properties:
        name:
          description: The hyperlink description. Maximum of 250 characters.
          type: string
        url:
          description: The hyperlink URL.
          type: string
    links:
      description: The URL and description of the candidate resource endpoint.
      type: object
      properties:
        href:
          description: ''
          type: string
        rel:
          description: ''
          type: string
    name:
      description: ''
      type: object
      properties:
        first:
          description: The candidate’s first name. Maximum of 100 characters.
          type: string
        middle:
          description: The candidate’s middle name. Maximum of 50 characters.
          type: string
        last:
          description: The candidate’s last name. Maximum of 100 characters.
          type: string
        prefix:
          description: The candidate’s prefix.
          type: object
          properties:
            id:
              description: The candidate’s prefix id
              type: string
            name:
              description: The candidate’s prefix
              type: object
        suffix:
          description: The candidate’s suffix.
          type: object
          properties:
            id:
              description: The candidate’s suffix id
              type: string
            name:
              description: The candidate’s suffix
              type: object
    country_question_responses:
      type: object
      properties:
        question:
          type: object
          properties:
            type: {}
        response: {}
    locations:
      type: object
      properties:
        description:
          description: location description.
          type: string
        id: {}
        name: {}
        city:
          description: location City.
          type: string
        state:
          description: location State.
          type: string
          properties:
            code: {}
            name:
              type: object
              properties: {}
        country:
          type: object
          properties:
            id: {}
            code: {}
            name:
              type: object
              properties: {}
        type: {}
        countryCode:
          description: location country code.
          type: string
        locationCode:
          description: location Code, the unique identifier.
          type: string
        zipOrPostalCode:
          description: location zip or postal Code.
          type: string
        isActive:
          description: The location status.
          type: boolean
      required:
        - locationCode
        - description
    job_boards:
      type: object
      properties:
        id: {}
        is_published_internal: {}
        is_published_external: {}
        recruiting_apply_url: {}
    education_criteria:
      type: object
      properties:
        is_required: {}
        allow_related: {}
        degree:
          type: object
          properties:
            id: {}
            name:
              type: object
              properties: {}
        major:
          type: object
          properties:
            id: {}
            name:
              type: object
              properties: {}
    org_unit_groups:
      type: object
      properties:
        org_units:
          type: array
          items:
            $ref: '#/components/schemas/org_units'
    org_units:
      type: object
      properties:
        id:
          description: >-
            The id of organizational unit associated with the position the
            candidate has been hired for
          type: string
        code:
          description: The organizational unit’s code in the core HR system
          type: string
        org_level:
          type: object
          properties:
            id:
              description: The organizational unit’s level id
              type: string
            level:
              description: The organizational unit level in the company org structure
              type: string
    screening_question_responses:
      type: object
      properties:
        questions:
          type: object
          properties:
            type:
              description: >
                Candidate answers to the screening questions.Possible values for
                screening_question_responses.question.type:

                MultipleChoice


                Numeric


                Text
              type: string
            response:
              description: The screening question response
              type: string
    contact_info:
      description: ''
      type: object
      properties:
        email:
          description: The candidate’s email address.
          type: string
        phone:
          description: ''
          type: object
          properties:
            primary:
              description: The candidate’s primary phone number. Maximum of 25 characters.
              type: string
            secondary:
              description: >-
                The candidate’s secondary phone number. Maximum of 25
                characters.
              type: string
        address:
          description: ''
          type: object
          properties:
            line1:
              description: The candidate’s address line 1. Maximum of 255 characters.
              type: string
            line2:
              description: The candidate’s address line 2. Maximum of 255 characters.
              type: string
            city:
              description: The candidate’s address city. Maximum of 255 characters.
              type: string
            state:
              description: ''
              type: string
              properties:
                code:
                  description: The candidate’s state code.
                  type: string
                name:
                  type: object
                  properties:
                    en_us:
                      type: string
            postal_Code:
              description: >-
                The candidate’s postal code. Must be between 3 and 50
                characters.
              type: string
            country:
              description: The candidate’s address line 2. Maximum of 255 characters.
              type: object
              properties:
                id:
                  description: The id of the country
                  type: string
                code:
                  description: The candidate’s country code (ISO standard).
                  type: string
                name:
                  type: object
                  properties:
                    en_us:
                      type: string
    backgroundChecks:
      type: object
      required:
        - author
        - application
        - order_number
        - status
        - packages
      properties:
        author:
          type: object
          properties:
            id:
              description: The recruiter who created the order; cannot be changed.
              type: string
        application:
          type: object
          properties:
            id:
              description: The id of the corresponding application.
              type: string
        status:
          description: The status of the background check order.
          type: string
        order_number:
          description: Thebackground check order number. Maximum of 100 characters.
          type: string
        packages:
          description: An array of background check packages; at most 100.
          type: object
          required:
            - id
            - name
          properties:
            id:
              description: The id of the package.
              type: string
            name:
              description: The name of the package. Maximum of 100 characters.
              type: string
            screenings:
              description: An array of background check screenings; at most 100.
              type: array
              items:
                $ref: '#/components/schemas/screening'
        links:
          type: array
          items:
            $ref: '#/components/schemas/links'
    screening:
      type: object
      properties:
        status:
          description: The status of the screening.
          type: string
        name:
          description: >-
            The name of the background check screening. Maximum of 100
            characters.
          type: object
    badRequest:
      type: object
      properties:
        type:
          description: ''
          type: number
          format: int32
        message_code:
          description: ''
          type: string
        member_names:
          type: array
          items: {}
    CodeTablesGET:
      type: object
      properties:
        codeTable:
          type: string
        url:
          type: string
    CodeTablesPOST:
      type: object
      properties:
        description:
          type: string
        codeTable:
          type: string
        code:
          type: string
    CompanyDetails:
      type: object
      properties:
        isMasterCompany:
          description: >-
            true/false value represents if this company is a UKG Pro Master
            Company
          type: string
        masterCompanyId:
          description: 5 character value represents a UKG Pro Master CompanyID
          type: string
        companyID:
          description: 5 character value represents a UKG Pro CompanyID
          type: string
        companyCode:
          description: 5 character value represents a UKG Pro Company Code
          type: string
        companyName:
          description: Customer identified name of a UKG Pro Company
          type: string
        addressLine1:
          description: Main address line of a UKG Pro Company
          type: string
        addressLine2:
          description: Secondary address line of a UKG Pro Company
          type: string
        addressCity:
          description: Address city of a UKG Pro Company
          type: string
        addressState:
          description: Address state of a UKG Pro Company
          type: string
        addressZipCode:
          description: Address zip code of a UKG Pro Company
          type: string
        addressCountry:
          description: Address country of a UKG Pro Company
          type: string
        addressCounty:
          description: Address county of a UKG Pro Company
          type: string
        phoneNumber:
          description: Customer identified phone number of a UKG Pro Company
          type: string
        phoneNumberExtension:
          description: Phone number extension for a UKG Pro Company
          type: string
        federalTaxId:
          description: US FEIN for a UKG Pro Company
          type: string
        orgLevel1Code:
          description: Represents field defined as Org Level 1 for a UKG Pro Company
          type: string
        orgLevel2Code:
          description: Represents field defined as Org Level 2 for a UKG Pro Company
          type: string
        orgLevel3Code:
          description: Represents field defined as Org Level 3 for a UKG Pro Company
          type: string
        orgLevel4Code:
          description: Represents field defined as Org Level 4 for a UKG Pro Company
          type: string
    EmpDeductions:
      type: object
      properties:
        arrearsAmt:
          format: double
          type: number
        benefitAmount:
          format: double
          type: number
        benefitAmountCalcRule:
          type: string
        benefitAmountRateOrPercent:
          format: double
          type: number
        benefitOption:
          type: string
        benefitStartDate:
          format: date-time
          type: string
        benefitStatus:
          type: string
        benefitStatusDate:
          format: date-time
          type: string
        benefitStopDate:
          format: date-time
          type: string
        companyID:
          type: string
        customAmount1:
          format: double
          type: number
        customAmount2:
          format: double
          type: number
        customDate:
          format: date-time
          type: string
        dateSuspendedFrom:
          format: date-time
          type: string
        dateSuspendedTo:
          format: date-time
          type: string
        datetimeChanged:
          format: date-time
          type: string
        datetimeCreated:
          format: date-time
          type: string
        declinedByCarrier:
          type: string
        declinedByCarrierDate:
          format: date-time
          type: string
        declinedByCarrierReason:
          type: string
        deductionCode:
          type: string
        effectiveRecordID:
          type: string
        contactID:
          type: string
        memberOrCaseNumber:
          type: string
        employeeAmount:
          format: double
          type: number
        employeeCalcRateOrPct:
          format: double
          type: number
        employeeCalcRule:
          type: string
        employeeCauseNumber:
          type: string
        employeeDedLastPaid:
          format: date-time
          type: string
        employeeEligibilityDate:
          format: date-time
          type: string
        employeeFiscalYTDAmt:
          format: double
          type: number
        employeeGoalAmt:
          format: double
          type: number
        employeeGoalToDateAmt:
          format: double
          type: number
        employeeID:
          type: string
        employeeLastAmount:
          format: double
          type: number
        employeeMonthToDateAmount:
          format: double
          type: number
        employeeQuarterToDateAmount:
          format: double
          type: number
        employeeYearToDateAmount:
          format: double
          type: number
        evidenceOfInsurabilityDate:
          format: date-time
          type: string
        evidenceOfInsurabilityDesiredAmt:
          format: double
          type: number
        evidenceOfInsurabilityDesiredCalcRateOrPct:
          format: double
          type: number
        employerAmount:
          format: double
          type: number
        employerCalcRateOrPct:
          format: double
          type: number
        employerCalcRule:
          type: string
        employerFiscalYearToDateAmount:
          format: double
          type: number
        employerLastAmount:
          format: double
          type: number
        employerMonthToDateAmount:
          format: double
          type: number
        employerQuarterToDateAmount:
          format: double
          type: number
        employerYearToDateAmount:
          format: double
          type: number
        interestAmount:
          format: double
          type: number
        isDeductionOffset:
          type: boolean
        medicalIndicator:
          type: boolean
        needEvidenceOfInsurability:
          type: boolean
        notes:
          type: string
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        priorEmployeeAmount:
          format: double
          type: number
        priorEmployeeGoalAmount:
          format: double
          type: number
        priorEmployeeYearToDateAmount:
          format: double
          type: number
        priorEmployerYearToDateAmount:
          format: double
          type: number
        deductionStartDate:
          format: date-time
          type: string
        deductionStopDate:
          format: date-time
          type: string
        systemID:
          type: string
        waiveReason:
          type: string
        isHomeCompany:
          type: boolean
        isWaived:
          type: boolean
        includeInAdditionalCheck:
          type: boolean
        includeInManualCheck:
          type: boolean
        employeePerCapAmount:
          format: double
          type: number
        employeePerCapPercent:
          format: double
          type: number
        employeePerCapCalcRule:
          type: string
        employeeId:
          type: string
        companyId:
          type: string
        dedCode:
          type: string
        benStatus:
          type: string
        endDateTime:
          format: date-time
          type: string
        page:
          type: integer
        per_Page:
          type: integer
    EmpCompensationDetails:
      type: object
      properties:
        employeeID:
          type: string
        companyID:
          type: string
        annualSalary:
          format: double
          type: number
        hourlyPayRate:
          format: double
          type: number
        weeklyPayRate:
          format: double
          type: number
        payPeriodPayRate:
          format: double
          type: number
        currencyCode:
          type: string
        otherRate1:
          format: double
          type: number
        otherRate2:
          format: double
          type: number
        otherRate3:
          format: double
          type: number
        otherRate4:
          format: double
          type: number
        payGroupDescription:
          type: string
        piecePayRate:
          format: double
          type: number
        primaryJobCode:
          type: string
        jobSalaryGrade:
          type: string
        jobChangeReasonCode:
          type: string
        jobGroupCode:
          type: string
        jobTitle:
          type: string
        dateInJob:
          format: date-time
          type: string
        dateLastPaid:
          format: date-time
          type: string
        dateLastWorked:
          format: date-time
          type: string
        dateOfLastSalaryReview:
          format: date-time
          type: string
        dateOfNextSalayrReview:
          format: date-time
          type: string
        isAutoAllocated:
          type: boolean
        isAutoPaid:
          type: boolean
        isSeasonalWorker:
          type: boolean
        isHighlyCompensated:
          type: boolean
        isMultipleJob:
          type: boolean
        payGroupCode:
          type: string
        payPeriod:
          type: string
        payScaleCode:
          type: string
        salaryOrHourlyCode:
          type: string
        fullTimeOrPartTimeCode:
          type: string
        scheduledFullTimeEquivalency:
          format: double
          type: number
        scheduledPeriodWorkHours:
          format: double
          type: number
        scheduledAnnualWorkHours:
          format: double
          type: number
        weeklyHours:
          format: double
          type: number
        primaryShiftCode:
          type: string
        primaryShiftGroupCode:
          type: string
        avgPayRateCurPer:
          format: float
          type: number
        bonusTotalHrs:
          format: float
          type: number
        bonusTotalOtHrs:
          format: float
          type: number
        datePaidThru:
          format: date-time
          type: string
        emplStatus:
          type: string
        totalAnnSalary:
          format: float
          type: number
        distributionCenterCode:
          type: string
        numberOfPayments:
          format: int32
          type: integer
        performanceReviewRating:
          type: string
        performanceReviewType:
          type: string
    DependentDeductions:
      type: object
      properties:
        benefitAmount:
          type: number
        benefitStartDate:
          type: string
          format: date-time
        benefitStatus:
          type: string
        benefitStatusDate:
          type: string
          format: date-time
        benefitStopDate:
          type: string
          format: date-time
        certificateNo:
          type: string
        companyID:
          type: string
        contactID:
          type: string
        currentCOID:
          type: string
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        declinedByCarrierDate:
          type: string
          format: date-time
        deductionCode:
          type: string
        deductionNotes:
          type: string
        deductionType:
          type: string
        declinedByCarrier:
          type: string
        declinedByCarrierReason:
          type: string
        depBPlanTVID:
          type: integer
        systemID:
          type: string
        employeeId:
          type: string
        eoiDate:
          type: string
          format: date-time
        needEOI:
          type: boolean
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        isBenefitWaived:
          type: boolean
    EarningsHistoryBaseElements:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        earningCode:
          type: string
        employeeNumber:
          type: string
        genNumber:
          type: string
        periodControl:
          type: string
        payGroup:
          type: string
        accrualCode:
          type: string
        baseAmount:
          type: number
        batchID:
          type: string
        calculationRule:
          type: string
        calculationSequence:
          type: string
        currentAmount:
          type: number
        currentHours:
          type: number
        glBaseSegmentId:
          type: string
        glFollowBaseAccountAllocation:
          type: string
        grossUp:
          type: string
        grossUpTarget:
          type: number
        grossUpTaxCalculationMethod:
          type: integer
        hourlyPayRate:
          type: number
        includeInDeferredCompensation:
          type: boolean
        includeInDeferredCompensationHours:
          type: boolean
        isVoided:
          type: boolean
        isVoidingRecord:
          type: boolean
        jobCode:
          type: string
        jobPremiumAmount:
          type: number
        jobPremiumRateOrPercent:
          type: number
        location:
          type: string
        numberOfDays:
          type: integer
        numberOfGames:
          type: integer
        payDate:
          type: string
          format: date-time
        payoutRateType:
          type: string
        payRate:
          type: number
        paySheetID:
          type: string
        periodPayRate:
          type: number
        pieceCount:
          type: number
        piecePayRate:
          type: number
        planYear:
          type: string
        project:
          type: string
        reportCategory:
          type: string
        taxCalculationGroupId:
          type: string
        taxCategory:
          type: string
        timeClockCode:
          type: string
        tipCredit:
          type: number
        tipGrossReceipts:
          type: number
        tipType:
          type: string
        useDeductionOffSet:
          type: boolean
        ytdAmount:
          type: number
        ytdShiftAmount:
          type: number
    EmployeeChangesResponse:
      type: object
      properties:
        firstName:
          description: Employee First Name
          type: string
        lastName:
          description: Employee Last Name
          type: string
        preferredName:
          description: Employee Preferred Name
          type: string
        emailAddress:
          description: Employee Email Address
          type: string
        countryCode:
          description: Employee Country Code
          type: string
        languageCode:
          description: Employee Language Code
          type: string
        employeeNumber:
          description: Employee Number
          type: number
        employeeId:
          description: Employee Identifier
          type: string
        personId:
          description: Employee Person Identifier
          type: string
        userIntegrationKey:
          description: User Integration Key
          type: string
        companyName:
          description: Employee Company Name
          type: string
        companyId:
          description: Employee Company Identifier
          type: string
        supervisorId:
          description: Employee Surpervisor Identifier
          type: string
        salaryOrHourly:
          description: Employee Hourly Salary
          type: string
        fullTimeOrPartTime:
          description: Full/Part Time Identifier
          type: string
        isActive:
          description: Employee Active Flag
          type: boolean
        workLocation:
          description: Employee Work Location
          type: string
        jobCode:
          description: Employee Job Code
          type: string
        projectCode:
          description: Employee Project Code
          type: string
        orgLevel1Code:
          description: Employee Orginizational Level 1
          type: string
        orgLevel2Code:
          description: Employee Orginizational Level 2
          type: string
        orgLevel3Code:
          description: Employee Orginizational Level 3
          type: string
        orgLevel4Code:
          description: Employee Orginizational Level 4
          type: string
        middleName:
          description: Employee Middle Name
          type: string
        workPhone:
          description: Employee Work Phone
          type: string
        homePhone:
          description: Employee Home Phone
          type: string
        employeeAddress1:
          description: Employee Address 1
          type: string
        employeeAddress2:
          description: Employee Address 2
          type: string
        city:
          description: Employee City
          type: string
        state:
          description: Employee State
          type: string
        zipCode:
          description: Employee Zip Code
          type: string
        terminationDate:
          description: Employee Termination Date
          type: string
        hireDate:
          description: Employee Hire Date
          type: string
        supervisorName:
          description: Employee Supervisor Name
          type: string
        prefix:
          description: Employee Name Prefix
          type: string
        suffix:
          description: Employee Name Suffix
          type: string
        alternateEmailAddress:
          description: Employee Alternative Email Address
          type: string
        gender:
          description: Employee Gender
          type: string
        employeeStatus:
          description: Employee Employment Status
          type: string
        employeeType:
          description: Employee Type
          type: string
        emplStatusStartDate:
          description: Employment Status Start Date
          type: string
        dateInJob:
          description: Date Employee Started Current Job
          type: string
        dateOfLastHire:
          description: Date Employee Last Hired
          type: string
        jobGroupCode:
          description: Employee Job Group Code
          type: string
        alternateJobTitle:
          description: Alternate Job Title for Employee
          type: string
    Error:
      type: object
      properties:
        title:
          type: string
        type:
          type: string
        errorCount:
          type: number
        errors:
          type: object
          properties:
            modelstate:
              type: object
              properties:
                property-name:
                  type: array
                  items:
                    type: object
                    properties:
                      message:
                        type: string
                      type:
                        type: string
                type:
                  type: string
                message:
                  type: string
        detail:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        modelstate:
          type: object
          properties:
            fieldname:
              type: string
            message:
              type: string
    EarningsDto:
      required:
        - earningCode
        - longDescription
        - stubDescription
        - timeClockCode
      type: object
      properties:
        earningCode:
          type: string
        longDescription:
          type: string
        amount:
          format: double
          type: number
        blockFederalIncomeTax:
          type: boolean
        blockLocalIncomeTax:
          type: boolean
        blockStateIncomeTax:
          type: boolean
        calculationRule:
          type: string
        displayInPayDataEntry:
          type: boolean
        excelInTotalHours:
          type: boolean
        flatHours:
          format: double
          type: number
        includeInAccruals:
          type: string
        includeInAllocations:
          type: boolean
        includeFlsaAveragePayRate:
          type: boolean
        includeInBenefitHours:
          type: boolean
        includeInDeferredCompensation:
          type: boolean
        includeInDeferredCompensationHours:
          type: boolean
        includeInEarningAccumulation:
          type: boolean
        includeInHoursAccumulation:
          type: boolean
        includeInManualCheck:
          type: boolean
        includeInMiscellaneousEarning1:
          type: boolean
        includeInMiscellaneousEarning2:
          type: boolean
        includeInMiscellaneousEarning3:
          type: boolean
        includeInMiscellaneousEarning4:
          type: boolean
        includeInMiscellaneousEarning5:
          type: boolean
        includeInMiscellaneousEarning6:
          type: boolean
        includeInPensionAccumulation:
          type: boolean
        includeInRetroPay:
          type: boolean
        includeInShiftDiffrential:
          type: boolean
        isProductiveTime:
          type: boolean
        isSupplimentalWages:
          type: boolean
        monthlyPayPeriod1:
          type: boolean
        monthlyPayPeriod2:
          type: boolean
        monthlyPayPeriod3:
          type: boolean
        monthlyPayPeriod4:
          type: boolean
        monthlyPayPeriod5:
          type: boolean
        notes:
          type: string
        reduceRegularDollars:
          type: boolean
        reduceRegularHours:
          type: boolean
        reportCategory:
          type: string
        scheduleSupplemental:
          type: boolean
        stubDescription:
          type: string
        taxCategory:
          type: string
        timeClockCode:
          type: string
        countryCode:
          type: string
        useDeductionOffset:
          type: boolean
        includeInRegisteredPensionPlan:
          type: boolean
        includeInRegisteredRetirementSavingsPlan:
          type: boolean
        includeInUnionDues:
          type: boolean
        includeInUnionDuesHours:
          type: boolean
        taxCalculationRule:
          type: string
        exemptFromEarnedIncomeHours:
          type: string
        includeInHealthCareHours:
          type: boolean
        verificationTypeCode:
          type: string
        verificationTypeDescription:
          type: string
    EmployeeContract:
      type: object
      properties:
        companyId:
          type: string
        employeeId:
          type: string
        contractNumber:
          type: string
        contractTypeCode:
          type: string
        effectiveDate:
          type: string
        dateTimeCreated:
          type: string
        rowLastChanged:
          type: string
        page:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        per_Page:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        pagesCount:
          format: int32
          type: integer
    EmployeeCobraDetails:
      type: object
      properties:
        personID:
          type: string
        employeeID:
          type: string
        companyID:
          type: string
        cobraExport:
          type: string
        cobraIsActive:
          type: boolean
        cobraNotes:
          type: string
        cobraReason:
          type: string
        cobraStatus:
          type: string
        cobraStatusDate:
          type: string
          format: date-time
        dateOfCobraEvent:
          type: string
          format: date-time
        dateOfCobraExport:
          type: string
          format: date-time
        dateOfCobraLetter:
          type: string
          format: date-time
    Contact:
      type: object
      properties:
        city:
          type: string
        countryCode:
          type: string
        county:
          type: string
        addressIsDifferentFromEmployee:
          type: boolean
        addressLine1:
          type: string
        addressLine2:
          type: string
        state:
          type: string
        zipCode:
          type: string
        cobraExport:
          type: boolean
        cobraIsActive:
          type: boolean
        cobraReason:
          type: string
        cobraStatus:
          type: string
        cobraStatusDate:
          format: date-time
          type: string
        dateOfBirth:
          format: date-time
          type: string
        dateOfCOBRAEvent:
          format: date-time
          type: string
        dateOfCOBRALetter:
          format: date-time
          type: string
        employeeId:
          type: string
        gender:
          type: string
        importId:
          type: string
        isBeneficiary:
          type: boolean
        isDependent:
          type: boolean
        isDisabled:
          type: boolean
        isEmergencyContact:
          type: boolean
        isSmoker:
          type: boolean
        isStudent:
          type: boolean
        marriageDate:
          format: date-time
          type: string
        firstName:
          type: string
        formerName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        nameSuffix:
          type: string
        occupation:
          type: string
        otherInsurance:
          type: string
        homePhoneCountry:
          type: string
        homePhoneNumber:
          type: string
        otherPhoneNumber:
          type: string
        otherPhoneType:
          type: string
        preferredPhoneNumber:
          type: string
        relationshipCode:
          type: string
        relationshipDescription:
          type: string
        ssn:
          type: string
        contactId:
          type: string
        userDefinedField01:
          type: string
        workPhoneExtension:
          type: string
        workPhoneNumber:
          type: string
        cobraNotes:
          type: string
        notes:
          type: string
        isActive:
          type: boolean
        statusAsOfDate:
          format: date-time
          type: string
        deathDate:
          format: date-time
          type: string
        divorceDate:
          format: date-time
          type: string
        emailAddress:
          type: string
        otherPhoneCountryCode:
          type: string
        healthCareId:
          type: string
        nationalId:
          type: string
        nationalIdExpirationDate:
          format: date-time
          type: string
        personID:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        addressID:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        workPhoneId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        homePhoneId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        otherPhoneId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
    EmployeeDeductionBenefitOptionChangeDate:
      type: object
      properties:
        companyID:
          type: string
        deductionCode:
          type: string
        employeeId:
          type: string
        optionDate:
          type: string
          format: date-time
    DirectDepositModel:
      type: object
      properties:
        description:
          type: string
        account:
          type: string
        accountType:
          type: string
        amountOrPercent:
          format: double
          type: number
        companyId:
          type: string
        directDepositOrPrenote:
          type: string
        depositRule:
          type: string
        employeeBankId:
          type: string
        employeeBankName:
          type: string
        employeeBankRoutingNumber:
          type: string
        employeeId:
          type: string
        firstPrenotePayDate:
          format: date-time
          type: string
        sequenceNumber:
          type: string
        employeeInstitutionNumber:
          type: string
        countryCode:
          type: string
        foreignAccountNumber:
          type: string
        foreignAccountNumberType:
          type: string
        accountRecordId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        dateTimeChanged:
          format: date-time
          type: string
        accountIsInactive:
          type: boolean
    EmpDedHistoryEffectiveChangeDate:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        deductionCode:
          type: string
        effectiveDate:
          format: date-time
          type: string
        fieldValueDataType:
          type: string
        fieldValue:
          type: string
        fieldValueDate:
          format: date-time
          type: string
        fieldValueNumber:
          type: number
        changeReason:
          type: string
    EmployeeDemographicDetails:
      type: object
      properties:
        ethnicDescription:
          type: string
        additionalName1:
          type: string
        additionalName2:
          type: string
        addressId:
          type: string
        addressIsOnTaxBoundary:
          type: string
        addressLatitude:
          type: number
        disabilityType:
          type: string
        formerName:
          type: string
        healthBloodType:
          type: string
        healthEyes:
          type: string
        healthHair:
          type: string
        healthHeightFeet:
          type: string
        healthHeightInches:
          type: string
        healthLastDonateDate:
          type: string
        healthWeight:
          type: number
        previousSSN:
          type: string
        originCountry:
          type: string
        originLocation:
          type: string
        addressSms:
          type: string
        homePhoneIsPrivate:
          type: boolean
        lastNameNotSameAsSSCard:
          type: string
        nationality1:
          type: string
        nationality2:
          type: string
        nationality3:
          type: string
        personId:
          type: string
        employeeId:
          type: string
        companyId:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        preferredName:
          type: string
        namePrefixCode:
          type: string
        nameSuffixCode:
          type: string
        emailAddress:
          type: string
        emailAddressAlternate:
          type: string
        homePhoneID:
          type: string
        homePhone:
          type: string
        homePhoneCountry:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        addressCity:
          type: string
        addressState:
          type: string
        addressZipCode:
          type: string
        addressCountry:
          type: string
        addressCounty:
          type: string
        dateOfBirth:
          type: string
        gender:
          type: string
        ethnicIdCode:
          type: string
        isSmoker:
          type: boolean
        isDisabled:
          type: string
        maritalStatusCode:
          type: string
        ssn:
          type: string
        ssnIsSuppressed:
          type: boolean
        userID:
          type: string
        integrationRecordId:
          type: string
        cellPhoneNumber:
          type: string
    EmployeeEducationModel:
      type: object
      properties:
        employeeId:
          type: string
        systemId:
          type: string
        school:
          type: string
        educationLevel:
          type: string
        educationMajor:
          type: string
        educationMinor:
          type: string
        gpa:
          type: string
        beginDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        isGraduate:
          type: boolean
        isHighestLevel:
          type: boolean
        employeeNumber:
          type: string
        country:
          type: string
    EmployeeExtendedElements:
      type: object
      properties:
        personID:
          type: string
        employeeID:
          type: string
        companyID:
          type: string
        communityBroadcastSMSCode:
          type: string
        consentElectronicW2:
          type: boolean
        consentElectronicW2PR:
          type: boolean
        dateDeceased:
          type: string
          format: date-time
        dateOfI9Expiration:
          type: string
          format: date-time
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        i9AlienNumber:
          type: string
        i9DocA:
          type: string
        i9DocB:
          type: string
        i9DocC:
          type: string
        i9Verified:
          type: boolean
        i9VisaType:
          type: string
        i9WorkAuth:
          type: string
        isMultiPayGroup:
          type: boolean
        militaryBranchServed:
          type: string
        militaryEra:
          type: string
        militaryIsDisabledVet:
          type: string
        militaryIsOthEligVet:
          type: string
        militaryIsOthEligVetBasis:
          type: string
        militaryIsActiveWartimeVet:
          type: string
        w2IsDeceased:
          type: boolean
        militarySeparationDate:
          type: string
          format: date-time
        smsApprovals:
          type: boolean
        smsPayNotification:
          type: boolean
        chkCashingInstCode:
          type: string
        i9VisaExpirationDate:
          type: string
          format: date-time
        militaryIsMedalVet:
          type: string
        militaryService:
          type: string
    EmployeeEmploymentDetails:
      type: object
      properties:
        companyID:
          type: string
        employeeID:
          type: string
        primaryJobCode:
          type: string
        jobTitle:
          type: string
        fullTimeOrPartTimeCode:
          type: string
        primaryWorkLocationCode:
          type: string
        primaryProjectCode:
          type: string
        deductionGroupCode:
          type: string
        earningGroupCode:
          type: string
        employeeTypeCode:
          type: string
        employeeStatusCode:
          type: string
        employeeNumber:
          type: string
        supervisorId:
          type: string
        originalHireDate:
          type: string
        lastHireDate:
          type: string
        dateOfTermination:
          type: string
        dateOfRetirement:
          type: string
        dateTimeCreated:
          type: string
        dateTimeChanged:
          type: string
        dateLastPayDatePaid:
          type: string
        payGroup:
          type: string
        isHomeCompany:
          type: string
        page:
          type: integer
        per_Page:
          type: integer
    EmployeeJobHistoryDetail:
      type: object
      properties:
        annualSalary:
          format: double
          type: number
        companyId:
          type: string
        dateTimeCreated:
          format: date-time
          type: string
        employeeId:
          type: string
        employeeType:
          type: string
        employeeStatus:
          type: string
        flsaCategory:
          type: string
        fullTimeOrPartTime:
          type: string
        hourlyPayRate:
          format: double
          type: number
        isJobChange:
          type: boolean
        isOrgchange:
          type: boolean
        isOutsideGuidelines:
          type: boolean
        isOutsideRange:
          type: boolean
        isPromotion:
          type: boolean
        isRateChange:
          type: boolean
        isSystem:
          type: boolean
        isTransfer:
          type: boolean
        jobCode:
          type: string
        jobDescription:
          type: string
        jobEffectiveDate:
          format: date-time
          type: string
        jobGroupCode:
          type: string
        locationCode:
          type: string
        orgLevel1Code:
          type: string
        orgLevel2Code:
          type: string
        orgLevel3Code:
          type: string
        orgLevel4Code:
          type: string
        otherRate1:
          format: double
          type: number
        otherRate2:
          format: double
          type: number
        otherRate3:
          format: double
          type: number
        otherRate4:
          format: double
          type: number
        payGroupCode:
          type: string
        payPeriodCode:
          type: string
        payScaleCode:
          type: string
        percentChange:
          format: double
          type: number
        periodPayRate:
          format: double
          type: number
        piecePayRate:
          format: double
          type: number
        positionCode:
          type: string
        reasonCode:
          type: string
        salaryGrade:
          type: string
        salaryOrHourly:
          type: string
        scheduledAnnualHours:
          format: double
          type: number
        scheduledFullTimeEquivalency:
          format: double
          type: number
        scheduledWorkHours:
          format: double
          type: number
        shiftCode:
          type: string
        shiftGroupCode:
          type: string
        stepNumber:
          format: double
          type: number
        supervisorId:
          type: string
        supervisorNameFirst:
          type: string
        supervisorNameLast:
          type: string
        supervisorNameSuffix:
          type: string
        supervisorNotInList:
          type: boolean
        systemId:
          type: string
        unionNational:
          type: string
        usePayScales:
          type: boolean
        weeklyPayRate:
          format: double
          type: number
        notes:
          type: string
        homeCompanyId:
          type: string
        integrationEffectiveDate:
          format: date-time
          type: string
        projectCode:
          type: string
        numberOfPayments:
          format: double
          type: number
        weeklyHours:
          format: double
          type: number
        isViewableByEmployee:
          type: boolean
        createdByUserId:
          format: double
          type: number
        jobTitle:
          type: string
    Identifiers:
      required:
        - employeeIdentifierType
        - employeeIdentifierValue
      type: object
      properties:
        employeeIdentifierType:
          description: Employee Identifier Type
          type: string
          enum:
            - EmailAddress
            - EmployeeNumber
            - NationalID
            - SIN
            - PersonID
            - SSN
            - EmployeeID
            - UserIntegrationKey
        employeeIdentifierValue:
          description: Employee Identifier Value (specific to Employee Identifer Type)
          type: string
        companyIdentifierType:
          type: string
          enum:
            - Company ID
            - Company Code
            - Federal ID
        companyIdentifierValue:
          description: Company Identifier Value (specific to Company Identifer Type)
          type: string
    EmployeeIdsResponse:
      type: object
      properties:
        title:
          type: string
        type:
          type: string
        detail:
          type: string
        errorCount:
          type: number
        multistatus:
          type: array
          items:
            properties:
              sequenceId:
                type: number
              status:
                description: http status
                type: string
              modelstate:
                description: Only present if status is error
                type: object
                properties:
                  property-name:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        type:
                          type: string
              body:
                description: Only present if status is success
                type: object
                properties:
                  eeid:
                    type: string
                  coid:
                    description: >-
                      If more than one company, first element is the home
                      company.
                    type: array
                    items:
                      type: string
    EmployeeMultipleJobs:
      type: object
      properties:
        annualPayRate:
          type: number
        companyId:
          type: string
        dateInJob:
          format: date-time
          type: string
        employeeId:
          type: string
        hourlyPayRate:
          type: number
        isPrimaryJob:
          type: boolean
        jobCode:
          type: string
        jobIsInActive:
          type: boolean
        otherRate1:
          type: number
        otherRate2:
          type: number
        otherRate3:
          type: number
        otherRate4:
          type: number
        piecePayRate:
          type: number
    EmployeeMultiPhoneNumbers:
      type: object
      properties:
        employeeId:
          type: string
        auditKey:
          type: string
        firstName:
          type: string
        formerName:
          type: object
        lastName:
          type: string
        middleName:
          type: string
        phoneNumber:
          type: string
        phoneCountryCode:
          type: string
        phoneCountryPrefix:
          type: object
        phoneTypeCode:
          type: string
        phoneExtension:
          type: string
        phoneIsPrivate:
          type: boolean
        systemId:
          type: string
    EmployeeMultiplePositions:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        jobCode:
          type: string
        positionCode:
          type: string
        isPrimary:
          type: boolean
        annualSalary:
          type: number
        hourlyPayRate:
          type: number
        fullTimeOrPartTimeCode:
          type: string
        fullTimeOrPartTime:
          type: string
        clockCode:
          type: string
        dateTimeCreated:
          format: date-time
          type: string
        employeeTypeCode:
          type: string
        employeeTypeDescription:
          type: string
        effectiveStartDate:
          format: date-time
          type: string
        effectiveStopDate:
          format: date-time
          type: string
        isEligibleForBenefits:
          type: boolean
        locationCode:
          type: string
        notes:
          type: string
        organizationLevel1Code:
          type: string
        organizationLevel2Code:
          type: string
        organizationLevel3Code:
          type: string
        organizationLevel4Code:
          type: string
        otherRate1:
          type: number
        otherRate2:
          type: number
        otherRate3:
          type: number
        otherRate4:
          type: number
        overrideIncumbentData:
          type: string
        payGroupCode:
          type: string
        periodPayRate:
          type: number
        piecePayRate:
          type: number
        projectCode:
          type: string
        salaryOrHourlyCode:
          type: string
        salaryOrHourly:
          type: string
        scheduledAnnualHours:
          type: number
        scheduledFullTimeEmployee:
          type: number
        scheduledWorkHours:
          type: number
        shiftCode:
          type: string
        shiftGroupCode:
          type: string
        shiftGroupDescription:
          type: string
        systemId:
          type: string
        weeklyPayRate:
          type: number
    NationalDocumentModel:
      type: object
      properties:
        employeeId:
          type: string
        nationalDocumentId:
          type: string
        contactId:
          type: string
        nationalDocumentNumber:
          type: string
        nationalDocumentDescription:
          type: string
        nationalDocumentTypeCode:
          type: string
        nationalDocumentIssuingCountryCode:
          type: string
        nationalDocumentIssuingPlace:
          type: string
        nationalDocumentIssueDate:
          format: date-time
          type: string
        employeeNumber:
          type: string
    EmployeeProfiles:
      type: object
      properties:
        description:
          type: string
        profileValue:
          type: string
        profileType:
          type: string
        product:
          type: string
        module:
          type: string
        companyId:
          type: string
        employeeId:
          type: string
        lastModifiedDate:
          format: date-time
          type: string
        isCleared:
          type: boolean
        isDateEffective:
          type: boolean
        effectiveDate:
          format: date-time
          type: string
        recordId:
          type: number
        changeRecordID:
          type: number
        isPrimary:
          type: boolean
        isPrimaryEffectiveDate:
          format: date-time
          type: string
        originalHireDate:
          format: date-time
          type: string
    EmployeeSecurityUserDetails:
      type: object
      properties:
        userID:
          type: string
        userName:
          type: string
        fullName:
          type: string
        employeeId:
          type: string
        passwordLastChanged:
          type: string
          format: datetime
        lastLogon:
          type: string
          format: datetime
    EmployeeStatus:
      type: object
      properties:
        asOfDate:
          type: string
          format: date-time
        employeeId:
          type: string
        companyId:
          type: string
        triggerTermination:
          type: boolean
        status:
          type: string
        statusStartDate:
          type: string
          format: date-time
        statusReason:
          type: string
        statusReasonDesc:
          type: string
        isPrimary:
          type: boolean
        isPrimaryEffectiveDate:
          type: string
          format: date-time
        originalHireDate:
          type: string
          format: date-time
    CompanyPayStatementFilter:
      required:
        - startDate
        - endDate
      type: object
      properties:
        companyId:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        payGroup:
          type: string
        page:
          format: int32
          minimum: 1
          type: integer
        per_Page:
          format: int32
          minimum: 1
          type: integer
        pagesCount:
          format: int32
          type: integer
    CompanyPayStatementModel:
      type: object
      properties:
        employeeidentifier:
          $ref: '#/components/schemas/EmployeePayStatementIdentifierModel'
        payidentifier:
          type: string
        paydate:
          format: date-time
          type: string
        document:
          type: string
        totalearnings:
          format: float
          type: number
        totaldeductions:
          format: float
          type: number
        totaltaxes:
          format: float
          type: number
    EmployeePayStatementIdentifierModel:
      type: object
      properties:
        identificationtype:
          type: string
        companyidentifier:
          type: string
        employeeidentifier:
          type: string
    EmployeePayStatementModel:
      type: object
      properties:
        accruals:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementAccrualsModel'
        addressline1:
          type: string
        addressline2:
          type: string
        city:
          type: string
        companyaddresscity:
          type: string
        companyaddresscountry:
          type: string
        companyaddresscounty:
          type: string
        companyaddressline1:
          type: string
        companyaddressline2:
          type: string
        companyaddresspostalcode:
          type: string
        companyaddressstateorprovince:
          type: string
        companyname:
          type: string
        companyphone:
          type: string
        companyphoneext:
          type: string
        country:
          type: string
        deductions:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementDeductionsModel'
        deductionscurrent:
          format: float
          type: number
        deductionsytd:
          format: float
          type: number
        document:
          type: string
        earnings:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementEarningsModel'
        employeeidentifier:
          $ref: '#/components/schemas/EmployeePayStatementIdentifierModel'
        employeenumber:
          type: string
        federaladditionalamountWithheld:
          format: float
          type: number
        federalallowancesclaimed:
          format: int32
          type: integer
        federalfilingstatus:
          type: string
        federaltaxablewagescurrent:
          format: float
          type: number
        federaltaxablewagesytd:
          format: float
          type: number
        fullname:
          type: string
        grosswagescurrent:
          format: float
          type: number
        grosswagesytd:
          format: float
          type: number
        job:
          type: string
        location:
          type: string
        netpay:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementNetPayModel'
        netpaycurrent:
          format: float
          type: number
        netpayytd:
          format: float
          type: number
        orglevel1:
          type: string
        orglevel2:
          type: string
        orglevel3:
          type: string
        orglevel4:
          type: string
        paydate:
          format: date-time
          type: string
        payperiodfrequency:
          type: string
        paygroup:
          type: string
        payidentifier:
          type: string
        payrate:
          format: float
          type: number
        periodenddate:
          format: date-time
          type: string
        periodstartdate:
          format: date-time
          type: string
        postalcode:
          type: string
        residentstateallowancesclaimed:
          format: int32
          type: integer
        residentstatefilingstatus:
          type: string
        ssn:
          type: string
        stateorprovince:
          type: string
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayStatementTaxesModel'
        taxescurrent:
          format: float
          type: number
        taxesytd:
          format: float
          type: number
        workstateallowancesclaimed:
          format: int32
          type: integer
        workstatefilingstatus:
          type: string
    EmployeePayStatementAccrualsModel:
      type: object
      properties:
        amountcurrent:
          format: float
          type: number
        amounttype:
          type: string
        balance:
          format: float
          type: number
        plancode:
          type: string
        plandescription:
          type: string
    EmployeePayStatementDeductionsModel:
      type: object
      properties:
        basisamount:
          format: float
          type: number
        deductioncode:
          type: string
        deductiondescription:
          type: string
        employeeamount:
          format: float
          type: number
        employeeamountytd:
          format: float
          type: number
        employeramount:
          format: float
          type: number
        employeramountytd:
          format: float
          type: number
        pretax:
          type: boolean
    EmployeePayStatementEarningsModel:
      type: object
      properties:
        amount:
          format: float
          type: number
        amountytd:
          format: float
          type: number
        hours:
          format: float
          type: number
        hoursytd:
          format: float
          type: number
        paycode:
          type: string
        paydescription:
          type: string
        payrate:
          format: float
          type: number
        periodend:
          format: date-time
          type: string
        periodstart:
          format: date-time
          type: string
        piececount:
          format: float
          type: number
        piecepayrate:
          format: float
          type: number
    EmployeePayStatementNetPayModel:
      type: object
      properties:
        accountnumber:
          type: string
        accounttype:
          type: string
        amount:
          format: float
          type: number
    EmployeePayStatementTaxesModel:
      type: object
      properties:
        amount:
          format: float
          type: number
        amountytd:
          format: float
          type: number
        basisamount:
          format: float
          type: number
        taxdescription:
          type: string
        taxcode:
          type: string
    EmployeePayStatementRangeFilter:
      type: object
      properties:
        employeeIdentifier:
          $ref: '#/components/schemas/EmployeeIdentifier'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        page:
          format: int32
          minimum: 1
          type: integer
        per_Page:
          format: int32
          minimum: 1
          type: integer
        pagesCount:
          format: int32
          type: integer
    EmployeeIdentifier:
      type: object
      properties:
        companyCode:
          type: string
        employeeNumber:
          type: string
        eeid:
          type: string
        coid:
          type: string
    EmployeeSupervisorDetails:
      type: object
      properties:
        employeeID:
          type: string
        companyID:
          type: string
        employeeNumber:
          type: string
        supervisorEmployeeID:
          type: string
        supervisorFirstName:
          type: string
        supervisorLastName:
          type: string
        supervisorEmployeeNumber:
          type: string
        supervisorCompanyID:
          type: string
        supervisorCompanyCode:
          type: string
        supervisorStatusCode:
          type: string
        supervisorJobCode:
          type: string
        supervisorPositionCode:
          type: string
        supervisorEmail:
          type: string
        supervisorWorkPhone:
          type: string
        supervisorPersonId:
          type: string
    EmpEmploymentDetails:
      type: object
      properties:
        companyID:
          type: string
        companyCode:
          type: string
        companyName:
          type: string
        employeeID:
          type: string
        jobDescription:
          type: string
        payGroupDescription:
          type: string
        primaryJobCode:
          type: string
        orgLevel1Code:
          type: string
        orgLevel2Code:
          type: string
        orgLevel3Code:
          type: string
        orgLevel4Code:
          type: string
        originalHireDate:
          format: date-time
          type: string
        lastHireDate:
          format: date-time
          type: string
        fullTimeOrPartTimeCode:
          type: string
        primaryWorkLocationCode:
          type: string
        languageCode:
          type: string
        primaryProjectCode:
          type: string
        workPhoneNumber:
          type: string
        workPhoneExtension:
          type: string
        workPhoneCountry:
          type: string
        dateInJob:
          format: date-time
          type: string
        dateLastWorked:
          format: date-time
          type: string
        dateOfBenefitSeniority:
          format: date-time
          type: string
        dateOfSeniority:
          format: date-time
          type: string
        deductionGroupCode:
          type: string
        earningGroupCode:
          type: string
        employeeTypeCode:
          type: string
        employeeStatusCode:
          type: string
        employeeNumber:
          type: string
        jobChangeReasonCode:
          type: string
        jobTitle:
          type: string
        leaveReasonCode:
          type: string
        supervisorID:
          type: string
        supervisorFirstName:
          type: string
        supervisorLastName:
          type: string
        autoAllocate:
          type: string
        clockCode:
          type: string
        dateLastPayDatePaid:
          format: date-time
          type: string
        dateOfEarlyRetirement:
          format: date-time
          type: string
        dateOfLocalUnion:
          format: date-time
          type: string
        dateOfNationalUnion:
          format: date-time
          type: string
        dateOfRetirement:
          format: date-time
          type: string
        dateOfSuspension:
          format: date-time
          type: string
        dateOfTermination:
          format: date-time
          type: string
        datePaidThru:
          format: date-time
          type: string
        statusStartDate:
          format: date-time
          type: string
        hireSource:
          type: string
        isAutoAllocated:
          type: string
        isAutopaid:
          type: string
        isMultipleJob:
          type: string
        jobGroupCode:
          type: string
        mailstop:
          type: string
        okToRehire:
          type: string
        payGroup:
          type: string
        payPeriod:
          type: string
        plannedLeaveReason:
          type: string
        positionCode:
          type: string
        salaryOrHourly:
          type: string
        scheduledAnnualHrs:
          format: double
          type: number
        scheduledFTE:
          format: double
          type: number
        scheduledWorkHrs:
          format: double
          type: number
        shift:
          type: string
        shiftGroup:
          type: string
        termReason:
          type: string
        terminationReasonDescription:
          type: string
        termType:
          type: string
        timeclockID:
          type: string
        unionLocal:
          type: string
        unionNational:
          type: string
        weeklyHours:
          format: double
          type: number
        dateTimeCreated:
          format: date-time
          type: string
        dateTimeChanged:
          format: date-time
          type: string
        supervisorEmployeeNumber:
          type: string
        supervisorCOID:
          type: string
        supervisorCompanyCode:
          type: string
        companyGLSegment:
          type: string
        locationGLSegment:
          type: string
    GeneralLedgerRunDetailsV2:
      type: object
      properties:
        description:
          type: string
        runId:
          type: string
        payPeriodEndDate:
          format: date-time
          type: string
        accountType:
          type: string
        baseSegment:
          type: string
        companyCode:
          type: string
        creditAmt:
          format: double
          type: number
        debitAmt:
          format: double
          type: number
        generalLedgerAccount:
          type: string
        jobCode:
          type: string
        jobDesc:
          type: string
        location:
          type: string
        orgLevel1:
          type: string
        orgLevel2:
          type: string
        orgLevel3:
          type: string
        orgLevel4:
          type: string
        payGroup:
          type: string
        periodEndDate:
          format: date-time
          type: string
        periodStartDate:
          format: date-time
          type: string
        positionCode:
          type: string
        positionDesc:
          type: string
        project:
          type: string
        systemId:
          format: int32
          type: integer
        blockId:
          format: int32
          type: integer
        coId:
          type: string
        glRunDateTime:
          format: date-time
          type: string
        totalNrOfBlocks:
          format: int32
          type: integer
        userWhoRanThisGl:
          type: string
        glJson:
          type: string
    EmployeeGlobalBanksModel:
      type: object
      properties:
        bankId:
          type: string
        employeeId:
          type: string
        companyId:
          type: string
        employeeNumber:
          type: string
        payGroup:
          type: string
        currencyCode:
          type: string
        fundingMethod:
          type: string
        fundingMethodDescription:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        bankName:
          type: string
        bankBranch:
          type: string
        bankCountryCode:
          type: string
        beneficiaryName:
          type: string
        bankAccountType:
          type: string
        bankAccountTypeDescription:
          type: string
        bankAccountNumber:
          type: string
        iban:
          type: string
        swiftCode:
          type: string
        bankRequirement1:
          type: string
        bankRequirement2:
          type: string
        bankRequirement3:
          type: string
        dateModified:
          format: date-time
          type: string
        bankRequestCode1:
          type: string
        bankRequestLabel1:
          type: string
        bankRequestCode2:
          type: string
        bankRequestLabel2:
          type: string
        bankRequestCode3:
          type: string
        bankRequestLabel3:
          type: string
        employeeCountry:
          type: string
    EmployeePayDeductionElementsModel:
      type: object
      properties:
        employeeId:
          type: string
        companyId:
          type: string
        systemId:
          type: string
        payDeductionId:
          type: string
        employeeNumber:
          type: string
        payGroup:
          type: string
        payDeductionName:
          type: string
        payDeductionDescription:
          type: string
        periodStartId:
          type: string
        periodEndId:
          type: string
        periodStartName:
          type: string
        periodEndName:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        project:
          type: string
        task:
          type: string
        recurring:
          type: string
        amount:
          type: string
        notes:
          type: string
        modifiedDate:
          format: date-time
          type: string
        country:
          type: string
        paymentOrDeductionIndicator:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportRequest:
      type: object
      properties:
        transaction:
          description: The XML Serialized transaction
          type: string
        uniqueFileName:
          description: An optionally provided unique file name
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        dateTimeCreated:
          format: date-time
          type: string
        fileName:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStagingStatus:
      type: object
      properties:
        stagingId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        fileProcessDate:
          format: date-time
          type: string
        serviceSubmittalDate:
          format: date-time
          type: string
        lastRepostDate:
          format: date-time
          type: string
        employeeName:
          type: string
        employeeNumber:
          type: string
        status:
          type: string
        transaction:
          type: string
        fileName:
          type: string
        messages:
          type: array
          items:
            $ref: >-
              #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportMessage
        childTransactionStatuses:
          type: array
          items:
            enum:
              - FileStagingStatus object
            type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.ImportMessage:
      type: object
      properties:
        message:
          type: string
        severity:
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
          type: integer
    EmpGlobalLocalizationElementModel:
      type: object
      properties:
        employeeId:
          type: string
        fieldId:
          type: string
        fieldName:
          type: string
        booleanValue:
          type: boolean
        numericValue:
          type: string
        dateTimeValue:
          type: string
        stringValue:
          type: string
        companyId:
          type: string
        created:
          type: string
        effective:
          type: string
    InsuranceRate:
      type: object
      properties:
        deductionCode:
          type: string
        minimumAge:
          type: number
        maximumAge:
          type: number
        employeeRateNonSmokerFemale:
          type: number
        employeeRateNonSmokerMale:
          type: number
        employeeRateSmokerFemale:
          type: number
        employeeRateSmokerMale:
          type: number
        effectiveDate:
          type: string
          format: date-time
        employerRateNonSmokerFemale:
          type: number
        employerRateNonSmokerMale:
          type: number
        employerRateSmokerFemale:
          type: number
        employerRateSmokerMale:
          type: number
        payFrequency:
          type: string
        stopDate:
          type: string
          format: date-time
        employeeRateNonSmokerNotSpecified:
          type: number
        employeeRateSmokerNotSpecified:
          type: number
        employerRateNonSmokerNotSpecified:
          type: number
        employerRateSmokerNotSpecified:
          type: number
    NewHireReadModel:
      type: object
      properties:
        id:
          description: Unique identifier of the new hire
          type: string
        contactInformation:
          description: Contact information of the new hire
          type: object
          properties:
            name:
              description: Name of the new hire
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482
                    name:
                      enUS: III
                  preferredFirst: Hugh
            emailAddress:
              description: Email address of the new hire
              type: string
            primaryPhone:
              description: Primary phone number of the new hire
              type: string
            secondaryPhone:
              description: Secondary phone number of the new hire
              type: string
            address:
              description: Address of the new hire
              type: object
              properties:
                line1:
                  description: Line 1 of the address
                  type: string
                line2:
                  description: Line 2 of the address
                  type: string
                city:
                  description: City of the address
                  type: string
                postalCode:
                  description: Zip/postal code of the address
                  type: string
                county:
                  description: County of the address
                  type: string
                stateCode:
                  description: State code of the address
                  type: string
                countryCode:
                  description: Country code of the address
                  type: string
                country:
                  description: Country code of the address
                  type: object
                  properties:
                    code:
                      description: Code of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    country:
                      code: USA
                      name:
                        enUS: United States
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
                country:
                  code: USA
                  name:
                    enUs: United States
          example:
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              formerLast: Johnson
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            emailAddress: ultionboarding14+4@gmail.com
            primaryPhone: '3056985433'
            secondaryPhone: '3056986533'
            address:
              line1: 123 Main St
              line2: 412 Blue Rd
              city: Rosemead
              zipCode: A1A2B2
              county: County of Brant
              stateCode: 'ON'
              countryCode: USA
              country:
                code: CAN
                name:
                  enUS: Canada
        job:
          description: Job of the new hire
          type: object
          properties:
            id:
              description: Unique identifier of the job
              type: string
            name:
              description: The name of the job
              type: string
              additionalProperties:
                description: >-
                  The text of the translatable translated in the language
                  specified
                type: string
            code:
              description: Code of the job
              type: string
            requisitionId:
              description: RequisitionId of the job
              type: string
            selectedFLSAStatus:
              description: Selected FLSA status for the job
              type: string
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
            componentCompany:
              description: Component company of the job
              type: object
              properties:
                id:
                  description: Id of the component company
                  type: string
                name:
                  description: Name of the component company
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4
                name: Wayne Enterprises
            workLocation:
              description: Work location of the job
              type: object
              properties:
                id:
                  description: Id of the work location
                  type: string
                name:
                  description: Name of the work location
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            supervisor:
              description: Supervisor of the job
              type: object
              properties:
                id:
                  description: Id of the supervisor
                  type: string
                name:
                  description: Name of the supervisor
                  type: object
                  properties:
                    prefix:
                      description: Prefix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    first:
                      description: First name
                      type: string
                    middle:
                      description: Middle name
                      type: string
                    last:
                      description: Last name
                      type: string
                    formerLast:
                      description: Former last name
                      type: string
                    suffix:
                      description: Suffix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    preferredFirst:
                      description: Preferred first name
                      type: string
                  example:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846X
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482X
                        name:
                          enUS: III
                      preferredFirst: Hugh
                email:
                  description: The email of the supervisor
                  type: string
                externalUserId:
                  description: The external user id of the supervisor
                  type: string
              example:
                supervisor:
                  id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7a
                  name:
                    prefix:
                      id: d9079570-57f0-4530-b889-a07c95acb846X
                      name:
                        enUS: Mr.
                    first: Hugo
                    middle: Alexander
                    last: Mastrantonioni
                    suffix:
                      id: 99ace441-e900-4a4c-9731-c97ea8451482X
                      name:
                        enUS: III
                    preferredFirst: Hugh
                  email: first@last.com
                  externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
            employeeType:
              description: Employee type for the job
              type: object
              properties:
                id:
                  description: Id of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                workLocation:
                  id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                  name:
                    enUS: Toronto Headquarters
          example:
            id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5b
            code: HCOPS
            name:
              enUS: Lead Tech
              esES: Tecnico Principal
            requisitionId: DEV10113
            selectedFLSAStatus: 1
            componentCompany:
              id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5
              name: Acme Industries
            workLocation:
              id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5
              name: Acme Lab One
            supervisor:
              id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8a
              name:
                prefix:
                  id: 08505515-581e-50a1-5f5e-515d5b35f5ff
                  name:
                    enUS: Mr.
                first: Jeff
                middle: Blue
                last: Winner
                suffix:
                  id: 5558f505-8c15-5cd5-5aa3-dd555eas1555
                  name:
                    enUS: III
                preferredFirst: Joe
              email: first@last.com
              externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
            employeeType:
              id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5
              name:
                enUS: Comp Mgt 5-Reg
        organizationLevels:
          type: array
          items:
            description: Organization level
            type: object
            properties:
              description:
                description: >-
                  Description of a organization that the new hire is associated
                  with.
                type: string
              id:
                description: Identifier of the organization level
                type: string
              level:
                description: Level of the organization level
                type: string
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                description: >-
                  Unique code of a organization that the new hire is associated
                  with
                type: string
            example:
              description: Product development team
              'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
              level: 1
              code: PROD
        compensation:
          description: Compensation of the new hire
          type: object
          properties:
            isFullTime:
              description: Whether the new hire is full time
              type: boolean
            isSalaried:
              description: Whether the new hire is salaried
              type: boolean
            workHours:
              description: Work hours of the new hire
              type: number
            weeklyHours:
              description: Weekly hours of the new hire
              type: number
            currencyType:
              description: Currency type of the new hire's pay
              type: string
            currency:
              description: Currency of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
            payRate:
              description: Pay rate of the new hire
              type: number
            ratePer:
              description: Pay period of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyType: USD
            currency:
              code: USD
              name:
                enUS: US Dollar
            payRate: 20
            ratePer:
              code: H
              name:
                enUS: Hour
        onboardingOwner:
          description: Onboarding owner for the new hire
          type: object
          properties:
            id:
              description: Id of the onboarding owner
              type: string
            externalUserId:
              description: External user identifier of the onboarding owner
              type: string
            email:
              description: Email of the onboarding owner
              type: string
            name:
              description: Name of the onboarding owner
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: Hugo@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate:
          description: Hire date of the new hire
          type: string
          format: date-time
        orientationDate:
          description: Orientation date of the new hire
          type: string
          format: date-time
        startDate:
          description: Start date of the new hire
          type: string
          format: date-time
        pastStartDateReason:
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          type: string
        mentor:
          description: Mentor of the new hire
          type: object
          properties:
            description:
              description: Description of the mentor
              type: string
            id:
              description: Id of the mentor
              type: string
            externalUserId:
              description: External user identifier of the mentor
              type: string
            email:
              description: Email of the mentor
              type: string
            name:
              description: Name of the mentor
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            description: >-
              Suzie is THE person who knows the product best. She loves helping
              new team members.
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: talisa@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        personalMessage:
          description: Personalized welcome message for the new hire
          type: string
        provisioning:
          description: Provisioning for the new hire
          type: object
          properties:
            provisioningItems:
              description: The list of provisioning items selected for this New Hire
              type: array
              items:
                description: An individual provisioning item that is assigned to a new hire
                type: object
                properties:
                  id:
                    description: Id of the provisioning item
                    type: string
                  name:
                    description: Category of the provisioning item
                    type: string
                  recipient:
                    description: Recipient of the provisioning item
                    type: string
                  selectedOption:
                    description: Selected option for the provisioning item
                    type: object
                    properties:
                      description:
                        description: Description of the Option
                        type: string
                      id:
                        description: Unique identifier of the Option
                        type: string
                    example:
                      description: Apple iPad
                      id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4
                  comments:
                    description: Comment on the provisioning item
                    type: string
                example:
                  NewHireProvisioningItemReadModel:
                    id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2
                    name: Corporate Credit Card
                    recipient: accounting@company.com
                    selectedOption:
                      description: Amax Card
                      id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98
                    comments: Platinum level
            summaryEmailRecipients:
              description: >-
                These emails receive updates about this new hire's provisioning
                items
              type: array
              items:
                description: >-
                  An individual email that receives updates on the new hire's
                  provisioning items
                type: string
          example:
            provisioning:
              provisioningItems:
                - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                  name: Corporate Credit Card
                  recipient: accounting@company.com
                  selectedOption:
                    description: Deluxe card
                    id: 6790f864-b0ff-4b1b-a3ac-23033c671c44
                  comments: A credit card
                - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bd
                  name: Network Account
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Security Level 2 Account
                    id: a38d541b-16f7-46b6-b48a-892cb3831784
                  comments: Allow access to data
                - id: add33aee-ebff-4d50-8f45-9d7ab820c053
                  name: Phone Type
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Galaxy S5
                    id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                  comments: Black
              summaryEmailRecipients:
                - fred@bluebill.com
                - jred@bluebill.com
                - ned@bluebill.com
        onboardingStatus:
          description: The status of the new hire in onboarding
          type: string
        identityUserId:
          description: Identity user identifier of the new hire
          type: string
        externalUserId:
          description: External user identifier of the new hire
          type: string
        employeeNumber:
          description: Employee number of the new hire
          type: string
        sentToProcessHireDate:
          description: Date that the new hire was processed
          type: string
          format: date-time
        launchedOn:
          description: Launch date of the new hire
          type: string
          format: date-time
        createdAt:
          description: Creation date of the new hire
          type: string
          format: date-time
        updatedAt:
          description: Last updated date of the new hire
          type: string
          format: date-time
      example:
        contactInformation:
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Hugh
          emailAddress: hugo2296@gmail.com
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
            country:
              code: CAN
              name:
                enUS: Canada
        job:
          id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1b
          code: DJOB
          name:
            enUS: Lead Tech
            esES: Tecnico Principal
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          supervisor:
            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Joe
              middle: Jose
              last: Santo
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: Jr
              preferredFirst: Joseph
            email: jsanto@example.com
            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          componentCompany:
            id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
            name: Wayne Enterprises
          workLocation:
            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
            name: Toronto Headquarters
          employeeType:
            id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1
            name:
              enUS: Comp Mgt 1-Reg
        compensation:
          isFullTime: true
          isSalaried: true
          workHours: 40
          weeklyHours: 168
          currencyType: CAD
          currency:
            code: CAD
            name:
              enUS: Canadian Dollar
          payRate: 50000
          ratePer:
            code: 'Y'
            name:
              enUS: Year
        mentor:
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Oden
            middle: Joe
            last: Leonerd
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Kevin
          email: oden_leon@gmail.com
          externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
        onboardingOwner:
          id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Jared
            middle: Joseph
            last: Nalin
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Jared
          email: jared_nalin@example.com
          externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        onboardingStatus: Launched
        sentToProcessHireDate:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        launchedOn:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        hireDate: '2018-06-23T00:00:00Z'
        orientationDate: '2018-07-06T00:00:00Z'
        startDate: '2018-06-30T00:00:00Z'
        organizationLevels:
          - description: Product division
            id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50f
            level: 1
            code: PROD
          - description: Public relations
            id: 8e4507db-330b-466d-8786-9f55da5f6c31
            level: 2
            code: PR
          - description: Stanton branch
            id: 2bf4a848-2926-485f-aa47-4aa8db90921b
            level: 3
            code: STAT
          - description: Sales team
            id: 3c792567-7494-4f84-91ae-73c797c714ef
            level: 4
            code: SALES
        provisioning:
          provisioningItems:
            - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
              name: Corporate Credit Card
              recipient: accounting@company.com
              selectedOption:
                description: Amax Card
                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
              comments: Requires a platinum Amax Card
            - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
              name: Network Account
              recipient: helpdesk@company.com
              selectedOption:
                description: Super Account
                id: 3c792567-7494-4f84-91ae-73c797c714efX
              comments: Highest clearance
            - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
              name: Phone Type
              recipient: helpdesk@company.com
              selectedOption:
                description: Galaxy S5
                id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
              comments: Requires a black phone
          summaryEmailRecipients:
            - first@last.com
            - last@beuh.com
            - Joe@erad.com
        identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
        employeeNumber: '1234567890'
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        createdAt: '2018-05-29T19:30:35.95Z'
        updatedAt: '2018-06-07T17:44:25.378Z'
    NewHirePostModel:
      type: object
      properties:
        contactInformation:
          description: Contact information for the new hire
          type: object
          properties:
            name:
              description: Name of the new hire
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire
                  type: object
                  properties:
                    id:
                      description: Unique identifier of the prefix
                      type: string
                    code:
                      description: UltiPro prefix code
                      type: string
                  example:
                    prefix:
                      id: ba00d403-e240-4c16-b894-92036dbb4b0f
                      code: MS
                first:
                  description: >-
                    First name of the new hire. maxLength: 50 for hires in
                    US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
                middle:
                  description: Middle name of the new hire
                  type: string
                  maxLength: 50
                last:
                  description: >-
                    Last name of the new hire. maxLength: 50 for hires in
                    US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
                formerLast:
                  description: >-
                    Former last name of the new hire. maxLength: 30 for hires in
                    US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
                suffix:
                  description: Suffix of the new hire
                  type: object
                  properties:
                    id:
                      description: Unique identifier of the suffix
                      type: string
                    code:
                      description: UltiPro suffix code
                      type: string
                  example:
                    prefix:
                      id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                      code: SR
                preferredFirst:
                  description: >-
                    Preferred first name of the new hire. maxLength: 50 for
                    hires in US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
              required:
                - first
                - last
              example:
                name:
                  prefix:
                    code: MR
                  first: Firstname
                  middle: Middlename
                  last: Lastname
                  formerLast: Formerlastname
                  suffix:
                    id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  preferredFirst: Preferred
            emailAddress:
              description: Email address of the new hire
              type: string
              maxLength: 254
            primaryPhone:
              description: >-
                Primary phone number of the new hire. maxLength: 50 for hires
                not in US/Canadian address country. If hire's address country is
                US/Canada, a valid phone format is expected
              type: string
              maxLength: 50
            secondaryPhone:
              description: >-
                Secondary phone number of the new hire. maxLength: 50 for hires
                not in US/Canadian address country. If hire's address country is
                US/Canada, a valid phone format is expected
              type: string
              maxLength: 50
            address:
              description: Address of the new hire
              type: object
              properties:
                line1:
                  description: >-
                    Line 1 of the address. maxLength: 100 for US/Canadian
                    address country, 255 otherwise
                  type: string
                  maxLength: 255
                line2:
                  description: >-
                    Line 2 of the address. maxLength: 100 for US/Canadian
                    address country, 255 otherwise
                  type: string
                  maxLength: 255
                city:
                  description: >-
                    City of the address. maxLength: 50 for US/Canadian address
                    country, 255 otherwise
                  type: string
                  maxLength: 255
                postalCode:
                  description: >-
                    Zip/postal code of the address. maxLength: 50 for hires not
                    in US/Canadian address country. If hire's address country is
                    US/Canada, a valid postal code format is expected
                  type: string
                  maxLength: 50
                county:
                  description: >-
                    County name of the address. maxLength: 30 for US/Canadian
                    address country, 255 otherwise
                  type: string
                  maxLength: 255
                stateCode:
                  description: State code of the address
                  type: string
                countryCode:
                  description: ISO country code of the address
                  type: string
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
          required:
            - emailAddress
          example:
            name:
              prefix:
                code: MR
              first: Firstname
              middle: Middlename
              last: Lastname
              formerLast: Formerlastname
              suffix:
                id: ba00d403-e240-4c16-b894-92036dbb4b0fX
            emailAddress: first@last.com
            primaryPhone: 954-687-8909
            secondaryPhone: '9545554567'
            address:
              line1: Line 1
              line2: Line 2
              city: Weston
              zipCode: '33326'
              county: Broward
              stateCode: FL
              countryCode: USA
        job:
          description: Job information for the new hire
          type: object
          properties:
            id:
              description: Unique identifier of the job
              type: string
            code:
              description: UltiPro job code
              type: string
            requisitionId:
              description: RequisitionId of the job
              type: string
              maxLength: 50
            componentCompany:
              description: Component company of the job
              type: object
              properties:
                id:
                  description: Unique identifier of the component company
                  type: string
                code:
                  description: UltiPro component company Id
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: SDXUT
            workLocation:
              description: Work location of the job
              type: object
              properties:
                id:
                  description: Unique identifier of the work location
                  type: string
                code:
                  description: UltiPro work location code
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: FLLPP
            supervisor:
              description: Supervisor of the job
              type: object
              properties:
                id:
                  description: Onboarding employee Id
                  type: string
                code:
                  description: Person Id from UltiPro
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: CA00D403-E240-4C16-B894-92036DBB4B0F
            employeeType:
              description: Employee type for the job
              type: object
              properties:
                id:
                  description: Unique identifier of the employee type
                  type: string
                code:
                  description: UltiPro employee type code
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: ET347
            selectedFLSAStatus:
              description: Selected FLSA status for the job
              type: string
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
          example:
            code: MGT
            requisitionId: '1234'
            selectedFLSAStatus: 1
            componentCompany:
              code: FZAJ2
            workLocation:
              code: QU4FL
            supervisor:
              code: 89F8FA04-7055-47D2-943B-D2A409FFA3BF
            employeeType:
              code: INT
        organizationLevels:
          type: array
          items:
            description: Organization level
            type: object
            properties:
              id:
                description: Identifier of the organization level
                type: string
              level:
                description: Level of the organization level
                type: string
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                description: Code of the organization level
                type: string
            example:
              id: 89e9f572-4c63-4630-8008-dd09c97ab64c
              level: 1
              code: ORG1
        compensation:
          description: Compensation information for the new hire
          type: object
          properties:
            isFullTime:
              description: Whether the new hire is full time
              type: boolean
            isSalaried:
              description: Whether the new hire is salaried
              type: boolean
            workHours:
              description: Work hours of the new hire
              type: number
            weeklyHours:
              description: >-
                Weekly hours of the new hire. Only applicable for hires not in
                US/Canadian companies
              type: number
              maximum: 168
            currencyCode:
              description: ISO currency code of the new hire
              type: string
            payRate:
              description: Pay rate of the new hire
              type: number
            ratePer:
              description: >-
                Pay period of the new hire. Accepts "H" (Hour), "W" (Week), "P"
                (Period), "Y" (Year)
              type: string
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyCode: USD
            payRate: 20
            ratePer: H
        onboardingOwnerId:
          description: External user identifier of the onboarding owner
          type: string
        hireDate:
          description: Hire date of the new hire
          type: string
          format: date-time
        orientationDate:
          description: Orientation date of the new hire
          type: string
          format: date-time
        startDate:
          description: Start date of the new hire
          type: string
          format: date-time
        pastStartDateReason:
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          type: string
          maxLength: 250
        mentor:
          description: Mentor for the new hire
          type: object
          properties:
            description:
              description: Brief description of mentor
              type: string
              maxLength: 85
            id:
              description: Onboarding employee id
              type: string
            code:
              description: Person Id from UltiPro
              type: string
          example:
            prefix:
              description: >-
                Suzie is THE person who knows the product best. She loves
                helping new team members.
              id: ba00d403-e240-4c16-b894-92036dbb4b0fX
              code: MR
        personalMessage:
          description: Personal message for the new hire
          type: string
          maxLength: 250
      example:
        contactInformation:
          name:
            prefix:
              code: MR
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            preferredFirst: Hugh
            suffix:
              code: III
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
          emailAddress: hugo2296@gmail.com
        onboardingOwnerId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate: 2018/06/23
        startDate: 2018/06/30
        orientationDate: 2018/07/06
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        compensation:
          fullTime: true
          salaried: true
          workHours: 40
          weeklyHours: 0
          currencyCode: CAD
          payRate: 50000
          ratePer: 'Y'
        job:
          code: DJOB
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          componentCompany:
            code: FZAJ2
          workLocation:
            code: QU4FL
          supervisor:
            code: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          employeeType:
            code: CMPMGT
        organizationLevels:
          - level: 1
            code: PROD
          - level: 2
            code: PR
          - level: 3
            code: STAT
          - level: 4
            code: SALES
        mentor:
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          id: 2c9e2b00-f229-4930-9d82-e86e11d6440b
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
    TimeItem:
      type: object
      required:
        - dateWorked
        - hoursWorked
      properties:
        employeeNumber:
          description: >-
            The UltiPro EmployeeNumber, either this value OR the EEID MUST be
            specified
          type: string
          maxLength: 9
        eeId:
          description: >-
            The UltiPro EEID, either this value OR the EmployeeNumber MUST be
            specified
          type: string
          minLength: 12
          maxLength: 12
        companyCode:
          description: >-
            The UltiPro CompanyCode, either this value OR the CoID MUST be
            specified
          type: string
          maxLength: 5
        coId:
          description: >-
            The UltiPro CoID, either this value OR the CompanyCode MUST be
            specified
          type: string
          minLength: 5
          maxLength: 5
        dateWorked:
          description: The date the hours were worked
          type: string
          format: date-time
        hoursWorked:
          description: The number of hours worked
          type: number
          multipleOf: 0.01
        id:
          description: This value should be NULL from the originator
          type: number
    TimeItemList:
      type: object
      required:
        - timeData
      properties:
        timeData:
          type: array
          items:
            $ref: '#/components/schemas/TimeItem'
    IntegrationAuditConfiguration:
      type: object
      properties:
        tableName:
          type: string
        fieldName:
          type: string
        isAudited:
          type: string
        isDefaultAudit:
          type: string
    InternationalEmployeeModel:
      type: object
      properties:
        caste:
          type: string
        casteDescription:
          type: string
        countryCode:
          type: string
        employeeId:
          type: string
        effectiveDate:
          format: date-time
          type: string
        ethnicIdCode:
          type: string
        healthCareId:
          type: string
        isAboriginal:
          type: string
        nationalId:
          type: string
        nationalIdExpirationDate:
          format: date-time
          type: string
        oldNationalId:
          type: string
        oldNationalIdExpirationDate:
          format: date-time
          type: string
        userDefinedField1:
          type: string
        userDefinedField2:
          type: string
        userDefinedField3:
          format: float
          type: number
        userDefinedField4:
          format: float
          type: number
        userDefinedField5:
          format: date-time
          type: string
        userDefinedField6:
          format: date-time
          type: string
        userDefinedField7:
          type: string
        userDefinedField8:
          type: string
        userDefinedField9:
          type: string
        userDefinedField10:
          format: float
          type: number
        userDefinedField11:
          format: float
          type: number
        userDefinedField12:
          format: date-time
          type: string
        userDefinedField13:
          format: date-time
          type: string
        userDefinedField14:
          type: string
        currencyCode:
          type: string
        isMilitaryReserve:
          type: string
        isMilitaryServiceCompleted:
          type: string
        medicalRegionCode:
          type: string
    JobGroupDetail:
      type: object
      properties:
        jobGroupCode:
          type: string
        jobGroupCodeDescription:
          type: string
        jobGroupNotes:
          type: string
        jobGroupCountryCode:
          type: string
    jobs:
      type: object
      required:
        - code
        - title
        - countryCode
      properties:
        title:
          description: Job title.
          type: string
        countryCode:
          description: Job country code.
          type: string
        code:
          description: Job Code, the unique identifier.
          type: string
        jobFamilyCode:
          description: Job family code.
          type: string
        isActive:
          description: The job status.
          type: boolean
    OptionRate:
      type: object
      properties:
        deductionCode:
          type: string
        benefitOption:
          type: string
        employeeRate:
          type: number
        employerRate:
          type: number
        effectiveDate:
          format: date-time
          type: string
        payFrequency:
          type: string
        rateStopDate:
          format: date-time
          type: string
    OpenEnrollmentEmployeeDeductions:
      type: object
      properties:
        benefitAmount:
          type: number
        benefitAmountRateOrPercent:
          type: number
        benefitOption:
          type: string
        addCoverage:
          type: boolean
        changeReason:
          type: string
        benefitStartDate:
          format: date-time
          type: string
        benefitStatus:
          type: string
        benefitStatusDate:
          format: date-time
          type: string
        benefitStopDate:
          format: date-time
          type: string
        companyId:
          type: string
        customAmount1:
          type: number
        customAmount2:
          type: number
        customDate:
          format: date-time
          type: string
        changeDatetime:
          format: date-time
          type: string
        createDatetime:
          format: date-time
          type: string
        deductionCode:
          type: string
        deductionType:
          type: string
        employeeAmount:
          type: number
        employeeCalculationRateOrPercent:
          type: number
        employeeEligibilityDate:
          format: date-time
          type: string
        employeeGoalAmt:
          type: number
        employeeGoalToDateAmount:
          type: number
        employeeId:
          type: string
        employeeMemberOrCaseNo:
          type: string
        employeeYearToDateAmount:
          type: number
        evidenceofInsurabilityDate:
          format: date-time
          type: string
        needEvidenceOfInsurability:
          type: boolean
        evidenceofInsurabilityDesiredAmount:
          type: number
        employeeEligibilityDesiredCalculationRateOrPercent:
          type: integer
        employerAmount:
          type: number
        employerCalculationRateOrPercent:
          type: number
        employerCalculationRule:
          type: string
        employerYearToDateAmount:
          type: number
        isDeductionOffset:
          type: boolean
        medicalIndicator:
          type: boolean
        deductionNotes:
          type: string
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        deductionStartDate:
          format: date-time
          type: string
        deductionStopDate:
          format: date-time
          type: string
        benefitWaiveReason:
          type: string
        isBenefitWaived:
          type: boolean
        oeDrop:
          type: boolean
    token-response:
      type: object
      properties:
        access_token:
          description: This is an encrypted string, JWT token
          type: string
        token_type:
          description: Bearer token
          type: string
        expires_in:
          description: When the token will expire, in seconds
          type: number
        scope:
          description: >-
            the scope of what you are entitled to access, part of your
            integration setup
          type: string
    OpenEnrollmentDependentDeductions:
      type: object
      properties:
        benefitAmount:
          type: number
        changeReason:
          type: string
        relationship:
          type: string
        benefitStartDate:
          format: date-time
          type: string
        benefitStatus:
          type: string
        benefitStatusDate:
          format: date-time
          type: string
        benefitStopDate:
          format: date-time
          type: string
        companyId:
          type: string
        changeDatetime:
          format: date-time
          type: string
        contactId:
          type: string
        createDatetime:
          format: date-time
          type: string
        certificateNo:
          type: string
        currentCoId:
          type: string
        declinedByCarrier:
          type: string
        declinedByCarrierDate:
          format: date-time
          type: string
        declinedByCarrierReason:
          type: string
        deductionCode:
          type: string
        deductionType:
          type: string
        depBPlanTVID:
          type: number
        employeeId:
          type: string
        evidenceofInsurabilityDate:
          format: date-time
          type: string
        needEvidenceOfInsurability:
          type: boolean
        employerAmount:
          type: number
        deductionNotes:
          type: string
        primaryCarePhysician:
          type: string
        primaryCarePhysicianId:
          type: string
        systemId:
          type: string
        isBenefitWaived:
          type: boolean
        oeDrop:
          type: boolean
    org-levels:
      type: object
      required:
        - code
        - description
        - level
      properties:
        description:
          description: Organization Level Description.
          type: string
          maxLength: 25
        budgetGroup:
          description: Organizational budget group.
          type: string
        code:
          description: Organization Code, one half of the unique identifier.
          type: string
        currentYearBudgetFTE:
          description: Current year to date budget for full time employee.
          type: number
          format: double
          maxLength: 99999999999999
        currentYearBudgetSalary:
          description: Current year to date budget for salary.
          type: number
          format: double
          maxLength: 99999999999999
        glSegment:
          description: >-
            General Ledger Segment. Alpha-numeric and special characters
            allowed.
          type: string
          minLength: 1
          maxLength: 15
        lastYearBudgetFTE:
          description: Last year Budget for full time employee.
          type: number
          maxLength: 99999999999999
        lastYearBudgetSalary:
          description: Last year Budget salary.
          type: number
          maxLength: 99999999999999
        level:
          description: >-
            Organazation Level, one half of unique identifier. Cannot be
            updated.
          type: number
        levelDescription:
          description: Organization description. Cannot be updated.
          type: string
        reportingCategory:
          description: The reporting category code.
          type: string
        isActive:
          description: The organization level status.
          type: boolean
    org-levels-body:
      type: array
      items:
        type: object
        required:
          - code
          - description
          - level
        properties:
          description:
            description: Organization Level Description.
            type: string
            maxLength: 25
          budgetGroup:
            description: Organizational budget group.
            type: string
          code:
            description: Organization Code, one half of the unique identifier.
            type: string
          currentYearBudgetFTE:
            description: Current year to date budget for full time employee.
            type: number
            format: double
            maxLength: 99999999999999
          currentYearBudgetSalary:
            description: Current year to date budget for salary.
            type: number
            format: double
            maxLength: 99999999999999
          glSegment:
            description: >-
              General Ledger Segment. Alpha-numeric and special characters
              allowed.
            type: string
            minLength: 1
            maxLength: 15
          lastYearBudgetFTE:
            description: Last year Budget for full time employee.
            type: number
            maxLength: 99999999999999
          lastYearBudgetSalary:
            description: Last year Budget salary.
            type: number
            maxLength: 99999999999999
          level:
            description: >-
              Organazation Level, one half of unique identifier. Cannot be
              updated.
            type: number
          levelDescription:
            description: Organization description. Cannot be updated.
            type: string
          reportingCategory:
            description: The reporting category code.
            type: string
          isActive:
            description: The organization level status.
            type: boolean
    MultiStatusResponse:
      type: object
      properties:
        title:
          type: string
        type:
          type: string
        detail:
          type: string
        errorCount:
          type: number
        multistatus:
          type: array
          items:
            properties:
              sequenceId:
                type: number
              status:
                description: http status
                type: string
              modelstate:
                description: Only present if status is error
                type: object
                properties:
                  property-name:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                        type:
                          type: string
              body:
                description: Only present if status is success
                type: object
                properties:
                  eeid:
                    type: string
                  coid:
                    type: array
                    items:
                      type: string
                  schema:
                    $ref: '#/components/schemas/pto-plans'
        success_count:
          type: number
        error_count:
          type: number
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
    PayRegister:
      type: object
      properties:
        annualSalary:
          type: number
        autoAllocate:
          type: boolean
        bonusTotalHours:
          type: number
        bonusTotalOTHours:
          type: number
        checkAddMode:
          type: string
        checkAmount:
          type: number
        companyId:
          type: string
        payPeriodFrequency:
          type: string
        currencyCode:
          type: string
        directDepositAmount:
          type: number
        documentNumber:
          type: string
        earningTaxReportingType:
          type: string
        employeeId:
          type: string
        employeeStatus:
          type: string
        employeeNumber:
          type: string
        checkId:
          type: string
        hourlyPayRate:
          type: number
        isRegularPayForCumulative:
          type: string
        isVoided:
          type: boolean
        isVoidingRecord:
          type: boolean
        jobCode:
          type: string
        lastRegularPayDate:
          format: date-time
          type: string
        locationCode:
          type: string
        nameFirst:
          type: string
        nameLast:
          type: string
        nameMiddle:
          type: string
        nameSuffix:
          type: string
        netAmount:
          type: number
        organizationLevel1:
          type: string
        organizationLevel2:
          type: string
        organizationLevel3:
          type: string
        organizationLevel4:
          type: string
        originalPayPeriodFrequency:
          type: string
        payDate:
          format: date-time
          type: string
        payGroup:
          type: string
        periodControl:
          type: string
        periodEndDate:
          format: date-time
          type: string
        periodStartDate:
          format: date-time
          type: string
        project:
          type: string
        reconciled:
          type: string
        reconcileDate:
          format: date-time
          type: string
        sequenceNumber:
          type: integer
        shift:
          type: string
        ssn:
          type: string
        stateSui:
          type: string
        suiGross:
          type: number
        taxCalculationGroupID:
          type: string
        taxCalculationSequence:
          type: string
        totalDeductionAmount:
          type: number
        totalEarningsAmount:
          type: number
        totalHours:
          type: number
        totalHoursWorked:
          type: number
        totalShiftAmount:
          type: number
        totalTaxAmount:
          type: number
        voidDate:
          format: date-time
          type: string
    PayGroupPayPeriods:
      type: object
      properties:
        isActive:
          type: boolean
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        dateTimeFiscalEndDone:
          type: string
          format: date-time
        dateTimePeriodClosed:
          type: string
          format: date-time
        dateTimePeriodOpened:
          type: string
          format: date-time
        fiscalYearEnd:
          type: boolean
        isCtsCreated:
          type: boolean
        isPeriodClosed:
          type: boolean
        isQtdobPerControl:
          type: boolean
        isYtdobPerControl:
          type: boolean
        monthlyPayPeriodNumber:
          type: integer
        mqyEndFlag:
          type: string
        obType:
          type: string
        payDate:
          type: string
          format: date-time
        payDateSeq:
          type: integer
        payGroup:
          type: string
        payPeriodId:
          type: integer
        periodControl:
          type: string
        periodEndDate:
          type: string
          format: date-time
        periodStartDate:
          type: string
          format: date-time
        periodType:
          type: string
        suspAutoPay:
          type: string
        suspDirectDeposit:
          type: string
        userIdChanged:
          type: string
        userIdCreated:
          type: string
        notes:
          type: string
        auditKey:
          type: integer
        payrollStateId:
          type: integer
        combineNachaFileName:
          type: string
        combineNachaFileOverride:
          type: boolean
        txFilAppDateTime:
          type: string
          format: date-time
        txFilAppUserId:
          type: integer
        allowWebPyrlAfterYeRecon:
          type: boolean
        payrollChangeFlags:
          type: integer
        payrollTransitionFlags:
          type: integer
        instantCheckMoveRule:
          type: boolean
        bringInPayrollBatchLoad:
          type: boolean
        bringInPpiLoad:
          type: boolean
        bringInRetroPayLoad:
          type: boolean
        lmwActive:
          type: boolean
        roePayDate:
          type: string
          format: date-time
        taxArrearsCollectEnabled:
          type: boolean
    OrganizationReportingCategoryDetails:
      type: object
      properties:
        description:
          type: string
        code:
          type: string
        level:
          type: string
        integrationRecordId:
          type: string
    PayrollDeductionsHistory:
      type: object
      properties:
        allowPartialDeduction:
          type: string
        batchID:
          type: string
        benefitAmount:
          type: number
        benefitOption:
          type: string
        benefitProvider:
          type: string
        childSupportType:
          type: string
        companyId:
          type: string
        checkId:
          type: string
        currentArrearsAmount:
          type: number
        customAmount1:
          type: number
        customAmount2:
          type: number
        customDate:
          format: date-time
          type: string
        deductionCalculationBasisAmt:
          type: number
        deductionCode:
          type: string
        deductionForBonusOnly:
          type: string
        deductionPlanType:
          type: string
        deductionType:
          type: string
        deferredCompensationCap:
          type: number
        deferredCompensationRegularCap:
          type: number
        dependentRecordId:
          type: string
        employeeCalculationRateOrPercent:
          type: number
        employeeCalculaitonRule:
          type: string
        employeeCurrentAmount:
          type: number
        employeeDeductionLastPaid:
          format: date-time
          type: string
        employeeGoalAmount:
          type: number
        employeeGoalRule:
          type: string
        employeeGoalToDateAmount:
          type: number
        employeeId:
          type: string
        employeeOriginalAmount:
          type: number
        employeeNumber:
          type: string
        employerAnnualCapCalculationRule:
          type: string
        employerCalculationRateOrPercent:
          type: number
        employerCalculationRule:
          type: string
        employerCurrentAmount:
          type: number
        employerPeriodCapCalculationRule:
          type: string
        excludeFromWorkersCompensation:
          type: string
        generalLedgerExpenseAccount:
          type: string
        generalLedgerPayAccount:
          type: string
        is401k:
          type: boolean
        is403b:
          type: boolean
        is408k:
          type: boolean
        is408p:
          type: boolean
        is457:
          type: boolean
        is457b:
          type: boolean
        is457F:
          type: boolean
        is501C:
          type: boolean
        isD125:
          type: boolean
        isDeductionOffSet:
          type: boolean
        isDeferredCompensation:
          type: boolean
        isDependentCare:
          type: boolean
        isHousing:
          type: boolean
        isNonQualifiedPlan:
          type: boolean
        isPublicEmployeeRetirement:
          type: boolean
        isProrated:
          type: boolean
        isSection125:
          type: boolean
        isVoided:
          type: boolean
        isVoidingRecord:
          type: string
        payDate:
          format: date-time
          type: string
        payeeID:
          type: string
        payGroup:
          type: string
        periodControl:
          type: string
        recordId:
          type: number
        taxCalculationGroupId:
          type: string
        taxCategory:
          type: string
        timeclockCode:
          type: string
        vendor:
          type: string
        wageGarnishmentAdditionalArrearageAmount:
          type: number
        wageGarnishmentAllocateAsArrears:
          type: string
        wageGarnishmentAmountExempt:
          type: number
        wageGarnishmentAmountExemptFromLevy:
          type: number
        wageGarnishmentAmountExemtFromGarn:
          type: number
        wageGarnishmentAmountSubjectToCS:
          type: number
        wageGarnishmentAmountSubjectToGarnishment:
          type: number
        wageGarnishmentDeductionTaxCategory:
          type: string
        wageGarnishmentDisposableIncome:
          type: number
        wageGarnishmentMinimumWageFactor:
          type: number
        wageGarnishmentWageCode:
          type: string
        yearToDateDeferredCompensationCombinedAmount:
          type: number
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData:
      type: object
      properties:
        fieldRows:
          type: array
          items:
            $ref: >-
              #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.FieldData
        className:
          type: string
        keyName:
          type: string
        keyValue:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData:
      type: object
      properties:
        fieldRows:
          type: array
          items:
            $ref: >-
              #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.FieldData
        className:
          type: string
        keyName:
          type: string
        keyValue:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.FieldData:
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.FieldData:
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
    EmpPersonDetails:
      type: object
      properties:
        additionalName1:
          type: string
        additionalName2:
          type: string
        addressId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        addressIsOnTaxBoundary:
          type: boolean
        addressLatitude:
          format: double
          type: number
        cobraExport:
          type: string
        cobraIsActive:
          type: boolean
        cobraReason:
          type: string
        cobraStatus:
          type: string
        cobraStatusDate:
          format: date-time
          type: string
        communityBroadcastSmsCode:
          type: string
        consentElectronicW2:
          type: boolean
        consentElectronicw2pr:
          type: boolean
        dateDeceased:
          format: date-time
          type: string
        dateOfCobraEvent:
          format: date-time
          type: string
        dateOfCobraExport:
          format: date-time
          type: string
        dateOfCobraLetter:
          format: date-time
          type: string
        dateOfI9Expiration:
          format: date-time
          type: string
        datetimeChanged:
          format: date-time
          type: string
        datetimeCreated:
          format: date-time
          type: string
        disabilityType:
          type: string
        ethnicDescription:
          type: string
        formerName:
          type: string
        healthBloodType:
          type: string
        healthEyes:
          type: string
        healthHair:
          type: string
        healthHeightFeet:
          type: string
        healthHeightInches:
          type: string
        healthLastDonateDate:
          format: date-time
          type: string
        healthWeight:
          format: float
          type: number
        i9AlienNumber:
          type: string
        i9DocA:
          type: string
        i9DocB:
          type: string
        i9DocC:
          type: string
        i9Verified:
          type: boolean
        i9VisaType:
          type: string
        i9WorkAuth:
          type: string
        isDisabled:
          type: boolean
        isMultiPayGroup:
          type: boolean
        isSmoker:
          type: boolean
        militaryService:
          type: boolean
        militaryBranchServed:
          type: string
        militaryEra:
          type: string
        militaryIsDisabledVet:
          type: string
        militaryIsOthEligVet:
          type: string
        militaryIsOthEligVetBasis:
          type: string
        militaryIsActiveWartimeVet:
          type: string
        nameFormer:
          type: string
        previousSSN:
          type: string
        originCountry:
          type: string
        originLocation:
          type: string
        w2IsDeceased:
          type: boolean
        cobraNotes:
          type: string
        addressSms:
          type: string
        militarySeparationDate:
          format: date-time
          type: string
        homePhoneIsPrivate:
          type: boolean
        smsApprovals:
          type: boolean
        smsPayNotification:
          type: boolean
        i9VisaExpirationDate:
          format: date-time
          type: string
        militaryIsMedalVet:
          type: string
        lastNameNotSameAsSSCard:
          type: string
        chkCashingInstCode:
          type: string
        nationality1:
          type: string
        nationality2:
          type: string
        nationality3:
          type: string
        personId:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        employeeId:
          type: string
        companyId:
          type: string
        userName:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        preferredName:
          type: string
        namePrefixCode:
          type: string
        nameSufixCode:
          type: string
        emailAddress:
          type: string
        emailAddressAlternate:
          type: string
        homePhone:
          type: string
        homePhoneCountry:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressCity:
          type: string
        addressState:
          type: string
        addressZipCode:
          type: string
        addressCountry:
          type: string
        addressCounty:
          type: string
        nationalId:
          type: string
        nationalIdCountry:
          type: string
        dateOfBirth:
          format: date-time
          type: string
        gender:
          type: string
        ethnicIDCode:
          type: string
        maritalStatusCode:
          type: string
        ssn:
          type: string
        ssnIsSuppressed:
          type: boolean
    Earning:
      type: object
      required:
        - refId
        - companyCode
        - empNo
        - code
        - source
      properties:
        refId:
          description: Unique identifier for each earnings.
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyCode:
          description: Company code associated with employee.
          type: string
          maximum: 5
        empNo:
          description: Employee number associated with employee for time data.
          type: string
          maximum: 9
        chargeDate:
          description: >-
            Used in the calculation of coefficient overtime and tips processing.
            Formatting must conform to ISO 8601 UTC Format
          type: string
          format: date-time
        code:
          description: Earnings code for time data
          type: string
          maximum: 5
        hours:
          description: >-
            Number of hours associated with earnings, if appropriate. Decimal
            value up to 4 decimal places. Positive and negative values allowed.
          type: string
          format: number
        amount:
          description: >-
            Amount associated with earnings, if appropriate. Positive and
            negative values allowed.
          type: string
          format: number
        pieceCount:
          description: >-
            Number of pieces associated with earnings, if appropriate. Positive
            and negative values allowed.
          type: string
          format: number
        shiftCode:
          description: Shift code associated with time data.
          type: string
          maximum: 2
        location:
          description: Location associated with employee.
          type: string
          maximum: 6
        job:
          description: Job code associated with employee’s time data.
          type: string
          maximum: 8
        project:
          description: Project code or value associated with employee’s time data.
          type: string
          maximum: 15
        orgLvl1:
          description: Organization level 1 code associated with employee’s time data
          type: string
          maximum: 6
        orgLvl2:
          description: Organization level 2 code associated with employee’s time data.
          type: string
          maximum: 6
        orgLvl3:
          description: Organization level 3 code associated with employee’s time data.
          type: string
          maximum: 6
        orgLvl4:
          description: Organization level 4 code associated with employee’s time data.
          type: string
          maximum: 6
        payRate:
          description: >-
            Pay rate associated with employee’s time data.  Value overrides pay
            rate in UKG Pro.
          type: string
          format: number
        pieceRate:
          description: >-
            Piece rate associated with employee’s time data.  Value overrides
            piece rate in UKG Pro.
          type: string
          format: number
        roePayDate:
          description: The Record of Employment pay date.  Must be a valid pay date.
          type: string
          format: date-time
        adjEarnPeriodStartDate:
          description: Used for co-efficient overtime period adjustment start date.
          format: date-time
          type: string
        adjEarnPeriodEndDate:
          description: Used for co-efficient overtime period adjustment end date.
          format: date-time
          type: string
        checkSequence:
          description: >-
            Sequence of multiple checks for a single employee. Specify the type
            of additional pay (check or DDA) being added to the employee(s) via
            Time Clock Import. A - Creates an additional direct deposit advice
            with deductions (for employees  with existing DD setups). D -
            Creates an additional direct deposit with No deductions (for
            employees with existing DD setups). B - Creates an additional pay
            with deductions; this will create a live check for the employees. J
            -  Creates an additional pay with No deductions; this will create a
            live check for the employees
          type: integer
        createPayType:
          description: R - Creates a Regular Pay check.
          type: string
          maximum: 1
          minimum: 1
        forcePayCreation:
          description: >-
            To force the creation of an additional pay via Time clock import,
            set this to Y.
          type: string
          maximum: 1
          minimum: 1
        grossUp:
          description: This identifies if an earning is to be grossed up.
          type: string
          maximum: 1
        grossUpTarget:
          description: Specified net amount.
          type: integer
        grossUpTaxCalcMethod:
          description: >-
            The Gross Up Tax Calculation Method (E_Batch.
            EbtGrossUpTaxCalcMethod) Numeric value to identify which taxes to
            include in the gross up calculation.
          format: int32
          type: integer
        source:
          description: >-
            Source of the data as appropriate. Usually an alias of the system
            sending the data.
          type: string
          minimum: 1
    ErrorDetails:
      type: object
      properties:
        title:
          type: string
        refId:
          type: string
          format: uuid
        type:
          type: string
        detail:
          type: string
    ErrorStatusResponse:
      type: object
      properties:
        error_count:
          type: number
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetails'
    EarningStatusResponse:
      type: object
      properties:
        refId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyCode:
          type: string
        empNo:
          type: string
        chargeDate:
          type: string
          format: date-time
        code:
          type: string
        hours:
          type: string
        amount:
          type: string
        pieceCount:
          type: string
          format: number
        shiftCode:
          type: string
        location:
          type: string
        job:
          type: string
        project:
          type: string
        orgLvl1:
          type: string
        orgLvl2:
          type: string
        orgLvl3:
          type: string
        orgLvl4:
          type: string
        payRate:
          type: string
          format: number
        pieceRate:
          type: string
          format: number
        roePayDate:
          type: string
          format: date-time
        source:
          type: string
        isImportedIntoPayroll:
          type: boolean
        AdjEarnPeriodStartDate:
          type: string
          format: date-time
        AdjEarnPeriodEndDate:
          type: string
          format: date-time
        CheckSequence:
          type: integer
        CreatePayType:
          type: string
        ForcePayCreation:
          type: string
        GrossUp:
          type: string
        GrossUpTarget:
          type: integer
        GrossUpTaxCalcMethod:
          type: integer
    UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcSchemaFilter:
      type: object
      properties:
        className:
          type: string
    UltimateSoftware.Foundation.Services.Api.UltiPro.Configuration.PlatformConfiguration.Models.PcFieldSchema:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        dataType:
          type: string
    PositionReport:
      type: object
      properties:
        dateTimeChanged:
          type: string
          format: date-time
        dateTimeCreated:
          type: string
          format: date-time
        effectiveStartDate:
          type: string
          format: date-time
        effectiveStopDate:
          type: string
          format: date-time
        positionCode:
          type: string
        reportsToPositionCode:
          type: string
    Positions:
      type: object
      properties:
        alternateTitle:
          type: string
        companyId:
          type: string
        dateTimeChanged:
          format: date-time
          type: string
        dateTimeCreated:
          format: date-time
          type: string
        employeeType:
          type: string
        effectiveStartDate:
          format: date-time
          type: string
        effectiveStopDate:
          format: date-time
          type: string
        fundID:
          type: string
        glSegment:
          type: string
        isApproved:
          type: boolean
        isEligibleForBenefits:
          type: boolean
        isProrated:
          type: boolean
        jobcode:
          type: string
        locationCode:
          type: string
        notes:
          type: string
        organizationLevelCode1:
          type: string
        organizationLevelCode2:
          type: string
        organizationLevelCode3:
          type: string
        organizationLevelCode4:
          type: string
        overstaffingAllowed:
          type: boolean
        payGroupCode:
          type: string
        positionCode:
          type: string
        projectCode:
          type: string
        shiftGroupCode:
          type: string
        statusCode:
          type: string
        statusAsOfDate:
          format: date-time
          type: string
        userDefinedField01:
          type: string
        userDefinedField02:
          format: date-time
          type: string
        userDefinedField03:
          type: number
        userDefinedField04:
          type: object
          properties:
            isNull:
              type: boolean
            Value:
              type: number
        integrationRecordId:
          type: string
    pto-plans:
      type: object
      required:
        - employeeId
        - companyId
        - ptoPlan
      properties:
        employeeId:
          description: Employee Identifier
          type: string
        companyId:
          description: Company Identifier
          type: string
        ptoPlan:
          description: PTO Plan Identifier
          type: string
        earned:
          description: Amount of hours earned for PTO
          type: number
          format: double
        taken:
          description: Amount of hours taken for PTO
          type: number
          format: double
        pendingBalance:
          description: Balance of PTO hours
          type: number
          format: double
        earnedThroughDate:
          description: Date in which PTO is earned through, format should be YYYY-MM-DD
          type: string
        reset:
          description: Date in which the PTO reset's, format should be YYYY-MM-DD
          type: string
        pendingMoveDate:
          description: >-
            Date to be used if pending rules are relevant, format should be
            YYYY-MM-DD
          type: string
    pto-plans-body:
      type: array
      items:
        type: object
        required:
          - employeeId
          - companyId
          - ptoPlan
        properties:
          employeeId:
            description: Employee Identifier
            type: string
          companyId:
            description: Company Identifier
            type: string
          ptoPlan:
            description: PTO Plan Identifier
            type: string
          earned:
            description: Amount of hours earned for PTO
            type: number
            format: double
          taken:
            description: Amount of hours taken for PTO
            type: number
            format: double
          pendingBalance:
            description: Balance of PTO hours
            type: number
            format: double
          earnedThroughDate:
            description: Date in which PTO is earned through, format should be YYYY-MM-DD
            type: string
          reset:
            description: Date in which the PTO reset's, format should be YYYY-MM-DD
            type: string
          pendingMoveDate:
            description: >-
              Date to be used if pending rules are relevant, format should be
              YYYY-MM-DD
            type: string
    Roles:
      type: object
      properties:
        rolDefaultRole:
          type: boolean
        rolDescription:
          type: string
        rolID:
          type: number
        rolName:
          type: string
        rolDefaultRoleTerminated:
          type: boolean
        rolBI:
          type: boolean
    ShiftCode_GetList:
      type: object
      properties:
        shiftCode:
          type: string
        shiftCodeDescription:
          type: string
    TaxGroupsDetails:
      type: object
      properties:
        taxCalcGroupIdCode:
          type: string
        taxCalcGroupDescription:
          type: string
        depositFrequencyCode:
          type: string
        depositFrequencyDescription:
          type: string
        taxCalcGroupTypeCode:
          type: string
        taxCalcGroupTypeDescription:
          type: string
        taxCalcGroupReportId:
          type: string
        taxGroupCountryCode:
          type: string
        dateFinalWagesPaid:
          format: date-time
          type: string
        dateMonthReset:
          format: date-time
          type: string
        dateQuarterReset:
          format: date-time
          type: string
        dateYearReset:
          format: date-time
          type: string
        taxGroupIsNotSubjectToSocMedTax:
          type: boolean
        taxGroupIsNotPayingWages:
          type: boolean
        taxGroupIsInactive:
          type: boolean
    translations:
      description: The translations in all available languages.
      properties:
        en_us:
          type: string
        en_gb:
          type: string
        es_es:
          type: string
        fr_ca:
          type: string
        de_de:
          type: string
        pr_br:
          type: string
    postings:
      type: array
      items:
        type: object
        properties:
          title:
            $ref: '#/components/schemas/translations'
          description:
            type: object
            properties:
              brief:
                $ref: '#/components/schemas/translations'
              detailed:
                $ref: '#/components/schemas/translations'
              full_html:
                $ref: '#/components/schemas/translations'
              eoe_text:
                description: >-
                  The Equal Opportunity Employer text. Not empty for US Federal
                  Contractor companies
                type: string
              pay_transparency_text:
                description: >-
                  The Pay Transparency text. Not empty for US Federal Contractor
                  companies
                type: string
          id:
            description: The unique Job Posting Id (GUID).
            type: string
          tenant:
            type: object
            properties:
              id:
                description: Company Identifier
                type: string
              alias:
                description: Tenant name associated with customer account
                type: string
          opportunity:
            type: object
            properties:
              id:
                description: Opportunity Identifier
                type: string
          updated_at:
            description: Time stamp of last update to posting
            type: string
          created_at:
            description: Time stamp of posting creation
            type: string
          requisition_number:
            description: The customer-defined number associated with the Job Opportunity.
            type: string
          default_locale:
            type: object
            properties:
              id:
                description: The unique default locale Id (GUID).
                type: string
              code:
                description: Language Code e.g. en-US
                type: string
          compensation:
            description: Job Posting compensation details.
            type: string
          job_family:
            type: object
            properties:
              id:
                description: The unique job family id (GUID).
                type: string
              name:
                $ref: '#/components/schemas/translations'
          locations:
            type: array
            items:
              type: object
              properties:
                id:
                  description: The unique location id (GUID).
                  type: string
                name:
                  description: >-
                    The location name. Even though it’s required, the “Not
                    Specified” value may be returned.
                  type: string
                city:
                  description: The location’s city.
                  type: string
                state:
                  type: object
                  properties:
                    code:
                      description: The location’s state code.
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
                country:
                  type: object
                  properties:
                    code:
                      description: The location’s country code.
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
                postal_code:
                  description: The location’s postal code.
                  type: string
          locations_summary:
            description: >-
              The list of available locations delimited by semi-colon. The
              location fields within each location are delimited by comma.
            type: string
          company:
            type: object
            properties:
              id:
                description: The unique company id (GUID).
                type: string
              code:
                description: The client-defined company reference code.
                type: string
              name:
                $ref: '#/components/schemas/translations'
              doing_business_as:
                $ref: '#/components/schemas/translations'
          is_featured:
            description: >-
              Indicates if the Job Posting is published as a featured job on an
              UltiPro Recruiting job board.
            type: boolean
          skill_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  description: >-
                    Indicates if this skill is the required criterion for this
                    position.
                  type: boolean
                skill:
                  type: object
                  properties:
                    description:
                      $ref: '#/components/schemas/translations'
                    id:
                      description: The unique skill id (GUID).
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
                    proficiency_level:
                      type: object
                      properties:
                        id:
                          description: >-
                            The unique id of a standard proficiency level
                            (GUID).
                          type: string
                        name:
                          $ref: '#/components/schemas/translations'
                        ordinal_value:
                          description: >-
                            A numerical equivalent of proficiency_level.name: 1.
                            Novice  2. Some Knowledge  3. Intermediate  4.
                            Advanced 5. Expert
                          type: number
          work_experience_criteria:
            type: array
            items:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/translations'
                is_required:
                  description: Indicates if this work experience is required.
                  type: boolean
                minimum_years:
                  description: >-
                    Minimum years of experience requested for this work
                    experience.
                  type: number
                maximum_years:
                  description: >-
                    Maximum years of experience requested for this work
                    experience.
                  type: number
          education_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  description: Indicates if this education is required for the job.
                  type: boolean
                allow_related:
                  description: >-
                    Indicates if similar educations will be considered for this
                    job.
                  type: boolean
                degree:
                  type: object
                  properties:
                    id:
                      description: The unique degree id (GUID).
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
                major:
                  type: object
                  properties:
                    id:
                      description: The unique major id (GUID).
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
          license_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  description: Indicates if this license is required for this job.
                  type: boolean
                license:
                  type: object
                  properties:
                    id:
                      description: The unique license id (GUID).
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
          behavior_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  description: Indicates if this behavior is required for this job.
                  type: boolean
                behavior:
                  type: object
                  properties:
                    description:
                      $ref: '#/components/schemas/translations'
                    id:
                      description: The unique behavior id (GUID).
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
          motivation_criteria:
            type: array
            items:
              type: object
              properties:
                is_required:
                  description: Indicates if this motivation is required for this job.
                  type: boolean
                motivation:
                  type: object
                  properties:
                    description:
                      $ref: '#/components/schemas/translations'
                    id:
                      description: The unique motivation id (GUID).
                      type: string
                    name:
                      $ref: '#/components/schemas/translations'
          publish_date:
            description: Date in which posting was published
            type: string
          locales:
            type: array
            items:
              type: object
              properties:
                code:
                  description: >
                    Locale identifier, one of the following codes: en-US, en-GB,
                    es-ES, fr-CA, de-DE, or pr-BR.
                  type: string
          recruiting_apply_url:
            description: >-
              The URL to the full job description on the UltiPro Recruiting job
              board. Should be mapped to the Job URL in the partner’s XML feed
            type: string
          links:
            type: array
            items:
              type: object
              properties:
                href:
                  description: Not available. Use recruiting_apply_url instead.
                  type: string
                rel:
                  description: The relationship of the hyperlink to this object.
                  type: string
    UserDetails:
      type: object
      properties:
        employeeId:
          type: string
        userId:
          type: integer
        userName:
          type: string
        fullName:
          type: string
        userLastLogonDate:
          format: date-time
          type: string
        userLastPasswordChangeDate:
          format: date-time
          type: string
        userStatus:
          type: string
        integrationUserKey:
          type: string
    UserPreferencesDetails:
      type: object
      properties:
        userId:
          type: string
        languageCode:
          type: string
        dateTimeFormat:
          type: string
    ResultDtoWorkbrainTeamDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/WorkbrainTeamDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ResultDtoActivityDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    TimeCodeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tcodeName:
          type: string
        tcodeDesc:
          type: string
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    MultiStatusDtoScheduleModelStateDto:
      type: object
      properties:
        id:
          type: string
        sequenceId:
          type: integer
          format: int32
        status:
          type: string
        modelState:
          $ref: '#/components/schemas/ScheduleModelStateDto'
    TimeOffRequestDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
        comment:
          type: string
        days:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffRequestDayDto'
    ResultDtoHolidayDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/HolidayDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    TimeOffTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    TimeOffRequestDayDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        requestId:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        from:
          type: integer
          format: int32
        to:
          type: integer
          format: int32
        fullDay:
          type: boolean
          default: false
        status:
          type: string
        type:
          $ref: '#/components/schemas/TimeOffTypeDto'
        reason:
          $ref: '#/components/schemas/TimeOffReasonDto'
        empComment:
          type: string
        conclusionDate:
          type: string
          format: date-time
        conclusionComment:
          type: string
        payInAdv:
          type: boolean
          default: false
        submittedDate:
          type: string
          format: date-time
        empId:
          type: integer
          format: int64
    ScheduleDetailDto:
      type: object
      properties:
        operation:
          type: string
        empName:
          type: string
        skdDate:
          type: string
          format: date-time
        skdStartTime:
          type: string
          format: date-time
        skdEndTime:
          type: string
          format: date-time
        wbtName:
          type: string
        jobName:
          type: string
        tcodeName:
          type: string
        htypeName:
          type: string
        actName:
          type: string
    ResponseStatusDto:
      type: object
      properties:
        title:
          type: string
        type:
          type: string
        detail:
          type: string
        errorCount:
          type: integer
          format: int32
        errors:
          $ref: '#/components/schemas/SingleStatusDtoObject'
        multiStatus:
          type: array
          items:
            $ref: '#/components/schemas/MultiStatusDtoObject'
    EmployeeJobDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        jobName:
          type: string
        jobDesc:
          type: string
        jobStartDate:
          type: string
          format: date-time
        jobEndDate:
          type: string
          format: date-time
        jobPreferred:
          type: boolean
          default: false
    TimeOffReasonDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    HourTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        htypeName:
          type: string
        htypeDesc:
          type: string
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    ActivityDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        actName:
          type: string
        actDesc:
          type: string
    WorkbrainTeamDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        wbtName:
          type: string
        wbtDesc:
          type: string
    ScheduleModelStateDto:
      type: object
      properties:
        operationType:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        empName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdDate:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdStartTime:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdEndTime:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        skdTime:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        wbtName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        tcodeName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        jobName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        htypeName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        actName:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
        noDetails:
          type: array
          items:
            $ref: '#/components/schemas/StateDto'
    ResultDtoHourTypeDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/HourTypeDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ResultDtoEmployeeDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ResultDtoTimeOffRequestDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffRequestDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    MultiStatusDtoObject:
      type: object
      properties:
        id:
          type: string
        sequenceId:
          type: integer
          format: int32
        status:
          type: string
        modelState:
          type: object
    StateDto:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    ResultDtoEmployeeJobDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeJobDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    HolidayDto:
      type: object
      properties:
        holidayName:
          type: string
        holidayLocName:
          type: string
        holidayDate:
          type: string
          format: date-time
    SingleStatusDtoObject:
      type: object
      properties:
        modelState:
          type: object
    PublishScheduleDetailDto:
      type: object
      properties:
        scheduleDetails:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleDetailDto'
        comment:
          type: string
    EmployeeDto:
      type: object
      properties:
        empId:
          type: integer
          format: int64
        empName:
          type: string
        teamName:
          type: string
        eeId:
          type: string
        coId:
          type: string
    ResultDtoTimeCodeDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/TimeCodeDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    codeObject:
      type: object
      required:
        - code
        - description
      properties:
        description:
          description: Description.
          type: string
        code:
          description: Code.
          type: string
    UserProfileDetails:
      type: object
      properties:
        employeeId:
          type: string
          pattern: ^[a-zA-Z0-9,]*$
        companyId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        personId:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        email:
          type: string
        workPhone:
          type: string
        userStatus:
          type: string
        userId:
          type: integer
          format: int32
        userName:
          type: string
        roleId:
          type: integer
          format: int32
        roleName:
          type: string
        roleDescription:
          type: string
        integrationUserKey:
          type: string
          example: 00000000-0000-0000-0000-000000000000
        filterCompanyId:
          type: string
        filterDeductionGroupCode:
          type: string
        filterEmployeeType:
          type: string
        filterStatus:
          type: string
        filterFullTimeOrPartTime:
          type: string
        filterJobCode:
          type: string
        filterLocationCode:
          type: string
        filterOrganizationLevel1:
          type: string
        filterOrganizationLevel2:
          type: string
        filterOrganizationLevel3:
          type: string
        filterOrganizationLevel4:
          type: string
        filterPayGroupCode:
          type: string
        filterProjectCode:
          type: string
        filterSalaryOrHourly:
          type: string
        filterShiftCode:
          type: string
        filterSupervisorID:
          type: string
          pattern: ^[a-zA-Z0-9,]*$
        filterTaxCalculationGroupID:
          type: string
        masterCompany:
          type: string
        masterCompanyId:
          type: string
        homeCompany:
          type: string
        homeCompanyId:
          type: string
    WorkSummaryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        empId:
          type: integer
          format: int64
        workDate:
          type: string
          format: date-time
        wrkMins:
          type: integer
          format: int64
        authorized:
          type: boolean
          default: false
        overtime:
          description: true if work summary contain details with an overtime hour type
          type: boolean
          default: false
        absent:
          description: true if LTA override exists on day
          type: boolean
          default: false
        absentTimeCode:
          description: time code used in LTA override if present
          type: string
        authorizedMessage:
          type: string
        comments:
          type: string
        clocks:
          $ref: '#/components/schemas/WorkSummaryClocksDto'
        workDetails:
          type: array
          items:
            $ref: '#/components/schemas/WorkDetailDto'
        exceptions:
          type: array
          items:
            type: string
        wrksMessages:
          type: string
        readOnly:
          description: true if timesheet has been locked
          type: boolean
          default: false
        readOnlyReason:
          type: string
        daily:
          type: boolean
          default: false
        flag1:
          type: string
        flag2:
          type: string
        flag3:
          type: string
        flag4:
          type: string
        flag5:
          type: string
        udf1:
          type: string
        udf2:
          type: string
        udf3:
          type: string
        udf4:
          type: string
        udf5:
          type: string
        udf6:
          type: string
        udf7:
          type: string
        udf8:
          type: string
        udf9:
          type: string
        udf10:
          type: string
        payGroup:
          $ref: '#/components/schemas/PayGroupDto'
        calcGroup:
          $ref: '#/components/schemas/CalcGroupDto'
    WorkSummaryClocksDto:
      type: object
      properties:
        workSummaryId:
          type: integer
          format: int64
        clocks:
          type: array
          items:
            $ref: '#/components/schemas/WorkSummaryClockDto'
    ProjectDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    WorkDetailDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workSummaryId:
          type: integer
          format: int64
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        minutes:
          type: integer
          format: int64
        rate:
          type: number
          format: double
        timecode:
          $ref: '#/components/schemas/TimeCodeDto'
        hourType:
          $ref: '#/components/schemas/HourTypeDto'
        job:
          $ref: '#/components/schemas/JobDto'
        department:
          $ref: '#/components/schemas/DepartmentDto'
        project:
          $ref: '#/components/schemas/ProjectDto'
        docket:
          $ref: '#/components/schemas/DocketDto'
        team:
          $ref: '#/components/schemas/TeamDto'
        workType:
          type: string
        flag1:
          type: string
        flag2:
          type: string
        flag3:
          type: string
        flag4:
          type: string
        flag5:
          type: string
        flag6:
          type: string
        flag7:
          type: string
        flag8:
          type: string
        flag9:
          type: string
        flag10:
          type: string
        udf1:
          type: string
        udf2:
          type: string
        udf3:
          type: string
        udf4:
          type: string
        udf5:
          type: string
        udf6:
          type: string
        udf7:
          type: string
        udf8:
          type: string
        udf9:
          type: string
        udf10:
          type: string
    DepartmentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    CalcGroupDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    ResultDtoClockTransactionDto:
      type: object
      properties:
        entities:
          type: array
          items:
            $ref: '#/components/schemas/ClockTransactionDto'
        index:
          type: integer
          format: int32
        requestedCount:
          type: integer
          format: int32
    ClockTransactionDto:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ClockTransactionTypeDto'
        time:
          type: string
          format: date-time
        data:
          type: string
        location:
          description: GPS data
          type: string
        extData:
          description: Clock extra data
          type: string
    TeamDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
        supervisor:
          type: boolean
          default: false
        supervisors:
          type: array
          items:
            type: string
    DocketDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    PayGroupDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    ClockTransactionTypeDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        locName:
          type: string
    WorkSummaryClockDto:
      type: object
      properties:
        index:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/ClockTransactionTypeDto'
        time:
          type: string
          format: date-time
        data:
          type: string
        location:
          description: GPS data
          type: string
        extData:
          description: Clock extra data
          type: string
    JobDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locName:
          type: string
        locDesc:
          type: string
        name:
          type: string
    TimesheetDtoWorkSummaryDto:
      type: object
      properties:
        from:
          type: string
          format: date-time
        to:
          type: string
          format: date-time
        workSummaries:
          type: array
          items:
            $ref: '#/components/schemas/WorkSummaryDto'
    UserDefinedFields:
      type: object
      properties:
        employeeId:
          type: string
        personnelUserDefinedFields:
          type: object
          properties:
            personnelUDField01:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField02:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField03:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField04:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField05:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField06:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField07:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField08:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField09:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            personnelUDField10:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField11:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            personnelUDField12:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField13:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            personnelUDField14:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
        internationalUserDefinedFields:
          type: object
          properties:
            internationalUDField01:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField02:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField03:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField04:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField05:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField06:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField07:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField08:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField09:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
            internationalUDField10:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField11:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: double
                  type: number
            internationalUDField12:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField13:
              type: object
              properties:
                field:
                  type: string
                value:
                  format: date-time
                  type: string
            internationalUDField14:
              type: object
              properties:
                field:
                  type: string
                value:
                  type: string
    CodeTablesCreateCodeTablesRequest:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesPOST'
    CodeTablesCreateCodeTablesRequest1:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesPOST'
    CodeTablesCreateCodeTablesRequest2:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesPOST'
    CodeTablesCreateCodeTablesRequest3:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesPOST'
    CodeTablesCreateCodeTablesRequest4:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesPOST'
    CodeTablesCreateCodeTablesRequest5:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesPOST'
    EmployeeIdLookupByCompanyIdsRequest:
      type: array
      items:
        $ref: '#/components/schemas/Identifiers'
    EmployeeIdLookupByCompanyIdsRequest1:
      type: array
      items:
        $ref: '#/components/schemas/Identifiers'
    EmployeeIdLookupByCompanyIdsRequest2:
      type: array
      items:
        $ref: '#/components/schemas/Identifiers'
    EmployeeIdLookupByCompanyIdsRequest3:
      type: array
      items:
        $ref: '#/components/schemas/Identifiers'
    EmployeeIdLookupByCompanyIdsRequest4:
      type: array
      items:
        $ref: '#/components/schemas/Identifiers'
    EmployeeIdLookupByCompanyIdsRequest5:
      type: array
      items:
        $ref: '#/components/schemas/Identifiers'
    NewHiresCreateSingleNewHireRequest:
      type: object
      properties:
        contactInformation:
          description: Contact information for the new hire
          type: object
          properties:
            name:
              description: Name of the new hire
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire
                  type: object
                  properties:
                    id:
                      description: Unique identifier of the prefix
                      type: string
                    code:
                      description: UltiPro prefix code
                      type: string
                  example:
                    prefix:
                      id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                      code: MS
                first:
                  description: >-
                    First name of the new hire. maxLength: 50 for hires in
                    US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
                middle:
                  description: Middle name of the new hire
                  type: string
                  maxLength: 50
                last:
                  description: >-
                    Last name of the new hire. maxLength: 50 for hires in
                    US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
                formerLast:
                  description: >-
                    Former last name of the new hire. maxLength: 30 for hires in
                    US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
                suffix:
                  description: Suffix of the new hire
                  type: object
                  properties:
                    id:
                      description: Unique identifier of the suffix
                      type: string
                    code:
                      description: UltiPro suffix code
                      type: string
                  example:
                    prefix:
                      id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                      code: SR
                preferredFirst:
                  description: >-
                    Preferred first name of the new hire. maxLength: 50 for
                    hires in US/Canadian companies. 100 otherwise
                  type: string
                  maxLength: 100
              required:
                - first
                - last
              example:
                name:
                  prefix:
                    code: MR
                  first: Firstname
                  middle: Middlename
                  last: Lastname
                  formerLast: Formerlastname
                  suffix:
                    id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  preferredFirst: Preferred
            emailAddress:
              description: Email address of the new hire
              type: string
              maxLength: 254
            primaryPhone:
              description: >-
                Primary phone number of the new hire. maxLength: 50 for hires
                not in US/Canadian address country. If hire's address country is
                US/Canada, a valid phone format is expected
              type: string
              maxLength: 50
            secondaryPhone:
              description: >-
                Secondary phone number of the new hire. maxLength: 50 for hires
                not in US/Canadian address country. If hire's address country is
                US/Canada, a valid phone format is expected
              type: string
              maxLength: 50
            address:
              description: Address of the new hire
              type: object
              properties:
                line1:
                  description: >-
                    Line 1 of the address. maxLength: 100 for US/Canadian
                    address country, 255 otherwise
                  type: string
                  maxLength: 255
                line2:
                  description: >-
                    Line 2 of the address. maxLength: 100 for US/Canadian
                    address country, 255 otherwise
                  type: string
                  maxLength: 255
                city:
                  description: >-
                    City of the address. maxLength: 50 for US/Canadian address
                    country, 255 otherwise
                  type: string
                  maxLength: 255
                postalCode:
                  description: >-
                    Zip/postal code of the address. maxLength: 50 for hires not
                    in US/Canadian address country. If hire's address country is
                    US/Canada, a valid postal code format is expected
                  type: string
                  maxLength: 50
                county:
                  description: >-
                    County name of the address. maxLength: 30 for US/Canadian
                    address country, 255 otherwise
                  type: string
                  maxLength: 255
                stateCode:
                  description: State code of the address
                  type: string
                countryCode:
                  description: ISO country code of the address
                  type: string
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
          required:
            - emailAddress
          example:
            name:
              prefix:
                code: MR
              first: Firstname
              middle: Middlename
              last: Lastname
              formerLast: Formerlastname
              suffix:
                id: ba00d403-e240-4c16-b894-92036dbb4b0fX
            emailAddress: first@last.com
            primaryPhone: 954-687-8909
            secondaryPhone: '9545554567'
            address:
              line1: Line 1
              line2: Line 2
              city: Weston
              zipCode: '33326'
              county: Broward
              stateCode: FL
              countryCode: USA
        job:
          description: Job information for the new hire
          type: object
          properties:
            id:
              description: Unique identifier of the job
              type: string
            code:
              description: UltiPro job code
              type: string
            requisitionId:
              description: RequisitionId of the job
              type: string
              maxLength: 50
            componentCompany:
              description: Component company of the job
              type: object
              properties:
                id:
                  description: Unique identifier of the component company
                  type: string
                code:
                  description: UltiPro component company Id
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: SDXUT
            workLocation:
              description: Work location of the job
              type: object
              properties:
                id:
                  description: Unique identifier of the work location
                  type: string
                code:
                  description: UltiPro work location code
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: FLLPP
            supervisor:
              description: Supervisor of the job
              type: object
              properties:
                id:
                  description: Onboarding employee Id
                  type: string
                code:
                  description: Person Id from UltiPro
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: CA00D403-E240-4C16-B894-92036DBB4B0F
            employeeType:
              description: Employee type for the job
              type: object
              properties:
                id:
                  description: Unique identifier of the employee type
                  type: string
                code:
                  description: UltiPro employee type code
                  type: string
              example:
                prefix:
                  id: ba00d403-e240-4c16-b894-92036dbb4b0fX
                  code: ET347
            selectedFLSAStatus:
              description: Selected FLSA status for the job
              type: string
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
          example:
            code: MGT
            requisitionId: '1234'
            selectedFLSAStatus: 1
            componentCompany:
              code: FZAJ2
            workLocation:
              code: QU4FL
            supervisor:
              code: 89F8FA04-7055-47D2-943B-D2A409FFA3BF
            employeeType:
              code: INT
        organizationLevels:
          type: array
          items:
            description: Organization level
            type: object
            properties:
              id:
                description: Identifier of the organization level
                type: string
              level:
                description: Level of the organization level
                type: string
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                description: Code of the organization level
                type: string
            example:
              id: 89e9f572-4c63-4630-8008-dd09c97ab64cX
              level: 1
              code: ORG1
        compensation:
          description: Compensation information for the new hire
          type: object
          properties:
            isFullTime:
              description: Whether the new hire is full time
              type: boolean
            isSalaried:
              description: Whether the new hire is salaried
              type: boolean
            workHours:
              description: Work hours of the new hire
              type: number
            weeklyHours:
              description: >-
                Weekly hours of the new hire. Only applicable for hires not in
                US/Canadian companies
              type: number
              maximum: 168
            currencyCode:
              description: ISO currency code of the new hire
              type: string
            payRate:
              description: Pay rate of the new hire
              type: number
            ratePer:
              description: >-
                Pay period of the new hire. Accepts "H" (Hour), "W" (Week), "P"
                (Period), "Y" (Year)
              type: string
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyCode: USD
            payRate: 20
            ratePer: H
        onboardingOwnerId:
          description: External user identifier of the onboarding owner
          type: string
        hireDate:
          description: Hire date of the new hire
          type: string
          format: date-time
        orientationDate:
          description: Orientation date of the new hire
          type: string
          format: date-time
        startDate:
          description: Start date of the new hire
          type: string
          format: date-time
        pastStartDateReason:
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          type: string
          maxLength: 250
        mentor:
          description: Mentor for the new hire
          type: object
          properties:
            description:
              description: Brief description of mentor
              type: string
              maxLength: 85
            id:
              description: Onboarding employee id
              type: string
            code:
              description: Person Id from UltiPro
              type: string
          example:
            prefix:
              description: >-
                Suzie is THE person who knows the product best. She loves
                helping new team members.
              id: ba00d403-e240-4c16-b894-92036dbb4b0fX
              code: MR
        personalMessage:
          description: Personal message for the new hire
          type: string
          maxLength: 250
      example:
        contactInformation:
          name:
            prefix:
              code: MR
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            preferredFirst: Hugh
            suffix:
              code: III
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
          emailAddress: hugo2296@gmail.com
        onboardingOwnerId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate: 2018/06/23
        startDate: 2018/06/30
        orientationDate: 2018/07/06
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        compensation:
          fullTime: true
          salaried: true
          workHours: 40
          weeklyHours: 0
          currencyCode: CAD
          payRate: 50000
          ratePer: 'Y'
        job:
          code: DJOB
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          componentCompany:
            code: FZAJ2
          workLocation:
            code: QU4FL
          supervisor:
            code: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          employeeType:
            code: CMPMGT
        organizationLevels:
          - level: 1
            code: PROD
          - level: 2
            code: PR
          - level: 3
            code: STAT
          - level: 4
            code: SALES
        mentor:
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          id: 2c9e2b00-f229-4930-9d82-e86e11d6440bX
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
    PostNewTokenRequestObtainOAuthTokenRequest:
      type: object
      properties:
        grant_type:
          description: You should enter "client_credentials" for this value
          type: string
        client_id:
          description: This is from UltiPro Identity and provided to you
          type: string
        client_secret:
          description: This is from UltiPro Identity and provided to you
          type: string
        scope:
          description: you should enter "profile" for this
          type: string
      required:
        - grant_type
        - client_id
        - client_secret
        - scope
    EarningsAddTimeClockDataRequest:
      type: object
      properties:
        earnings:
          type: array
          items:
            $ref: '#/components/schemas/Earning'
    AuditDetailsGetDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/AuditDetails'
    AuditDetailsGetData200Response:
      type: array
      items:
        $ref: '#/components/schemas/AuditDetails'
    AuditDetailsGetData400Response:
      type: object
      additionalProperties:
        type: object
    AuditDetailsGetData404Response:
      type: object
      additionalProperties:
        type: object
    AuditDetailsGetData500Response:
      type: object
      additionalProperties:
        type: object
    BusinessRuleImportToolBusinessRuleImportFileUploadResponse:
      type: object
      properties: {}
      example: {}
    BusinessRuleImportToolBusinessRuleImportFileUpload200Response:
      type: object
    BusinessRuleImportToolBusinessRuleImportFileUpload500Response:
      type: object
      additionalProperties:
        type: object
    BusinessRuleImportToolGetFileUploadStatusResponse:
      type: object
      additionalProperties:
        type: object
    BusinessRuleImportToolGetFileUploadStatus500Response:
      type: object
      additionalProperties:
        type: object
    BusinessRuleImportToolGetStagingStatusResponse:
      type: object
      additionalProperties:
        type: object
    BusinessRuleImportToolGetStagingStatus500Response:
      type: object
      additionalProperties:
        type: object
    BusinessRuleImportToolImportsBusinessRuleStagingDataResponse:
      type: object
      additionalProperties:
        type: object
    BusinessRuleImportToolImportsBusinessRuleStagingData500Response:
      type: object
      additionalProperties:
        type: object
    CodeTablesGetInfoResponse:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesGET'
    CodeTablesGetInfo200Response:
      type: array
      items:
        $ref: '#/components/schemas/CodeTablesGET'
    CodeTablesGetInfo403Response:
      type: object
      additionalProperties:
        type: object
    CodeTablesGetInfo404Response:
      type: object
      additionalProperties:
        type: object
    CodeTablesGetInfo429Response:
      type: object
      additionalProperties:
        type: object
    CodeTablesCreateCodeTablesResponse:
      type: object
      additionalProperties:
        type: object
    CodeTablesCreateCodeTables207Response:
      type: object
      additionalProperties:
        type: object
    CodeTablesCreateCodeTables403Response:
      type: object
      additionalProperties:
        type: object
    CodeTablesCreateCodeTables429Response:
      type: object
      additionalProperties:
        type: object
    BusinessStructureStatusListEmployeesChangeBusinessStructureResponse:
      type: array
      items:
        type: string
    BusinessStructureStatusListEmployeesChangeBusinessStructure200Response:
      type: array
      items:
        type: string
    BusinessStructureStatusListEmployeesChangeBusinessStructure404Response:
      type: object
      items:
        type: object
    BusinessStructureStatusListEmployeesChangeBusinessStructure500Response:
      type: object
      items:
        type: object
    CompanyDetailsGetCompanyDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/CompanyDetails'
    CompanyDetailsGetCompanyDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/CompanyDetails'
    CompanyDetailsGetCompanyDetails500Response:
      type: object
      additionalProperties:
        type: object
    EmpDeductionsListResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpDeductions'
    EmpDeductionsList200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpDeductions'
    EmpDeductionsList404Response:
      type: object
      additionalProperties:
        type: object
    EmpDeductionsList500Response:
      type: object
      additionalProperties:
        type: object
    CompensationDetailsGetAllDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpCompensationDetails'
    CompensationDetailsGetAllDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpCompensationDetails'
    CompensationDetailsGetAllDetails500Response:
      type: object
      additionalProperties:
        type: object
    CompensationDetailsGetAllByCompanyResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpCompensationDetails'
    CompensationDetailsGetAllByCompany200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpCompensationDetails'
    CompensationDetailsGetAllByCompany500Response:
      type: object
      additionalProperties:
        type: object
    CompensationDetailsGetByCompanyAndEmployeeResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpCompensationDetails'
    CompensationDetailsGetByCompanyAndEmployee200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpCompensationDetails'
    CompensationDetailsGetByCompanyAndEmployee500Response:
      type: object
      additionalProperties:
        type: object
    DependentDeductionsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/DependentDeductions'
    DependentDeductionsGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/DependentDeductions'
    DependentDeductionsGet404Response:
      type: object
      additionalProperties:
        type: object
    DependentDeductionsGet500Response:
      type: object
      additionalProperties:
        type: object
    EarningsHistoryGetInsRateResponse:
      type: array
      items:
        $ref: '#/components/schemas/EarningsHistoryBaseElements'
    EarningsHistoryGetInsRate200Response:
      type: array
      items:
        $ref: '#/components/schemas/EarningsHistoryBaseElements'
    EarningsHistoryGetInsRate404Response:
      type: object
      additionalProperties:
        type: object
    EarningsHistoryGetInsRate500Response:
      type: object
      additionalProperties:
        type: object
    ChangesByDateGetAllEmployeeChangesSinceLastCallResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeChangesResponse'
    ChangesByDateGetAllEmployeeChangesSinceLastCall200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeChangesResponse'
    EmployeeChangesGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeChangesResponse'
    EmployeeChangesGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeChangesResponse'
    EarningsListEarningsConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EarningsDto'
    EarningsListEarningsConfigurations200Response:
      type: array
      items:
        $ref: '#/components/schemas/EarningsDto'
    EarningsListEarningsConfigurations500Response:
      type: object
      additionalProperties:
        type: object
    EarningsGetConfigurationsFilteredByParameterResponse:
      type: array
      items:
        $ref: '#/components/schemas/EarningsDto'
    EarningsGetConfigurationsFilteredByParameter200Response:
      type: array
      items:
        $ref: '#/components/schemas/EarningsDto'
    EarningsGetConfigurationsFilteredByParameter500Response:
      type: object
      additionalProperties:
        type: object
    EarningsSpecificConfigurationGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EarningsDto'
    EarningsSpecificConfigurationGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EarningsDto'
    EarningsSpecificConfigurationGet500Response:
      type: object
      additionalProperties:
        type: object
    EmployeeCobraDetailsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeCobraDetails'
    EmployeeCobraDetailsGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeCobraDetails'
    EmployeeCobraDetailsGet404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeCobraDetailsGet500Response:
      type: object
      additionalProperties:
        type: object
    EmpDedBenOptionDateGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDeductionBenefitOptionChangeDate'
    EmpDedBenOptionDateGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDeductionBenefitOptionChangeDate'
    EmpDedBenOptionDateGet404Response:
      type: object
      additionalProperties:
        type: object
    EmpDedBenOptionDateGet500Response:
      type: object
      additionalProperties:
        type: object
    DirectDepositListEmployeeDirectDepositDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/DirectDepositModel'
    DirectDepositListEmployeeDirectDepositDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/DirectDepositModel'
    DirectDepositListDirectDepositDetailsByCompanyResponse:
      type: array
      items:
        $ref: '#/components/schemas/DirectDepositModel'
    DirectDepositListDirectDepositDetailsByCompany200Response:
      type: array
      items:
        $ref: '#/components/schemas/DirectDepositModel'
    EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndFieldResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpDedHistoryEffectiveChangeDate'
    EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpDedHistoryEffectiveChangeDate'
    EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField400Response:
      type: object
      additionalProperties:
        type: object
    EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeDeductionHistoryEffectiveDateGetByDeductionCodeAndField500Response:
      type: object
      additionalProperties:
        type: object
    EmployeeDemographicDetailsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDemographicDetails'
    EmployeeDemographicDetailsGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeDemographicDetails'
    EmployeeDemographicDetailsGet404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeDemographicDetailsGet429Response:
      type: object
      additionalProperties:
        type: object
    EmployeeDemographicDetailsGet500Response:
      type: object
      additionalProperties:
        type: object
    EmployeeExtendedElementsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeExtendedElements'
    EmployeeExtendedElementsGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeExtendedElements'
    EmployeeExtendedElementsGet404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeExtendedElementsGet500Response:
      type: object
      additionalProperties:
        type: object
    EmployeeEmploymentDetailsGetDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeEmploymentDetails'
    EmployeeEmploymentDetailsGetDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeEmploymentDetails'
    EmployeeEmploymentDetailsGetDetails400Response:
      type: object
      additionalProperties:
        type: object
    EmployeeEmploymentDetailsGetDetails500Response:
      type: object
      additionalProperties:
        type: object
    EmployeeIdLookupByCompanyIdsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeIdsResponse'
    EmployeeIdLookupByCompanyIds207Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeIdsResponse'
    EmployeeMultipleJobsOppListDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeMultipleJobs'
    EmployeeMultipleJobsOppListDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeMultipleJobs'
    EmployeeMultipleJobsOppListDetails404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeMultipleJobsOppListDetails500Response:
      type: object
      additionalProperties:
        type: object
    EmployeeMultiPhoneNumbersGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeMultiPhoneNumbers'
    EmployeeMultiPhoneNumbersGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeMultiPhoneNumbers'
    EmployeeMultiPhoneNumbersGet404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeMultiPhoneNumbersGet500Response:
      type: object
      additionalProperties:
        type: object
    EmpMultiplePositionsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeMultiplePositions'
    EmpMultiplePositionsGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeMultiplePositions'
    EmpMultiplePositionsGet404Response:
      type: object
      additionalProperties:
        type: object
    EmpMultiplePositionsGet500Response:
      type: object
      additionalProperties:
        type: object
    KronosEmployeeProfilesGetListResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeProfiles'
    KronosEmployeeProfilesGetList200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeProfiles'
    KronosEmployeeProfilesGetList404Response:
      type: object
      additionalProperties:
        type: object
    KronosEmployeeProfilesGetList500Response:
      type: object
      additionalProperties:
        type: object
    EmployeeSecurityUserDetailsGetDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeSecurityUserDetails'
    EmployeeSecurityUserDetailsGetDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeSecurityUserDetails'
    EmployeeSecurityUserDetailsGetDetails404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeSecurityUserDetailsGetDetails500Response:
      type: object
      additionalProperties:
        type: object
    KronosEmployeeStatusGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeStatus'
    KronosEmployeeStatusGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeStatus'
    KronosEmployeeStatusGet404Response:
      type: object
      additionalProperties:
        type: object
    KronosEmployeeStatusGet500Response:
      type: object
      additionalProperties:
        type: object
    CompanyPayStatementGetPaySummariesResponse:
      type: array
      items:
        $ref: '#/components/schemas/CompanyPayStatementModel'
    CompanyPayStatementGetPaySummaries200Response:
      type: array
      items:
        $ref: '#/components/schemas/CompanyPayStatementModel'
    CompanyPayStatementGetByDateRangeResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeePayStatementModel'
    CompanyPayStatementGetByDateRange200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeePayStatementModel'
    EmployeePayStatementGetByDateRangeResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeePayStatementModel'
    EmployeePayStatementGetByDateRange200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeePayStatementModel'
    EmployeeSupervisorDetailsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeSupervisorDetails'
    EmployeeSupervisorDetailsGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmployeeSupervisorDetails'
    EmployeeSupervisorDetailsGet404Response:
      type: object
      additionalProperties:
        type: object
    EmployeeSupervisorDetailsGet500Response:
      type: object
      additionalProperties:
        type: object
    EmploymentDetailsGetDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpEmploymentDetails'
    EmploymentDetailsGetDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpEmploymentDetails'
    EmploymentDetailsGetDetails500Response:
      type: object
      additionalProperties:
        type: object
    EmploymentDetailsListByCompanyResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpEmploymentDetails'
    EmploymentDetailsListByCompany200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpEmploymentDetails'
    EmploymentDetailsListByCompany500Response:
      type: object
      additionalProperties:
        type: object
    EmploymentDetailsGetByCompanyIdAndEmployeeIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpEmploymentDetails'
    EmploymentDetailsGetByCompanyIdAndEmployeeId200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpEmploymentDetails'
    EmploymentDetailsGetByCompanyIdAndEmployeeId500Response:
      type: object
      additionalProperties:
        type: object
    GeneralLedgerRunDetailsV2GetResponse:
      type: array
      items:
        $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
    GeneralLedgerRunDetailsV2Get200Response:
      type: array
      items:
        $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
    GeneralLedgerRunDetailsV2GetByRunIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
    GeneralLedgerRunDetailsV2GetByRunId200Response:
      type: array
      items:
        $ref: '#/components/schemas/GeneralLedgerRunDetailsV2'
    ImportToolPostResponse:
      type: array
      items:
        $ref: >-
          #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging
    ImportToolPost200Response:
      type: array
      items:
        $ref: >-
          #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.ImportTool.Models.FileStaging
    ImportToolPost500Response:
      type: object
      properties: {}
      example: {}
    ImportToolPost500Response1:
      type: object
    ImportToolPost500Response2:
      type: object
    ImportToolPost500Response3:
      type: object
    ImportToolPost500Response4:
      type: object
    ImportToolGetStatusResponse:
      type: object
      additionalProperties:
        type: object
    ImportToolGetStatus500Response:
      type: object
      additionalProperties:
        type: object
    InsRateGetInsRateResponse:
      type: array
      items:
        $ref: '#/components/schemas/InsuranceRate'
    InsRateGetInsRate200Response:
      type: array
      items:
        $ref: '#/components/schemas/InsuranceRate'
    InsRateGetInsRate500Response:
      type: object
      additionalProperties:
        type: object
    NewHiresGetByIdResponse:
      type: object
      properties:
        id:
          description: Unique identifier of the new hire
          type: string
        contactInformation:
          description: Contact information of the new hire
          type: object
          properties:
            name:
              description: Name of the new hire
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
            emailAddress:
              description: Email address of the new hire
              type: string
            primaryPhone:
              description: Primary phone number of the new hire
              type: string
            secondaryPhone:
              description: Secondary phone number of the new hire
              type: string
            address:
              description: Address of the new hire
              type: object
              properties:
                line1:
                  description: Line 1 of the address
                  type: string
                line2:
                  description: Line 2 of the address
                  type: string
                city:
                  description: City of the address
                  type: string
                postalCode:
                  description: Zip/postal code of the address
                  type: string
                county:
                  description: County of the address
                  type: string
                stateCode:
                  description: State code of the address
                  type: string
                countryCode:
                  description: Country code of the address
                  type: string
                country:
                  description: Country code of the address
                  type: object
                  properties:
                    code:
                      description: Code of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    country:
                      code: USA
                      name:
                        enUS: United States
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
                country:
                  code: USA
                  name:
                    enUs: United States
          example:
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              formerLast: Johnson
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            emailAddress: ultionboarding14+4@gmail.com
            primaryPhone: '3056985433'
            secondaryPhone: '3056986533'
            address:
              line1: 123 Main St
              line2: 412 Blue Rd
              city: Rosemead
              zipCode: A1A2B2
              county: County of Brant
              stateCode: 'ON'
              countryCode: USA
              country:
                code: CAN
                name:
                  enUS: Canada
        job:
          description: Job of the new hire
          type: object
          properties:
            id:
              description: Unique identifier of the job
              type: string
            name:
              description: The name of the job
              type: string
              additionalProperties:
                description: >-
                  The text of the translatable translated in the language
                  specified
                type: string
            code:
              description: Code of the job
              type: string
            requisitionId:
              description: RequisitionId of the job
              type: string
            selectedFLSAStatus:
              description: Selected FLSA status for the job
              type: string
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
            componentCompany:
              description: Component company of the job
              type: object
              properties:
                id:
                  description: Id of the component company
                  type: string
                name:
                  description: Name of the component company
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            workLocation:
              description: Work location of the job
              type: object
              properties:
                id:
                  description: Id of the work location
                  type: string
                name:
                  description: Name of the work location
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            supervisor:
              description: Supervisor of the job
              type: object
              properties:
                id:
                  description: Id of the supervisor
                  type: string
                name:
                  description: Name of the supervisor
                  type: object
                  properties:
                    prefix:
                      description: Prefix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    first:
                      description: First name
                      type: string
                    middle:
                      description: Middle name
                      type: string
                    last:
                      description: Last name
                      type: string
                    formerLast:
                      description: Former last name
                      type: string
                    suffix:
                      description: Suffix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    preferredFirst:
                      description: Preferred first name
                      type: string
                  example:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846X
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482X
                        name:
                          enUS: III
                      preferredFirst: Hugh
                email:
                  description: The email of the supervisor
                  type: string
                externalUserId:
                  description: The external user id of the supervisor
                  type: string
              example:
                supervisor:
                  id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
                  name:
                    prefix:
                      id: d9079570-57f0-4530-b889-a07c95acb846X
                      name:
                        enUS: Mr.
                    first: Hugo
                    middle: Alexander
                    last: Mastrantonioni
                    suffix:
                      id: 99ace441-e900-4a4c-9731-c97ea8451482X
                      name:
                        enUS: III
                    preferredFirst: Hugh
                  email: first@last.com
                  externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
            employeeType:
              description: Employee type for the job
              type: object
              properties:
                id:
                  description: Id of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                workLocation:
                  id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                  name:
                    enUS: Toronto Headquarters
          example:
            id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5bX
            code: HCOPS
            name:
              enUS: Lead Tech
              esES: Tecnico Principal
            requisitionId: DEV10113
            selectedFLSAStatus: 1
            componentCompany:
              id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5X
              name: Acme Industries
            workLocation:
              id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5X
              name: Acme Lab One
            supervisor:
              id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8aX
              name:
                prefix:
                  id: 08505515-581e-50a1-5f5e-515d5b35f5ffX
                  name:
                    enUS: Mr.
                first: Jeff
                middle: Blue
                last: Winner
                suffix:
                  id: 5558f505-8c15-5cd5-5aa3-dd555eas1555X
                  name:
                    enUS: III
                preferredFirst: Joe
              email: first@last.com
              externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
            employeeType:
              id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5X
              name:
                enUS: Comp Mgt 5-Reg
        organizationLevels:
          type: array
          items:
            description: Organization level
            type: object
            properties:
              description:
                description: >-
                  Description of a organization that the new hire is associated
                  with.
                type: string
              id:
                description: Identifier of the organization level
                type: string
              level:
                description: Level of the organization level
                type: string
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                description: >-
                  Unique code of a organization that the new hire is associated
                  with
                type: string
            example:
              description: Product development team
              'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
              level: 1
              code: PROD
        compensation:
          description: Compensation of the new hire
          type: object
          properties:
            isFullTime:
              description: Whether the new hire is full time
              type: boolean
            isSalaried:
              description: Whether the new hire is salaried
              type: boolean
            workHours:
              description: Work hours of the new hire
              type: number
            weeklyHours:
              description: Weekly hours of the new hire
              type: number
            currencyType:
              description: Currency type of the new hire's pay
              type: string
            currency:
              description: Currency of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
            payRate:
              description: Pay rate of the new hire
              type: number
            ratePer:
              description: Pay period of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyType: USD
            currency:
              code: USD
              name:
                enUS: US Dollar
            payRate: 20
            ratePer:
              code: H
              name:
                enUS: Hour
        onboardingOwner:
          description: Onboarding owner for the new hire
          type: object
          properties:
            id:
              description: Id of the onboarding owner
              type: string
            externalUserId:
              description: External user identifier of the onboarding owner
              type: string
            email:
              description: Email of the onboarding owner
              type: string
            name:
              description: Name of the onboarding owner
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: Hugo@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate:
          description: Hire date of the new hire
          type: string
          format: date-time
        orientationDate:
          description: Orientation date of the new hire
          type: string
          format: date-time
        startDate:
          description: Start date of the new hire
          type: string
          format: date-time
        pastStartDateReason:
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          type: string
        mentor:
          description: Mentor of the new hire
          type: object
          properties:
            description:
              description: Description of the mentor
              type: string
            id:
              description: Id of the mentor
              type: string
            externalUserId:
              description: External user identifier of the mentor
              type: string
            email:
              description: Email of the mentor
              type: string
            name:
              description: Name of the mentor
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            description: >-
              Suzie is THE person who knows the product best. She loves helping
              new team members.
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: talisa@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        personalMessage:
          description: Personalized welcome message for the new hire
          type: string
        provisioning:
          description: Provisioning for the new hire
          type: object
          properties:
            provisioningItems:
              description: The list of provisioning items selected for this New Hire
              type: array
              items:
                description: An individual provisioning item that is assigned to a new hire
                type: object
                properties:
                  id:
                    description: Id of the provisioning item
                    type: string
                  name:
                    description: Category of the provisioning item
                    type: string
                  recipient:
                    description: Recipient of the provisioning item
                    type: string
                  selectedOption:
                    description: Selected option for the provisioning item
                    type: object
                    properties:
                      description:
                        description: Description of the Option
                        type: string
                      id:
                        description: Unique identifier of the Option
                        type: string
                    example:
                      description: Apple iPad
                      id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4X
                  comments:
                    description: Comment on the provisioning item
                    type: string
                example:
                  NewHireProvisioningItemReadModel:
                    id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                    name: Corporate Credit Card
                    recipient: accounting@company.com
                    selectedOption:
                      description: Amax Card
                      id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                    comments: Platinum level
            summaryEmailRecipients:
              description: >-
                These emails receive updates about this new hire's provisioning
                items
              type: array
              items:
                description: >-
                  An individual email that receives updates on the new hire's
                  provisioning items
                type: string
          example:
            provisioning:
              provisioningItems:
                - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                  name: Corporate Credit Card
                  recipient: accounting@company.com
                  selectedOption:
                    description: Deluxe card
                    id: 6790f864-b0ff-4b1b-a3ac-23033c671c44X
                  comments: A credit card
                - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
                  name: Network Account
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Security Level 2 Account
                    id: a38d541b-16f7-46b6-b48a-892cb3831784X
                  comments: Allow access to data
                - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
                  name: Phone Type
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Galaxy S5
                    id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                  comments: Black
              summaryEmailRecipients:
                - fred@bluebill.com
                - jred@bluebill.com
                - ned@bluebill.com
        onboardingStatus:
          description: The status of the new hire in onboarding
          type: string
        identityUserId:
          description: Identity user identifier of the new hire
          type: string
        externalUserId:
          description: External user identifier of the new hire
          type: string
        employeeNumber:
          description: Employee number of the new hire
          type: string
        sentToProcessHireDate:
          description: Date that the new hire was processed
          type: string
          format: date-time
        launchedOn:
          description: Launch date of the new hire
          type: string
          format: date-time
        createdAt:
          description: Creation date of the new hire
          type: string
          format: date-time
        updatedAt:
          description: Last updated date of the new hire
          type: string
          format: date-time
      example:
        contactInformation:
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Hugh
          emailAddress: hugo2296@gmail.com
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
            country:
              code: CAN
              name:
                enUS: Canada
        job:
          id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1bX
          code: DJOB
          name:
            enUS: Lead Tech
            esES: Tecnico Principal
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          supervisor:
            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Joe
              middle: Jose
              last: Santo
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: Jr
              preferredFirst: Joseph
            email: jsanto@example.com
            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          componentCompany:
            id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
            name: Wayne Enterprises
          workLocation:
            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
            name: Toronto Headquarters
          employeeType:
            id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1X
            name:
              enUS: Comp Mgt 1-Reg
        compensation:
          isFullTime: true
          isSalaried: true
          workHours: 40
          weeklyHours: 168
          currencyType: CAD
          currency:
            code: CAD
            name:
              enUS: Canadian Dollar
          payRate: 50000
          ratePer:
            code: 'Y'
            name:
              enUS: Year
        mentor:
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Oden
            middle: Joe
            last: Leonerd
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Kevin
          email: oden_leon@gmail.com
          externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
        onboardingOwner:
          id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Jared
            middle: Joseph
            last: Nalin
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Jared
          email: jared_nalin@example.com
          externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        onboardingStatus: Launched
        sentToProcessHireDate:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        launchedOn:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        hireDate: '2018-06-23T00:00:00Z'
        orientationDate: '2018-07-06T00:00:00Z'
        startDate: '2018-06-30T00:00:00Z'
        organizationLevels:
          - description: Product division
            id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50fX
            level: 1
            code: PROD
          - description: Public relations
            id: 8e4507db-330b-466d-8786-9f55da5f6c31X
            level: 2
            code: PR
          - description: Stanton branch
            id: 2bf4a848-2926-485f-aa47-4aa8db90921bX
            level: 3
            code: STAT
          - description: Sales team
            id: 3c792567-7494-4f84-91ae-73c797c714efX
            level: 4
            code: SALES
        provisioning:
          provisioningItems:
            - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
              name: Corporate Credit Card
              recipient: accounting@company.com
              selectedOption:
                description: Amax Card
                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
              comments: Requires a platinum Amax Card
            - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
              name: Network Account
              recipient: helpdesk@company.com
              selectedOption:
                description: Super Account
                id: 3c792567-7494-4f84-91ae-73c797c714efX
              comments: Highest clearance
            - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
              name: Phone Type
              recipient: helpdesk@company.com
              selectedOption:
                description: Galaxy S5
                id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
              comments: Requires a black phone
          summaryEmailRecipients:
            - first@last.com
            - last@beuh.com
            - Joe@erad.com
        identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
        employeeNumber: '1234567890'
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
        createdAt: '2018-05-29T19:30:35.95Z'
        updatedAt: '2018-06-07T17:44:25.378Z'
    NewHiresGetById200Response:
      type: object
      properties:
        id:
          description: Unique identifier of the new hire
          type: string
        contactInformation:
          description: Contact information of the new hire
          type: object
          properties:
            name:
              description: Name of the new hire
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
            emailAddress:
              description: Email address of the new hire
              type: string
            primaryPhone:
              description: Primary phone number of the new hire
              type: string
            secondaryPhone:
              description: Secondary phone number of the new hire
              type: string
            address:
              description: Address of the new hire
              type: object
              properties:
                line1:
                  description: Line 1 of the address
                  type: string
                line2:
                  description: Line 2 of the address
                  type: string
                city:
                  description: City of the address
                  type: string
                postalCode:
                  description: Zip/postal code of the address
                  type: string
                county:
                  description: County of the address
                  type: string
                stateCode:
                  description: State code of the address
                  type: string
                countryCode:
                  description: Country code of the address
                  type: string
                country:
                  description: Country code of the address
                  type: object
                  properties:
                    code:
                      description: Code of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    country:
                      code: USA
                      name:
                        enUS: United States
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
                country:
                  code: USA
                  name:
                    enUs: United States
          example:
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              formerLast: Johnson
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            emailAddress: ultionboarding14+4@gmail.com
            primaryPhone: '3056985433'
            secondaryPhone: '3056986533'
            address:
              line1: 123 Main St
              line2: 412 Blue Rd
              city: Rosemead
              zipCode: A1A2B2
              county: County of Brant
              stateCode: 'ON'
              countryCode: USA
              country:
                code: CAN
                name:
                  enUS: Canada
        job:
          description: Job of the new hire
          type: object
          properties:
            id:
              description: Unique identifier of the job
              type: string
            name:
              description: The name of the job
              type: string
              additionalProperties:
                description: >-
                  The text of the translatable translated in the language
                  specified
                type: string
            code:
              description: Code of the job
              type: string
            requisitionId:
              description: RequisitionId of the job
              type: string
            selectedFLSAStatus:
              description: Selected FLSA status for the job
              type: string
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
            componentCompany:
              description: Component company of the job
              type: object
              properties:
                id:
                  description: Id of the component company
                  type: string
                name:
                  description: Name of the component company
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            workLocation:
              description: Work location of the job
              type: object
              properties:
                id:
                  description: Id of the work location
                  type: string
                name:
                  description: Name of the work location
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            supervisor:
              description: Supervisor of the job
              type: object
              properties:
                id:
                  description: Id of the supervisor
                  type: string
                name:
                  description: Name of the supervisor
                  type: object
                  properties:
                    prefix:
                      description: Prefix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    first:
                      description: First name
                      type: string
                    middle:
                      description: Middle name
                      type: string
                    last:
                      description: Last name
                      type: string
                    formerLast:
                      description: Former last name
                      type: string
                    suffix:
                      description: Suffix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    preferredFirst:
                      description: Preferred first name
                      type: string
                  example:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846X
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482X
                        name:
                          enUS: III
                      preferredFirst: Hugh
                email:
                  description: The email of the supervisor
                  type: string
                externalUserId:
                  description: The external user id of the supervisor
                  type: string
              example:
                supervisor:
                  id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
                  name:
                    prefix:
                      id: d9079570-57f0-4530-b889-a07c95acb846X
                      name:
                        enUS: Mr.
                    first: Hugo
                    middle: Alexander
                    last: Mastrantonioni
                    suffix:
                      id: 99ace441-e900-4a4c-9731-c97ea8451482X
                      name:
                        enUS: III
                    preferredFirst: Hugh
                  email: first@last.com
                  externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
            employeeType:
              description: Employee type for the job
              type: object
              properties:
                id:
                  description: Id of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                workLocation:
                  id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                  name:
                    enUS: Toronto Headquarters
          example:
            id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5bX
            code: HCOPS
            name:
              enUS: Lead Tech
              esES: Tecnico Principal
            requisitionId: DEV10113
            selectedFLSAStatus: 1
            componentCompany:
              id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5X
              name: Acme Industries
            workLocation:
              id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5X
              name: Acme Lab One
            supervisor:
              id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8aX
              name:
                prefix:
                  id: 08505515-581e-50a1-5f5e-515d5b35f5ffX
                  name:
                    enUS: Mr.
                first: Jeff
                middle: Blue
                last: Winner
                suffix:
                  id: 5558f505-8c15-5cd5-5aa3-dd555eas1555X
                  name:
                    enUS: III
                preferredFirst: Joe
              email: first@last.com
              externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
            employeeType:
              id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5X
              name:
                enUS: Comp Mgt 5-Reg
        organizationLevels:
          type: array
          items:
            description: Organization level
            type: object
            properties:
              description:
                description: >-
                  Description of a organization that the new hire is associated
                  with.
                type: string
              id:
                description: Identifier of the organization level
                type: string
              level:
                description: Level of the organization level
                type: string
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                description: >-
                  Unique code of a organization that the new hire is associated
                  with
                type: string
            example:
              description: Product development team
              'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
              level: 1
              code: PROD
        compensation:
          description: Compensation of the new hire
          type: object
          properties:
            isFullTime:
              description: Whether the new hire is full time
              type: boolean
            isSalaried:
              description: Whether the new hire is salaried
              type: boolean
            workHours:
              description: Work hours of the new hire
              type: number
            weeklyHours:
              description: Weekly hours of the new hire
              type: number
            currencyType:
              description: Currency type of the new hire's pay
              type: string
            currency:
              description: Currency of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
            payRate:
              description: Pay rate of the new hire
              type: number
            ratePer:
              description: Pay period of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyType: USD
            currency:
              code: USD
              name:
                enUS: US Dollar
            payRate: 20
            ratePer:
              code: H
              name:
                enUS: Hour
        onboardingOwner:
          description: Onboarding owner for the new hire
          type: object
          properties:
            id:
              description: Id of the onboarding owner
              type: string
            externalUserId:
              description: External user identifier of the onboarding owner
              type: string
            email:
              description: Email of the onboarding owner
              type: string
            name:
              description: Name of the onboarding owner
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: Hugo@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate:
          description: Hire date of the new hire
          type: string
          format: date-time
        orientationDate:
          description: Orientation date of the new hire
          type: string
          format: date-time
        startDate:
          description: Start date of the new hire
          type: string
          format: date-time
        pastStartDateReason:
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          type: string
        mentor:
          description: Mentor of the new hire
          type: object
          properties:
            description:
              description: Description of the mentor
              type: string
            id:
              description: Id of the mentor
              type: string
            externalUserId:
              description: External user identifier of the mentor
              type: string
            email:
              description: Email of the mentor
              type: string
            name:
              description: Name of the mentor
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            description: >-
              Suzie is THE person who knows the product best. She loves helping
              new team members.
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: talisa@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        personalMessage:
          description: Personalized welcome message for the new hire
          type: string
        provisioning:
          description: Provisioning for the new hire
          type: object
          properties:
            provisioningItems:
              description: The list of provisioning items selected for this New Hire
              type: array
              items:
                description: An individual provisioning item that is assigned to a new hire
                type: object
                properties:
                  id:
                    description: Id of the provisioning item
                    type: string
                  name:
                    description: Category of the provisioning item
                    type: string
                  recipient:
                    description: Recipient of the provisioning item
                    type: string
                  selectedOption:
                    description: Selected option for the provisioning item
                    type: object
                    properties:
                      description:
                        description: Description of the Option
                        type: string
                      id:
                        description: Unique identifier of the Option
                        type: string
                    example:
                      description: Apple iPad
                      id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4X
                  comments:
                    description: Comment on the provisioning item
                    type: string
                example:
                  NewHireProvisioningItemReadModel:
                    id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                    name: Corporate Credit Card
                    recipient: accounting@company.com
                    selectedOption:
                      description: Amax Card
                      id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                    comments: Platinum level
            summaryEmailRecipients:
              description: >-
                These emails receive updates about this new hire's provisioning
                items
              type: array
              items:
                description: >-
                  An individual email that receives updates on the new hire's
                  provisioning items
                type: string
          example:
            provisioning:
              provisioningItems:
                - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                  name: Corporate Credit Card
                  recipient: accounting@company.com
                  selectedOption:
                    description: Deluxe card
                    id: 6790f864-b0ff-4b1b-a3ac-23033c671c44X
                  comments: A credit card
                - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
                  name: Network Account
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Security Level 2 Account
                    id: a38d541b-16f7-46b6-b48a-892cb3831784X
                  comments: Allow access to data
                - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
                  name: Phone Type
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Galaxy S5
                    id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                  comments: Black
              summaryEmailRecipients:
                - fred@bluebill.com
                - jred@bluebill.com
                - ned@bluebill.com
        onboardingStatus:
          description: The status of the new hire in onboarding
          type: string
        identityUserId:
          description: Identity user identifier of the new hire
          type: string
        externalUserId:
          description: External user identifier of the new hire
          type: string
        employeeNumber:
          description: Employee number of the new hire
          type: string
        sentToProcessHireDate:
          description: Date that the new hire was processed
          type: string
          format: date-time
        launchedOn:
          description: Launch date of the new hire
          type: string
          format: date-time
        createdAt:
          description: Creation date of the new hire
          type: string
          format: date-time
        updatedAt:
          description: Last updated date of the new hire
          type: string
          format: date-time
      example:
        contactInformation:
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Hugh
          emailAddress: hugo2296@gmail.com
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
            country:
              code: CAN
              name:
                enUS: Canada
        job:
          id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1bX
          code: DJOB
          name:
            enUS: Lead Tech
            esES: Tecnico Principal
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          supervisor:
            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Joe
              middle: Jose
              last: Santo
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: Jr
              preferredFirst: Joseph
            email: jsanto@example.com
            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          componentCompany:
            id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
            name: Wayne Enterprises
          workLocation:
            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
            name: Toronto Headquarters
          employeeType:
            id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1X
            name:
              enUS: Comp Mgt 1-Reg
        compensation:
          isFullTime: true
          isSalaried: true
          workHours: 40
          weeklyHours: 168
          currencyType: CAD
          currency:
            code: CAD
            name:
              enUS: Canadian Dollar
          payRate: 50000
          ratePer:
            code: 'Y'
            name:
              enUS: Year
        mentor:
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Oden
            middle: Joe
            last: Leonerd
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Kevin
          email: oden_leon@gmail.com
          externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
        onboardingOwner:
          id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Jared
            middle: Joseph
            last: Nalin
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Jared
          email: jared_nalin@example.com
          externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        onboardingStatus: Launched
        sentToProcessHireDate:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        launchedOn:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        hireDate: '2018-06-23T00:00:00Z'
        orientationDate: '2018-07-06T00:00:00Z'
        startDate: '2018-06-30T00:00:00Z'
        organizationLevels:
          - description: Product division
            id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50fX
            level: 1
            code: PROD
          - description: Public relations
            id: 8e4507db-330b-466d-8786-9f55da5f6c31X
            level: 2
            code: PR
          - description: Stanton branch
            id: 2bf4a848-2926-485f-aa47-4aa8db90921bX
            level: 3
            code: STAT
          - description: Sales team
            id: 3c792567-7494-4f84-91ae-73c797c714efX
            level: 4
            code: SALES
        provisioning:
          provisioningItems:
            - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
              name: Corporate Credit Card
              recipient: accounting@company.com
              selectedOption:
                description: Amax Card
                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
              comments: Requires a platinum Amax Card
            - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
              name: Network Account
              recipient: helpdesk@company.com
              selectedOption:
                description: Super Account
                id: 3c792567-7494-4f84-91ae-73c797c714efX
              comments: Highest clearance
            - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
              name: Phone Type
              recipient: helpdesk@company.com
              selectedOption:
                description: Galaxy S5
                id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
              comments: Requires a black phone
          summaryEmailRecipients:
            - first@last.com
            - last@beuh.com
            - Joe@erad.com
        identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
        employeeNumber: '1234567890'
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
        createdAt: '2018-05-29T19:30:35.95Z'
        updatedAt: '2018-06-07T17:44:25.378Z'
    NewHiresGetById404Response:
      allOf:
        - type: object
          properties:
            title:
              description: Short, human-readable summary of the problem type
              type: string
            type:
              description: URI reference that identifies the problem type
              type: string
        - type: object
          properties:
            errors:
              type: object
              properties:
                modelState:
                  description: >-
                    Properties failing validation and the errors associated with
                    each of these properties.
                  properties:
                    property1:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            description: Machine-readable error type
                            type: string
                          message:
                            description: Short, human-readable message explaining the error
                            type: string
                    property2:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            description: Machine-readable error type
                            type: string
                          message:
                            description: Short, human-readable message explaining the error
                            type: string
                general:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        description: Machine-readable error type
                        type: string
                      message:
                        description: Short, human-readable message explaining the error
                        type: string
    NewHiresCreateSingleNewHireResponse:
      type: object
      properties:
        id:
          description: Unique identifier of the new hire
          type: string
        contactInformation:
          description: Contact information of the new hire
          type: object
          properties:
            name:
              description: Name of the new hire
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
            emailAddress:
              description: Email address of the new hire
              type: string
            primaryPhone:
              description: Primary phone number of the new hire
              type: string
            secondaryPhone:
              description: Secondary phone number of the new hire
              type: string
            address:
              description: Address of the new hire
              type: object
              properties:
                line1:
                  description: Line 1 of the address
                  type: string
                line2:
                  description: Line 2 of the address
                  type: string
                city:
                  description: City of the address
                  type: string
                postalCode:
                  description: Zip/postal code of the address
                  type: string
                county:
                  description: County of the address
                  type: string
                stateCode:
                  description: State code of the address
                  type: string
                countryCode:
                  description: Country code of the address
                  type: string
                country:
                  description: Country code of the address
                  type: object
                  properties:
                    code:
                      description: Code of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    country:
                      code: USA
                      name:
                        enUS: United States
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
                country:
                  code: USA
                  name:
                    enUs: United States
          example:
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              formerLast: Johnson
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            emailAddress: ultionboarding14+4@gmail.com
            primaryPhone: '3056985433'
            secondaryPhone: '3056986533'
            address:
              line1: 123 Main St
              line2: 412 Blue Rd
              city: Rosemead
              zipCode: A1A2B2
              county: County of Brant
              stateCode: 'ON'
              countryCode: USA
              country:
                code: CAN
                name:
                  enUS: Canada
        job:
          description: Job of the new hire
          type: object
          properties:
            id:
              description: Unique identifier of the job
              type: string
            name:
              description: The name of the job
              type: string
              additionalProperties:
                description: >-
                  The text of the translatable translated in the language
                  specified
                type: string
            code:
              description: Code of the job
              type: string
            requisitionId:
              description: RequisitionId of the job
              type: string
            selectedFLSAStatus:
              description: Selected FLSA status for the job
              type: string
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
            componentCompany:
              description: Component company of the job
              type: object
              properties:
                id:
                  description: Id of the component company
                  type: string
                name:
                  description: Name of the component company
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            workLocation:
              description: Work location of the job
              type: object
              properties:
                id:
                  description: Id of the work location
                  type: string
                name:
                  description: Name of the work location
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            supervisor:
              description: Supervisor of the job
              type: object
              properties:
                id:
                  description: Id of the supervisor
                  type: string
                name:
                  description: Name of the supervisor
                  type: object
                  properties:
                    prefix:
                      description: Prefix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    first:
                      description: First name
                      type: string
                    middle:
                      description: Middle name
                      type: string
                    last:
                      description: Last name
                      type: string
                    formerLast:
                      description: Former last name
                      type: string
                    suffix:
                      description: Suffix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    preferredFirst:
                      description: Preferred first name
                      type: string
                  example:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846X
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482X
                        name:
                          enUS: III
                      preferredFirst: Hugh
                email:
                  description: The email of the supervisor
                  type: string
                externalUserId:
                  description: The external user id of the supervisor
                  type: string
              example:
                supervisor:
                  id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
                  name:
                    prefix:
                      id: d9079570-57f0-4530-b889-a07c95acb846X
                      name:
                        enUS: Mr.
                    first: Hugo
                    middle: Alexander
                    last: Mastrantonioni
                    suffix:
                      id: 99ace441-e900-4a4c-9731-c97ea8451482X
                      name:
                        enUS: III
                    preferredFirst: Hugh
                  email: first@last.com
                  externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
            employeeType:
              description: Employee type for the job
              type: object
              properties:
                id:
                  description: Id of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                workLocation:
                  id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                  name:
                    enUS: Toronto Headquarters
          example:
            id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5bX
            code: HCOPS
            name:
              enUS: Lead Tech
              esES: Tecnico Principal
            requisitionId: DEV10113
            selectedFLSAStatus: 1
            componentCompany:
              id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5X
              name: Acme Industries
            workLocation:
              id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5X
              name: Acme Lab One
            supervisor:
              id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8aX
              name:
                prefix:
                  id: 08505515-581e-50a1-5f5e-515d5b35f5ffX
                  name:
                    enUS: Mr.
                first: Jeff
                middle: Blue
                last: Winner
                suffix:
                  id: 5558f505-8c15-5cd5-5aa3-dd555eas1555X
                  name:
                    enUS: III
                preferredFirst: Joe
              email: first@last.com
              externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
            employeeType:
              id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5X
              name:
                enUS: Comp Mgt 5-Reg
        organizationLevels:
          type: array
          items:
            description: Organization level
            type: object
            properties:
              description:
                description: >-
                  Description of a organization that the new hire is associated
                  with.
                type: string
              id:
                description: Identifier of the organization level
                type: string
              level:
                description: Level of the organization level
                type: string
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                description: >-
                  Unique code of a organization that the new hire is associated
                  with
                type: string
            example:
              description: Product development team
              'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
              level: 1
              code: PROD
        compensation:
          description: Compensation of the new hire
          type: object
          properties:
            isFullTime:
              description: Whether the new hire is full time
              type: boolean
            isSalaried:
              description: Whether the new hire is salaried
              type: boolean
            workHours:
              description: Work hours of the new hire
              type: number
            weeklyHours:
              description: Weekly hours of the new hire
              type: number
            currencyType:
              description: Currency type of the new hire's pay
              type: string
            currency:
              description: Currency of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
            payRate:
              description: Pay rate of the new hire
              type: number
            ratePer:
              description: Pay period of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyType: USD
            currency:
              code: USD
              name:
                enUS: US Dollar
            payRate: 20
            ratePer:
              code: H
              name:
                enUS: Hour
        onboardingOwner:
          description: Onboarding owner for the new hire
          type: object
          properties:
            id:
              description: Id of the onboarding owner
              type: string
            externalUserId:
              description: External user identifier of the onboarding owner
              type: string
            email:
              description: Email of the onboarding owner
              type: string
            name:
              description: Name of the onboarding owner
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: Hugo@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate:
          description: Hire date of the new hire
          type: string
          format: date-time
        orientationDate:
          description: Orientation date of the new hire
          type: string
          format: date-time
        startDate:
          description: Start date of the new hire
          type: string
          format: date-time
        pastStartDateReason:
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          type: string
        mentor:
          description: Mentor of the new hire
          type: object
          properties:
            description:
              description: Description of the mentor
              type: string
            id:
              description: Id of the mentor
              type: string
            externalUserId:
              description: External user identifier of the mentor
              type: string
            email:
              description: Email of the mentor
              type: string
            name:
              description: Name of the mentor
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            description: >-
              Suzie is THE person who knows the product best. She loves helping
              new team members.
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: talisa@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        personalMessage:
          description: Personalized welcome message for the new hire
          type: string
        provisioning:
          description: Provisioning for the new hire
          type: object
          properties:
            provisioningItems:
              description: The list of provisioning items selected for this New Hire
              type: array
              items:
                description: An individual provisioning item that is assigned to a new hire
                type: object
                properties:
                  id:
                    description: Id of the provisioning item
                    type: string
                  name:
                    description: Category of the provisioning item
                    type: string
                  recipient:
                    description: Recipient of the provisioning item
                    type: string
                  selectedOption:
                    description: Selected option for the provisioning item
                    type: object
                    properties:
                      description:
                        description: Description of the Option
                        type: string
                      id:
                        description: Unique identifier of the Option
                        type: string
                    example:
                      description: Apple iPad
                      id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4X
                  comments:
                    description: Comment on the provisioning item
                    type: string
                example:
                  NewHireProvisioningItemReadModel:
                    id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                    name: Corporate Credit Card
                    recipient: accounting@company.com
                    selectedOption:
                      description: Amax Card
                      id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                    comments: Platinum level
            summaryEmailRecipients:
              description: >-
                These emails receive updates about this new hire's provisioning
                items
              type: array
              items:
                description: >-
                  An individual email that receives updates on the new hire's
                  provisioning items
                type: string
          example:
            provisioning:
              provisioningItems:
                - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                  name: Corporate Credit Card
                  recipient: accounting@company.com
                  selectedOption:
                    description: Deluxe card
                    id: 6790f864-b0ff-4b1b-a3ac-23033c671c44X
                  comments: A credit card
                - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
                  name: Network Account
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Security Level 2 Account
                    id: a38d541b-16f7-46b6-b48a-892cb3831784X
                  comments: Allow access to data
                - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
                  name: Phone Type
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Galaxy S5
                    id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                  comments: Black
              summaryEmailRecipients:
                - fred@bluebill.com
                - jred@bluebill.com
                - ned@bluebill.com
        onboardingStatus:
          description: The status of the new hire in onboarding
          type: string
        identityUserId:
          description: Identity user identifier of the new hire
          type: string
        externalUserId:
          description: External user identifier of the new hire
          type: string
        employeeNumber:
          description: Employee number of the new hire
          type: string
        sentToProcessHireDate:
          description: Date that the new hire was processed
          type: string
          format: date-time
        launchedOn:
          description: Launch date of the new hire
          type: string
          format: date-time
        createdAt:
          description: Creation date of the new hire
          type: string
          format: date-time
        updatedAt:
          description: Last updated date of the new hire
          type: string
          format: date-time
      example:
        contactInformation:
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Hugh
          emailAddress: hugo2296@gmail.com
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
            country:
              code: CAN
              name:
                enUS: Canada
        job:
          id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1bX
          code: DJOB
          name:
            enUS: Lead Tech
            esES: Tecnico Principal
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          supervisor:
            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Joe
              middle: Jose
              last: Santo
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: Jr
              preferredFirst: Joseph
            email: jsanto@example.com
            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          componentCompany:
            id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
            name: Wayne Enterprises
          workLocation:
            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
            name: Toronto Headquarters
          employeeType:
            id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1X
            name:
              enUS: Comp Mgt 1-Reg
        compensation:
          isFullTime: true
          isSalaried: true
          workHours: 40
          weeklyHours: 168
          currencyType: CAD
          currency:
            code: CAD
            name:
              enUS: Canadian Dollar
          payRate: 50000
          ratePer:
            code: 'Y'
            name:
              enUS: Year
        mentor:
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Oden
            middle: Joe
            last: Leonerd
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Kevin
          email: oden_leon@gmail.com
          externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
        onboardingOwner:
          id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Jared
            middle: Joseph
            last: Nalin
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Jared
          email: jared_nalin@example.com
          externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        onboardingStatus: Launched
        sentToProcessHireDate:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        launchedOn:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        hireDate: '2018-06-23T00:00:00Z'
        orientationDate: '2018-07-06T00:00:00Z'
        startDate: '2018-06-30T00:00:00Z'
        organizationLevels:
          - description: Product division
            id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50fX
            level: 1
            code: PROD
          - description: Public relations
            id: 8e4507db-330b-466d-8786-9f55da5f6c31X
            level: 2
            code: PR
          - description: Stanton branch
            id: 2bf4a848-2926-485f-aa47-4aa8db90921bX
            level: 3
            code: STAT
          - description: Sales team
            id: 3c792567-7494-4f84-91ae-73c797c714efX
            level: 4
            code: SALES
        provisioning:
          provisioningItems:
            - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
              name: Corporate Credit Card
              recipient: accounting@company.com
              selectedOption:
                description: Amax Card
                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
              comments: Requires a platinum Amax Card
            - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
              name: Network Account
              recipient: helpdesk@company.com
              selectedOption:
                description: Super Account
                id: 3c792567-7494-4f84-91ae-73c797c714efX
              comments: Highest clearance
            - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
              name: Phone Type
              recipient: helpdesk@company.com
              selectedOption:
                description: Galaxy S5
                id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
              comments: Requires a black phone
          summaryEmailRecipients:
            - first@last.com
            - last@beuh.com
            - Joe@erad.com
        identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
        employeeNumber: '1234567890'
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
        createdAt: '2018-05-29T19:30:35.95Z'
        updatedAt: '2018-06-07T17:44:25.378Z'
    NewHiresCreateSingleNewHire201Response:
      type: object
      properties:
        id:
          description: Unique identifier of the new hire
          type: string
        contactInformation:
          description: Contact information of the new hire
          type: object
          properties:
            name:
              description: Name of the new hire
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
            emailAddress:
              description: Email address of the new hire
              type: string
            primaryPhone:
              description: Primary phone number of the new hire
              type: string
            secondaryPhone:
              description: Secondary phone number of the new hire
              type: string
            address:
              description: Address of the new hire
              type: object
              properties:
                line1:
                  description: Line 1 of the address
                  type: string
                line2:
                  description: Line 2 of the address
                  type: string
                city:
                  description: City of the address
                  type: string
                postalCode:
                  description: Zip/postal code of the address
                  type: string
                county:
                  description: County of the address
                  type: string
                stateCode:
                  description: State code of the address
                  type: string
                countryCode:
                  description: Country code of the address
                  type: string
                country:
                  description: Country code of the address
                  type: object
                  properties:
                    code:
                      description: Code of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    country:
                      code: USA
                      name:
                        enUS: United States
              example:
                line1: Line 1
                line2: Line 2
                city: Weston
                postalCode: '33326'
                county: Broward
                stateCode: FL
                countryCode: USA
                country:
                  code: USA
                  name:
                    enUs: United States
          example:
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              formerLast: Johnson
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            emailAddress: ultionboarding14+4@gmail.com
            primaryPhone: '3056985433'
            secondaryPhone: '3056986533'
            address:
              line1: 123 Main St
              line2: 412 Blue Rd
              city: Rosemead
              zipCode: A1A2B2
              county: County of Brant
              stateCode: 'ON'
              countryCode: USA
              country:
                code: CAN
                name:
                  enUS: Canada
        job:
          description: Job of the new hire
          type: object
          properties:
            id:
              description: Unique identifier of the job
              type: string
            name:
              description: The name of the job
              type: string
              additionalProperties:
                description: >-
                  The text of the translatable translated in the language
                  specified
                type: string
            code:
              description: Code of the job
              type: string
            requisitionId:
              description: RequisitionId of the job
              type: string
            selectedFLSAStatus:
              description: Selected FLSA status for the job
              type: string
              enum:
                - Not specified = 0
                - Exempt = 1
                - NonExempt = 2
            componentCompany:
              description: Component company of the job
              type: object
              properties:
                id:
                  description: Id of the component company
                  type: string
                name:
                  description: Name of the component company
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            workLocation:
              description: Work location of the job
              type: object
              properties:
                id:
                  description: Id of the work location
                  type: string
                name:
                  description: Name of the work location
                  type: string
              example:
                id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
                name: Wayne Enterprises
            supervisor:
              description: Supervisor of the job
              type: object
              properties:
                id:
                  description: Id of the supervisor
                  type: string
                name:
                  description: Name of the supervisor
                  type: object
                  properties:
                    prefix:
                      description: Prefix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    first:
                      description: First name
                      type: string
                    middle:
                      description: Middle name
                      type: string
                    last:
                      description: Last name
                      type: string
                    formerLast:
                      description: Former last name
                      type: string
                    suffix:
                      description: Suffix of the new hire in translatable format
                      type: object
                      properties:
                        id:
                          description: Id of the translatable
                          type: string
                        name:
                          description: The language that the translatable is in
                          type: string
                          additionalProperties:
                            description: The name
                            type: string
                      example:
                        workLocation:
                          id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                          name:
                            enUS: Toronto Headquarters
                    preferredFirst:
                      description: Preferred first name
                      type: string
                  example:
                    name:
                      prefix:
                        id: d9079570-57f0-4530-b889-a07c95acb846X
                        name:
                          enUS: Mr.
                      first: Hugo
                      middle: Alexander
                      last: Mastrantonioni
                      formerLast: Johnson
                      suffix:
                        id: 99ace441-e900-4a4c-9731-c97ea8451482X
                        name:
                          enUS: III
                      preferredFirst: Hugh
                email:
                  description: The email of the supervisor
                  type: string
                externalUserId:
                  description: The external user id of the supervisor
                  type: string
              example:
                supervisor:
                  id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
                  name:
                    prefix:
                      id: d9079570-57f0-4530-b889-a07c95acb846X
                      name:
                        enUS: Mr.
                    first: Hugo
                    middle: Alexander
                    last: Mastrantonioni
                    suffix:
                      id: 99ace441-e900-4a4c-9731-c97ea8451482X
                      name:
                        enUS: III
                    preferredFirst: Hugh
                  email: first@last.com
                  externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
            employeeType:
              description: Employee type for the job
              type: object
              properties:
                id:
                  description: Id of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                workLocation:
                  id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                  name:
                    enUS: Toronto Headquarters
          example:
            id: 55a3111e-3f5b-55b0-ac31-55dba5e5aa5bX
            code: HCOPS
            name:
              enUS: Lead Tech
              esES: Tecnico Principal
            requisitionId: DEV10113
            selectedFLSAStatus: 1
            componentCompany:
              id: f8bbaf0c-d801-5b55-1ef5-1ea55e5155c5X
              name: Acme Industries
            workLocation:
              id: b1ee5055-51be-5a5d-aa01-5ef5d55531f5X
              name: Acme Lab One
            supervisor:
              id: 51e5f31b-5155-5aef-51f0-f1b853bb5f8aX
              name:
                prefix:
                  id: 08505515-581e-50a1-5f5e-515d5b35f5ffX
                  name:
                    enUS: Mr.
                first: Jeff
                middle: Blue
                last: Winner
                suffix:
                  id: 5558f505-8c15-5cd5-5aa3-dd555eas1555X
                  name:
                    enUS: III
                preferredFirst: Joe
              email: first@last.com
              externalUserId: BF3DAEBD-5555-50BB-5AB1-C5833F51F5D0
            employeeType:
              id: 1ccb51fd-515b-5cbb-abb1-ced135551ae5X
              name:
                enUS: Comp Mgt 5-Reg
        organizationLevels:
          type: array
          items:
            description: Organization level
            type: object
            properties:
              description:
                description: >-
                  Description of a organization that the new hire is associated
                  with.
                type: string
              id:
                description: Identifier of the organization level
                type: string
              level:
                description: Level of the organization level
                type: string
                enum:
                  - Level 1 = 1
                  - Level 2 = 2
                  - Level 3 = 3
                  - Level 4 = 4
              code:
                description: >-
                  Unique code of a organization that the new hire is associated
                  with
                type: string
            example:
              description: Product development team
              'id:': 3990d626-4130-48c8-b87e-cd219e6cd405
              level: 1
              code: PROD
        compensation:
          description: Compensation of the new hire
          type: object
          properties:
            isFullTime:
              description: Whether the new hire is full time
              type: boolean
            isSalaried:
              description: Whether the new hire is salaried
              type: boolean
            workHours:
              description: Work hours of the new hire
              type: number
            weeklyHours:
              description: Weekly hours of the new hire
              type: number
            currencyType:
              description: Currency type of the new hire's pay
              type: string
            currency:
              description: Currency of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
            payRate:
              description: Pay rate of the new hire
              type: number
            ratePer:
              description: Pay period of the new hire
              type: object
              properties:
                code:
                  description: Code of the translatable
                  type: string
                name:
                  description: The language that the translatable is in
                  type: string
                  additionalProperties:
                    description: The name
                    type: string
              example:
                country:
                  code: USA
                  name:
                    enUS: United States
          example:
            isFullTime: true
            isSalaried: false
            workHours: 40
            weeklyHours: 168
            currencyType: USD
            currency:
              code: USD
              name:
                enUS: US Dollar
            payRate: 20
            ratePer:
              code: H
              name:
                enUS: Hour
        onboardingOwner:
          description: Onboarding owner for the new hire
          type: object
          properties:
            id:
              description: Id of the onboarding owner
              type: string
            externalUserId:
              description: External user identifier of the onboarding owner
              type: string
            email:
              description: Email of the onboarding owner
              type: string
            name:
              description: Name of the onboarding owner
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: Hugo@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        hireDate:
          description: Hire date of the new hire
          type: string
          format: date-time
        orientationDate:
          description: Orientation date of the new hire
          type: string
          format: date-time
        startDate:
          description: Start date of the new hire
          type: string
          format: date-time
        pastStartDateReason:
          description: >-
            Reason why the new hire start date is 4 or more business days in the
            past
          type: string
        mentor:
          description: Mentor of the new hire
          type: object
          properties:
            description:
              description: Description of the mentor
              type: string
            id:
              description: Id of the mentor
              type: string
            externalUserId:
              description: External user identifier of the mentor
              type: string
            email:
              description: Email of the mentor
              type: string
            name:
              description: Name of the mentor
              type: object
              properties:
                prefix:
                  description: Prefix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                first:
                  description: First name
                  type: string
                middle:
                  description: Middle name
                  type: string
                last:
                  description: Last name
                  type: string
                formerLast:
                  description: Former last name
                  type: string
                suffix:
                  description: Suffix of the new hire in translatable format
                  type: object
                  properties:
                    id:
                      description: Id of the translatable
                      type: string
                    name:
                      description: The language that the translatable is in
                      type: string
                      additionalProperties:
                        description: The name
                        type: string
                  example:
                    workLocation:
                      id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
                      name:
                        enUS: Toronto Headquarters
                preferredFirst:
                  description: Preferred first name
                  type: string
              example:
                name:
                  prefix:
                    id: d9079570-57f0-4530-b889-a07c95acb846X
                    name:
                      enUS: Mr.
                  first: Hugo
                  middle: Alexander
                  last: Mastrantonioni
                  formerLast: Johnson
                  suffix:
                    id: 99ace441-e900-4a4c-9731-c97ea8451482X
                    name:
                      enUS: III
                  preferredFirst: Hugh
          example:
            description: >-
              Suzie is THE person who knows the product best. She loves helping
              new team members.
            id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Hugo
              middle: Alexander
              last: Mastrantonioni
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: III
              preferredFirst: Hugh
            email: talisa@got.us
            externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        personalMessage:
          description: Personalized welcome message for the new hire
          type: string
        provisioning:
          description: Provisioning for the new hire
          type: object
          properties:
            provisioningItems:
              description: The list of provisioning items selected for this New Hire
              type: array
              items:
                description: An individual provisioning item that is assigned to a new hire
                type: object
                properties:
                  id:
                    description: Id of the provisioning item
                    type: string
                  name:
                    description: Category of the provisioning item
                    type: string
                  recipient:
                    description: Recipient of the provisioning item
                    type: string
                  selectedOption:
                    description: Selected option for the provisioning item
                    type: object
                    properties:
                      description:
                        description: Description of the Option
                        type: string
                      id:
                        description: Unique identifier of the Option
                        type: string
                    example:
                      description: Apple iPad
                      id: d5b79e4e-da8c-4017-9dc0-df30cb48fbf4X
                  comments:
                    description: Comment on the provisioning item
                    type: string
                example:
                  NewHireProvisioningItemReadModel:
                    id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                    name: Corporate Credit Card
                    recipient: accounting@company.com
                    selectedOption:
                      description: Amax Card
                      id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                    comments: Platinum level
            summaryEmailRecipients:
              description: >-
                These emails receive updates about this new hire's provisioning
                items
              type: array
              items:
                description: >-
                  An individual email that receives updates on the new hire's
                  provisioning items
                type: string
          example:
            provisioning:
              provisioningItems:
                - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
                  name: Corporate Credit Card
                  recipient: accounting@company.com
                  selectedOption:
                    description: Deluxe card
                    id: 6790f864-b0ff-4b1b-a3ac-23033c671c44X
                  comments: A credit card
                - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
                  name: Network Account
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Security Level 2 Account
                    id: a38d541b-16f7-46b6-b48a-892cb3831784X
                  comments: Allow access to data
                - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
                  name: Phone Type
                  recipient: helpdesk@company.com
                  selectedOption:
                    description: Galaxy S5
                    id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
                  comments: Black
              summaryEmailRecipients:
                - fred@bluebill.com
                - jred@bluebill.com
                - ned@bluebill.com
        onboardingStatus:
          description: The status of the new hire in onboarding
          type: string
        identityUserId:
          description: Identity user identifier of the new hire
          type: string
        externalUserId:
          description: External user identifier of the new hire
          type: string
        employeeNumber:
          description: Employee number of the new hire
          type: string
        sentToProcessHireDate:
          description: Date that the new hire was processed
          type: string
          format: date-time
        launchedOn:
          description: Launch date of the new hire
          type: string
          format: date-time
        createdAt:
          description: Creation date of the new hire
          type: string
          format: date-time
        updatedAt:
          description: Last updated date of the new hire
          type: string
          format: date-time
      example:
        contactInformation:
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Hugo
            middle: Alexander
            last: Mastrantonioni
            formerLast: Johnson
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Hugh
          emailAddress: hugo2296@gmail.com
          primaryPhone: '3056985433'
          secondaryPhone: '3056986533'
          address:
            line1: 123 Main St
            line2: APT. 101
            city: Toronto
            postalCode: M1R0E9
            county: County of Canada
            stateCode: 'ON'
            countryCode: CAN
            country:
              code: CAN
              name:
                enUS: Canada
        job:
          id: 96a5833e-5f4b-46b0-ac58-41dba1e4aa1bX
          code: DJOB
          name:
            enUS: Lead Tech
            esES: Tecnico Principal
          requisitionId: DEV30335
          selectedFLSAStatus: 2
          supervisor:
            id: 28e2f53b-2366-4aef-98f0-f8b765bb9f7aX
            name:
              prefix:
                id: d9079570-57f0-4530-b889-a07c95acb846X
                name:
                  enUS: Mr.
              first: Joe
              middle: Jose
              last: Santo
              suffix:
                id: 99ace441-e900-4a4c-9731-c97ea8451482X
                name:
                  enUS: Jr
              preferredFirst: Joseph
            email: jsanto@example.com
            externalUserId: BF5DAEBD-9149-40BB-9AB3-C4755F98F4D0
          componentCompany:
            id: f7bbaf0c-d703-4b46-8ef2-8ea62e9319c4X
            name: Wayne Enterprises
          workLocation:
            id: b3ee9042-43be-4a9d-aa03-1ef2d41153f9X
            name: Toronto Headquarters
          employeeType:
            id: 8ccb43fd-686b-4cbb-abb3-ced359148ae1X
            name:
              enUS: Comp Mgt 1-Reg
        compensation:
          isFullTime: true
          isSalaried: true
          workHours: 40
          weeklyHours: 168
          currencyType: CAD
          currency:
            code: CAD
            name:
              enUS: Canadian Dollar
          payRate: 50000
          ratePer:
            code: 'Y'
            name:
              enUS: Year
        mentor:
          description: >-
            Oden will be your mentor and is THE person to get you up to speed on
            the product. She loves helping new team members.
          id: 56f378ee-90d4-44ec-9ab7-83f2437d1fe6X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Oden
            middle: Joe
            last: Leonerd
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Kevin
          email: oden_leon@gmail.com
          externalUserId: 145A494C-DAFD-4454-881C-6700C85512C8
        onboardingOwner:
          id: 2d42c7a5-52de-402e-92af-493b5b7f0682X
          name:
            prefix:
              id: d9079570-57f0-4530-b889-a07c95acb846X
              name:
                enUS: Mr.
            first: Jared
            middle: Joseph
            last: Nalin
            suffix:
              id: 99ace441-e900-4a4c-9731-c97ea8451482X
              name:
                enUS: III
            preferredFirst: Jared
          email: jared_nalin@example.com
          externalUserId: 74A3D0C8-FF2A-4EC9-9263-F515B000A0C5
        onboardingStatus: Launched
        sentToProcessHireDate:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        launchedOn:
          utcInstant: '2018-06-07T17:44:25.358Z'
          offset: '-04:00:00'
        hireDate: '2018-06-23T00:00:00Z'
        orientationDate: '2018-07-06T00:00:00Z'
        startDate: '2018-06-30T00:00:00Z'
        organizationLevels:
          - description: Product division
            id: b7a43db9-73c7-43d6-aaab-7b2bc20ed50fX
            level: 1
            code: PROD
          - description: Public relations
            id: 8e4507db-330b-466d-8786-9f55da5f6c31X
            level: 2
            code: PR
          - description: Stanton branch
            id: 2bf4a848-2926-485f-aa47-4aa8db90921bX
            level: 3
            code: STAT
          - description: Sales team
            id: 3c792567-7494-4f84-91ae-73c797c714efX
            level: 4
            code: SALES
        provisioning:
          provisioningItems:
            - id: 9977e393-3e7a-4044-a8f9-d8c3f6ef0de2X
              name: Corporate Credit Card
              recipient: accounting@company.com
              selectedOption:
                description: Amax Card
                id: a4971b36-e8a3-43c8-b163-27c6d9dfbb98X
              comments: Requires a platinum Amax Card
            - id: 1f9c7b77-18b3-4ab7-b9cb-03790c0dc4bdX
              name: Network Account
              recipient: helpdesk@company.com
              selectedOption:
                description: Super Account
                id: 3c792567-7494-4f84-91ae-73c797c714efX
              comments: Highest clearance
            - id: add33aee-ebff-4d50-8f45-9d7ab820c053X
              name: Phone Type
              recipient: helpdesk@company.com
              selectedOption:
                description: Galaxy S5
                id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
              comments: Requires a black phone
          summaryEmailRecipients:
            - first@last.com
            - last@beuh.com
            - Joe@erad.com
        identityUserId: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49
        externalUserId: b7a4fd34-73c7-43d6-aaab-7b2bc20ed50f
        employeeNumber: '1234567890'
        personalMessage: >-
          Hugo, I was very impressed with your passion. I am looking forward to
          working with you and I know your expertise in this space will help our
          team get to the next level.
        pastStartDateReason: An internal audit revealed that the new hire was not initiated
        id: 05882bc4-7ae6-40b5-b1ee-2e56dd37bb49X
        createdAt: '2018-05-29T19:30:35.95Z'
        updatedAt: '2018-06-07T17:44:25.378Z'
    NewHiresCreateSingleNewHire400Response:
      allOf:
        - type: object
          properties:
            title:
              description: Short, human-readable summary of the problem type
              type: string
            type:
              description: URI reference that identifies the problem type
              type: string
        - type: object
          properties:
            errors:
              type: object
              properties:
                modelState:
                  description: >-
                    Properties failing validation and the errors associated with
                    each of these properties.
                  properties:
                    property1:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            description: Machine-readable error type
                            type: string
                          message:
                            description: Short, human-readable message explaining the error
                            type: string
                    property2:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            description: Machine-readable error type
                            type: string
                          message:
                            description: Short, human-readable message explaining the error
                            type: string
                general:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        description: Machine-readable error type
                        type: string
                      message:
                        description: Short, human-readable message explaining the error
                        type: string
    NewHiresCreateSingleNewHire409Response:
      allOf:
        - type: object
          properties:
            title:
              description: Short, human-readable summary of the problem type
              type: string
            type:
              description: URI reference that identifies the problem type
              type: string
        - type: object
          properties:
            errors:
              type: object
              properties:
                modelState:
                  description: >-
                    Properties failing validation and the errors associated with
                    each of these properties.
                  properties:
                    property1:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            description: Machine-readable error type
                            type: string
                          message:
                            description: Short, human-readable message explaining the error
                            type: string
                    property2:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            description: Machine-readable error type
                            type: string
                          message:
                            description: Short, human-readable message explaining the error
                            type: string
                general:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        description: Machine-readable error type
                        type: string
                      message:
                        description: Short, human-readable message explaining the error
                        type: string
    IntegrationAuditConfigurationGetDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/IntegrationAuditConfiguration'
    IntegrationAuditConfigurationGetData200Response:
      type: array
      items:
        $ref: '#/components/schemas/IntegrationAuditConfiguration'
    IntegrationAuditConfigurationGetData400Response:
      type: object
      additionalProperties:
        type: object
    IntegrationAuditConfigurationGetData404Response:
      type: object
      additionalProperties:
        type: object
    IntegrationAuditConfigurationGetData500Response:
      type: object
      additionalProperties:
        type: object
    InternationalEmployeeGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/InternationalEmployeeModel'
    InternationalEmployeeGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/InternationalEmployeeModel'
    InternationalEmployeeGetDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/InternationalEmployeeModel'
    InternationalEmployeeGetDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/InternationalEmployeeModel'
    JobGroupGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/JobGroupDetail'
    JobGroupGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/JobGroupDetail'
    JobGroupGet404Response:
      type: object
      additionalProperties:
        type: object
    JobGroupGet500Response:
      type: object
      additionalProperties:
        type: object
    OptionRateGetDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/OptionRate'
    OptionRateGetData200Response:
      type: array
      items:
        $ref: '#/components/schemas/OptionRate'
    OptionRateGetData500Response:
      type: object
      additionalProperties:
        type: object
    OpenEnrollmentEmployeeDeductionsGetAuditDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/OpenEnrollmentEmployeeDeductions'
    OpenEnrollmentEmployeeDeductionsGetAuditDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/OpenEnrollmentEmployeeDeductions'
    OpenEnrollmentEmployeeDeductionsGetAuditDetails404Response:
      type: object
      additionalProperties:
        type: object
    OpenEnrollmentEmployeeDeductionsGetAuditDetails500Response:
      type: object
      additionalProperties:
        type: object
    OpenEnrollmentDependentDeductionsGetDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/OpenEnrollmentDependentDeductions'
    OpenEnrollmentDependentDeductionsGetData200Response:
      type: array
      items:
        $ref: '#/components/schemas/OpenEnrollmentDependentDeductions'
    OpenEnrollmentDependentDeductionsGetData400Response:
      type: object
      additionalProperties:
        type: object
    OpenEnrollmentDependentDeductionsGetData404Response:
      type: object
      additionalProperties:
        type: object
    OpenEnrollmentDependentDeductionsGetData500Response:
      type: object
      additionalProperties:
        type: object
    ViewOrCreateOrganizationLevelsGetAllOrgLevelsResponse:
      type: array
      items:
        $ref: '#/components/schemas/org-levels'
    ViewOrCreateOrganizationLevelsGetAllOrgLevels200Response:
      type: array
      items:
        $ref: '#/components/schemas/org-levels'
    PayRegisterGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/PayRegister'
    PayRegisterGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/PayRegister'
    PayRegisterGet404Response:
      type: object
      additionalProperties:
        type: object
    PayRegisterGet500Response:
      type: object
      additionalProperties:
        type: object
    PayGroupPayPeriodGetPayGroupPayPeriodResponse:
      type: array
      items:
        $ref: '#/components/schemas/PayGroupPayPeriods'
    PayGroupPayPeriodGetPayGroupPayPeriod200Response:
      type: array
      items:
        $ref: '#/components/schemas/PayGroupPayPeriods'
    PayGroupPayPeriodGetPayGroupPayPeriod404Response:
      type: object
      additionalProperties:
        type: object
    PayGroupPayPeriodGetPayGroupPayPeriod500Response:
      type: object
      additionalProperties:
        type: object
    OrganizationReportingCategoryGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationReportingCategoryDetails'
    OrganizationReportingCategoryGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/OrganizationReportingCategoryDetails'
    OrganizationReportingCategoryGet404Response:
      type: object
      additionalProperties:
        type: object
    OrganizationReportingCategoryGet429Response:
      type: object
      additionalProperties:
        type: object
    OrganizationReportingCategoryGet500Response:
      type: object
      additionalProperties:
        type: object
    PayrollDeductionsHistoryGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/PayrollDeductionsHistory'
    PayrollDeductionsHistoryGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/PayrollDeductionsHistory'
    PayrollDeductionsHistoryGet404Response:
      type: object
      additionalProperties:
        type: object
    PayrollDeductionsHistoryGet500Response:
      type: object
      additionalProperties:
        type: object
    PcFieldsDataGetFieldsDataResponse:
      type: array
      items:
        $ref: >-
          #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData
    PcFieldsDataGetFieldsData200Response:
      type: array
      items:
        $ref: >-
          #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.Models.PcData
    PcFieldsDataGetFieldsData500Response:
      type: object
      additionalProperties:
        type: object
    PcFieldsDataV2GetFieldsDataResponse:
      type: array
      items:
        $ref: >-
          #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData
    PcFieldsDataV2GetFieldsData200Response:
      type: array
      items:
        $ref: >-
          #/components/schemas/UltimateSoftware.Foundation.Services.Api.UltiPro.Personnel.PlatformConfiguration.v2.Models.PcData
    PcFieldsDataV2GetFieldsData500Response:
      type: object
      additionalProperties:
        type: object
    PersonDetailsGetAllDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpPersonDetails'
    PersonDetailsGetAllDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpPersonDetails'
    PersonDetailsGetAllDetails500Response:
      type: object
      additionalProperties:
        type: object
    PersonDetailsGetSingleCompanyDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpPersonDetails'
    PersonDetailsGetSingleCompanyDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpPersonDetails'
    PersonDetailsGetSingleCompanyDetails500Response:
      type: object
      additionalProperties:
        type: object
    PersonDetailsGetSingleRecordResponse:
      type: array
      items:
        $ref: '#/components/schemas/EmpPersonDetails'
    PersonDetailsGetSingleRecord200Response:
      type: array
      items:
        $ref: '#/components/schemas/EmpPersonDetails'
    PersonDetailsGetSingleRecord500Response:
      type: object
      additionalProperties:
        type: object
    EarningsAddTimeClockDataResponse:
      type: object
      properties:
        success_count:
          type: number
    PositionReportGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/PositionReport'
    PositionReportGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/PositionReport'
    PositionReportGet404Response:
      type: object
      additionalProperties:
        type: object
    PositionReportGet500Response:
      type: object
      additionalProperties:
        type: object
    PositionsListFilteredResponse:
      type: array
      items:
        $ref: '#/components/schemas/Positions'
    PositionsListFiltered200Response:
      type: array
      items:
        $ref: '#/components/schemas/Positions'
    PositionsListFiltered404Response:
      type: object
      additionalProperties:
        type: object
    PositionsListFiltered429Response:
      type: object
      additionalProperties:
        type: object
    PositionsListFiltered500Response:
      type: object
      additionalProperties:
        type: object
    GetAllPtoPlansInformationResponse:
      type: array
      items:
        $ref: '#/components/schemas/pto-plans'
    GetAllPtoPlansInformation200Response:
      type: array
      items:
        $ref: '#/components/schemas/pto-plans'
    GetSpecificPtoPlanInfoResponse:
      type: array
      items:
        $ref: '#/components/schemas/pto-plans'
    GetSpecificPtoPlanInfo200Response:
      type: array
      items:
        $ref: '#/components/schemas/pto-plans'
    GetSpecificEmployeesPtoPlansInfoResponse:
      type: array
      items:
        $ref: '#/components/schemas/pto-plans'
    GetSpecificEmployeesPtoPlansInfo200Response:
      type: array
      items:
        $ref: '#/components/schemas/pto-plans'
    RolesGetSecurityRolesResponse:
      type: object
      additionalProperties:
        type: object
    RolesGetSecurityRoles404Response:
      type: object
      additionalProperties:
        type: object
    RolesGetSecurityRoles500Response:
      type: object
      additionalProperties:
        type: object
    ShiftCodeGetDataResponse:
      type: array
      items:
        $ref: '#/components/schemas/ShiftCode_GetList'
    ShiftCodeGetData200Response:
      type: array
      items:
        $ref: '#/components/schemas/ShiftCode_GetList'
    ShiftCodeGetData404Response:
      type: object
      additionalProperties:
        type: object
    ShiftCodeGetData429Response:
      type: object
      additionalProperties:
        type: object
    ShiftCodeGetData500Response:
      type: object
      additionalProperties:
        type: object
    TaxGroupsGetAllDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/TaxGroupsDetails'
    TaxGroupsGetAllDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/TaxGroupsDetails'
    TaxGroupsGetAllDetails404Response:
      type: object
      additionalProperties:
        type: object
    TaxGroupsGetAllDetails429Response:
      type: object
      additionalProperties:
        type: object
    TaxGroupsGetAllDetails500Response:
      type: object
      additionalProperties:
        type: object
    UserDetailsGetUserDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserDetails'
    UserDetailsGetUserDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/UserDetails'
    UserDetailsGetUserDetails404Response:
      type: object
      additionalProperties:
        type: object
    UserDetailsGetUserDetails500Response:
      type: object
      additionalProperties:
        type: object
    UserPreferencesGetUserPreferencesDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserPreferencesDetails'
    UserPreferencesGetUserPreferencesDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/UserPreferencesDetails'
    UserPreferencesGetUserPreferencesDetails404Response:
      type: object
      additionalProperties:
        type: object
    UserPreferencesGetUserPreferencesDetails500Response:
      type: object
      additionalProperties:
        type: object
    ScheduleDetailsPublishDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/MultiStatusDtoScheduleModelStateDto'
    UserProfileDetailsGetAllDetailsResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserProfileDetails'
    UserProfileDetailsGetAllDetails200Response:
      type: array
      items:
        $ref: '#/components/schemas/UserProfileDetails'
    UserProfileDetailsGetAllDetails404Response:
      type: object
      additionalProperties:
        type: object
    UserProfileDetailsGetAllDetails429Response:
      type: object
      additionalProperties:
        type: object
    UserProfileDetailsGetAllDetails500Response:
      type: object
      additionalProperties:
        type: object
    UserDefinedFieldsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserDefinedFields'
    UserDefinedFieldsGet200Response:
      type: array
      items:
        $ref: '#/components/schemas/UserDefinedFields'
    UserDefinedFieldsGet400Response:
      type: object
      additionalProperties:
        type: object
    UserDefinedFieldsGet500Response:
      type: object
      additionalProperties:
        type: object
    UserDefinedFieldsGetSingleCompanyResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserDefinedFields'
    UserDefinedFieldsGetSingleCompany200Response:
      type: array
      items:
        $ref: '#/components/schemas/UserDefinedFields'
    UserDefinedFieldsGetSingleCompany400Response:
      type: object
      additionalProperties:
        type: object
    UserDefinedFieldsGetSingleCompany500Response:
      type: object
      additionalProperties:
        type: object
    UserDefinedFieldsGetSingleEmployeeResponse:
      type: array
      items:
        $ref: '#/components/schemas/UserDefinedFields'
    UserDefinedFieldsGetSingleEmployee200Response:
      type: array
      items:
        $ref: '#/components/schemas/UserDefinedFields'
    UserDefinedFieldsGetSingleEmployee400Response:
      type: object
      additionalProperties:
        type: object
    UserDefinedFieldsGetSingleEmployee500Response:
      type: object
      additionalProperties:
        type: object
    LocationsGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/locations'
    JobsGetAllConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/jobs'
    AllergyConfigurationsGetResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    AwardTypeGetAllConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    CareerProviderGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    ChildSupportTypeGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    CobraStatusGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    CompanyPropertyGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    CourseCategoryGetAllConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    CourseDeliveryMetGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    CourseSubCategoryGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    DisabilityGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    EmployeeTypeGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    JobFamilyGetAllConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    LicenseTypeGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    LoanTypeGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    MaritalStatusGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    MilitaryBranchesGetAllConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    MilitaryEraGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    NamePrefixGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    OtherPhoneTypesGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    ProjectGetAllConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    SchoolGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    SkillProficiencyLevelGetAllConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    SkillsGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    TermTypeGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
    WaiveReasonGetConfigurationsResponse:
      type: array
      items:
        $ref: '#/components/schemas/codeObject'
  requestBodies:
    BusinessRuleImportRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        text/json:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        application/xml:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        text/xml:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/BusinessRuleImportRequest'
      required: true
    EmployeePayStatementRangeFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeePayStatementRangeFilter'
        text/json:
          schema:
            $ref: '#/components/schemas/EmployeePayStatementRangeFilter'
      required: true
    CompanyPayStatementFilter:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CompanyPayStatementFilter'
        text/json:
          schema:
            $ref: '#/components/schemas/CompanyPayStatementFilter'
      required: true
    org-levels:
      description: The org-level to be written.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/org-levels'
      required: true
security:
  - OauthSecurity:
      - recruiting.domain.third-party-job-board-integrations.auto-feed
x-explorer-enabled: false
x-readme:
  proxy-enabled: true
  samples-enabled: true
_id: 6434630d47850d00118bc616
