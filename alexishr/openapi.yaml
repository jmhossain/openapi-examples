openapi: 3.0.0
info:
  title: AlexisHR API
  description: "<h1 id=\"introduction\">Introduction</h1>\r\n<p>\r\n  AlexisHR API is currently in preview. This means that small, backward\r\n  incompatible changes might be introduced while in preview. The changes will be\r\n  documented and communicated.\r\n  <a\r\n    href=\"https://cdn.forms-content.sg-form.com/56c6a65c-90a2-11eb-a700-a6de1aea3a1a\"\r\n    target=\"_blank\"\r\n    ><button>Subscribe to updates</button></a\r\n  >\r\n</p>\r\n\r\n<h1 id=\"authentication\">Authentication</h1>\r\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\">\r\n<code class=\"is-highlighted language-bash\">curl https://api.alexishr.com/v1/employee \\\r\n  -H \"Authorization: Bearer &lt;your_access_token&gt;\"</code>\r\n</pre>\r\n<p>\r\n  Authenticate your account when using the API by including your secret Access\r\n  Token in the request.\r\n  <a href=\"https://app.alexishr.com/access-tokens\">Manage your Access Tokens</a\r\n  >.\r\n</p>\r\n<p>\r\n  Authentication is performed by passing the Access Token in the Authorization\r\n  header.\r\n</p>\r\n<hr />\r\n\r\n<h1 id=\"structure\">Structure</h1>\r\n<p>\r\n  You will find the structure of the API to be highly uniform and consistent.\r\n  Typically every resource can be accessed via a top level endpoint, such as\r\n  <code>/v1/employee</code>. For every such resource, you can perform some of\r\n  the following operations:\r\n</p>\r\n<h2>Operations</h2>\r\n<table>\r\n  <tr>\r\n    <td>GET /v1/:resource</td>\r\n    <td>List all objects of this type</td>\r\n  </tr>\r\n  <tr>\r\n    <td>GET /v1/:resource/:id</td>\r\n    <td>Retrieve a resource by id</td>\r\n  </tr>\r\n  <tr>\r\n    <td>POST /v1/:resource</td>\r\n    <td>Create a resource of this type</td>\r\n  </tr>\r\n  <tr>\r\n    <td>PATCH /v1/:resource/:id</td>\r\n    <td>Update the resource by id</td>\r\n  </tr>\r\n  <tr>\r\n    <td>DELETE /v1/:resource/:id</td>\r\n    <td>Delete the resource by id</td>\r\n  </tr>\r\n</table>\r\n<hr />\r\n\r\n<h1 id=\"roles\">Roles</h1>\r\n<p>The Access Tokens will have owner permission on the account</p>\r\n<hr />\r\n\r\n<h1 id=\"filters\">Filters</h1>\r\n<p>\r\n  Some of the list endpoints allow to filter results by certain conditions.\r\n  Refer to specific resources to find out what criteria are allowed. Below is a\r\n  list of the different conditions.\r\n</p>\r\n\r\n<h4 id=\"eq\"><code>$eq</code></h4>\r\n<p>Find all results matching the attribute value specified.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$eq]=value</code></pre>\r\n</div>\r\n<p>Can also be simplified like this.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName]=value</code></pre>\r\n</div>\r\n\r\n<h4 id=\"neq\"><code>$neq</code></h4>\r\n<p>Find all results not matching the attribute value specified.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$neq]=value</code></pre>\r\n</div>\r\n\r\n<h4 id=\"gt\"><code>$gt</code>, <code>$gte</code></h4>\r\n<p>\r\n  Find all results where the value is more (<code>$gt</code>) or more and equal\r\n  (<code>$gte</code>) to a given value.\r\n</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$gte]=2020-01-01</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h4 id=\"lt\"><code>$lt</code>, <code>$lte</code></h4>\r\n<p>\r\n  Find all results where the value is less (<code>$lt</code>) or less and equal\r\n  (<code>$lte</code>) to a given value.\r\n</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$lte]=2020-01-01</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h4 id=\"in\"><code>$in</code>, <code>$nin</code></h4>\r\n<p>\r\n  Find all results matching (<code>$in</code>) or not matching\r\n  (<code>$nin</code>) any of the attribute values specified.\r\n</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[fieldName][$in][]=value1&filters[fieldName][$in][]=value2</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h4 id=\"between\"><code>$between</code></h4>\r\n<p>Find all results between two values specified.</p>\r\n<div>\r\n  <pre><code class=\"language-shell\" data-lang=\"shell\">GET /v1/example?filters[startDate][$between][]=2020-01-01&filters[startDate][$between][]=2020-12-31</code></pre>\r\n</div>\r\n<hr />\r\n\r\n<h1 id=\"versioning\">Versioning</h1>\r\n<p>\r\n  Each version of the API is guaranteed to be compatible with the resources of\r\n  the same version. When we make breaking changes to the API a new version will\r\n  be published\r\n</p>\r\n<hr />\r\n\r\n<h1 id=\"changelog\">Changelog</h1>\r\n<h3>2023-12-20</h3>\r\n<p>Field [updated] added for filter & select for Get Many Employments and Get Many Employees.</p>\r\n<h3>2021-03-15</h3>\r\n<p>First draft was published</p>\r\n<hr />\r\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  version: v1-preview
  contact:
    name: AlexisHR Support
    url: ''
    email: support@alexishr.com
  termsOfService: https://alexishr.com/terms-of-service
  license:
    name: EUL
    url: https://alexishr.com/public-api-license
  x-konfig-ignore:
    potential-incorrect-type: true
servers:
  - description: production
    url: https://api.alexishr.com/v1
  - description: sandbox
    url: https://api.sandbox.alexishr.com/v1
tags:
  - name: employee
  - name: department
  - name: office
  - name: team
  - name: employee-team-reference
  - name: compensation
  - name: employment
  - name: employment-type
  - name: cost-center
  - name: leave
  - name: leave-type
  - name: child
  - name: timesheet-entry
  - name: work-week
  - name: company
  - name: leave-transaction
  - name: timesheet
  - name: timesheet-entry-type
paths:
  /company:
    get:
      tags:
        - company
      summary: Get Many Companies
      operationId: Company_listManyCompanies
      security:
        - bearer: []
      description: Get Many Companies
      parameters:
        - description: >-
            Select Company fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Companies. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Companies. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Companies by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompaniesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /company/{id}:
    get:
      tags:
        - company
      summary: Get One Company
      operationId: Company_getOne
      security:
        - bearer: []
      description: Get One Company
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Company fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employee:
    get:
      tags:
        - employee
      summary: Get Many Employees
      operationId: Employee_listManyEmployees
      security:
        - bearer: []
      description: Get Many Employees
      parameters:
        - description: >-
            Select Employee fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - title
                - active
                - companyId
                - officeId
                - managerEmployeeId
                - departmentId
                - costCenterId
                - employmentId
                - employmentTypeId
                - employmentCountry
                - compensationId
                - userId
                - userName
                - division
                - organization
                - employeeNumber
                - workEmail
                - workPhone
                - workPhoneSanitized
                - hireDate
                - endDate
                - hasOccupationalPension
                - privateEmail
                - firstName
                - lastName
                - ssn
                - privatePhone
                - privatePhoneSanitized
                - birthDate
                - age
                - nationality
                - gender
                - pronoun
                - created
                - updated
          style: form
          explode: false
        - description: >-
            Select related Employee resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - office
                - costCenter
                - effectiveCostCenter
                - child
                - department
                - emergencyContact
                - employment
                - employmentType
                - compensation
                - managerEmployee
                - teamReference
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              title:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              active:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              officeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              managerEmployeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              departmentId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              costCenterId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employmentId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employmentTypeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employmentCountry:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              compensationId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              userId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              userName:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              division:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              organization:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeNumber:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              workEmail:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              workPhone:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              workPhoneSanitized:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              hireDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              endDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              hasOccupationalPension:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              privateEmail:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              firstName:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              lastName:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              ssn:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              privatePhone:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              privatePhoneSanitized:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              birthDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              age:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              nationality:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              gender:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              pronoun:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              created:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              updated:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Employees. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Employees. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Employees by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              title:
                type: string
                enum:
                  - asc
                  - desc
              id:
                type: string
                enum:
                  - asc
                  - desc
              active:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              officeId:
                type: string
                enum:
                  - asc
                  - desc
              managerEmployeeId:
                type: string
                enum:
                  - asc
                  - desc
              departmentId:
                type: string
                enum:
                  - asc
                  - desc
              costCenterId:
                type: string
                enum:
                  - asc
                  - desc
              employmentId:
                type: string
                enum:
                  - asc
                  - desc
              employmentTypeId:
                type: string
                enum:
                  - asc
                  - desc
              employmentCountry:
                type: string
                enum:
                  - asc
                  - desc
              compensationId:
                type: string
                enum:
                  - asc
                  - desc
              userId:
                type: string
                enum:
                  - asc
                  - desc
              userName:
                type: string
                enum:
                  - asc
                  - desc
              division:
                type: string
                enum:
                  - asc
                  - desc
              organization:
                type: string
                enum:
                  - asc
                  - desc
              employeeNumber:
                type: string
                enum:
                  - asc
                  - desc
              workEmail:
                type: string
                enum:
                  - asc
                  - desc
              workPhone:
                type: string
                enum:
                  - asc
                  - desc
              workPhoneSanitized:
                type: string
                enum:
                  - asc
                  - desc
              hireDate:
                type: string
                enum:
                  - asc
                  - desc
              endDate:
                type: string
                enum:
                  - asc
                  - desc
              hasOccupationalPension:
                type: string
                enum:
                  - asc
                  - desc
              privateEmail:
                type: string
                enum:
                  - asc
                  - desc
              firstName:
                type: string
                enum:
                  - asc
                  - desc
              lastName:
                type: string
                enum:
                  - asc
                  - desc
              ssn:
                type: string
                enum:
                  - asc
                  - desc
              privatePhone:
                type: string
                enum:
                  - asc
                  - desc
              privatePhoneSanitized:
                type: string
                enum:
                  - asc
                  - desc
              birthDate:
                type: string
                enum:
                  - asc
                  - desc
              age:
                type: string
                enum:
                  - asc
                  - desc
              nationality:
                type: string
                enum:
                  - asc
                  - desc
              gender:
                type: string
                enum:
                  - asc
                  - desc
              pronoun:
                type: string
                enum:
                  - asc
                  - desc
              created:
                type: string
                enum:
                  - asc
                  - desc
              updated:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - employee
      summary: Create One Employee
      operationId: Employee_createOneEmployee
      security:
        - bearer: []
      description: Create One Employee
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employee/{id}:
    get:
      tags:
        - employee
      summary: Get One Employee
      operationId: Employee_getOne
      security:
        - bearer: []
      description: Get One Employee
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Employee fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - title
                - active
                - companyId
                - officeId
                - managerEmployeeId
                - departmentId
                - costCenterId
                - employmentId
                - employmentTypeId
                - employmentCountry
                - compensationId
                - userId
                - userName
                - division
                - organization
                - employeeNumber
                - workEmail
                - workPhone
                - workPhoneSanitized
                - hireDate
                - endDate
                - hasOccupationalPension
                - privateEmail
                - firstName
                - lastName
                - ssn
                - privatePhone
                - privatePhoneSanitized
                - birthDate
                - age
                - nationality
                - gender
                - pronoun
                - created
                - updated
          style: form
          explode: false
        - description: >-
            Select related Employee resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - office
                - costCenter
                - effectiveCostCenter
                - child
                - department
                - emergencyContact
                - employment
                - employmentType
                - compensation
                - managerEmployee
                - teamReference
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - employee
      summary: Update One Employee
      operationId: Employee_updateOne
      security:
        - bearer: []
      description: Update One Employee
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - employee
      summary: Replace One Employee
      operationId: Employee_replaceOneEmployee
      security:
        - bearer: []
      description: Replace One Employee
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - employee
      summary: Delete One Employee
      operationId: Employee_removeEmployee
      security:
        - bearer: []
      description: Delete One Employee
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /department:
    get:
      tags:
        - department
      summary: Get Many Departments
      operationId: Department_listManyDepartments
      security:
        - bearer: []
      description: Get Many Departments
      parameters:
        - description: >-
            Select Department fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - costCenterId
                - effectiveCostCenterId
                - parentId
          style: form
          explode: false
        - description: >-
            Select related Department resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - costCenter
                - effectiveCostCenter
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              costCenterId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              effectiveCostCenterId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              parentId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Departments. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Departments. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Departments by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
              costCenterId:
                type: string
                enum:
                  - asc
                  - desc
              effectiveCostCenterId:
                type: string
                enum:
                  - asc
                  - desc
              parentId:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - department
      summary: Create One Department
      operationId: Department_createOne
      security:
        - bearer: []
      description: Create One Department
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDepartmentRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /department/{id}:
    get:
      tags:
        - department
      summary: Get One Department
      operationId: Department_getOne
      security:
        - bearer: []
      description: Get One Department
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Department fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - costCenterId
                - effectiveCostCenterId
                - parentId
          style: form
          explode: false
        - description: >-
            Select related Department resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - costCenter
                - effectiveCostCenter
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - department
      summary: Update One Department
      operationId: Department_updateOneDepartment
      security:
        - bearer: []
      description: Update One Department
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDepartmentRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - department
      summary: Replace One Department
      operationId: Department_replaceOne
      security:
        - bearer: []
      description: Replace One Department
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDepartmentRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - department
      summary: Delete One Department
      operationId: Department_deleteOneDepartment
      security:
        - bearer: []
      description: Delete One Department
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /office:
    get:
      tags:
        - office
      summary: Get Many Offices
      operationId: Office_listManyOffices
      security:
        - bearer: []
      description: Get Many Offices
      parameters:
        - description: >-
            Select Office fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - phone
                - email
                - timezone
                - CFAR
                - SCB
                - SNI
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              phone:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              email:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              timezone:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              CFAR:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              SCB:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              SNI:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Offices. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Offices. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Offices by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
              phone:
                type: string
                enum:
                  - asc
                  - desc
              email:
                type: string
                enum:
                  - asc
                  - desc
              timezone:
                type: string
                enum:
                  - asc
                  - desc
              CFAR:
                type: string
                enum:
                  - asc
                  - desc
              SCB:
                type: string
                enum:
                  - asc
                  - desc
              SNI:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - office
      summary: Create One Office
      operationId: Office_createOneOffice
      security:
        - bearer: []
      description: Create One Office
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOfficeRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /office/{id}:
    get:
      tags:
        - office
      summary: Get One Office
      operationId: Office_getOneOffice
      security:
        - bearer: []
      description: Get One Office
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Office fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - phone
                - email
                - timezone
                - CFAR
                - SCB
                - SNI
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - office
      summary: Update One Office
      operationId: Office_updateOne
      security:
        - bearer: []
      description: Update One Office
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfficeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - office
      summary: Replace One Office
      operationId: Office_replaceOne
      security:
        - bearer: []
      description: Replace One Office
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfficeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OfficeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - office
      summary: Delete One Office
      operationId: Office_deleteOne
      security:
        - bearer: []
      description: Delete One Office
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /team:
    get:
      tags:
        - team
      summary: Get Many Teams
      operationId: Team_listTeams
      security:
        - bearer: []
      description: Get Many Teams
      parameters:
        - description: >-
            Select Team fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - description
                - bgColor
                - fgColor
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              description:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              bgColor:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              fgColor:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Teams. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Teams. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Teams by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              description:
                type: string
                enum:
                  - asc
                  - desc
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
              bgColor:
                type: string
                enum:
                  - asc
                  - desc
              fgColor:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - team
      summary: Create One Team
      operationId: Team_createOneTeam
      security:
        - bearer: []
      description: Create One Team
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /team/{id}:
    get:
      tags:
        - team
      summary: Get One Team
      operationId: Team_getOneTeam
      security:
        - bearer: []
      description: Get One Team
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Team fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - description
                - bgColor
                - fgColor
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - team
      summary: Update One Team
      operationId: Team_updateTeam
      security:
        - bearer: []
      description: Update One Team
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - team
      summary: Replace One Team
      operationId: Team_replaceTeam
      security:
        - bearer: []
      description: Replace One Team
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - team
      summary: Delete One Team
      operationId: Team_deleteOne
      security:
        - bearer: []
      description: Delete One Team
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employee-team-reference:
    get:
      tags:
        - employee-team-reference
      summary: Get Many EmployeeTeamReferences
      operationId: Employeeteamreference_getMany
      security:
        - bearer: []
      description: Get Many EmployeeTeamReferences
      parameters:
        - description: >-
            Select EmployeeTeamReference fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - teamId
                - userId
                - employeeId
          style: form
          explode: false
        - description: >-
            Select related EmployeeTeamReference resources, comma-separated.
            (e.g. `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - employee
                - team
                - user
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              teamId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              userId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received EmployeeTeamReferences. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received EmployeeTeamReferences. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received EmployeeTeamReferences by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              teamId:
                type: string
                enum:
                  - asc
                  - desc
              userId:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmployeeTeamReferencesGetManyResponseMapped
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - employee-team-reference
      summary: Create One EmployeeTeamReference
      operationId: Employeeteamreference_createOneEmployeeTeamReference
      security:
        - bearer: []
      description: Create One EmployeeTeamReference
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmployeeTeamReferenceRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTeamReferenceResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employee-team-reference/{id}:
    get:
      tags:
        - employee-team-reference
      summary: Get One EmployeeTeamReference
      operationId: Employeeteamreference_getOneEmployeeTeamReference
      security:
        - bearer: []
      description: Get One EmployeeTeamReference
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select EmployeeTeamReference fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - teamId
                - userId
                - employeeId
          style: form
          explode: false
        - description: >-
            Select related EmployeeTeamReference resources, comma-separated.
            (e.g. `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - employee
                - team
                - user
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTeamReferenceGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - employee-team-reference
      summary: Update One EmployeeTeamReference
      operationId: Employeeteamreference_updateOneEmployeeTeamReference
      security:
        - bearer: []
      description: Update One EmployeeTeamReference
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeTeamReferenceRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTeamReferenceResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - employee-team-reference
      summary: Replace One EmployeeTeamReference
      operationId: Employeeteamreference_replaceOne
      security:
        - bearer: []
      description: Replace One EmployeeTeamReference
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmployeeTeamReferenceRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeTeamReferenceResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - employee-team-reference
      summary: Delete One EmployeeTeamReference
      operationId: Employeeteamreference_deleteOne
      security:
        - bearer: []
      description: Delete One EmployeeTeamReference
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /compensation:
    get:
      tags:
        - compensation
      summary: Get Many Compensations
      operationId: Compensation_getManyCompensations
      security:
        - bearer: []
      description: Get Many Compensations
      parameters:
        - description: >-
            Select Compensation fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - employeeId
                - companyId
                - amount
                - effectiveDate
                - baseAmount
                - exchangeRate
                - currency
                - payoutDay
                - payoutPeriod
                - payoutFrequency
                - salarySchedule
                - paidOvertime
                - note
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              amount:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              effectiveDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              baseAmount:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              exchangeRate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              currency:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              payoutDay:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              payoutPeriod:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              payoutFrequency:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              salarySchedule:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              paidOvertime:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              note:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Compensations. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Compensations. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Compensations by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              amount:
                type: string
                enum:
                  - asc
                  - desc
              effectiveDate:
                type: string
                enum:
                  - asc
                  - desc
              baseAmount:
                type: string
                enum:
                  - asc
                  - desc
              exchangeRate:
                type: string
                enum:
                  - asc
                  - desc
              currency:
                type: string
                enum:
                  - asc
                  - desc
              payoutDay:
                type: string
                enum:
                  - asc
                  - desc
              payoutPeriod:
                type: string
                enum:
                  - asc
                  - desc
              payoutFrequency:
                type: string
                enum:
                  - asc
                  - desc
              salarySchedule:
                type: string
                enum:
                  - asc
                  - desc
              paidOvertime:
                type: string
                enum:
                  - asc
                  - desc
              note:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationsGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - compensation
      summary: Create One Compensation
      operationId: Compensation_createOneCompensation
      security:
        - bearer: []
      description: Create One Compensation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompensationRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /compensation/{id}:
    get:
      tags:
        - compensation
      summary: Get One Compensation
      operationId: Compensation_getOne
      security:
        - bearer: []
      description: Get One Compensation
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Compensation fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - employeeId
                - companyId
                - amount
                - effectiveDate
                - baseAmount
                - exchangeRate
                - currency
                - payoutDay
                - payoutPeriod
                - payoutFrequency
                - salarySchedule
                - paidOvertime
                - note
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - compensation
      summary: Update One Compensation
      operationId: Compensation_updateOne
      security:
        - bearer: []
      description: Update One Compensation
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompensationRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - compensation
      summary: Replace One Compensation
      operationId: Compensation_replaceOneCompensation
      security:
        - bearer: []
      description: Replace One Compensation
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompensationRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompensationResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - compensation
      summary: Delete One Compensation
      operationId: Compensation_deleteOne
      security:
        - bearer: []
      description: Delete One Compensation
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employment:
    get:
      tags:
        - employment
      summary: Get Many Employments
      operationId: Employment_listManyEmployments
      security:
        - bearer: []
      description: Get Many Employments
      parameters:
        - description: >-
            Select Employment fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - employeeId
                - typeId
                - startDate
                - endDate
                - updated
                - effectiveEndDate
                - terminated
                - rate
                - note
                - country
          style: form
          explode: false
        - description: >-
            Select related Employment resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - type
                - employee
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              typeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              startDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              endDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              updated:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              effectiveEndDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              terminated:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              rate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              note:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              country:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Employments. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Employments. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Employments by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              typeId:
                type: string
                enum:
                  - asc
                  - desc
              startDate:
                type: string
                enum:
                  - asc
                  - desc
              endDate:
                type: string
                enum:
                  - asc
                  - desc
              updated:
                type: string
                enum:
                  - asc
                  - desc
              effectiveEndDate:
                type: string
                enum:
                  - asc
                  - desc
              terminated:
                type: string
                enum:
                  - asc
                  - desc
              rate:
                type: string
                enum:
                  - asc
                  - desc
              note:
                type: string
                enum:
                  - asc
                  - desc
              country:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentsGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - employment
      summary: Create One Employment
      operationId: Employment_createOneEmployment
      security:
        - bearer: []
      description: Create One Employment
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmploymentRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employment/{id}:
    get:
      tags:
        - employment
      summary: Get One Employment
      operationId: Employment_getOne
      security:
        - bearer: []
      description: Get One Employment
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Employment fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - employeeId
                - typeId
                - startDate
                - endDate
                - updated
                - effectiveEndDate
                - terminated
                - rate
                - note
                - country
          style: form
          explode: false
        - description: >-
            Select related Employment resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - type
                - employee
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - employment
      summary: Update One Employment
      operationId: Employment_updateEmploymentData
      security:
        - bearer: []
      description: Update One Employment
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmploymentRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - employment
      summary: Replace One Employment
      operationId: Employment_replaceOne
      security:
        - bearer: []
      description: Replace One Employment
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmploymentRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - employment
      summary: Delete One Employment
      operationId: Employment_removeOne
      security:
        - bearer: []
      description: Delete One Employment
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employment-type:
    get:
      tags:
        - employment-type
      summary: Get Many Employment Types
      operationId: Employmenttype_getManyEmploymentTypes
      security:
        - bearer: []
      description: Get Many Employment Types
      parameters:
        - description: >-
            Select Employment Type fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - vacation
                - country
                - maxMonths
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              vacation:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              country:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              maxMonths:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Employment Types. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Employment Types. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Employment Types by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
              vacation:
                type: string
                enum:
                  - asc
                  - desc
              country:
                type: string
                enum:
                  - asc
                  - desc
              maxMonths:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentTypesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - employment-type
      summary: Create One Employment Type
      operationId: Employmenttype_createOneEmploymentType
      security:
        - bearer: []
      description: Create One Employment Type
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmploymentTypeRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentTypeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /employment-type/{id}:
    get:
      tags:
        - employment-type
      summary: Get One Employment Type
      operationId: Employmenttype_getOne
      security:
        - bearer: []
      description: Get One Employment Type
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Employment Type fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - name
                - vacation
                - country
                - maxMonths
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentTypeGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - employment-type
      summary: Update One Employment Type
      operationId: Employmenttype_updateOneEmploymentType
      security:
        - bearer: []
      description: Update One Employment Type
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmploymentTypeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentTypeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - employment-type
      summary: Replace One Employment Type
      operationId: Employmenttype_updateOneEmploymentType
      security:
        - bearer: []
      description: Replace One Employment Type
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmploymentTypeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentTypeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - employment-type
      summary: Delete One Employment Type
      operationId: Employmenttype_deleteOneType
      security:
        - bearer: []
      description: Delete One Employment Type
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /cost-center:
    get:
      tags:
        - cost-center
      summary: Get Many Cost Centers
      operationId: Costcenter_getMany
      security:
        - bearer: []
      description: Get Many Cost Centers
      parameters:
        - description: >-
            Select Cost Center fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - code
                - name
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              code:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Cost Centers. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Cost Centers. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Cost Centers by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              code:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCentersGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - cost-center
      summary: Create One Cost Center
      operationId: Costcenter_createOneCostCenter
      security:
        - bearer: []
      description: Create One Cost Center
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCostCenterRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenterResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /cost-center/{id}:
    get:
      tags:
        - cost-center
      summary: Get One Cost Center
      operationId: Costcenter_getOneCostCenter
      security:
        - bearer: []
      description: Get One Cost Center
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Cost Center fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - code
                - name
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenterGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - cost-center
      summary: Update One Cost Center
      operationId: Costcenter_updateOneCostCenter
      security:
        - bearer: []
      description: Update One Cost Center
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCostCenterRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenterResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - cost-center
      summary: Replace One Cost Center
      operationId: Costcenter_replaceOneCostCenter
      security:
        - bearer: []
      description: Replace One Cost Center
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCostCenterRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostCenterResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - cost-center
      summary: Delete One Cost Center
      operationId: Costcenter_deleteOneCostCenter
      security:
        - bearer: []
      description: Delete One Cost Center
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /leave:
    get:
      tags:
        - leave
      summary: Get Many Leaves
      operationId: Leave_getManyLeaves
      security:
        - bearer: []
      description: Get Many Leaves
      parameters:
        - description: >-
            Select Leave fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - employeeId
                - typeId
                - status
                - duration
                - startDate
                - endDate
          style: form
          explode: false
        - description: >-
            Select related Leave resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - type
                - employee
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              typeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              status:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              duration:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              startDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              endDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Leaves. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Leaves. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Leaves by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              typeId:
                type: string
                enum:
                  - asc
                  - desc
              status:
                type: string
                enum:
                  - asc
                  - desc
              duration:
                type: string
                enum:
                  - asc
                  - desc
              startDate:
                type: string
                enum:
                  - asc
                  - desc
              endDate:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - leave
      summary: Create One Leave
      operationId: Leave_createOne
      security:
        - bearer: []
      description: Create One Leave
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeaveRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /leave/{id}:
    get:
      tags:
        - leave
      summary: Get One Leave
      operationId: Leave_getOneLeave
      security:
        - bearer: []
      description: Get One Leave
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Leave fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - employeeId
                - typeId
                - status
                - duration
                - startDate
                - endDate
          style: form
          explode: false
        - description: >-
            Select related Leave resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - type
                - employee
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - leave
      summary: Update One Leave
      operationId: Leave_updateOneLeave
      security:
        - bearer: []
      description: Update One Leave
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaveRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - leave
      summary: Replace One Leave
      operationId: Leave_replaceOne
      security:
        - bearer: []
      description: Replace One Leave
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaveRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - leave
      summary: Delete One Leave
      operationId: Leave_deleteOneLeave
      security:
        - bearer: []
      description: Delete One Leave
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /leave-type:
    get:
      tags:
        - leave-type
      summary: Get Many LeaveTypes
      operationId: Leavetype_getManyLeaveTypes
      security:
        - bearer: []
      description: Get Many LeaveTypes
      parameters:
        - description: >-
            Select LeaveType fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - kind
                - minimumDuration
                - deductible
                - paid
                - disabled
                - archived
          style: form
          explode: false
        - description: >-
            Select related LeaveType resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - leaveTypeCode
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              kind:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              minimumDuration:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              deductible:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              paid:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              disabled:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              archived:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received LeaveTypes. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received LeaveTypes. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received LeaveTypes by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
              kind:
                type: string
                enum:
                  - asc
                  - desc
              minimumDuration:
                type: string
                enum:
                  - asc
                  - desc
              deductible:
                type: string
                enum:
                  - asc
                  - desc
              paid:
                type: string
                enum:
                  - asc
                  - desc
              disabled:
                type: string
                enum:
                  - asc
                  - desc
              archived:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - leave-type
      summary: Create One LeaveType
      operationId: Leavetype_createOneLeaveType
      security:
        - bearer: []
      description: Create One LeaveType
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeaveTypeRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /leave-type/{id}:
    get:
      tags:
        - leave-type
      summary: Get One LeaveType
      operationId: Leavetype_getOneLeaveType
      security:
        - bearer: []
      description: Get One LeaveType
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select LeaveType fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - kind
                - minimumDuration
                - deductible
                - paid
                - disabled
                - archived
          style: form
          explode: false
        - description: >-
            Select related LeaveType resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - leaveTypeCode
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypeGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - leave-type
      summary: Update One LeaveType
      operationId: Leavetype_updateOneLeaveType
      security:
        - bearer: []
      description: Update One LeaveType
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaveTypeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - leave-type
      summary: Replace One LeaveType
      operationId: Leavetype_replaceLeaveType
      security:
        - bearer: []
      description: Replace One LeaveType
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaveTypeRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTypeResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - leave-type
      summary: Delete One LeaveType
      operationId: Leavetype_deleteOneLeaveType
      security:
        - bearer: []
      description: Delete One LeaveType
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /leave-transaction:
    get:
      tags:
        - leave-transaction
      summary: Get Many LeaveTransactions
      operationId: Leavetransaction_listManyTransactions
      security:
        - bearer: []
      description: Get Many LeaveTransactions
      parameters:
        - description: >-
            Select LeaveTransaction fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - leaveTypeId
                - employeeId
                - childId
                - description
                - date
                - hours
                - extent
          style: form
          explode: false
        - description: >-
            Select related LeaveTransaction resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - child
                - leaveType
                - employee
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              description:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              leaveTypeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              childId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              date:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              hours:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              extent:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received LeaveTransactions. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received LeaveTransactions. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received LeaveTransactions by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              description:
                type: string
                enum:
                  - asc
                  - desc
              id:
                type: string
                enum:
                  - asc
                  - desc
              leaveTypeId:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              childId:
                type: string
                enum:
                  - asc
                  - desc
              date:
                type: string
                enum:
                  - asc
                  - desc
              hours:
                type: string
                enum:
                  - asc
                  - desc
              extent:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTransactionsGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /leave-transaction/{id}:
    get:
      tags:
        - leave-transaction
      summary: Get One LeaveTransaction
      operationId: Leavetransaction_getOneLeaveTransaction
      security:
        - bearer: []
      description: Get One LeaveTransaction
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select LeaveTransaction fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - leaveTypeId
                - employeeId
                - childId
                - description
                - date
                - hours
                - extent
          style: form
          explode: false
        - description: >-
            Select related LeaveTransaction resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - child
                - leaveType
                - employee
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveTransactionGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /child:
    get:
      tags:
        - child
      summary: Get Many Children
      operationId: Child_getMany
      security:
        - bearer: []
      description: Get Many Children
      parameters:
        - description: >-
            Select Child fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - employeeId
                - name
                - birthdate
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              birthdate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Children. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Children. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Children by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
              birthdate:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildrenGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - child
      summary: Create One Child
      operationId: Child_createOne
      security:
        - bearer: []
      description: Create One Child
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChildRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /child/{id}:
    get:
      tags:
        - child
      summary: Get One Child
      operationId: Child_getOneChild
      security:
        - bearer: []
      description: Get One Child
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Child fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - employeeId
                - name
                - birthdate
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - child
      summary: Update One Child
      operationId: Child_updateChildData
      security:
        - bearer: []
      description: Update One Child
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChildRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - child
      summary: Replace One Child
      operationId: Child_replaceChildData
      security:
        - bearer: []
      description: Replace One Child
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChildRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChildResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - child
      summary: Delete One Child
      operationId: Child_deleteChild
      security:
        - bearer: []
      description: Delete One Child
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /timesheet:
    get:
      tags:
        - timesheet
      summary: Get Many Timesheets
      operationId: Timesheet_getMany
      security:
        - bearer: []
      description: Get Many Timesheets
      parameters:
        - description: >-
            Select Timesheet fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - status
                - startDate
                - endDate
                - localCutOffDate
                - utcCutOffDate
                - approvalDeadlineDate
                - interval
                - note
                - approverEmployeeId
                - employeeId
                - submitDate
                - approvalDate
                - rejectedDate
                - updated
                - timezone
          style: form
          explode: false
        - description: >-
            Select related Timesheet resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - approverEmployee
                - employee
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              status:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              startDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              endDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              localCutOffDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              utcCutOffDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              approvalDeadlineDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              interval:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              note:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              approverEmployeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              submitDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              approvalDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              rejectedDate:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              updated:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              timezone:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received Timesheets. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received Timesheets. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received Timesheets by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              status:
                type: string
                enum:
                  - asc
                  - desc
              startDate:
                type: string
                enum:
                  - asc
                  - desc
              endDate:
                type: string
                enum:
                  - asc
                  - desc
              localCutOffDate:
                type: string
                enum:
                  - asc
                  - desc
              utcCutOffDate:
                type: string
                enum:
                  - asc
                  - desc
              approvalDeadlineDate:
                type: string
                enum:
                  - asc
                  - desc
              interval:
                type: string
                enum:
                  - asc
                  - desc
              note:
                type: string
                enum:
                  - asc
                  - desc
              approverEmployeeId:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              submitDate:
                type: string
                enum:
                  - asc
                  - desc
              approvalDate:
                type: string
                enum:
                  - asc
                  - desc
              rejectedDate:
                type: string
                enum:
                  - asc
                  - desc
              updated:
                type: string
                enum:
                  - asc
                  - desc
              timezone:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetsGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /timesheet/{id}:
    get:
      tags:
        - timesheet
      summary: Get One Timesheet
      operationId: Timesheet_get
      security:
        - bearer: []
      description: Get One Timesheet
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select Timesheet fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - status
                - startDate
                - endDate
                - localCutOffDate
                - utcCutOffDate
                - approvalDeadlineDate
                - interval
                - note
                - approverEmployeeId
                - employeeId
                - submitDate
                - approvalDate
                - rejectedDate
                - updated
                - timezone
          style: form
          explode: false
        - description: >-
            Select related Timesheet resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - approverEmployee
                - employee
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /timesheet-entry:
    get:
      tags:
        - timesheet-entry
      summary: Get Many TimesheetEntries
      operationId: Timesheetentry_listManyEntries
      security:
        - bearer: []
      description: Get Many TimesheetEntries
      parameters:
        - description: >-
            Select TimesheetEntry fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - timesheetId
                - typeId
                - employeeId
                - date
                - updated
                - status
                - minutes
                - note
          style: form
          explode: false
        - description: >-
            Select related TimesheetEntry resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - employee
                - timesheet
                - type
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              timesheetId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              typeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              date:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              updated:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              status:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              minutes:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              note:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received TimesheetEntries. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received TimesheetEntries. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received TimesheetEntries by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              timesheetId:
                type: string
                enum:
                  - asc
                  - desc
              typeId:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              date:
                type: string
                enum:
                  - asc
                  - desc
              updated:
                type: string
                enum:
                  - asc
                  - desc
              status:
                type: string
                enum:
                  - asc
                  - desc
              minutes:
                type: string
                enum:
                  - asc
                  - desc
              note:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntriesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - timesheet-entry
      summary: Create One TimesheetEntry
      operationId: Timesheetentry_createOneEntry
      security:
        - bearer: []
      description: Create One TimesheetEntry
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimesheetEntryRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /timesheet-entry/{id}:
    get:
      tags:
        - timesheet-entry
      summary: Get One TimesheetEntry
      operationId: Timesheetentry_getOneEntry
      security:
        - bearer: []
      description: Get One TimesheetEntry
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select TimesheetEntry fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - timesheetId
                - typeId
                - employeeId
                - date
                - updated
                - status
                - minutes
                - note
          style: form
          explode: false
        - description: >-
            Select related TimesheetEntry resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - employee
                - timesheet
                - type
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - timesheet-entry
      summary: Update One TimesheetEntry
      operationId: Timesheetentry_updateOneEntry
      security:
        - bearer: []
      description: Update One TimesheetEntry
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimesheetEntryRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - timesheet-entry
      summary: Replace One TimesheetEntry
      operationId: Timesheetentry_updateOneEntry
      security:
        - bearer: []
      description: Replace One TimesheetEntry
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimesheetEntryRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - timesheet-entry
      summary: Delete One TimesheetEntry
      operationId: Timesheetentry_deleteOneEntry
      security:
        - bearer: []
      description: Delete One TimesheetEntry
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /timesheet-entry-type:
    get:
      tags:
        - timesheet-entry-type
      summary: Get Many TimesheetEntryTypes
      operationId: Timesheetentrytype_listManyTimesheetEntryTypes
      security:
        - bearer: []
      description: Get Many TimesheetEntryTypes
      parameters:
        - description: >-
            Select TimesheetEntryType fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - kind
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              name:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              kind:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received TimesheetEntryTypes. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received TimesheetEntryTypes. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received TimesheetEntryTypes by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              name:
                type: string
                enum:
                  - asc
                  - desc
              kind:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryTypesGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /timesheet-entry-type/{id}:
    get:
      tags:
        - timesheet-entry-type
      summary: Get One TimesheetEntryType
      operationId: Timesheetentrytype_getOneTimesheetEntryType
      security:
        - bearer: []
      description: Get One TimesheetEntryType
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select TimesheetEntryType fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - name
                - kind
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetEntryTypeGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /work-week:
    get:
      tags:
        - work-week
      summary: Get Many WorkWeeks
      operationId: Workweek_getMany
      security:
        - bearer: []
      description: Get Many WorkWeeks
      parameters:
        - description: >-
            Select WorkWeek fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - officeId
                - employeeId
                - effectiveFrom
                - timezone
                - duration
          style: form
          explode: false
        - description: >-
            Select related WorkWeek resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - office
                - employee
          style: form
          explode: false
        - description: >-
            Filters conditions per field. (e.g.
            `filters[id][$eq]=507f1f77bcf86cd799439011`)
          name: filters
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              companyId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              officeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              employeeId:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              effectiveFrom:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              timezone:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
              duration:
                type: object
                properties:
                  $eq:
                    type: string
                  $neq:
                    type: string
                  $gt:
                    type: string
                  $lt:
                    type: string
                  $gte:
                    type: string
                  $lte:
                    type: string
                  $in:
                    type: array
                    items:
                      type: string
                  $nin:
                    type: array
                    items:
                      type: string
                  $between:
                    type: array
                    items:
                      type: string
                  $all:
                    type: string
          style: deepObject
          explode: true
          allowReserved: true
        - description: Limit amount of received WorkWeeks. (e.g. `limit=20`)
          name: limit
          required: false
          in: query
          schema:
            type: integer
        - description: Offset amount of received WorkWeeks. (e.g. `offset=20`)
          name: offset
          required: false
          in: query
          schema:
            type: integer
        - description: Sort received WorkWeeks by field. (e.g. `sort[id]=asc`)
          name: sort
          required: false
          in: query
          schema:
            type: object
            properties:
              id:
                type: string
                enum:
                  - asc
                  - desc
              companyId:
                type: string
                enum:
                  - asc
                  - desc
              officeId:
                type: string
                enum:
                  - asc
                  - desc
              employeeId:
                type: string
                enum:
                  - asc
                  - desc
              effectiveFrom:
                type: string
                enum:
                  - asc
                  - desc
              timezone:
                type: string
                enum:
                  - asc
                  - desc
              duration:
                type: string
                enum:
                  - asc
                  - desc
          style: deepObject
          explode: true
          allowReserved: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkWeeksGetManyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    post:
      tags:
        - work-week
      summary: Create One WorkWeek
      operationId: Workweek_createOneWorkweek
      security:
        - bearer: []
      description: Create One WorkWeek
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkWeekRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkWeekResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
  /work-week/{id}:
    get:
      tags:
        - work-week
      summary: Get One WorkWeek
      operationId: Workweek_getOne
      security:
        - bearer: []
      description: Get One WorkWeek
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
        - description: >-
            Select WorkWeek fields, comma-separated. (e.g.
            `select=id,firstName,lastName,workEmail`)
          name: select
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - id
                - companyId
                - officeId
                - employeeId
                - effectiveFrom
                - timezone
                - duration
          style: form
          explode: false
        - description: >-
            Select related WorkWeek resources, comma-separated. (e.g.
            `relations=office,department`)
          name: relations
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - office
                - employee
          style: form
          explode: false
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkWeekGetOneResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    patch:
      tags:
        - work-week
      summary: Update One WorkWeek
      operationId: Workweek_updateOne
      security:
        - bearer: []
      description: Update One WorkWeek
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkWeekRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkWeekResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    put:
      tags:
        - work-week
      summary: Replace One WorkWeek
      operationId: Workweek_replaceOne
      security:
        - bearer: []
      description: Replace One WorkWeek
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWorkWeekRequest'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkWeekResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
    delete:
      tags:
        - work-week
      summary: Delete One WorkWeek
      operationId: Workweek_deleteOne
      security:
        - bearer: []
      description: Delete One WorkWeek
      parameters:
        - description: Resource Id
          name: id
          required: true
          in: path
          example: 507f1f77bcf86cd799439011
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseMapped'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    BadRequestResponse:
      type: object
      properties:
        statusCode:
          type: number
          example: 400
        message:
          oneOf:
            - type: array
              items:
                type: string
            - type: string
        error:
          type: string
          example: Bad Request
      required:
        - statusCode
    UnauthorizedResponse:
      type: object
      properties:
        statusCode:
          type: number
          example: 401
        message:
          type: string
          example: Unauthorized
        error:
          type: string
          example: Unauthorized
      required:
        - statusCode
    ForbiddenResponse:
      type: object
      properties:
        statusCode:
          type: number
          example: 403
        message:
          type: string
          example: Forbidden
        error:
          type: string
          example: Forbidden
      required:
        - statusCode
    InternalServerErrorResponse:
      type: object
      properties:
        statusCode:
          type: number
          example: 500
        message:
          type: string
          example: Internal server error
        error:
          type: string
          example: Internal server error
      required:
        - statusCode
    CompanyResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        orgNumber:
          type: string
        billableUsers:
          type: number
        vatNumber:
          type: string
        phone:
          type: string
        email:
          type: string
        legalName:
          type: string
        logoUrl:
          type: string
        backgroundUrl:
          type: string
        offboardDate:
          type: string
      required:
        - id
        - name
    EmptyResponse:
      type: object
      properties: {}
    CompaniesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/CompanyResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    CompanyGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/CompanyResponse'
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    NotFoundResponse:
      type: object
      properties:
        statusCode:
          type: number
          example: 404
        message:
          type: string
          example: Not Found
        error:
          type: string
          example: Not Found
      required:
        - statusCode
    EmployeeTaxResponse:
      type: object
      properties:
        table:
          type: number
        column:
          type: number
    BankAccountResponse:
      type: object
      properties:
        bank:
          type: string
        clearing:
          type: string
        number:
          type: string
        iban:
          type: string
        bic:
          type: string
        country:
          type: string
    PointResponse:
      type: object
      properties:
        type:
          type: string
        coordinates:
          example:
            - 123
            - 321
          type: array
          items:
            type: string
      required:
        - type
        - coordinates
    HomeAddressResponse:
      type: object
      properties:
        street:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
        location:
          $ref: '#/components/schemas/PointResponse'
    CustomFieldsResponse:
      type: object
      properties: {}
    EmployeeResponse:
      type: object
      properties:
        title:
          type: string
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        active:
          type: boolean
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        officeId:
          type: string
          example: 507f1f77bcf86cd799439011
        managerEmployeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        departmentId:
          type: string
          example: 507f1f77bcf86cd799439011
        costCenterId:
          type: string
          example: 507f1f77bcf86cd799439011
        employmentId:
          type: string
          example: 507f1f77bcf86cd799439011
        employmentTypeId:
          type: string
          example: 507f1f77bcf86cd799439011
        employmentCountry:
          type: string
          example: SE
        compensationId:
          type: string
          example: 507f1f77bcf86cd799439011
        userId:
          type: string
          example: 507f1f77bcf86cd799439011
        userName:
          type: string
          example: john.doe@example.com
        division:
          type: string
          example: Division 1
        organization:
          type: string
          example: Organization 1
        tax:
          $ref: '#/components/schemas/EmployeeTaxResponse'
        employeeNumber:
          type: string
        workEmail:
          type: string
        workPhone:
          type: string
        workPhoneSanitized:
          type: string
        hireDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        hasOccupationalPension:
          type: boolean
        privateEmail:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        ssn:
          type: string
        privatePhone:
          type: string
        privatePhoneSanitized:
          type: string
        birthDate:
          format: date-time
          type: string
        age:
          type: number
        avatarUrl:
          type: string
        nationality:
          type: string
        gender:
          type: string
        pronoun:
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountResponse'
        homeAddress:
          $ref: '#/components/schemas/HomeAddressResponse'
        custom:
          $ref: '#/components/schemas/CustomFieldsResponse'
        created:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
      required:
        - id
        - active
        - companyId
        - userId
        - employeeNumber
        - created
        - updated
      x-konfig-properties:
        custom:
          example:
            fieldExample: example value
            numberFieldExample: 50
            booleanFieldExample: true
    OfficeResponse:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        timezone:
          type: string
          example: Africa/Abidjan
        CFAR:
          type: string
          example: '12345678'
        SCB:
          type: string
          example: '12345678'
        SNI:
          type: string
          example: '12345678'
      required:
        - id
        - companyId
        - name
        - phone
        - email
        - timezone
        - CFAR
        - SCB
        - SNI
    CostCenterResponse:
      type: object
      properties:
        id:
          type: string
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        code:
          type: string
        name:
          type: string
      required:
        - id
        - companyId
        - code
    ChildResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
        birthdate:
          format: date-time
          type: string
      required:
        - id
        - employeeId
        - name
        - birthdate
    DepartmentResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
        costCenterId:
          type: string
        effectiveCostCenterId:
          type: string
        parentId:
          type: string
      required:
        - id
        - companyId
        - name
    EmergencyContactResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        fullName:
          type: string
          example: John Doe
        relationship:
          type: string
          example: Father
        phone:
          type: string
          example: '+4612345678'
        email:
          type: string
          example: test@test.com
      required:
        - id
        - employeeId
        - fullName
        - relationship
        - phone
        - email
    EmploymentResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
        effectiveEndDate:
          format: date-time
          type: string
        terminated:
          type: boolean
        rate:
          type: number
        note:
          type: string
        country:
          type: string
          example: SE
          enum:
            - SE
            - 'NO'
            - DK
            - FI
            - AF
            - AX
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BV
            - BR
            - IO
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - CI
            - HR
            - CU
            - CY
            - CZ
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HM
            - VA
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - KP
            - KR
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - AN
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - MP
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RE
            - RO
            - RU
            - RW
            - SH
            - KN
            - LC
            - PM
            - VC
            - WS
            - SM
            - ST
            - SA
            - SN
            - CS
            - SC
            - SL
            - SG
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - ES
            - LK
            - SD
            - SR
            - SJ
            - SZ
            - CH
            - SY
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - AE
            - GB
            - US
            - UM
            - UY
            - UZ
            - VU
            - VE
            - VN
            - VG
            - VI
            - WF
            - EH
            - YE
            - ZM
            - ZW
      required:
        - id
        - companyId
        - employeeId
        - typeId
        - startDate
        - terminated
        - rate
        - country
    EmploymentTypeResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
        vacation:
          type: boolean
          example: false
        country:
          type: string
          example: SE
          enum:
            - SE
            - 'NO'
            - DK
            - FI
            - AF
            - AX
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BV
            - BR
            - IO
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - CI
            - HR
            - CU
            - CY
            - CZ
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HM
            - VA
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - KP
            - KR
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - AN
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - MP
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RE
            - RO
            - RU
            - RW
            - SH
            - KN
            - LC
            - PM
            - VC
            - WS
            - SM
            - ST
            - SA
            - SN
            - CS
            - SC
            - SL
            - SG
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - ES
            - LK
            - SD
            - SR
            - SJ
            - SZ
            - CH
            - SY
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - AE
            - GB
            - US
            - UM
            - UY
            - UZ
            - VU
            - VE
            - VN
            - VG
            - VI
            - WF
            - EH
            - YE
            - ZM
            - ZW
        maxMonths:
          type: number
          example: 12
      required:
        - id
        - name
        - vacation
    CompensationResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        amount:
          type: number
        effectiveDate:
          format: date-time
          type: string
        baseAmount:
          type: number
        exchangeRate:
          type: number
        currency:
          type: string
          example: SEK
          enum:
            - SEK
            - NOK
            - DKK
            - EUR
            - USD
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTC
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHF
            - CLF
            - CLP
            - CNH
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - FJD
            - FKP
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - YER
            - ZAR
            - ZMW
            - ZWL
        payoutDay:
          type: number
          example: 25
        payoutPeriod:
          type: string
          example: MONTHLY
          enum:
            - HOURLY
            - DAILY
            - WEEKLY
            - BI_WEEKLY
            - MONTHLY
            - QUARTERLY
            - ANNUAL
        payoutFrequency:
          type: string
          example: MONTH
          enum:
            - WEEK
            - BI_WEEKLY
            - MONTH
        salarySchedule:
          type: string
          example: ADVANCE
          enum:
            - ADVANCE
            - DELAYED
        paidOvertime:
          type: boolean
          example: false
        note:
          type: string
      required:
        - id
        - employeeId
        - companyId
        - amount
        - effectiveDate
        - baseAmount
        - exchangeRate
        - currency
        - payoutDay
        - payoutPeriod
        - payoutFrequency
        - salarySchedule
        - paidOvertime
    EmployeeTeamReferenceResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        teamId:
          type: string
          example: 507f1f77bcf86cd799439011
        userId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
      required:
        - id
        - companyId
        - teamId
        - userId
        - employeeId
    EmployeeGetManyRelationsResponse:
      type: object
      properties:
        office:
          type: array
          items:
            $ref: '#/components/schemas/OfficeResponse'
        costCenter:
          type: array
          items:
            $ref: '#/components/schemas/CostCenterResponse'
        effectiveCostCenter:
          type: array
          items:
            $ref: '#/components/schemas/CostCenterResponse'
        child:
          type: array
          items:
            $ref: '#/components/schemas/ChildResponse'
        department:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentResponse'
        emergencyContact:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactResponse'
        employment:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentResponse'
        employmentType:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentTypeResponse'
        compensation:
          type: array
          items:
            $ref: '#/components/schemas/CompensationResponse'
        managerEmployee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
        teamReference:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTeamReferenceResponse'
    EmployeesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmployeeGetManyRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    EmployeeGetOneRelationsResponse:
      type: object
      properties:
        office:
          type: array
          items:
            $ref: '#/components/schemas/OfficeResponse'
        costCenter:
          type: array
          items:
            $ref: '#/components/schemas/CostCenterResponse'
        effectiveCostCenter:
          type: array
          items:
            $ref: '#/components/schemas/CostCenterResponse'
        child:
          type: array
          items:
            $ref: '#/components/schemas/ChildResponse'
        department:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentResponse'
        emergencyContact:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContactResponse'
        employment:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentResponse'
        employmentType:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentTypeResponse'
        compensation:
          type: array
          items:
            $ref: '#/components/schemas/CompensationResponse'
        managerEmployee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
        teamReference:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTeamReferenceResponse'
    EmployeeGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmployeeResponse'
        relations:
          $ref: '#/components/schemas/EmployeeGetOneRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    EmployeeTaxRequest:
      type: object
      properties:
        table:
          type: number
        column:
          type: number
    BankAccountRequest:
      type: object
      properties:
        bank:
          type: string
        clearing:
          type: string
        number:
          type: string
        iban:
          type: string
        bic:
          type: string
        country:
          type: string
    HomeAddressRequest:
      type: object
      properties:
        street:
          type: string
        postalCode:
          type: string
        city:
          type: string
        country:
          type: string
    CustomFieldsRequest:
      type: object
      properties: {}
    CreateEmployeeRequest:
      type: object
      properties:
        title:
          type: string
        officeId:
          type: string
          example: 507f1f77bcf86cd799439011
        managerEmployeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        departmentId:
          type: string
          example: 507f1f77bcf86cd799439011
        costCenterId:
          type: string
          example: 507f1f77bcf86cd799439011
        userName:
          type: string
          example: john.doe@example.com
        division:
          type: string
          example: Division 1
        organization:
          type: string
          example: Organization 1
        employeeNumber:
          type: string
          example: 1
        tax:
          $ref: '#/components/schemas/EmployeeTaxRequest'
        workEmail:
          type: string
        workPhone:
          type: string
        hasOccupationalPension:
          type: boolean
        privateEmail:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        ssn:
          type: string
        privatePhone:
          type: string
        birthDate:
          type: string
        avatarUrl:
          type: string
        nationality:
          type: string
        gender:
          type: string
        pronoun:
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountRequest'
        homeAddress:
          $ref: '#/components/schemas/HomeAddressRequest'
        custom:
          $ref: '#/components/schemas/CustomFieldsRequest'
      x-konfig-properties:
        custom:
          example:
            fieldExample: example value
            numberFieldExample: 50
            booleanFieldExample: true
    EmployeeResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmployeeResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateEmployeeRequest:
      type: object
      properties:
        title:
          type: string
        officeId:
          type: string
          example: 507f1f77bcf86cd799439011
        managerEmployeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        departmentId:
          type: string
          example: 507f1f77bcf86cd799439011
        costCenterId:
          type: string
          example: 507f1f77bcf86cd799439011
        userName:
          type: string
          example: john.doe@example.com
        division:
          type: string
          example: Division 1
        organization:
          type: string
          example: Organization 1
        employeeNumber:
          type: string
          example: 1
        tax:
          $ref: '#/components/schemas/EmployeeTaxRequest'
        workEmail:
          type: string
        workPhone:
          type: string
        hasOccupationalPension:
          type: boolean
        privateEmail:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        ssn:
          type: string
        privatePhone:
          type: string
        birthDate:
          type: string
        avatarUrl:
          type: string
        nationality:
          type: string
        gender:
          type: string
        pronoun:
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccountRequest'
        homeAddress:
          $ref: '#/components/schemas/HomeAddressRequest'
        custom:
          $ref: '#/components/schemas/CustomFieldsRequest'
        active:
          type: boolean
      x-konfig-properties:
        custom:
          example:
            fieldExample: example value
            numberFieldExample: 50
            booleanFieldExample: true
    EmptyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    DepartmentRelationsResponse:
      type: object
      properties:
        costCenter:
          type: array
          items:
            $ref: '#/components/schemas/CostCenterResponse'
        effectiveCostCenter:
          type: array
          items:
            $ref: '#/components/schemas/CostCenterResponse'
    DepartmentsGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/DepartmentResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/DepartmentRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    DepartmentGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/DepartmentResponse'
        relations:
          $ref: '#/components/schemas/DepartmentRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateDepartmentRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        costCenterId:
          type: string
        parentId:
          type: string
      required:
        - name
    DepartmentResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/DepartmentResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateDepartmentRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        costCenterId:
          type: string
        parentId:
          type: string
      required:
        - name
    OfficesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/OfficeResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    OfficeGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/OfficeResponse'
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateOfficeRequest:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        timezone:
          type: string
          example: Africa/Abidjan
        CFAR:
          type: string
        SCB:
          type: string
        SNI:
          type: string
      required:
        - name
        - phone
        - email
        - timezone
        - CFAR
        - SCB
        - SNI
    OfficeResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/OfficeResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateOfficeRequest:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: string
        timezone:
          type: string
          example: Africa/Abidjan
        CFAR:
          type: string
        SCB:
          type: string
        SNI:
          type: string
    TeamResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
          example: Team 1
        bgColor:
          type: string
          example: '#dee9fe'
        fgColor:
          type: string
          example: '#032f83'
      required:
        - id
        - companyId
        - name
        - bgColor
        - fgColor
    TeamRelationsResponse:
      type: object
      properties: {}
    TeamsGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/TeamResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/TeamRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    TeamGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/TeamResponse'
        relations:
          $ref: '#/components/schemas/TeamRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateTeamRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
          example: Team 1
        bgColor:
          type: string
          example: '#dee9fe'
        fgColor:
          type: string
          example: '#032f83'
      required:
        - name
        - bgColor
        - fgColor
    TeamResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/TeamResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateTeamRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
          example: Team 1
        bgColor:
          type: string
          example: '#dee9fe'
        fgColor:
          type: string
          example: '#032f83'
    UserResponse:
      type: object
      properties:
        id:
          description: User ID
          type: object
          example: 5beadbdb01da0a0028a66e99
        locale:
          description: locale
          type: string
          example: en
        systemRole:
          type: string
          example: admin
          enum:
            - admin
            - anonymous
      required:
        - id
    EmployeeTeamReferenceRelationsResponse:
      type: object
      properties:
        employee:
          type: array
          items:
            type: array
            items:
              description: >-
                WARNING: Missing items property in array schema. Missing items
                property has been filled with this AnyType schema.
        team:
          type: array
          items:
            $ref: '#/components/schemas/TeamResponse'
        user:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    EmployeeTeamReferencesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTeamReferenceResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmployeeTeamReferenceRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    EmployeeTeamReferenceGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmployeeTeamReferenceResponse'
        relations:
          $ref: '#/components/schemas/EmployeeTeamReferenceRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateEmployeeTeamReferenceRequest:
      type: object
      properties:
        teamId:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        userId:
          type: string
          example: 507f1f77bcf86cd799439011
      required:
        - teamId
        - companyId
        - employeeId
        - userId
    EmployeeTeamReferenceResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmployeeTeamReferenceResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateEmployeeTeamReferenceRequest:
      type: object
      properties:
        teamId:
          type: string
    CompensationsGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/CompensationResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    CompensationGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/CompensationResponse'
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateCompensationRequest:
      type: object
      properties:
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        userId:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
        amount:
          type: number
        effectiveDate:
          type: string
        currency:
          type: string
          example: SEK
          enum:
            - SEK
            - NOK
            - DKK
            - EUR
            - USD
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTC
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHF
            - CLF
            - CLP
            - CNH
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - FJD
            - FKP
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - YER
            - ZAR
            - ZMW
            - ZWL
        payoutDay:
          type: number
          example: 25
        payoutPeriod:
          type: string
          example: MONTHLY
          enum:
            - HOURLY
            - DAILY
            - WEEKLY
            - BI_WEEKLY
            - MONTHLY
            - QUARTERLY
            - ANNUAL
        payoutFrequency:
          type: string
          example: MONTH
          enum:
            - WEEK
            - BI_WEEKLY
            - MONTH
        salarySchedule:
          type: string
          example: ADVANCE
          enum:
            - ADVANCE
            - DELAYED
        paidOvertime:
          type: boolean
          example: false
        note:
          type: string
      required:
        - employeeId
        - userId
        - amount
        - effectiveDate
        - currency
        - payoutDay
        - payoutPeriod
        - payoutFrequency
        - paidOvertime
    CompensationResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/CompensationResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateCompensationRequest:
      type: object
      properties:
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        userId:
          type: string
          example: 507f1f77bcf86cd799439011
        amount:
          type: number
        currency:
          type: string
          example: SEK
          enum:
            - SEK
            - NOK
            - DKK
            - EUR
            - USD
            - AED
            - AFN
            - ALL
            - AMD
            - ANG
            - AOA
            - ARS
            - AUD
            - AWG
            - AZN
            - BAM
            - BBD
            - BDT
            - BGN
            - BHD
            - BIF
            - BMD
            - BND
            - BOB
            - BRL
            - BSD
            - BTC
            - BTN
            - BWP
            - BYN
            - BZD
            - CAD
            - CDF
            - CHF
            - CLF
            - CLP
            - CNH
            - CNY
            - COP
            - CRC
            - CUC
            - CUP
            - CVE
            - CZK
            - DJF
            - DOP
            - DZD
            - EGP
            - ERN
            - ETB
            - FJD
            - FKP
            - GBP
            - GEL
            - GGP
            - GHS
            - GIP
            - GMD
            - GNF
            - GTQ
            - GYD
            - HKD
            - HNL
            - HRK
            - HTG
            - HUF
            - IDR
            - ILS
            - IMP
            - INR
            - IQD
            - IRR
            - ISK
            - JEP
            - JMD
            - JOD
            - JPY
            - KES
            - KGS
            - KHR
            - KMF
            - KPW
            - KRW
            - KWD
            - KYD
            - KZT
            - LAK
            - LBP
            - LKR
            - LRD
            - LSL
            - LYD
            - MAD
            - MDL
            - MGA
            - MKD
            - MMK
            - MNT
            - MOP
            - MRO
            - MRU
            - MUR
            - MVR
            - MWK
            - MXN
            - MYR
            - MZN
            - NAD
            - NGN
            - NIO
            - NPR
            - NZD
            - OMR
            - PAB
            - PEN
            - PGK
            - PHP
            - PKR
            - PLN
            - PYG
            - QAR
            - RON
            - RSD
            - RUB
            - RWF
            - SAR
            - SBD
            - SCR
            - SDG
            - SGD
            - SHP
            - SLL
            - SOS
            - SRD
            - SSP
            - STD
            - STN
            - SVC
            - SYP
            - SZL
            - THB
            - TJS
            - TMT
            - TND
            - TOP
            - TRY
            - TTD
            - TWD
            - TZS
            - UAH
            - UGX
            - UYU
            - UZS
            - VEF
            - VND
            - VUV
            - WST
            - XAF
            - XAG
            - XAU
            - XCD
            - XDR
            - XOF
            - XPD
            - XPF
            - XPT
            - YER
            - ZAR
            - ZMW
            - ZWL
        payoutDay:
          type: number
          example: 25
        payoutPeriod:
          type: string
          example: MONTHLY
          enum:
            - HOURLY
            - DAILY
            - WEEKLY
            - BI_WEEKLY
            - MONTHLY
            - QUARTERLY
            - ANNUAL
        payoutFrequency:
          type: string
          example: MONTH
          enum:
            - WEEK
            - BI_WEEKLY
            - MONTH
        salarySchedule:
          type: string
          example: ADVANCE
          enum:
            - ADVANCE
            - DELAYED
        paidOvertime:
          type: boolean
          example: false
        note:
          type: string
    EmploymentRelationsResponse:
      type: object
      properties:
        type:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentTypeResponse'
        employee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
    EmploymentsGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/EmploymentResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmploymentRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    EmploymentGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmploymentResponse'
        relations:
          $ref: '#/components/schemas/EmploymentRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateEmploymentRequest:
      type: object
      properties:
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        userId:
          type: string
          example: 507f1f77bcf86cd799439011
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        effectiveEndDate:
          format: date-time
          type: string
        terminated:
          type: boolean
        rate:
          type: number
        note:
          type: string
        country:
          type: string
          example: SE
          enum:
            - SE
            - 'NO'
            - DK
            - FI
            - AF
            - AX
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BV
            - BR
            - IO
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - CI
            - HR
            - CU
            - CY
            - CZ
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HM
            - VA
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - KP
            - KR
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - AN
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - MP
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RE
            - RO
            - RU
            - RW
            - SH
            - KN
            - LC
            - PM
            - VC
            - WS
            - SM
            - ST
            - SA
            - SN
            - CS
            - SC
            - SL
            - SG
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - ES
            - LK
            - SD
            - SR
            - SJ
            - SZ
            - CH
            - SY
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - AE
            - GB
            - US
            - UM
            - UY
            - UZ
            - VU
            - VE
            - VN
            - VG
            - VI
            - WF
            - EH
            - YE
            - ZM
            - ZW
      required:
        - employeeId
        - userId
        - typeId
        - startDate
        - terminated
        - rate
        - country
    EmploymentResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmploymentResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateEmploymentRequest:
      type: object
      properties:
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        userId:
          type: string
          example: 507f1f77bcf86cd799439011
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        effectiveEndDate:
          format: date-time
          type: string
        terminated:
          type: boolean
        rate:
          type: number
        note:
          type: string
        country:
          type: string
          example: SE
          enum:
            - SE
            - 'NO'
            - DK
            - FI
            - AF
            - AX
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BV
            - BR
            - IO
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - CI
            - HR
            - CU
            - CY
            - CZ
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HM
            - VA
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - KP
            - KR
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - AN
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - MP
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RE
            - RO
            - RU
            - RW
            - SH
            - KN
            - LC
            - PM
            - VC
            - WS
            - SM
            - ST
            - SA
            - SN
            - CS
            - SC
            - SL
            - SG
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - ES
            - LK
            - SD
            - SR
            - SJ
            - SZ
            - CH
            - SY
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - AE
            - GB
            - US
            - UM
            - UY
            - UZ
            - VU
            - VE
            - VN
            - VG
            - VI
            - WF
            - EH
            - YE
            - ZM
            - ZW
    EmploymentTypesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/EmploymentTypeResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    EmploymentTypeGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmploymentTypeResponse'
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateEmploymentTypeRequest:
      type: object
      properties:
        name:
          type: string
        vacation:
          type: boolean
          example: false
        country:
          type: string
          example: SE
          enum:
            - SE
            - 'NO'
            - DK
            - FI
            - AF
            - AX
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BV
            - BR
            - IO
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - CI
            - HR
            - CU
            - CY
            - CZ
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HM
            - VA
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - KP
            - KR
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - AN
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - MP
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RE
            - RO
            - RU
            - RW
            - SH
            - KN
            - LC
            - PM
            - VC
            - WS
            - SM
            - ST
            - SA
            - SN
            - CS
            - SC
            - SL
            - SG
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - ES
            - LK
            - SD
            - SR
            - SJ
            - SZ
            - CH
            - SY
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - AE
            - GB
            - US
            - UM
            - UY
            - UZ
            - VU
            - VE
            - VN
            - VG
            - VI
            - WF
            - EH
            - YE
            - ZM
            - ZW
        maxMonths:
          type: number
          example: 12
      required:
        - name
        - vacation
        - country
    EmploymentTypeResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/EmploymentTypeResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateEmploymentTypeRequest:
      type: object
      properties:
        name:
          type: string
        vacation:
          type: boolean
          example: false
        country:
          type: string
          example: SE
          enum:
            - SE
            - 'NO'
            - DK
            - FI
            - AF
            - AX
            - AL
            - DZ
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BW
            - BV
            - BR
            - IO
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - CI
            - HR
            - CU
            - CY
            - CZ
            - DJ
            - DM
            - DO
            - EC
            - EG
            - SV
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - FR
            - GF
            - PF
            - TF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GG
            - GN
            - GW
            - GY
            - HT
            - HM
            - VA
            - HN
            - HK
            - HU
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IM
            - IL
            - IT
            - JM
            - JP
            - JE
            - JO
            - KZ
            - KE
            - KI
            - KP
            - KR
            - KW
            - KG
            - LA
            - LV
            - LB
            - LS
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - MH
            - MQ
            - MR
            - MU
            - YT
            - MX
            - FM
            - MD
            - MC
            - MN
            - MS
            - MA
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NL
            - AN
            - NC
            - NZ
            - NI
            - NE
            - NG
            - NU
            - NF
            - MP
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PH
            - PN
            - PL
            - PT
            - PR
            - QA
            - RE
            - RO
            - RU
            - RW
            - SH
            - KN
            - LC
            - PM
            - VC
            - WS
            - SM
            - ST
            - SA
            - SN
            - CS
            - SC
            - SL
            - SG
            - SK
            - SI
            - SB
            - SO
            - ZA
            - GS
            - ES
            - LK
            - SD
            - SR
            - SJ
            - SZ
            - CH
            - SY
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - AE
            - GB
            - US
            - UM
            - UY
            - UZ
            - VU
            - VE
            - VN
            - VG
            - VI
            - WF
            - EH
            - YE
            - ZM
            - ZW
        maxMonths:
          type: number
          example: 12
      required:
        - country
    CostCentersGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/CostCenterResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    CostCenterGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/CostCenterResponse'
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateCostCenterRequest:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
      required:
        - code
    CostCenterResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/CostCenterResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateCostCenterRequest:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    LeaveResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        status:
          type: string
          example: PENDING
          enum:
            - PENDING
            - DENIED
            - CANCELLED
            - APPROVED
            - CONFIRMED
        duration:
          type: string
          example: minutes
          enum:
            - minutes
            - half_day
            - one_day
            - longer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
        - id
        - employeeId
        - typeId
        - status
        - duration
        - startDate
        - endDate
    LeaveTypeResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
        kind:
          type: string
          example: SICK_LEAVE
          enum:
            - SICK_LEAVE
            - PARENTAL_LEAVE
            - VACATION
            - OFF_DUTY
            - CHILDCARE
        minimumDuration:
          type: string
          example: DAY
          enum:
            - DAY
            - HALF_DAY
            - HOUR
            - MINUTE
        deductible:
          type: boolean
        paid:
          type: boolean
        disabled:
          type: boolean
        archived:
          type: boolean
          nullable: true
      required:
        - id
        - name
        - kind
        - minimumDuration
        - deductible
        - paid
        - disabled
    LeaveRelationsResponse:
      type: object
      properties:
        type:
          type: array
          items:
            $ref: '#/components/schemas/LeaveTypeResponse'
        employee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
    LeavesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/LeaveResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/LeaveRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    LeaveGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/LeaveResponse'
        relations:
          $ref: '#/components/schemas/LeaveRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateLeaveRequest:
      type: object
      properties:
        description:
          type: string
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        childId:
          type: string
          example: 507f1f77bcf86cd799439011
        duration:
          type: string
          example: minutes
          enum:
            - minutes
            - half_day
            - one_day
            - longer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        extent:
          type: number
          example: 50
        morning:
          type: object
        afternoon:
          type: object
      required:
        - employeeId
        - typeId
        - duration
        - startDate
        - endDate
    LeaveResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/LeaveResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateLeaveRequest:
      type: object
      properties:
        description:
          type: string
          example: Description
        childId:
          type: string
          example: 507f1f77bcf86cd799439011
        duration:
          type: string
          example: minutes
          enum:
            - minutes
            - half_day
            - one_day
            - longer
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        extent:
          type: number
          example: 50
        morning:
          type: boolean
        afternoon:
          type: boolean
        status:
          type: string
        approvalNote:
          type: string
      required:
        - extent
    LeaveTypeCodeResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        leaveTypeId:
          type: string
          example: 507f1f77bcf86cd799439011
        code:
          type: string
          example: UserGivenCode123
      required:
        - id
        - companyId
        - leaveTypeId
        - code
    LeaveTypeGetManyRelationsResponse:
      type: object
      properties:
        leaveTypeCode:
          type: array
          items:
            $ref: '#/components/schemas/LeaveTypeCodeResponse'
    LeaveTypesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/LeaveTypeResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/LeaveTypeGetManyRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    LeaveTypeGetOneRelationResponse:
      type: object
      properties:
        leaveTypeCode:
          $ref: '#/components/schemas/LeaveTypeCodeResponse'
    LeaveTypeGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/LeaveTypeResponse'
        relations:
          $ref: '#/components/schemas/LeaveTypeGetOneRelationResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateLeaveTypeRequest:
      type: object
      properties:
        name:
          type: string
        kind:
          type: string
          example: SICK_LEAVE
        minimumDuration:
          type: string
          example: DAY
        deductible:
          type: boolean
        paid:
          type: boolean
        disabled:
          type: boolean
        archived:
          type: boolean
      required:
        - name
    LeaveTypeResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/LeaveTypeResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateLeaveTypeRequest:
      type: object
      properties:
        name:
          type: string
        kind:
          type: string
          example: SICK_LEAVE
        minimumDuration:
          type: string
          example: DAY
        deductible:
          type: boolean
        paid:
          type: boolean
        disabled:
          type: boolean
        archived:
          type: boolean
    LeaveTransactionParentResponse:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          example: Leave
          enum:
            - Leave
            - TimesheetEntry
      required:
        - id
        - type
    LeaveTransactionResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        parent:
          $ref: '#/components/schemas/LeaveTransactionParentResponse'
        status:
          type: string
          example: APPROVED
          enum:
            - APPROVED
            - CONFIRMED
        leaveTypeId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        childId:
          type: string
          example: 507f1f77bcf86cd799439011
        date:
          format: date-time
          type: string
        hours:
          type: number
        extent:
          type: number
      required:
        - id
        - parent
        - status
        - leaveTypeId
        - employeeId
        - childId
        - description
        - date
        - hours
        - extent
    LeaveTransactionRelationsResponse:
      type: object
      properties:
        child:
          type: array
          items:
            $ref: '#/components/schemas/ChildResponse'
        leaveType:
          type: array
          items:
            $ref: '#/components/schemas/LeaveTypeResponse'
        employee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
    LeaveTransactionsGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/LeaveTransactionResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/LeaveTransactionRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    LeaveTransactionGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/LeaveTransactionResponse'
        relations:
          $ref: '#/components/schemas/LeaveTransactionRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    ChildrenGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/ChildResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    ChildGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/ChildResponse'
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateChildRequest:
      type: object
      properties:
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
        birthdate:
          format: date-time
          type: string
      required:
        - employeeId
        - name
        - birthdate
    ChildResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/ChildResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateChildRequest:
      type: object
      properties:
        name:
          type: string
        birthdate:
          format: date-time
          type: string
      required:
        - name
        - birthdate
    TimesheetResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        status:
          type: string
          example: APPROVED
          enum:
            - PENDING
            - SUBMITTED
            - APPROVED
            - REJECTED
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        localCutOffDate:
          format: date-time
          type: string
        utcCutOffDate:
          format: date-time
          type: string
        approvalDeadlineDate:
          format: date-time
          type: string
        interval:
          type: string
          example: MONTHLY
          enum:
            - WEEKLY
            - MONTHLY
        note:
          type: string
        approverEmployeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        submitDate:
          format: date-time
          type: string
        approvalDate:
          format: date-time
          type: string
        rejectedDate:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
        timezone:
          type: string
      required:
        - id
        - status
        - startDate
        - endDate
        - localCutOffDate
        - utcCutOffDate
        - approvalDeadlineDate
        - interval
        - approverEmployeeId
        - employeeId
        - submitDate
        - approvalDate
        - rejectedDate
        - timezone
    TimesheetRelationsResponse:
      type: object
      properties:
        approverEmployee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
        employee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
    TimesheetsGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/TimesheetResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/TimesheetRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    TimesheetGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/TimesheetResponse'
        relations:
          $ref: '#/components/schemas/TimesheetRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    TimesheetEntryResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        timesheetId:
          type: string
          example: 507f1f77bcf86cd799439011
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        date:
          format: date-time
          type: string
        updated:
          format: date-time
          type: string
        status:
          type: string
          example: APPROVED
          enum:
            - PENDING
            - SUBMITTED
            - APPROVED
            - REJECTED
        minutes:
          type: number
        note:
          type: string
      required:
        - id
        - timesheetId
        - typeId
        - employeeId
        - date
        - status
        - minutes
    TimesheetEntryTypeResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        name:
          type: string
        kind:
          type: string
          example: HOURLY_WAGE
          enum:
            - HOURLY_WAGE
            - WORKING_HOURS
      required:
        - id
        - name
    TimesheetEntryRelationsResponse:
      type: object
      properties:
        employee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
        timesheet:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetResponse'
        type:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetEntryTypeResponse'
    TimesheetEntriesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/TimesheetEntryResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/TimesheetEntryRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    TimesheetEntryGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/TimesheetEntryResponse'
        relations:
          $ref: '#/components/schemas/TimesheetEntryRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    CreateTimesheetEntryRequest:
      type: object
      properties:
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        date:
          format: date-time
          type: string
        minutes:
          type: number
        note:
          type: string
      required:
        - typeId
        - employeeId
        - date
        - minutes
    TimesheetEntryResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/TimesheetEntryResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateTimesheetEntryRequest:
      type: object
      properties:
        typeId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        date:
          format: date-time
          type: string
        minutes:
          type: number
        note:
          type: string
    TimesheetEntryTypesGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/TimesheetEntryTypeResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    TimesheetEntryTypeGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/TimesheetEntryTypeResponse'
        relations:
          $ref: '#/components/schemas/EmptyResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    WorkShiftResponse:
      type: object
      properties:
        startHour:
          type: number
        startMinute:
          type: number
        endHour:
          type: number
        endMinute:
          type: number
        duration:
          type: number
      required:
        - startHour
        - startMinute
        - endHour
        - endMinute
        - duration
    WorkWeekDayResponse:
      type: object
      properties:
        working:
          type: boolean
        duration:
          type: number
        shifts:
          type: array
          items:
            $ref: '#/components/schemas/WorkShiftResponse'
      required:
        - working
        - duration
        - shifts
    WorkWeekResponse:
      type: object
      properties:
        id:
          type: string
          example: 507f1f77bcf86cd799439011
        companyId:
          type: string
          example: 507f1f77bcf86cd799439011
        officeId:
          type: string
          example: 507f1f77bcf86cd799439011
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        effectiveFrom:
          format: date-time
          type: string
        effectiveTo:
          format: date-time
          type: string
        timezone:
          type: string
        duration:
          type: number
        monday:
          $ref: '#/components/schemas/WorkWeekDayResponse'
        tuesday:
          $ref: '#/components/schemas/WorkWeekDayResponse'
        wednesday:
          $ref: '#/components/schemas/WorkWeekDayResponse'
        thursday:
          $ref: '#/components/schemas/WorkWeekDayResponse'
        friday:
          $ref: '#/components/schemas/WorkWeekDayResponse'
        saturday:
          $ref: '#/components/schemas/WorkWeekDayResponse'
        sunday:
          $ref: '#/components/schemas/WorkWeekDayResponse'
      required:
        - id
        - companyId
        - effectiveFrom
        - timezone
        - duration
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    WorkWeekRelationsResponse:
      type: object
      properties:
        office:
          type: array
          items:
            $ref: '#/components/schemas/OfficeResponse'
        employee:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeResponse'
    WorkWeeksGetManyResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          description: Resource data
          type: array
          items:
            $ref: '#/components/schemas/WorkWeekResponse'
        total:
          description: Number of all resources
          type: number
          example: 500
        count:
          description: Number of received resources
          type: number
          example: 50
        offset:
          description: Offset amount of received resources
          type: number
          example: 50
        relations:
          $ref: '#/components/schemas/WorkWeekRelationsResponse'
      required:
        - status
        - data
        - total
        - count
      x-konfig-properties:
        relations:
          description: Resource relations
    WorkWeekGetOneResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/WorkWeekResponse'
        relations:
          $ref: '#/components/schemas/WorkWeekRelationsResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
        relations:
          description: Resource relations
    WorkShiftRequest:
      type: object
      properties:
        startHour:
          type: number
        startMinute:
          type: number
        endHour:
          type: number
        endMinute:
          type: number
        duration:
          type: number
      required:
        - startHour
        - startMinute
        - endHour
        - endMinute
        - duration
    WorkWeekDayRequest:
      type: object
      properties:
        working:
          type: boolean
        duration:
          type: number
        shifts:
          type: array
          items:
            $ref: '#/components/schemas/WorkShiftRequest'
      required:
        - working
        - duration
        - shifts
    CreateWorkWeekRequest:
      type: object
      properties:
        employeeId:
          type: string
          example: 507f1f77bcf86cd799439011
        officeId:
          type: string
          example: 507f1f77bcf86cd799439011
        effectiveFrom:
          format: date-time
          type: string
        effectiveTo:
          format: date-time
          type: string
        timezone:
          type: string
        duration:
          type: number
        monday:
          $ref: '#/components/schemas/WorkWeekDayRequest'
        tuesday:
          $ref: '#/components/schemas/WorkWeekDayRequest'
        wednesday:
          $ref: '#/components/schemas/WorkWeekDayRequest'
        thursday:
          $ref: '#/components/schemas/WorkWeekDayRequest'
        friday:
          $ref: '#/components/schemas/WorkWeekDayRequest'
        saturday:
          $ref: '#/components/schemas/WorkWeekDayRequest'
        sunday:
          $ref: '#/components/schemas/WorkWeekDayRequest'
      required:
        - effectiveFrom
        - timezone
        - duration
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    WorkWeekResponseMapped:
      type: object
      properties:
        status:
          description: Status String
          type: string
          example: ok
        data:
          $ref: '#/components/schemas/WorkWeekResponse'
      required:
        - status
        - data
      x-konfig-properties:
        data:
          description: Resource data
    UpdateWorkWeekRequest:
      type: object
      properties:
        effectiveTo:
          format: date-time
          type: string
