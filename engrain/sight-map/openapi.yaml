openapi: 3.0.3
info:
  title: SightMap® REST API
  description: >
    # Introduction


    The SightMap® API uses standard HTTP verbs to communicate and HTTP status

    codes to indicate status and errors. All responses come in standard JSON.

    The SightMap API is served over HTTPS to ensure data privacy; HTTP is not

    supported.


    # Versioning


    Versions are communicated as `VERSION.RELEASE-DATE`, where `VERSION` denotes

    the version number of the API and prefixed to all API request paths, such as

    `/v1/assets`. `RELEASE-DATE` denotes backwards-compatible changes to the

    API.


    When any non-backwards compatible additions must be made to the API, the

    version number will be incremented.


    ## Backwards-compatible changes


    We consider the following changes to be backwards-compatible:


    - Adding new API resources.

    - Adding new optional request parameters to existing API methods.

    - Adding new properties to existing API responses.

    - Changing the order of properties in existing API responses.

    - Changing the length or format of object IDs or other opaque strings.

    - You can safely assume object IDs we generate will never exceed 255
      characters, but you should be able to handle IDs of up to that length. If
      for example you’re using MySQL, you should store IDs in a `VARCHAR(255)
      COLLATE utf8_bin` column (the `COLLATE` configuration ensures
      case-sensitivity in lookups).

    # Authentication


    For requests which require Authentication, an API Key can be provided by

    either the `api-key` query parameter or `API-Key` header. We recommend the

    header over the query parameter as it avoids your API key from being stored

    in browser history and most server logs. If neither query parameter or

    header is provided, a `401` status code is returned with the following JSON:


    ```

    {
      "message": "No API key found in request"
    }

    ```


    If your API key cannot be validated, a `403` status code is returned with

    the following JSON:


    ```

    {
      "message": "Invalid authentication credentials"
    }

    ```


    <SecurityDefinitions />


    # Experimental features


    We provide new API features via experimental flags. This allows users to
    opt-in

    for new functionality and provide feedback prior to a feature becoming
    generally

    available (GA). We believe in stability without stagnation. This ability
    allows

    our team to build and ship best-in-class APIs faster while upholding

    backwards-compatibility on GA features.


    Experimental features are subject to change while undergoing development and

    feedback. Therefore, they are exempt from any backwards-compatibility
    guarantees

    until they reach GA. We do not expect nor recommend using experimental
    features

    in production environments unless a partnership has been established with
    our

    teams working closely together.


    Flags are provided via the `Experimental-Flags` header. A comma-separated
    list

    is expected in order to pass multiple flags on a single request.


    ```

    curl -i https://api.sightmap.com/v1/assets \
      -H "API-Key: 12345" \
      -H "Experimental-Flags: flag-1,flag-2"
    ```


    # Errors


    The SightMap API uses standard HTTP status codes to indicate the success or

    failure of the API request. The body of the response will be JSON in the

    following format:


    ```

    {
      "message": "Not found"
    }

    ```
  version: v1.20230828
  license:
    name: Engrain Terms of Service
    url: https://engrain.com/terms-and-conditions/
  contact:
    url: https://developers.sightmap.com
  x-logo:
    url: https://api.sightmap.com/v1/openapi/images/sightmap-logo.svg
    altText: SightMap® Logo
servers:
  - url: https://api.sightmap.com/v1
tags:
  - name: assets/filters
    x-displayName: Filters
  - name: assets/units/descriptions
    x-displayName: Unit Descriptions
  - name: assets/pricing
    x-displayName: Pricing & Availability
  - name: assets/maps
    x-displayName: Unit Maps
  - name: assets/units/outbound-links
    x-displayName: Unit Outbound Links
  - description: |
      References provide unit ID mappings to other third-party systems.
    name: assets/units/references
    x-displayName: Unit References
  - name: assets/floor-plans
    x-displayName: Floor Plans
  - name: assets/units
    x-displayName: Units
  - name: assets
    x-displayName: Assets
  - name: assets/buildings
    x-displayName: Buildings
  - name: assets/floors
    x-displayName: Floors
  - description: |
      References provide asset ID mappings to other third-party systems.
    name: assets/references
    x-displayName: Asset References
  - name: assets/outbound-links
    x-displayName: Asset Outbound Links
  - name: accounts/assets
    x-displayName: Assets
  - name: accounts
    x-displayName: Accounts
  - name: accounts/embeds
    x-displayName: Embeds
  - name: assets/marker-descriptions
    x-displayName: Marker Descriptions
  - name: assets/galleries
    x-displayName: Image Galleries
  - name: assets/landing-pages
    x-displayName: Landing Pages
  - name: assets/caches
    x-displayName: Caches
paths:
  /accounts:
    get:
      tags:
        - accounts
      summary: List accounts
      operationId: Accounts_listAccounts
      security:
        - apiKey: []
      description: |
        Returns a list of accounts.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListAccountsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /accounts/{account}:
    parameters:
      - $ref: '#/components/parameters/Account'
    get:
      tags:
        - accounts
      summary: View an account
      operationId: Accounts_getSpecificAccount
      security:
        - apiKey: []
      description: |
        Returns a specific account.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /accounts/{account}/embeds:
    parameters:
      - $ref: '#/components/parameters/Account'
    get:
      tags:
        - accounts/embeds
      summary: List embeds
      operationId: Accountsembeds_list
      security:
        - apiKey: []
      description: >
        Returns a list of embeds for an account.


        Requires `sightmap.embeds.read` permission.


        **NOTICE:** This resource is experimental and requires the
        `embed-resource`

        [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - description: An asset ID to filter the list on.
          name: asset
          in: query
          required: false
          schema:
            type: string
            format: id
            maxLength: 255
        - description: >-
            This resource is experimental and requires the `embed-resource`
            [experimental flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsembedsListResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /accounts/{account}/embeds/{embed}:
    parameters:
      - $ref: '#/components/parameters/Account'
      - description: An embed ID.
        name: embed
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - accounts/embeds
      summary: View an embed
      operationId: Accountsembeds_viewEmbed
      security:
        - apiKey: []
      description: >
        Returns a specific embed.


        Requires `sightmap.embeds.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `embed-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - description: An embed ID.
          name: embed
          in: path
          required: true
          schema:
            type: string
            format: id
            maxLength: 255
        - description: >-
            This resource is experimental and requires the `embed-resource`
            [experimental flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Embed'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /accounts/{account}/assets:
    parameters:
      - $ref: '#/components/parameters/Account'
    get:
      tags:
        - accounts/assets
      summary: List assets
      operationId: Accountsassets_listAllowedAssets
      description: >
        Returns a list of allowed assets on an account.


        **NOTICE:** This resource is experimental and requires the
        `accounts-assets`

        [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - description: An asset ID to filter the list on.
          name: asset
          in: query
          required: false
          schema:
            type: string
            format: id
            maxLength: 255
        - description: >-
            This resource is experimental and requires the `accounts-assets`
            [experimental flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsassetsListAllowedAssetsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - accounts/assets
      summary: Assign assets
      operationId: Accountsassets_assignAssetsToAccount
      security:
        - apiKey: []
      description: >
        Assign one or more assets to an account.


        Requires `sightmap.accounts.update-assets` permission.


        **NOTICE:** This resource is experimental and requires the

        `accounts-assets` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsassetsAssignAssetsToAccountRequest'
      responses:
        '204':
          description: Assets assigned successfully
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AccountsassetsAssignAssetsToAccountResponse
              example:
                message: Operation failed due to a foreign key constraint
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /accounts/{account}/assets/remove:
    parameters:
      - $ref: '#/components/parameters/Account'
    put:
      tags:
        - accounts/assets
      summary: Unassign assets
      operationId: Accountsassets_unassignAssets
      security:
        - apiKey: []
      description: >
        Unassign one or more assets from an account.


        Requires `sightmap.accounts.update-assets` permission.


        **NOTICE:** This resource is experimental and requires the

        `accounts-assets` [experimental
        flag](https://api.sightmap.com/v1/openapi).


        **WARNING**: When an asset is unassigned from an account, any embeds or

        other related data may be deleted and cannot be undone.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsassetsUnassignAssetsRequest'
      responses:
        '204':
          description: Assets unassigned successfully
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsassetsUnassignAssetsResponse'
              example:
                message: Operation failed due to a foreign key constraint
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets:
    get:
      tags:
        - assets
      summary: List assets
      operationId: Assets_getAllowedList
      security:
        - apiKey: []
      description: |
        Returns a list of allowed assets.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsGetAllowedListResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets
      summary: Create an asset
      operationId: Assets_createAssetPermission
      security:
        - apiKey: []
      description: Requires `sightmap.assets.create` permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsCreateAssetPermissionRequest'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsCreateAssetPermissionResponse'
              example:
                message: A resource already exists with the given name and address
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets
      summary: View an asset
      operationId: Assets_viewAsset
      security:
        - apiKey: []
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets
      summary: Update an asset
      operationId: Assets_updateAsset
      security:
        - apiKey: []
      description: Requires `sightmap.assets.update` permission
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsUpdateAssetRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsUpdateAssetResponse'
              example:
                message: A resource already exists with the given name and address
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/units
      summary: List units
      operationId: Assetsunits_listUnits
      security:
        - apiKey: []
      description: |
        Returns a list of units for an asset.

        Requires `sightmap.units.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - description: A unit number to filter the list on.
          name: unit-number
          in: query
          required: false
          schema:
            type: string
            maxLength: 255
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsunitsListUnitsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/units
      summary: Create a unit
      operationId: Assetsunits_createUnit
      security:
        - apiKey: []
      description: |
        Create a unit for an asset.

        Requires `sightmap.units.create` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsunitsCreateUnitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetsunitsCreateUnitRequest1'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/{unit}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit ID.
        name: unit
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/units
      summary: View a unit
      operationId: Assetsunits_getSpecificUnit
      security:
        - apiKey: []
      description: |
        Returns a specific unit.

        Requires `sightmap.units.read` permission.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units
      summary: Update a unit
      operationId: Assetsunits_updateMultifamilyUnit
      security:
        - apiKey: []
      description: Requires `sightmap.units.update` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsunitsUpdateMultifamilyUnitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetsunitsUpdateMultifamilyUnitRequest1'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - assets/units
      summary: Delete a unit
      operationId: Assetsunits_deleteUnit
      security:
        - apiKey: []
      description: Requires `sightmap.units.delete` permission.
      responses:
        '200':
          description: Deleted resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '409':
          $ref: '#/components/responses/ForeignKeyConstraintError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/buildings:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/buildings
      summary: List buildings
      operationId: Assetsbuildings_listBuildingsForAsset
      security:
        - apiKey: []
      description: |
        Returns a list of buildings for an asset.

        Requires `sightmap.buildings.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsbuildingsListBuildingsForAssetResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/buildings
      summary: Create a building
      operationId: Assetsbuildings_createBuilding
      security:
        - apiKey: []
      description: |
        Create a building for an asset.

        Requires `sightmap.buildings.create` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsbuildingsCreateBuildingRequest'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/buildings/{building}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A building ID.
        name: building
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/buildings
      summary: View a building
      operationId: Assetsbuildings_getSpecificBuilding
      security:
        - apiKey: []
      description: |
        Returns a specific building.

        Requires `sightmap.buildings.read` permission.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/buildings
      summary: Update a building
      operationId: Assetsbuildings_updateBuilding
      security:
        - apiKey: []
      description: Requires `sightmap.buildings.update` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsbuildingsUpdateBuildingRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/filters:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: >-
          This resource is experimental and requires the `filters-resource`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/filters
      summary: List filters
      operationId: Assetsfilters_listFilters
      security:
        - apiKey: []
      description: >
        Returns a list of filters.


        Requires `sightmap.filters.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersListFiltersResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/filters
      summary: Create a filter
      operationId: Assetsfilters_createNewFilter
      security:
        - apiKey: []
      description: >
        Creates a new filter.


        Requires `sightmap.filters.create` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfiltersCreateNewFilterRequest'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersCreateNewFilterResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/filters/{filter}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A filter ID.
        name: filter
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the `filters-resource`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/filters
      summary: View a filter
      operationId: Assetsfilters_getSpecificFilter
      security:
        - apiKey: []
      description: >
        Returns a specific filter.


        Requires `sightmap.filters.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersGetSpecificFilterResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/filters
      summary: Update a filter
      operationId: Assetsfilters_updateFilter
      security:
        - apiKey: []
      description: >
        Updates a filter.


        When updating a filter, the filter type cannot be changed.


        Requires `sightmap.filters.update` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfiltersUpdateFilterRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersUpdateFilterResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/filters/{filter}/options:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A filter ID.
        name: filter
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the `filters-resource`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/filters
      summary: List options
      operationId: Assetsfilters_listOptions
      security:
        - apiKey: []
      description: >
        Returns a list of options.


        Requires `sightmap.filters.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersListOptionsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/filters
      summary: Create an option
      operationId: Assetsfilters_createOption
      security:
        - apiKey: []
      description: >
        Creates a new option for a filter.


        Requires `sightmap.filters.create` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfiltersCreateOptionRequest'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersCreateOptionResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/filters/{filter}/options/{option}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A filter ID.
        name: filter
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: An option ID.
        name: option
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the `filters-resource`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/filters
      summary: View an option
      operationId: Assetsfilters_viewOption
      security:
        - apiKey: []
      description: >
        Returns a specific filter.


        Requires `sightmap.filters.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersViewOptionResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/filters
      summary: Update an option
      operationId: Assetsfilters_updateOption
      security:
        - apiKey: []
      description: >
        Updates an option.


        Requires `sightmap.filters.update` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfiltersUpdateOptionRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersUpdateOptionResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/filters/{filter}/options/{option}/units:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A filter ID.
        name: filter
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: An option ID.
        name: option
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the `filters-resource`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/filters
      summary: List units assigned to a custom option
      operationId: Assetsfilters_listUnitsForOption
      security:
        - apiKey: []
      description: >
        Returns a list of units for a custom option.


        Requires `sightmap.filters.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersListUnitsForOptionResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/filters
      summary: Assign units to a custom option
      operationId: Assetsfilters_assignUnitsToOption
      security:
        - apiKey: []
      description: >
        Assign one or more units to one or more options.


        Requires `sightmap.filters.update` permission.


        **NOTICE:** This resource is experimental and requires the

        `filters-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfiltersAssignUnitsToOptionRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfiltersAssignUnitsToOptionResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsfiltersAssignUnitsToOption409Response
              example:
                message: The filter option type does not support unit assignment.
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/floors:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/floors
      summary: List floors
      operationId: Assetsfloors_getList
      security:
        - apiKey: []
      description: |
        Returns a list of floors for an asset.

        Requires `sightmap.floors.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfloorsGetListResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
    post:
      tags:
        - assets/floors
      summary: Create a floor
      operationId: Assetsfloors_createFloorMultifamily
      security:
        - apiKey: []
      description: |
        Create a floor for an asset.

        Requires `sightmap.floors.create` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfloorsCreateFloorMultifamilyRequest'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor-2'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/floors/{floor}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A floor ID.
        name: floor
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/floors
      summary: View a floor
      operationId: Assetsfloors_viewFloor
      security:
        - apiKey: []
      description: |
        Returns a specific floor.

        Requires `sightmap.floors.read` permission.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor-2'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/floors
      summary: Update a floor
      operationId: Assetsfloors_updateFloorMultifamily
      security:
        - apiKey: []
      description: Requires `sightmap.floors.update` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfloorsUpdateFloorMultifamilyRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Floor-2'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/floor-plans:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/floor-plans
      summary: List floor plans
      operationId: Assetsfloorplans_listFloorPlans
      security:
        - apiKey: []
      description: |
        Returns a list of floor plans for an asset.

        Requires `sightmap.floor-plans.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsfloorplansListFloorPlansResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/floor-plans
      summary: Create a floor plan
      operationId: Assetsfloorplans_createMultifamilyFloorPlan
      security:
        - apiKey: []
      description: |
        Create a floor plan for an asset.

        Requires `sightmap.floor-plans.create` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsfloorplansCreateMultifamilyFloorPlanRequest
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/AssetsfloorplansCreateMultifamilyFloorPlanRequest1
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloorPlan-2'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/floor-plans/{floor-plan}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A floor plan ID.
        name: floor-plan
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/floor-plans
      summary: View a floor plan
      operationId: Assetsfloorplans_viewSpecificFloorPlan
      security:
        - apiKey: []
      description: |
        Returns a specific floor plan.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloorPlan-2'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/floor-plans
      summary: Update a floor plan
      operationId: Assetsfloorplans_updateFloorPlan
      security:
        - apiKey: []
      description: Requires `sightmap.floor-plans.update` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsfloorplansUpdateFloorPlanRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetsfloorplansUpdateFloorPlanRequest1'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloorPlan-2'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      tags:
        - assets/floor-plans
      summary: Delete a floor plan
      operationId: Assetsfloorplans_deleteFloorPlan
      security:
        - apiKey: []
      description: Requires `sightmap.floor-plans.delete` permission.
      responses:
        '200':
          description: Deleted resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloorPlan-2'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '409':
          $ref: '#/components/responses/ForeignKeyConstraintError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/marker-descriptions:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/marker-descriptions
      summary: List marker descriptions
      operationId: Assetsmarkerdescriptions_listMarkerDescriptions
      security:
        - apiKey: []
      description: >
        Returns a list of marker descriptions for an asset.


        Requires `sightmap.marker-descriptions.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `marker-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - description: >-
            This resource is experimental and requires the
            `marker-descriptions-resource` [experimental
            flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsmarkerdescriptionsListMarkerDescriptionsResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
      deprecated: false
  /assets/{asset}/multifamily/marker-descriptions/{marker-descriptions}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A Marker Description ID.
        name: marker-description
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/marker-descriptions
      summary: View a marker description
      operationId: Assetsmarkerdescriptions_viewSpecificMarkerDescription
      security:
        - apiKey: []
      description: >
        Returns a specific marker description.


        Requires `sightmap.marker-descriptions.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `marker-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - description: >-
            This resource is experimental and requires the
            `marker-descriptions-resource` [experimental
            flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkerDescription'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
      deprecated: false
  /assets/{asset}/multifamily/galleries:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/galleries
      summary: List galleries
      operationId: Assetsgalleries_listGalleries
      security:
        - apiKey: []
      description: >
        Returns a list of image galleries for an asset.


        Requires `sightmap.galleries.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `gallery-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - description: >-
            This resource is experimental and requires the `gallery-resource`
            [experimental flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsgalleriesListGalleriesResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/galleries/{gallery}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A gallery ID.
        name: gallery
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/galleries
      summary: View a gallery
      operationId: Assetsgalleries_viewSpecificGallery
      security:
        - apiKey: []
      description: >
        Returns a specific image gallery.


        **NOTICE:** This resource is experimental and requires the

        `gallery-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - description: >-
            This resource is experimental and requires the `gallery-resource`
            [experimental flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Gallery'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/outbound-links:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: >-
          This resource is experimental and requires the
          `asset-outbound-links-resource` [experimental
          flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/outbound-links
      summary: List asset outbound links
      operationId: Assetsoutboundlinks_listOutboundLinks
      security:
        - apiKey: []
      description: >
        Returns a list of asset outbound links.


        Requires `sightmap.asset-outbound-links.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `asset-outbound-links-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsoutboundlinksListOutboundLinksResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/outbound-links
      summary: Create an asset outbound link
      operationId: Assetsoutboundlinks_createAssetOutboundLink
      security:
        - apiKey: []
      description: >
        Create an asset outbound link for an asset.


        Requires `sightmap.asset-outbound-links.create` permission.


        **NOTICE:** This resource is experimental and requires the

        `asset-outbound-links-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsoutboundlinksCreateAssetOutboundLinkRequest
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetOutboundLink'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/outbound-links/{outbound-link}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: An asset outbound link ID.
        name: outbound-link
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the
          `asset-outbound-links-resource` [experimental
          flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/outbound-links
      summary: View an asset outbound link
      operationId: Assetsoutboundlinks_viewAssetOutboundLink
      security:
        - apiKey: []
      description: >
        Returns a specific asset outbound link.


        Requires `sightmap.asset-outbound-links.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `asset-outbound-links-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetOutboundLink'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/outbound-links
      summary: Update an asset outbound link
      operationId: Assetsoutboundlinks_updateLink
      security:
        - apiKey: []
      description: >
        Requires `sightmap.asset-outbound-links.update` permission.


        **NOTICE:** This resource is experimental and requires the

        `asset-outbound-links-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsoutboundlinksUpdateLinkRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetOutboundLink'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/outbound-links:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/units/outbound-links
      summary: List unit outbound links
      operationId: Assetsunitsoutboundlinks_listOutboundLinks
      security:
        - apiKey: []
      description: |
        Returns a list of unit outbound links.

        Requires `sightmap.unit-outbound-links.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsoutboundlinksListOutboundLinksResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/units/outbound-links
      summary: Create a unit outbound link
      operationId: Assetsunitsoutboundlinks_createUnitOutboundLink
      security:
        - apiKey: []
      description: |
        Create a unit outbound link for an asset.

        Requires `sightmap.unit-outbound-links.create` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsoutboundlinksCreateUnitOutboundLinkRequest
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsoutboundlinksCreateUnitOutboundLinkResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/outbound-links/{outbound-link}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit outbound link ID.
        name: outbound-link
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/units/outbound-links
      summary: View a unit outbound link
      operationId: Assetsunitsoutboundlinks_viewSpecificLink
      security:
        - apiKey: []
      description: |
        Returns a specific unit outbound link.

        Requires `sightmap.unit-outbound-links.read` permission.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsoutboundlinksViewSpecificLinkResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units/outbound-links
      summary: Update a unit outbound link
      operationId: Assetsunitsoutboundlinks_updateUnitOutboundLink
      security:
        - apiKey: []
      description: |
        Requires `sightmap.unit-outbound-links.create` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsoutboundlinksUpdateUnitOutboundLinkRequest
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsoutboundlinksUpdateUnitOutboundLinkResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/outbound-links/{outbound-link}/urls:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit outbound link ID.
        name: outbound-link
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/units/outbound-links
      summary: List unit outbound link URLs
      operationId: Assetsunitsoutboundlinks_listUnitOutboundLinkUrls
      security:
        - apiKey: []
      description: |
        Returns a list of URLs for each unit when the unit outbound link type is
        `urls_per_unit`.

        Requires `sightmap.unit-outbound-links.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsoutboundlinksListUnitOutboundLinkUrlsResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsoutboundlinksListUnitOutboundLinkUrls409Response
              example:
                message: The unit outbound link must be of type `urls_per_unit`
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units/outbound-links
      summary: Update unit outbound link URLs
      operationId: Assetsunitsoutboundlinks_updateUrls
      security:
        - apiKey: []
      description: |
        Update a URL for any or all units when the unit outbound link type is
        `urls_per_unit`.

        Requires `sightmap.unit-outbound-links.update` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsunitsoutboundlinksUpdateUrlsRequest'
      responses:
        '204':
          description: URLs updated successfully
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsoutboundlinksUpdateUrlsResponse
              example:
                message: The unit outbound link does not support URLs per unit
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/landing-pages:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/landing-pages
      summary: List landing pages
      operationId: Assetslandingpages_listLandingPages
      security:
        - apiKey: []
      description: >
        Returns a list of landing pages for an asset.


        Requires `sightmap.landing-pages.read` permission.


        **NOTICE:** This resource is experimental and requires the
        `landing-page-resource`

        [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - description: An asset ID to filter the list on.
          name: asset
          in: query
          required: false
          schema:
            type: string
            format: id
            maxLength: 255
        - description: >-
            This resource is experimental and requires the
            `landing-page-resource` [experimental
            flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetslandingpagesListLandingPagesResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/landing-pages/{landing-page}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A landing page ID.
        name: landing-page
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/landing-pages
      summary: View a landing page
      operationId: Assetslandingpages_viewLandingPage
      security:
        - apiKey: []
      description: >
        Returns a specific landing page.


        Requires `sightmap.landing-pages.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `landing-page-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - description: A landing page ID.
          name: landing-page
          in: path
          required: true
          schema:
            type: string
            format: id
            maxLength: 255
        - description: >-
            This resource is experimental and requires the
            `landing-page-resource` [experimental
            flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LandingPage'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/description-groups:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: >-
          This resource is experimental and requires the
          `unit-descriptions-resource` [experimental
          flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/descriptions
      summary: List groups
      operationId: Assetsunitsdescriptions_listGroups
      security:
        - apiKey: []
      description: >
        Returns a list of unit description groups for an asset.


        Requires `sightmap.unit-descriptions.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsunitsdescriptionsListGroupsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/units/descriptions
      summary: Create a group
      operationId: Assetsunitsdescriptions_createUnitDescriptionGroup
      security:
        - apiKey: []
      description: >
        Create a unit description group.


        Requires `sightmap.unit-descriptions.create` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsdescriptionsCreateUnitDescriptionGroupRequest
            example:
              asset_id: '1323'
              name: Amenities
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDescriptionGroup'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/description-groups/{description-group}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit description group ID.
        name: group
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the
          `unit-description-resource` [experimental
          flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/descriptions
      summary: View a group
      operationId: Assetsunitsdescriptions_viewGroup
      security:
        - apiKey: []
      description: >
        Returns a specific unit description group.


        Requires `sightmap.unit-descriptions.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDescriptionGroup'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units/descriptions
      summary: Update a group
      operationId: Assetsunitsdescriptions_updateGroup
      security:
        - apiKey: []
      description: >
        Update a unit description group.


        Requires `sightmap.unit-descriptions.update` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsunitsdescriptionsUpdateGroupRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDescriptionGroup'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/description-groups/{description-group}/descriptions:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit description group ID.
        name: group
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the
          `unit-descriptions-resource` [experimental
          flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/descriptions
      summary: List descriptions
      operationId: Assetsunitsdescriptions_listUnitDescriptionGroups
      security:
        - apiKey: []
      description: >
        Returns a list of descriptions for a unit description group.


        Requires `sightmap.unit-descriptions.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsdescriptionsListUnitDescriptionGroupsResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/units/descriptions
      summary: Create a description
      operationId: Assetsunitsdescriptions_createUnitDescriptions
      security:
        - apiKey: []
      description: >
        Create one or more unit descriptions.


        Requires `sightmap.unit-descriptions.create` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsdescriptionsCreateUnitDescriptionsRequest
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsdescriptionsCreateUnitDescriptionsResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units/descriptions
      summary: Update a description
      operationId: Assetsunitsdescriptions_updateDescriptions
      security:
        - apiKey: []
      description: >
        Update one or more unit descriptions.


        Requires `sightmap.unit-descriptions.update` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsdescriptionsUpdateDescriptionsRequest
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsdescriptionsUpdateDescriptionsResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/description-groups/{description-group}/descriptions/{description}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit description group ID.
        name: group
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: A unit description ID.
        name: description
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the
          `unit-description-resource` [experimental
          flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/descriptions
      summary: View a description
      operationId: Assetsunitsdescriptions_viewSpecificDescription
      security:
        - apiKey: []
      description: >
        Returns a specific unit description.


        Requires `sightmap.unit-descriptions.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitDescription'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/description-groups/{description-group}/units:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit description group ID.
        name: group
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the
          `unit-descriptions-resource` [experimental
          flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/descriptions
      summary: List units assigned to descriptions
      operationId: Assetsunitsdescriptions_listAssignedUnits
      security:
        - apiKey: []
      description: >
        Returns a list of units for a unit description group.


        Requires `sightmap.unit-descriptions.read` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsdescriptionsListAssignedUnitsResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units/descriptions
      summary: Assign units to descriptions
      operationId: Assetsunitsdescriptions_assignUnitsToDescriptionGroups
      security:
        - apiKey: []
      description: >
        Assign one or more units to one or more descriptions.


        Requires `sightmap.unit-descriptions.update` permission.


        **NOTICE:** This resource is experimental and requires the

        `unit-descriptions-resource` [experimental
        flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsdescriptionsAssignUnitsToDescriptionGroupsRequest
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsdescriptionsAssignUnitsToDescriptionGroupsResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/maps:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/maps
      summary: List unit maps
      operationId: Assetsmaps_listUnitMaps
      security:
        - apiKey: []
      description: |
        Returns a list of unit maps for an asset.

        Requires `sightmap.unit-maps.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - $ref: '#/components/parameters/Tags'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsmapsListUnitMapsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/maps
      summary: Create a unit map
      operationId: Assetsmaps_createUnitMap
      security:
        - apiKey: []
      description: >
        Create a Unit Map for an asset.


        Requires `sightmap.unit-maps.create` permission.


        **NOTICE:** This resource is experimental and requires the
        `create-unitmap-resource`

        [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - description: >-
            This resource is experimental and requires the
            `create-unitmap-resource` [experimental
            flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetsmapsCreateUnitMapRequest'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitMap'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '415':
          description: Unsupported media type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsmapsCreateUnitMapResponse'
              example:
                message: Content type must be `multipart/form-data`
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/maps/{map}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit map ID.
        name: map
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/maps
      summary: View a unit map
      operationId: Assetsmaps_viewUnitMap
      security:
        - apiKey: []
      description: |
        Returns a specific unit map.

        Requires `sightmap.unit-maps.read` permission.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitMap'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/maps
      summary: Update a unit map
      operationId: Assetsmaps_updateUnitMap
      security:
        - apiKey: []
      description: Requires `sightmap.unit-maps.update` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsmapsUpdateUnitMapRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetsmapsUpdateUnitMapRequest1'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitMap'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/maps/{map}/backgrounds:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit map ID.
        name: map
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/maps
      summary: List backgrounds
      operationId: Assetsmaps_listBackgrounds
      security:
        - apiKey: []
      description: |
        Returns a list of backgrounds for the unit map.

        Requires `sightmap.unit-maps.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsmapsListBackgroundsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/maps/{map}/backgrounds/{background}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit map ID.
        name: map
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: A background ID.
        name: background
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/maps
      summary: View a background
      operationId: Assetsmaps_getViewBackground
      security:
        - apiKey: []
      description: |
        Returns a specific background for a unit map.

        Requires `sightmap.unit-maps.read` permission.
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitMapBackground'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/caches/build:
    parameters:
      - $ref: '#/components/parameters/Asset'
    post:
      tags:
        - assets/caches
      summary: Build caches
      operationId: Assetscaches_buildCachesForAsset
      security:
        - apiKey: []
      description: >
        Builds and/or rebuilds all caches for an asset.


        Requires `sightmap.caches.build` permission.


        **NOTICE:** This resource is experimental and requires the
        `build-caches`

        [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - description: >-
            This resource is experimental and requires the `build-caches`
            [experimental flag](https://api.sightmap.com/v1/openapi).
          name: Experimental-Flags
          in: header
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Queued for processing
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/references:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: >-
          This resource is experimental and requires the `references`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/references
      summary: List references
      operationId: Assetsreferences_listReferencesForAsset
      security:
        - apiKey: []
      description: |
        Returns a list of asset references for an asset.

        Requires `sightmap.asset-references.read` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsreferencesListReferencesForAssetResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/references
      summary: Create a reference
      operationId: Assetsreferences_createAssetReference
      security:
        - apiKey: []
      description: |
        Create an asset reference for an asset.

        Requires `sightmap.asset-references.create` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsreferencesCreateAssetReferenceRequest'
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetReference'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/references/{reference}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: An asset reference ID.
        name: reference
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the `references`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/references
      summary: View a reference
      operationId: Assetsreferences_viewReference
      security:
        - apiKey: []
      description: |
        Returns a specific asset reference.

        Requires `sightmap.asset-references.read` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetReference'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/references
      summary: Update a reference
      operationId: Assetsreferences_updateReference
      security:
        - apiKey: []
      description: Requires `sightmap.asset-references.update` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsreferencesUpdateReferenceRequest'
      responses:
        '200':
          description: Resource updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetReference'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/reference-groups:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: >-
          This resource is experimental and requires the `references`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/references
      summary: List groups
      operationId: Assetsunitsreferences_listGroups
      security:
        - apiKey: []
      description: |
        Returns a list of unit reference groups for an asset.

        Requires `sightmap.unit-references.read` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsunitsreferencesListGroupsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      tags:
        - assets/units/references
      summary: Create a group
      operationId: Assetsunitsreferences_createUnitReferenceGroup
      security:
        - apiKey: []
      description: |
        Create a unit reference group.

        Requires `sightmap.unit-references.create` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsreferencesCreateUnitReferenceGroupRequest
            example:
              asset_id: '1323'
              name: Yardi Voyager
              key: yardi-voyager
      responses:
        '201':
          description: Resource created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitReferenceGroup'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '409':
          description: Resource conflict
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsreferencesCreateUnitReferenceGroupResponse
              example:
                message: >-
                  The given key is already in use by another unit reference
                  group on the asset
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/reference-groups/{reference-group}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit reference group ID.
        name: group
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the `references`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/references
      summary: View a group
      operationId: Assetsunitsreferences_viewSpecificUnitReferenceGroup
      security:
        - apiKey: []
      description: |
        Returns a specific unit reference group.

        Requires `sightmap.unit-references.read` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitReferenceGroup'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units/references
      summary: Update a group
      operationId: Assetsunitsreferences_updateUnitReferenceGroup
      security:
        - apiKey: []
      description: |
        Update a unit reference group.

        Requires `sightmap.unit-references.update` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsreferencesUpdateUnitReferenceGroupRequest
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitReferenceGroup'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/units/reference-groups/{reference-group}/references:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A unit reference group ID.
        name: group
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: >-
          This resource is experimental and requires the `references`
          [experimental flag](https://api.sightmap.com/v1/openapi).
        name: Experimental-Flags
        in: header
        required: true
        schema:
          type: string
    get:
      tags:
        - assets/units/references
      summary: List references
      operationId: Assetsunitsreferences_listUnitReferences
      security:
        - apiKey: []
      description: |
        Returns a list of references for a unit reference group.

        Requires `sightmap.unit-references.read` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AssetsunitsreferencesListUnitReferencesResponse
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/units/references
      summary: Update references
      operationId: Assetsunitsreferences_updateUnitReferences
      security:
        - apiKey: []
      description: |
        Update one or more references on a unit reference group.

        Requires `sightmap.unit-references.update` permission.

        **NOTICE:** This resource is experimental and requires the
        `references` [experimental flag](https://api.sightmap.com/v1/openapi).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AssetsunitsreferencesUpdateUnitReferencesRequest
      responses:
        '204':
          description: References updated successfully
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/pricing:
    parameters:
      - $ref: '#/components/parameters/Asset'
    get:
      tags:
        - assets/pricing
      summary: List pricing processes
      operationId: Assetspricing_listPricingProcesses
      security:
        - apiKey: []
      description: |
        Returns the pricing processes for an asset.

        Requires `sightmap.pricing.read` permission.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetspricingListPricingProcessesResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/pricing/{process}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A process ID.
        name: process
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/pricing
      summary: View a pricing process
      operationId: Assetspricing_viewPricingProcess
      security:
        - apiKey: []
      description: |
        Returns a specific pricing process.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingProcess'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/pricing/{process}/entries:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A process ID.
        name: process
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/pricing
      summary: List pricing entries
      operationId: Assetspricing_listPricingEntries
      security:
        - apiKey: []
      description: >
        Returns the pricing entries for a process. Note, there may be many
        entries

        for a unit, such is the case for `revenue_management` pricing
        strategies.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
        - description: Force a flat pricing view of the entry data.
          name: flat-pricing
          in: query
          required: false
          schema:
            type: string
            enum:
              - '1'
              - '0'
        - description: A unit ID to filter the list on.
          name: unit
          in: query
          required: false
          schema:
            type: string
            format: id
            maxLength: 255
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetspricingListPricingEntriesResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/pricing/{process}/units:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A process ID.
        name: process
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/pricing
      summary: List pricing units
      operationId: Assetspricing_listPricingUnits
      security:
        - apiKey: []
      description: |
        Returns the units for a process.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource list returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetspricingListPricingUnitsResponse'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
  /assets/{asset}/multifamily/pricing/{process}/units/{unit}:
    parameters:
      - $ref: '#/components/parameters/Asset'
      - description: A process ID.
        name: process
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
      - description: A unit ID.
        name: unit
        in: path
        required: true
        schema:
          type: string
          format: id
          maxLength: 255
    get:
      tags:
        - assets/pricing
      summary: View a pricing unit
      operationId: Assetspricing_viewPricingUnit
      security:
        - apiKey: []
      description: |
        Returns a specific unit on a process.
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PerPage'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingUnit'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      tags:
        - assets/pricing
      summary: Update a pricing unit
      operationId: Assetspricing_updatePricingUnit
      security:
        - apiKey: []
      description: Requires `sightmap.pricing.create-entries` permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetspricingUpdatePricingUnitRequest'
      responses:
        '200':
          description: Resource returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingUnit'
        '401':
          $ref: '#/components/responses/NoAPIKeyError'
        '403':
          $ref: '#/components/responses/AccessDeniedError'
        '404':
          $ref: '#/components/responses/ResourceNotFoundError'
        '422':
          $ref: '#/components/responses/ResourceValidationError'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  parameters:
    Page:
      description: Request a specific page of resources.
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
    PerPage:
      description: Limit the number of returned resources.
      name: per-page
      in: query
      required: false
      schema:
        type: integer
        format: int32
    Account:
      description: An account ID.
      name: account
      in: path
      required: true
      schema:
        type: string
        format: id
        maxLength: 255
    Asset:
      description: An asset ID.
      name: asset
      in: path
      required: true
      schema:
        type: string
        format: id
        maxLength: 255
    Tags:
      description: >-
        A comma-separated list of one or more tags to filter the list on (e.g.
        `tag-1,tag-2`).
      name: tags
      in: query
      required: false
      schema:
        type: string
        format: id
        maxLength: 255
  responses:
    NoAPIKeyError:
      description: No API key found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListAccounts401Response'
          example:
            message: No API key found in request
    AccessDeniedError:
      description: Access denied due to insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListAccounts403Response'
          example:
            message: Access denied
    ResourceNotFoundError:
      description: No resource exists
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListAccounts404Response'
          example:
            message: No resource exists
    RateLimitExceeded:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListAccounts429Response'
          example:
            message: API rate limit exceeded
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsListAccounts500Response'
          example:
            message: Server error
    ResourceValidationError:
      description: Resource validation failed
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/AccountsassetsAssignAssetsToAccount422Response
          example:
            message: Resource validation failed
            fields:
              name:
                - The name field is required.
    ForeignKeyConstraintError:
      description: Resource conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssetsunitsDeleteUnitResponse'
          example:
            message: Operation failed due to a foreign key constraint
  securitySchemes:
    apiKey:
      description: |
        An API key sent via the `API-Key` header.
        ```
        curl -i -H "API-Key: 12345" https://api.sightmap.com/v1/assets
        ```
      type: apiKey
      name: API-Key
      x-displayName: API Key
      in: header
  schemas:
    Paging:
      description: Metadata for paging through list responses.
      type: object
      properties:
        per_page:
          description: The number of resources returned per page.
          type: integer
          format: int32
        current_page:
          description: The current page number.
          type: integer
          format: int32
        prev_url:
          description: A fully qualified URL to the previous page.
          type: string
          nullable: true
        next_url:
          description: A fully qualified URL to the next page.
          type: string
          nullable: true
      example:
        per_page: 100
        current_page: 1
        prev_url: null
        next_url: null
    Account:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '95'
        name: Engrain
        created_at: '2017-09-11T17:09:18+00:00'
        updated_at: '2017-09-11T17:09:18+00:00'
    Embed:
      type: object
      properties:
        tags:
          description: The tags assigned to the embed.
          type: array
          maxItems: 3
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          items:
            type: string
        id:
          type: string
          format: id
          maxLength: 255
        account_id:
          description: The account the embed belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        url:
          description: A fully qualified URL for the embed.
          type: string
        sightmaps:
          description: The list of sightmaps on the embed.
          type: array
          nullable: true
          items:
            type: object
            properties:
              id:
                type: string
                format: id
                maxLength: 255
              asset_id:
                description: The asset the sightmap belongs to.
                type: string
                format: id
                maxLength: 255
              instance_key:
                description: >-
                  A value used to target and select the sightmap from the embed;
                  passed in via the `instance` query parameter on the embed URL.
                type: string
                format: id
                maxLength: 255
                nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        tags:
          - primary
          - full-campus
        id: '5587'
        account_id: '95'
        name: The Lofts at New Main
        url: https://sightmap.com/embed/960p78rdw7n
        sightmaps:
          - id: '10486'
            asset_id: '1323'
            instance_key: null
        created_at: '2020-10-30T15:16:35+00:00'
        updated_at: '2020-11-04T23:45:31+00:00'
    AssetMarket:
      type: string
      enum:
        - affordable_housing
        - agriculture
        - airplane
        - airport
        - build_to_rent
        - camping
        - cemetery
        - condos
        - coworking
        - cruise_ship
        - cultural
        - data_center
        - demo
        - education
        - entertainment
        - gallery_museum
        - geography
        - government
        - harbor_marina
        - healthcare
        - hospitality
        - industrial
        - infrastructure
        - land
        - logistics
        - manufactured_housing
        - master_planned
        - military_housing
        - mixed_use
        - multifamily
        - office
        - oil_and_gas
        - other
        - parking
        - rentable_items
        - resort
        - retail
        - salon
        - self_storage
        - senior_living
        - single_family
        - spa
        - stadium_arena
        - student
        - theme_park
        - transit
    Asset:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        id:
          type: string
          format: id
          maxLength: 255
        uuid:
          type: string
          format: uuid
          maxLength: 36
          minLength: 36
        market:
          $ref: '#/components/schemas/AssetMarket'
        name:
          type: string
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        address_line1:
          type: string
          maxLength: 63
        address_line2:
          type: string
          maxLength: 63
          nullable: true
        address_city:
          type: string
          maxLength: 63
        address_state:
          description: Two letter abbreviated state or province.
          type: string
          maxLength: 2
          minLength: 2
        address_country:
          description: >
            An [ISO 3166-1
            alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)

            country code.
          type: string
          maxLength: 3
          minLength: 3
        address_postal_code:
          type: string
          maxLength: 15
        address_latitude:
          type: number
          format: float
          minimum: -90
          maximum: 90
          nullable: true
        address_longitude:
          type: number
          format: float
          minimum: -180
          maximum: 180
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        description: null
        id: '1323'
        uuid: d5779fbb-43fe-4d54-b642-266ce815a3f3
        market: multifamily
        name: The Lofts at New Main
        display_name: The Lofts at New Main
        unit_count: 138
        address_line1: 100 New Main St
        address_line2: null
        address_city: Cleveland
        address_state: OH
        address_country: USA
        address_postal_code: '91801'
        address_latitude: 41.433243
        address_longitude: -81.3941872
        created_at: '2017-09-11T17:08:59+00:00'
        updated_at: '2019-10-10T04:25:58+00:00'
    AccountAssetRelation:
      type: object
      properties:
        account_id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset assigned on the account.
          type: string
          format: id
          maxLength: 255
      example:
        account_id: '1'
        asset_id: '1323'
      required:
        - account_id
        - asset_id
    Unit:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit belongs to.
          type: string
          format: id
          maxLength: 255
        building_id:
          description: The building the unit is in.
          type: string
          format: id
          maxLength: 255
        floor_id:
          description: The floor the unit is on.
          type: string
          format: id
          maxLength: 255
        floor_plan_id:
          description: The floor plan of the unit.
          type: string
          format: id
          maxLength: 255
        map_id:
          description: The map ID of the unit. Will be the same as `id`.
          type: string
          maxLength: 255
          deprecated: true
        unit_number:
          description: The unit number.
          type: string
          maxLength: 255
        area:
          description: The area of the unit represented as square footage or square meters.
          type: integer
          format: int32
          minimum: 0
        is_affordable_housing_unit:
          description: Determines if the unit is an affordable housing unit.
          type: boolean
        view_image_url:
          description: A fully qualified URL to a view image of the unit.
          type: string
          nullable: true
        secondary_view_image_url:
          description: A fully qualified URL to a second view image of the unit.
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '258670'
        asset_id: '1323'
        building_id: '8265'
        floor_id: '4730'
        floor_plan_id: '14641'
        map_id: '258670'
        unit_number: E13
        area: 700
        is_affordable_housing_unit: false
        view_image_url: null
        secondary_view_image_url: null
        created_at: '2017-09-11T17:09:18+00:00'
        updated_at: '2018-01-20T03:44:39+00:00'
    Building:
      type: object
      name: Building
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the building belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        label:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '8267'
        asset_id: '1323'
        name: W
        label: W
        created_at: '2017-09-11T17:09:18+00:00'
        updated_at: '2017-09-11T17:09:18+00:00'
    FilterType:
      description: >
        The type determines how the filter behaves in the application and

        what actionable data is stored.


        - `custom`: A custom filter which requires the assignment of units.

        - `floor`: A filter that sorts units by floors based on the assigned
        options.

        - `floor_plan`: A filter that filters units based on a floor plan.

        - `range`: A filter that that filters units based on a chosen range
        type.
      type: string
      enum:
        - floor
        - floor_plan
        - range
        - custom
    FilterCustom:
      title: Custom Filter
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1222'
        asset_id: '1323'
        type: custom
        name: Bathrooms
        label: Bathrooms
        is_enabled: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterFloor:
      title: Floor Filter
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1223'
        asset_id: '1323'
        type: floor
        name: Floor
        label: Floor
        is_enabled: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterFloorPlan:
      title: Floor Plan
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1224'
        asset_id: '1323'
        type: floor_plan
        name: Floor Plan
        label: Floor Plan
        is_enabled: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterRange:
      title: Range Filter
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        range_type:
          description: >
            - `unit_area`: Filter all units based on the min, max and floor plan
            area of a unit.

            - `unit_move_in`: Filter all units based on the min, max and move in
            date of a unit.

            - `unit_price`: Filter all units based on the min, max and price of
            a unit.
          type: string
          enum:
            - unit_area
            - unit_move_in
            - unit_price
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1225'
        asset_id: '1323'
        type: range
        name: Prices
        label: Prices
        range_type: unit_price
        is_enabled: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    Custom:
      title: Custom Option
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          type: string
          format: id
          maxLength: 255
        filter_id:
          type: string
          format: id
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          type: string
          maxLength: 255
        sort:
          description: The sort order of the option.
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1'
        asset_id: '1323'
        filter_id: '1'
        type: custom
        label: 0 - 3
        sort: 0
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterCustomWithOptions:
      title: Custom Filter
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        options:
          type: array
          items:
            $ref: '#/components/schemas/Custom'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 1222X
        asset_id: '1323'
        type: custom
        name: Bathrooms
        label: Bathrooms
        is_enabled: true
        options:
          - id: 1X
            label: 0 - 2
            sort: 0
          - id: '2'
            label: 3 - 4
            sort: 1
          - id: '3'
            label: 4+
            sort: 2
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    Floor:
      title: Floor Option
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          type: string
          format: id
          maxLength: 255
        filter_id:
          type: string
          format: id
          maxLength: 255
        floor_id:
          description: The id that references the floor on this filter option.
          type: string
          format: id
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          type: string
          maxLength: 255
        short_label:
          type: string
          maxLength: 2
        sort:
          description: The sort order of the option.
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 1222X
        asset_id: '1323'
        filter_id: '1'
        floor_id: '2'
        type: floor
        label: Parking
        short_label: P
        sort: 0
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterFloorWithOptions:
      title: Floor Filter
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        options:
          type: array
          items:
            $ref: '#/components/schemas/Floor'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 1223X
        asset_id: '1323'
        type: floor
        name: Floor
        label: Floor
        options:
          - id: 1X
            floor_id: '1'
            label: Parking
            short_label: P
            sort: 0
          - id: 2X
            floor_id: '2'
            label: Floor 1
            short_label: '1'
            sort: 1
          - id: 3X
            floor_id: '3'
            label: Floor 2
            short_label: '2'
            sort: 3
          - id: '4'
            floor_id: '4'
            label: Roof Top
            short_label: RT
            sort: 4
        is_enabled: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FloorPlan:
      title: Floor Plan Option
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          type: string
          format: id
          maxLength: 255
        filter_id:
          type: string
          format: id
          maxLength: 255
        floor_plan_id:
          type: string
          format: id
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          type: string
          maxLength: 255
        sort:
          description: The sort order of the option.
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 1222X
        asset_id: '1323'
        filter_id: '1'
        floor_plan_id: '1'
        type: floor_plan
        label: 2 bedroom 1 bathroom
        sort: 0
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterFloorPlanWithOptions:
      title: Floor Plan
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/FloorPlan'
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 1224X
        asset_id: '1323'
        type: floor_plan
        name: Floor Plan
        label: Floor Plan
        is_enabled: true
        options:
          - id: 1X
            floor_plan_id: '123'
            label: 2 Bedroom 1 Bath
            sort: 0
          - id: 2X
            floor_plan_id: '124'
            label: 2 Bedroom 2 Bath
            sort: 1
          - id: 3X
            floor_plan_id: '125'
            label: Studio
            sort: 3
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    Range:
      title: Range Option
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          type: string
          format: id
          maxLength: 255
        filter_id:
          type: string
          format: id
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
        label:
          type: string
          maxLength: 255
        sort:
          description: The sort order of the option.
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 1222X
        asset_id: '1323'
        filter_id: '1'
        type: range
        min: 0
        max: 1200
        label: 0 - 1200
        sort: 0
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterRangeWithOptions:
      title: Range Filter
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the filter belongs to.
          type: string
          format: id
          maxLength: 255
        type:
          $ref: '#/components/schemas/FilterType'
        name:
          type: string
          maxLength: 255
        label:
          description: The text label on the filter.
          type: string
          maxLength: 95
          nullable: true
        range_type:
          description: >
            - `unit_area`: Filter all units based on the min, max and floor plan
            area of a unit.

            - `unit_move_in`: Filter all units based on the min, max and move in
            date of a unit.

            - `unit_price`: Filter all units based on the min, max and price of
            a unit.
          type: string
          enum:
            - unit_area
            - unit_move_in
            - unit_price
        options:
          type: array
          items:
            $ref: '#/components/schemas/Range'
        is_enabled:
          description: Whether or not the filter is enabled.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 1225X
        asset_id: '1323'
        type: range
        name: Unit Price
        label: Unit Price
        is_enabled: true
        options:
          - id: 1X
            min: 0
            max: 500
            label: 0 - 500
            sort: 0
          - id: 2X
            min: 501
            max: 1500
            label: 501 - 1500
            sort: 1
          - id: 3X
            min: 1501
            max: 1800
            label: 1501 - 1800
            sort: 2
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FilterOptionType:
      description: >
        The type determines how the filter option behaves in the application and

        what actionable data is stored.


        The type must match the type of the filter it belongs to.


        - `custom`: A custom filter option which requires the assignment of
        units.

        - `floor`: A filter option that sorts units by floors based on the
        assigned options.

        - `floor_plan`: A filter option that filters units based on a floor
        plan.

        - `range`: A filter option that that filters units based on a chosen
        range type.
      type: string
      enum:
        - floor
        - floor_plan
        - range
        - custom
    UnitFilterCustomOptionRelation:
      type: object
      properties:
        asset_id:
          description: The asset the unit belongs to.
          type: string
          format: id
          maxLength: 255
        filter_id:
          description: The filter the option belongs to.
          type: string
          format: id
          maxLength: 255
        unit_id:
          type: string
          format: id
          maxLength: 255
        option_id:
          description: The option the units are assigned to.
          type: string
          format: id
          maxLength: 255
      example:
        asset_id: '1323'
        filter_id: '6'
        unit_id: '258670'
        option_id: '1000'
    Floor-2:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the floor belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        filter_label:
          description: The default filter label for the floor.
          type: string
          maxLength: 255
        filter_short_label:
          description: The default short filter label for the floor.
          type: string
          maxLength: 4
        sort:
          description: The sort order of the floor.
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '4730'
        asset_id: '1323'
        name: '1'
        filter_label: Floor 1
        filter_short_label: '1'
        sort: 2
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    FloorPlan-2:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the floor plan belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        bedroom_count:
          description: The number of bedrooms.
          type: integer
          format: int32
          minimum: 0
        bathroom_count:
          description: >-
            The number of bathrooms. Fractional values represent partial baths
            (e.g. `1.5` is 1 1/2 baths).
          type: number
          format: float
          minimum: 0
        image_url:
          description: A fully qualified URL to a primary image of the floor plan.
          type: string
          nullable: true
        secondary_image_url:
          description: A fully qualified URL to a secondary image of the floor plan.
          type: string
          nullable: true
        filter_label:
          type: string
          maxLength: 65
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '14641'
        asset_id: '1323'
        name: 1 Bed 1 Bath
        bedroom_count: 1
        bathroom_count: 1
        image_url: >-
          https://cdn.sightmap.com/assets/dg/ow/dgow3mqzv2m/9c/85/9c85d1e22823d175faa9d03fbb4b973a.jpg
        secondary_image_url: >-
          https://cdn.sightmap.com/assets/dg/ow/dgow3mqzv2m/06/c6/06c6813818262c70904b9ae2dac39119.jpg
        filter_label: 1 Bed 1 Bath
        created_at: '2017-09-11T17:09:18+00:00'
        updated_at: '2018-11-30T22:21:05+00:00'
    MarkerDescription:
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the marker description belongs to.
          type: string
          format: id
          maxLength: 255
        gallery_id:
          description: >-
            The gallery used on the marker description. Either a gallery or
            label must be present on an marker description.
          type: string
          format: id
          maxLength: 255
          nullable: true
        name:
          type: string
          maxLength: 255
        label:
          description: |
            The displayed name of the marker description.

            Either a gallery or label must be present on an marker description.
          type: string
          maxLength: 255
          nullable: true
        iframe_source_url:
          description: >-
            A fully qualified URL to an IFrame source which is displayed to the
            user as part of the marker description.
          type: string
          nullable: true
        outbound_link_url:
          description: >-
            A fully qualified URL which a user can link out to from the marker
            description.
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        description: >-
          An infinity pool is a reflecting or swimming pool, where the water
          flows over one or more edges, producing a visual effect of water with
          no boundary. Such pools are often designed so that the edge appears to
          merge with a larger body of water such as the ocean, or with the sky.
          They are often seen at resorts, estates, and in other luxurious
          places.
        id: 8267X
        asset_id: '1323'
        gallery_id: '3321'
        name: Infinity Pool
        label: Infinity Pool
        iframe_source_url: null
        outbound_link_url: https://engrain.com/
        created_at: '2017-09-11T17:09:18+00:00'
        updated_at: '2017-09-11T17:09:18+00:00'
    Gallery:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the gallery belongs to.
          format: id
          type: string
          maxLength: 255
        name:
          type: string
          maxLength: 255
        images:
          description: The list of images on the gallery.
          type: array
          nullable: true
          items:
            type: object
            properties:
              url:
                description: A fully qualified URL to the image.
                type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 8267X
        asset_id: '1323'
        name: Infinity Pool
        images:
          - url: >-
              https://cdn.sightmap.com/assets/96/0p/960p79ev7ng/2c/eb/2cebd695c48921d7363a96c9b357e540.jpg
        created_at: '2017-09-11T17:09:18+00:00'
        updated_at: '2017-09-11T17:09:18+00:00'
    AssetOutboundLinkIconType:
      description: Icon displayed by the outbound link.
      type: string
      enum:
        - email
        - print
        - reserve
        - share
        - search
        - info
        - video_camera
        - video_play
        - virtual_tour
        - 360_tour
        - calendar
        - floorplan
        - form
        - location
        - person
        - photo
        - photo_and_tour
        - plus_sign
        - smartphone
        - telephone
    AssetOutboundLink:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the outbound link belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        template:
          description: Outbound link template.
          type: string
        label:
          description: The text label on the outbound link.
          type: string
          maxLength: 95
          nullable: true
        icon_type:
          $ref: '#/components/schemas/AssetOutboundLinkIconType'
        open_new_window:
          description: >-
            Determines if the outbound link will open in a new browser window or
            not.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '6011'
        asset_id: '1323'
        name: Contact
        template: mailto:nobody@example.com
        label: Contact Us
        icon_type: email
        open_new_window: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    UnitOutboundLinkType:
      description: >
        The type determines how the unit outbound link behaves in the
        application and

        what actionable data is stored.


        - `url_template`: A templated URL which can be generated for all units
        given
          a few unit specific variables.
        - `urls_per_unit`: A list of fully qualified URLs for each unit.

        - `iframe_api`: The link fires an IFrame API event using a unique key,
          which is provided via the `event_key` property. No URL is navigated to.
      type: string
      enum:
        - iframe_api
        - url_template
        - urls_per_unit
    UnitOutboundLinkIconType:
      description: Icon displayed by the outbound link.
      type: string
      enum:
        - email
        - print
        - reserve
        - share
        - search
        - info
        - video_camera
        - video_play
        - virtual_tour
        - 360_tour
        - calendar
        - floorplan
        - form
        - location
        - person
        - photo
        - photo_and_tour
        - plus_sign
        - smartphone
        - telephone
    UnitOutboundLinkIframeApi:
      title: IFrame API
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the outbound link belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        label:
          description: The text label on the outbound link.
          type: string
          maxLength: 95
          nullable: true
        type:
          $ref: '#/components/schemas/UnitOutboundLinkType'
        icon_type:
          $ref: '#/components/schemas/UnitOutboundLinkIconType'
        event_key:
          description: >-
            A value used in all IFrame event names for the outbound link. For
            example when `event_key` is `foo`, the event name for when the user
            clicks on the outbound link will be `outbound.foo.click`.
          type: string
          maxLength: 63
          pattern: '[a-z0-9-]'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 6011X
        asset_id: '1323'
        name: Chat
        label: Chat With Us
        type: iframe_api
        icon_type: person
        event_key: chatbot
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    UnitOutboundLinkUrlsPerUnit:
      title: URLs Per Unit
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the outbound link belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        label:
          description: The text label on the outbound link.
          type: string
          maxLength: 95
          nullable: true
        type:
          $ref: '#/components/schemas/UnitOutboundLinkType'
        icon_type:
          $ref: '#/components/schemas/UnitOutboundLinkIconType'
        open_in_new_window:
          description: >-
            Determines if the outbound link will open in a new browser window or
            not.
          type: boolean
        show_icon_in_list:
          description: >
            Determines if the icon will be displayed in the unit list or not.


            This field is only considered when `icon_type` is either

            `360_tour` ,`photo` ,`photo_and_tour` ,`video_camera` ,`video_play`
            or `virtual_tour`.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 6011X
        asset_id: '1323'
        name: 360 Tour
        label: View 360 Tour
        type: urls_per_unit
        icon_type: 360_tour
        open_in_new_window: true
        show_icon_in_list: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    UnitOutboundLinkUrlTemplate:
      title: URL Template
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the outbound link belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        label:
          description: The text label on the outbound link.
          type: string
          maxLength: 95
          nullable: true
        type:
          $ref: '#/components/schemas/UnitOutboundLinkType'
        icon_type:
          $ref: '#/components/schemas/UnitOutboundLinkIconType'
        open_in_new_window:
          description: >-
            Determines if the outbound link will open in a new browser window or
            not.
          type: boolean
        template:
          description: The URL template.
          maxLength: 2047
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 6011X
        asset_id: '1323'
        name: Apply
        label: Apply Now
        type: url_template
        icon_type: email
        open_in_new_window: true
        template: >
          {{leasing_fields.apply_url}}&MoveInDate={{move_in_date|date('m/d/Y')}}&sLeaseTerm={{lease_term}}
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    UnitOutboundLinkUrl:
      type: object
      properties:
        unit_id:
          type: string
          format: id
          maxLength: 255
        url:
          description: A fully qualified URL assigned to the unit.
          type: string
          nullable: true
      example:
        unit_id: '258670'
        url: https://example.com/unit/258670
    LandingPage:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the landing page belongs to.
          type: string
          format: id
          maxLength: 255
        sightmap_id:
          description: The sightmap the landing page belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        website_url:
          description: A fully qualified URL of the website assigned to the landing page.
          type: string
        url:
          description: A fully qualified URL for the landing page.
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 3X
        asset_id: '1'
        sightmap_id: '1'
        name: Irvine Landing Page
        website_url: https://example.com
        url: https://sightmap.com/share/5nrkwn5wd2y
        created_at: '2020-10-30T15:16:35+00:00'
        updated_at: '2020-11-04T23:45:31+00:00'
    UnitDescriptionGroup:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit description group belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '7'
        asset_id: '1323'
        name: Amenities
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    UnitDescription:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit description belongs to.
          type: string
          format: id
          maxLength: 255
        group_id:
          description: The unit description group the description belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        label:
          description: The tab label displayed in the application.
          type: string
          maxLength: 15
        body:
          description: >-
            The text content displayed in the application, which is expected to
            be plain text or [basic syntax
            Markdown](https://www.markdownguide.org/basic-syntax/).
          type: string
          maxLength: 2000
        is_enabled:
          description: >-
            Determines whether or not the description should be displayed in the
            application.
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1000'
        asset_id: '1323'
        group_id: '7'
        name: Amenity 1
        label: Amenities
        body: |
          * Quartz countertops
          * Mountain views
          * Stainless steel appliances
        is_enabled: true
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    UnitDescriptionRelation:
      type: object
      properties:
        asset_id:
          description: The asset the unit belongs to.
          type: string
          format: id
          maxLength: 255
        group_id:
          description: The unit description group the relation belongs to.
          type: string
          format: id
          maxLength: 255
        unit_id:
          type: string
          format: id
          maxLength: 255
        description_id:
          description: The description the units are assigned to.
          type: string
          format: id
          maxLength: 255
      example:
        asset_id: '1323'
        group_id: '7'
        unit_id: '258670'
        description_id: '1000'
    UnitMap:
      type: object
      properties:
        tags:
          description: The tags assigned to the unit map.
          type: array
          maxItems: 3
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          items:
            type: string
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit map belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        is_dimension_locked:
          description: Whether or not the dimensions of the unit map are locked.
          type: boolean
          default: false
          nullable: false
        style:
          description: The defined style of the unit map.
          type: string
          enum:
            - a
            - a.1
            - a.2
            - b
            - c
            - d
            - e
            - f.1
            - f.2
            - f.3
            - g.1
            - g.2
            - h
            - x
        style_type:
          description: The style type of the unit map.
          type: string
          enum:
            - floor_plate
            - stack
            - oblique
            - elevation
        url:
          description: A fully qualified URL to the unit map file.
          type: string
        source_url:
          description: A fully qualified URL to the source file.
          type: string
        geojson_url:
          description: >-
            A fully qualified URL to the unit map GeoJSON file. Only
            georeferenced unit maps will have GeoJSON representations.
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        tags:
          - ils
          - mls
        id: '575'
        asset_id: '1323'
        name: The Lofts at New Main
        is_dimension_locked: false
        style: b
        style_type: floor_plate
        url: >-
          https://cdn.unitmap.com/assets/dg/ow/dgow3mqzv2m/f6/02/f6029abed9f920c5a7d5131ed4fe1d78.umap
        source_url: https://api.sightmap.local/v1/assets/1323/multifamily/maps/575/source
        geojson_url: null
        created_at: '2017-09-13T15:35:35+00:00'
        updated_at: '2020-02-28T21:24:51+00:00'
    UnitMapBackground:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the background belongs to.
          type: string
          format: id
          maxLength: 255
        unit_map_id:
          description: The unit map the background belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        image_url:
          description: A fully qualified URL to the background image.
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1395'
        asset_id: '1323'
        unit_map_id: '5416'
        name: The Lofts at New Main
        image_url: >-
          https://cdn.sightmap.com/assets/l8/xv/l8xvrol5vjk/0a/59/0a59e80e112198cb325efd4ef8399f1d.jpg
        created_at: '2017-09-13T15:35:35+00:00'
        updated_at: '2020-02-28T21:24:51+00:00'
    AssetReference:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the reference belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        key:
          description: >
            A string used across resources to indicate the third-party system
            the

            reference value is part of.


            The key cannot be used more than once per asset, which ensures only
            a

            single reference may exist per asset for each key.
          type: string
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          nullable: true
        value:
          description: The matched reference value to the asset.
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        description: null
        id: '2630'
        asset_id: '4715'
        name: Google Places
        key: google-places
        value: ChIJuw4JzfOGbIcR1PPArQtuTcQ
        created_at: '2021-03-11T17:09:18+00:00'
        updated_at: '2021-01-20T03:44:39+00:00'
    UnitReferenceGroup:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit reference group belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        key:
          description: >
            A string used across resources to indicate the third-party system
            the

            references are part of.


            The key cannot be used more than once per asset, which ensures only
            a

            single reference may exist per asset for each key.
          type: string
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: 2630X
        asset_id: '1323'
        name: Yardi Voyager
        key: yardi-voyager
        created_at: '2017-09-11T17:09:17+00:00'
        updated_at: '2019-01-02T22:01:09+00:00'
    UnitReference:
      type: object
      properties:
        group_id:
          description: The group the reference belongs to.
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the reference belongs to.
          type: string
          format: id
          maxLength: 255
        unit_id:
          description: The unit the reference belongs to.
          type: string
          format: id
          maxLength: 255
        key:
          description: >
            A string used across resources to indicate the third-party system
            the

            reference value is part of.


            The key cannot be used more than once per asset, which ensures only
            a

            single reference may exist per asset for each key.
          type: string
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          nullable: true
        value:
          description: >-
            The matched reference value to the unit. Must be unique amongst the
            group.
          type: string
          maxLength: 255
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        group_id: '2630'
        asset_id: '1323'
        unit_id: '258670'
        key: yardi-voyager
        value: '123456'
        created_at: '2021-03-11T17:09:18+00:00'
        updated_at: '2021-01-20T03:44:39+00:00'
    PricingProcess:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the process belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        type:
          description: >
            The type value represents how the process receives its pricing &

            availability data.


            - `poll`: The data is requested by our system at configured
            intervals.

            - `push`: The data is sent to the API.

            - `manual`: The data is input by a user via our staff or customer
            portals.
          enum:
            - poll
            - push
            - manual
          type: string
        pricing_strategy:
          type: string
          enum:
            - flat_pricing
            - revenue_management
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '1145'
        asset_id: '1323'
        name: Lofts at New Main - Manual
        type: manual
        pricing_strategy: flat_pricing
        created_at: '2018-04-03T19:27:33+00:00'
        updated_at: '2018-04-03T19:27:33+00:00'
    PricingEntry:
      type: object
      properties:
        price:
          description: The lease price of the unit.
          type: integer
        available_on:
          description: The date the unit is available for lease.
          type: string
          format: date
        lease_term:
          description: The lease term.
          type: integer
          nullable: true
        lease_starts_on:
          description: The date the lease starts on.
          type: string
          format: date
          nullable: true
        unit_id:
          description: The unit the entry belongs to.
          type: string
        unit_number:
          description: The unit number.
          type: string
        provider_id:
          description: A third-party ID matched on the unit.
          type: string
          nullable: true
        status:
          description: The status value on the unit.
          type: string
          nullable: true
        show_pricing:
          description: >-
            Determines whether prices are shown or hidden in the application for
            this unit.
          type: boolean
          nullable: false
        show_online_leasing:
          description: >-
            Determines whether online leasing UI is shown or hidden in the
            application for this unit.
          type: boolean
          nullable: false
        leasing_fields:
          description: >
            An arbitrary set of key-value pairs. The value of each key must be
            scalar (i.e. strings, numbers, etc.) with string values having a
            2000 character limit. This allows additional values to be passed
            which are required for the various online leasing flows.
          type: object
          nullable: true
        created_at:
          type: string
          format: date-time
      example:
        - price: 2400
          available_on: '2018-08-28'
          lease_term: 11
          lease_starts_on: '2018-09-15'
          unit_id: '258722'
          unit_number: SE40B
          provider_id: 40B
          status: pending
          show_pricing: true
          show_online_leasing: true
          leasing_fields:
            unit_id: 40B
            building_id: SE
          created_at: 2020-09-015T18:07:00+00:00
        - price: 2625
          available_on: '2018-08-28'
          lease_term: 12
          lease_starts_on: '2018-09-15'
          unit_id: '258722'
          unit_number: SE40B
          provider_id: 40B
          status: null
          show_pricing: false
          show_online_leasing: true
          leasing_fields:
            unit_id: 40B
            building_id: SE
          created_at: 2020-09-015T18:07:00+00:00
    PricingUnit:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        pricing_id:
          description: The pricing process the unit belongs to.
          type: string
          format: id
          maxLength: 255
          nullable: true
        provider_id:
          description: A third-party ID matched on the unit.
          type: string
          format: id
          maxLength: 255
          nullable: true
        unit_number:
          description: The unit number.
          type: string
          maxLength: 255
        status:
          description: The status value on the unit.
          type: string
          nullable: true
          maxLength: 255
        price:
          description: The lease price of the unit.
          type: integer
          minimum: 0
          nullable: true
        full_price:
          description: >-
            The full price of the unit. When this value is provided, the `price`
            attribute then represents a discounted price.
          type: integer
          minimum: 0
          nullable: true
        show_pricing:
          description: >-
            Determines whether prices are shown or hidden in the application for
            this unit.
          type: boolean
          nullable: false
        show_online_leasing:
          description: >-
            Determines whether online leasing UI is shown or hidden in the
            application for this unit.
          type: boolean
          nullable: false
        specials_description:
          type: string
          minLength: 512
          nullable: true
        available_on:
          description: The date the unit is available for lease.
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: '258722'
        pricing_id: '1151'
        provider_id: 40B
        unit_number: SE40B
        status: pending
        price: 2400
        full_price: null
        show_pricing: true
        show_online_leasing: true
        specials_description: null
        available_on: '2018-08-28'
        updated_at: 2020-09-015T18:07:00+00:00
        created_at: '2018-04-05T18:13:20+00:00'
    AccountsassetsAssignAssetsToAccountRequest:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountAssetRelation'
      required:
        - data
      example:
        data:
          - account_id: '1'
            asset_id: '1'
          - account_id: '1'
            asset_id: '2'
          - account_id: '1'
            asset_id: '3'
    AccountsassetsUnassignAssetsRequest:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountAssetRelation'
      required:
        - data
      example:
        data:
          - account_id: '1'
            asset_id: '1'
          - account_id: '1'
            asset_id: '2'
    AssetsCreateAssetPermissionRequest:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        market:
          type: string
          enum:
            - affordable_housing
            - agriculture
            - airplane
            - airport
            - build_to_rent
            - camping
            - cemetery
            - condos
            - coworking
            - cruise_ship
            - cultural
            - data_center
            - demo
            - education
            - entertainment
            - gallery_museum
            - geography
            - government
            - harbor_marina
            - healthcare
            - hospitality
            - industrial
            - infrastructure
            - land
            - logistics
            - manufactured_housing
            - master_planned
            - military_housing
            - mixed_use
            - multifamily
            - office
            - oil_and_gas
            - other
            - parking
            - rentable_items
            - resort
            - retail
            - salon
            - self_storage
            - senior_living
            - single_family
            - spa
            - stadium_arena
            - student
            - theme_park
            - transit
        name:
          type: string
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        address_line1:
          type: string
          maxLength: 63
        address_line2:
          type: string
          maxLength: 63
          nullable: true
        address_city:
          type: string
          maxLength: 63
        address_state:
          description: Two letter abbreviated state or province.
          maxLength: 2
          minLength: 2
          type: string
        address_country:
          description: >
            An [ISO 3166-1
            alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country
            code.
          maxLength: 3
          minLength: 3
          type: string
        address_postal_code:
          type: string
          maxLength: 15
        address_latitude:
          type: number
          format: float
          minimum: -90
          maximum: 90
          nullable: true
        address_longitude:
          type: number
          format: float
          minimum: -180
          maximum: 180
          nullable: true
      required:
        - market
        - name
        - display_name
        - address_line1
        - address_city
        - address_state
        - address_country
        - address_postal_code
      example:
        description: null
        market: multifamily
        name: The Lofts at New Main
        display_name: The Lofts at New Main
        address_line1: 100 New Main St
        address_line2: null
        address_city: Cleveland
        address_state: OH
        address_country: USA
        address_postal_code: '91801'
        address_latitude: 41.433243
        address_longitude: -81.3941872
    AssetsUpdateAssetRequest:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        id:
          type: string
          format: id
          maxLength: 255
        market:
          $ref: '#/components/schemas/AssetMarket'
        name:
          type: string
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        address_line1:
          type: string
          maxLength: 63
        address_line2:
          type: string
          maxLength: 63
          nullable: true
        address_city:
          type: string
          maxLength: 63
        address_state:
          description: Two letter abbreviated state or province.
          type: string
          maxLength: 2
          minLength: 2
        address_country:
          description: >-
            An [ISO 3166-1
            alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) country
            code.
          type: string
          maxLength: 3
          minLength: 3
        address_postal_code:
          type: string
          maxLength: 15
        address_latitude:
          type: number
          format: float
          minimum: -90
          maximum: 90
          nullable: true
        address_longitude:
          type: number
          format: float
          minimum: -180
          maximum: 180
          nullable: true
      required:
        - id
      example:
        id: 1323X
        market: multifamily
        name: The Lofts at New Main
        display_name: The Lofts at New Main
        address_line1: 100 New Main St
        address_city: Cleveland
        address_state: OH
        address_country: USA
        address_postal_code: '91801'
        address_latitude: 41.433243
        address_longitude: -81.3941872
    AssetsunitsCreateUnitRequest:
      type: object
      properties:
        asset_id:
          description: The asset the unit belongs to.
          type: string
          format: id
          maxLength: 255
        building_id:
          description: The building the unit is in.
          type: string
          format: id
          maxLength: 255
        floor_id:
          description: The floor the unit is on.
          type: string
          format: id
          maxLength: 255
        floor_plan_id:
          description: The floor plan of the unit.
          type: string
          format: id
          maxLength: 255
        unit_number:
          description: The unit number.
          type: string
          maxLength: 255
        area:
          description: The area of the unit represented as square footage or square meters.
          type: integer
          format: int32
          minimum: 0
        is_affordable_housing_unit:
          description: Determines if the unit is an affordable housing unit.
          type: boolean
          default: false
      required:
        - asset_id
        - building_id
        - floor_id
        - floor_plan_id
        - unit_number
        - area
      example:
        asset_id: '1323'
        building_id: '8265'
        floor_id: '4730'
        floor_plan_id: '14641'
        unit_number: E13
        area: 700
        is_affordable_housing_unit: true
    AssetsunitsCreateUnitRequest1:
      type: object
      properties:
        data:
          type: object
          properties:
            asset_id:
              description: The asset the unit belongs to.
              type: string
              format: id
              maxLength: 255
            building_id:
              description: The building the unit is in.
              type: string
              format: id
              maxLength: 255
            floor_id:
              description: The floor the unit is on.
              type: string
              format: id
              maxLength: 255
            floor_plan_id:
              description: The floor plan of the unit.
              type: string
              format: id
              maxLength: 255
            unit_number:
              description: The unit number.
              type: string
              maxLength: 255
            area:
              description: >-
                The area of the unit represented as square footage or square
                meters.
              type: integer
              format: int32
              minimum: 0
          required:
            - asset_id
            - building_id
            - floor_id
            - floor_plan_id
            - unit_number
            - area
          example:
            asset_id: '1323'
            building_id: '8265'
            floor_id: '4730'
            floor_plan_id: '14641'
            unit_number: E13
            area: 700
        view_image:
          description: >-
            The primary view image of the unit. Must be a .gif, .jpg, .jpeg, or
            .png file.
          type: string
          format: binary
        secondary_view_image:
          description: >-
            The secondary view image of the unit. Must be a .gif, .jpg, .jpeg,
            or .png file.
          type: string
          format: binary
      required:
        - data
    AssetsunitsUpdateMultifamilyUnitRequest:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit belongs to.
          type: string
          format: id
          maxLength: 255
        building_id:
          description: The building the unit is in.
          type: string
          format: id
          maxLength: 255
        floor_id:
          description: The floor the unit is on.
          type: string
          format: id
          maxLength: 255
        floor_plan_id:
          description: The floor plan of the unit.
          type: string
          format: id
          maxLength: 255
        unit_number:
          description: The unit number.
          type: string
          maxLength: 255
        area:
          description: The area of the unit represented as square footage or square meters.
          type: integer
          format: int32
          minimum: 0
        is_affordable_housing_unit:
          description: Determines if the unit is an affordable housing unit.
          type: boolean
          default: false
        view_image:
          description: Delete the primary view image of the unit.
          type: string
          enum:
            - delete
        secondary_view_image:
          description: Delete the secondary view image of the unit.
          type: string
          enum:
            - delete
      required:
        - id
        - asset_id
      example:
        id: 258670X
        asset_id: '1323'
        building_id: '8265'
        floor_id: '4730'
        floor_plan_id: '14641'
        map_id: '258670'
        unit_number: E13
        area: 700
        is_affordable_housing_unit: true
    AssetsunitsUpdateMultifamilyUnitRequest1:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the unit belongs to.
              type: string
              format: id
              maxLength: 255
            building_id:
              description: The building the unit is in.
              type: string
              format: id
              maxLength: 255
            floor_id:
              description: The floor the unit is on.
              type: string
              format: id
              maxLength: 255
            floor_plan_id:
              description: The floor plan of the unit.
              type: string
              format: id
              maxLength: 255
            unit_number:
              description: The unit number.
              type: string
              maxLength: 255
            area:
              description: >-
                The area of the unit represented as square footage or square
                meters.
              type: integer
              format: int32
              minimum: 0
            is_affordable_housing_unit:
              description: Whether a unit is an affordable housing unit.
              type: boolean
          required:
            - id
            - asset_id
          example:
            id: 258670X
            asset_id: '1323'
            building_id: '8265'
            floor_id: '4730'
            floor_plan_id: '14641'
            map_id: '258670'
            unit_number: E13
            area: 700
            is_affordable_housing_unit: true
        view_image:
          description: >-
            The primary view image of the unit. Must be a .gif, .jpg, .jpeg, or
            .png file.
          type: string
          format: binary
        secondary_view_image:
          description: >-
            The secondary view image of the unit. Must be a .gif, .jpg, .jpeg,
            or .png file.
          type: string
          format: binary
      required:
        - data
    AssetsbuildingsCreateBuildingRequest:
      type: object
      properties:
        asset_id:
          description: The asset the building belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        label:
          description: If not provided, the building's name will be used.
          type: string
          maxLength: 255
      required:
        - asset_id
        - name
      example:
        asset_id: '1323'
        name: W
        label: W
    AssetsbuildingsUpdateBuildingRequest:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the building belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        label:
          type: string
          maxLength: 255
      required:
        - id
        - asset_id
        - name
      example:
        id: 8267X
        asset_id: '1323'
        name: W
        label: W
    AssetsfiltersCreateNewFilterRequest:
      oneOf:
        - title: Custom Filter
          type: object
          properties:
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - asset_id
            - name
            - type
            - label
          example:
            asset_id: '1323'
            name: Bathrooms
            label: Bathrooms
            type: custom
            is_enabled: true
        - title: Floor Plan
          type: object
          properties:
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - id
            - asset_id
            - name
            - label
            - type
          example:
            asset_id: '1323'
            name: Floor Plan
            label: Floor Plan
            type: floor_plan
            is_enabled: true
        - title: Range Filter
          type: object
          properties:
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
            range_type:
              description: >
                - `unit_area`: Filter all units based on the min, max and floor
                plan area of a unit.

                - `unit_move_in`: Filter all units based on the min, max and
                move in date of a unit.

                - `unit_price`: Filter all units based on the min, max and price
                of a unit.
              type: string
              enum:
                - unit_area
                - unit_move_in
                - unit_price
          required:
            - asset_id
            - name
            - label
            - type
            - range_type
            - options
          example:
            asset_id: '1323'
            name: Unit Area
            label: Unit Area
            type: range
            is_enabled: true
            range_type: unit_area
        - title: Floor Filter
          type: object
          properties:
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - asset_id
            - name
            - label
            - type
          example:
            asset_id: '1323'
            name: Floor
            label: Floor
            type: floor
            is_enabled: true
    AssetsfiltersUpdateFilterRequest:
      oneOf:
        - title: Custom Filter
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - id
            - type
            - asset_id
          example:
            id: 1X
            asset_id: '1323'
            name: Bathrooms
            label: Bathrooms
            type: custom
            is_enabled: true
        - title: Floor Plan
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - id
            - asset_id
            - type
          example:
            id: 1X
            asset_id: '1323'
            name: Floor Plan
            label: Floor Plan
            type: floor_plan
            is_enabled: true
        - title: Range Filter
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
            range_type:
              description: >
                - `unit_area`: Filter all units based on the min, max and floor
                plan area of a unit.

                - `unit_move_in`: Filter all units based on the min, max and
                move in date of a unit.

                - `unit_price`: Filter all units based on the min, max and price
                of a unit.
              type: string
              enum:
                - unit_area
                - unit_move_in
                - unit_price
          required:
            - id
            - asset_id
            - type
            - range_type
          example:
            id: 1X
            asset_id: '1323'
            name: Unit Area
            label: Unit Area
            type: range
            is_enabled: true
            range_type: unit_area
        - title: Floor Filter
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterType'
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - id
            - asset_id
            - type
          example:
            id: 1X
            asset_id: '1323'
            name: Floor
            label: Floor
            type: floor
            is_enabled: true
    AssetsfiltersCreateOptionRequest:
      oneOf:
        - title: Custom Option
          type: object
          properties:
            asset_id:
              description: The asset the option belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The filter the option belongs to.
              type: string
              format: id
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterOptionType'
            label:
              type: string
              maxLength: 255
            sort:
              description: The sort order of the option.
              type: integer
              format: int32
              maxLength: 255
            is_enabled:
              description: Whether or not the option is enabled.
              type: boolean
              default: true
          required:
            - asset_id
            - filter_id
            - type
            - label
          example:
            asset_id: '1323'
            filter_id: '1'
            type: custom
            label: 0 - 3
            sort: 0
            is_enabled: true
        - title: Floor Plan
          type: object
          properties:
            asset_id:
              description: The asset the option belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The filter the option belongs to.
              type: string
              format: id
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterOptionType'
            floor_plan_id:
              description: The floor plan the option is assigned to.
              type: string
              format: id
              maxLength: 255
            label:
              type: string
              maxLength: 255
            sort:
              description: The sort order of the option.
              type: integer
              format: int32
              maxLength: 255
            is_enabled:
              description: Whether or not the option is enabled.
              type: boolean
              default: true
          required:
            - asset_id
            - filter_id
            - floor_plan_id
            - type
            - label
          example:
            asset_id: '1323'
            filter_id: '1'
            floor_plan_id: '432'
            type: floor_plan
            label: Floor Plan
            sort: 1
            is_enabled: true
        - title: Range Option
          type: object
          properties:
            asset_id:
              description: The asset the option belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The asset the option belongs to.
              type: string
              format: id
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterOptionType'
            label:
              type: string
              maxLength: 255
            min:
              description: The minium value of the range option.
              type: integer
              format: int32
            max:
              description: The maximum value of the range option.
              type: integer
              format: int32
            sort:
              description: The sort order of the option.
              type: integer
              format: int32
              maxLength: 255
            is_enabled:
              description: Whether or not the option is enabled.
              type: boolean
              default: true
          required:
            - asset_id
            - filter_id
            - type
            - label
            - min
            - max
          example:
            asset_id: '1323'
            filter_id: '1'
            type: range
            min: 0
            max: 1200
            label: 0 - 1200 sqft
            is_enabled: true
            sort: 0
        - title: Floor Option
          type: object
          properties:
            asset_id:
              description: The asset the option belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The asset the option belongs to.
              type: string
              format: id
              maxLength: 255
            floor_id:
              description: The floor plan the option references.
              type: string
              format: id
              maxLength: 255
            type:
              $ref: '#/components/schemas/FilterOptionType'
            label:
              type: string
              maxLength: 255
            short_label:
              type: string
              maxLength: 255
            is_enabled:
              description: Whether or not the option is enabled.
              type: boolean
              default: true
          required:
            - asset_id
            - filter_id
            - floor_id
            - type
            - label
          example:
            asset_id: '1323'
            floor_id: '3'
            filter_id: '1'
            type: floor
            label: Parking
            short_label: P
            sort: 0
            is_enabled: true
    AssetsfiltersUpdateOptionRequest:
      oneOf:
        - title: Custom Option
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The filter the option belongs to.
              type: string
              format: id
              maxLength: 255
            type:
              description: The type must match the filter type.
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            sort:
              description: The sort order of the option.
              type: integer
              format: int32
              maxLength: 255
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - id
            - type
            - asset_id
            - filter_id
          example:
            id: 8267X
            asset_id: '1323'
            filter_id: '1'
            type: custom
            label: 0 - 3
            sort: 0
            is_enabled: true
        - title: Floor Plan Option
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The filter the option belongs to.
              type: string
              format: id
              maxLength: 255
            floor_plan_id:
              description: The floor plan the option is assigned to.
              type: string
              format: id
              maxLength: 255
            type:
              description: The type must match the filter type.
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            sort:
              description: The sort order of the option.
              type: integer
              format: int32
              maxLength: 255
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - id
            - type
            - asset_id
            - filter_id
            - floor_plan_id
          example:
            id: '4554'
            asset_id: '1323'
            filter_id: '1'
            floor_plan_id: '432'
            type: floor_plan
            label: Floor Plan
            sort: 0
            is_enabled: true
        - title: Range Option
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the filter belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The filter the option belongs to.
              type: string
              format: id
              maxLength: 255
            type:
              description: The type must match the filter type.
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            min:
              description: The minium value of the range option.
              type: integer
              format: int32
            max:
              description: The maximum value of the range option.
              type: integer
              format: int32
            sort:
              description: The sort order of the option.
              type: integer
              format: int32
            is_enabled:
              description: Whether or not the filter is enabled.
              type: boolean
              default: true
          required:
            - id
            - type
            - asset_id
            - filter_id
          example:
            id: 4554X
            asset_id: '1323'
            filter_id: '1'
            type: range
            min: 0
            max: 1200
            label: Unit Area
            sort: 0
            is_enabled: true
        - title: Floor Option
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the option belongs to.
              type: string
              format: id
              maxLength: 255
            filter_id:
              description: The filter the option belongs to.
              type: string
              format: id
              maxLength: 255
            floor_id:
              description: The floor the option references.
              type: string
              format: id
              maxLength: 255
            type:
              description: The type must match the filter type.
              type: string
              maxLength: 255
            label:
              type: string
              maxLength: 255
            short_label:
              type: string
              maxLength: 255
            sort:
              description: The sort order of the option.
              type: integer
              format: int32
            is_enabled:
              description: Whether or not the option is enabled.
              type: boolean
              default: true
          required:
            - id
            - type
            - asset_id
            - floor_id
            - filter_id
          example:
            id: 4554X
            asset_id: '1323'
            filter_id: '1'
            floor_id: '1'
            type: floor
            label: Floor
            sort: 0
            is_enabled: true
    AssetsfiltersAssignUnitsToOptionRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              asset_id:
                description: The asset the option belongs to.
                type: string
                format: id
                maxLength: 255
              filter_id:
                description: The filter the option belongs to.
                type: string
                format: id
                maxLength: 255
              option_id:
                type: string
                format: id
                maxLength: 255
              unit_id:
                description: The unit the option belongs to.
                type: string
                maxLength: 255
            required:
              - asset_id
              - option_id
              - unit_id
              - filter_id
          example:
            - asset_id: '1'
              filter_id: '1000'
              option_id: '7'
              unit_id: '258670'
            - asset_id: '1'
              filter_id: '1001'
              option_id: '7'
              unit_id: '258671'
    AssetsfloorsCreateFloorMultifamilyRequest:
      type: object
      properties:
        asset_id:
          description: The asset the floor belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        filter_label:
          description: The default filter label for the floor.
          type: string
          maxLength: 255
        filter_short_label:
          description: The default short filter label for the floor.
          type: string
          maxLength: 4
        sort:
          description: The sort order of the floor.
          type: integer
          format: int32
      required:
        - id
        - asset_id
        - name
        - filter_label
        - filter_short_label
        - sort
      example:
        asset_id: '1323'
        name: '1'
        filter_label: Floor 1
        filter_short_label: '1'
        sort: 2
    AssetsfloorsUpdateFloorMultifamilyRequest:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the floor belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        filter_label:
          description: The default filter label for the floor.
          type: string
          maxLength: 255
        filter_short_label:
          description: The default short filter label for the floor.
          type: string
          maxLength: 4
        sort:
          description: The sort order of the floor.
          type: integer
          format: int32
      required:
        - id
        - asset_id
      example:
        id: 4730X
        asset_id: '1323'
        name: '1'
        filter_label: Floor 1
        filter_short_label: '1'
        sort: 2
    AssetsfloorplansCreateMultifamilyFloorPlanRequest:
      type: object
      properties:
        asset_id:
          description: The asset the floor plan belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        bedroom_count:
          description: The number of bedrooms.
          type: integer
          format: int32
          minimum: 0
        bathroom_count:
          description: >-
            The number of bathrooms. Fractional values represent partial baths
            (e.g. `1.5` is 1 1/2 baths).
          type: number
          format: float
          minimum: 0
        filter_label:
          type: string
          maxLength: 255
      required:
        - asset_id
        - name
        - bedroom_count
        - bathroom_count
        - filter_label
      example:
        asset_id: '1323'
        name: 1 Bed 1 Bath
        bedroom_count: 1
        bathroom_count: 1
        filter_label: 1 Bed 1 Bath
    AssetsfloorplansCreateMultifamilyFloorPlanRequest1:
      type: object
      properties:
        data:
          type: object
          properties:
            asset_id:
              description: The asset the floor plan belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            bedroom_count:
              description: The number of bedrooms.
              type: integer
              format: int32
              minimum: 0
            bathroom_count:
              description: >-
                The number of bathrooms. Fractional values represent partial
                baths (e.g. `1.5` is 1 1/2 baths).
              type: number
              format: float
              minimum: 0
            filter_label:
              type: string
              maxLength: 255
          required:
            - asset_id
            - name
            - bedroom_count
            - bathroom_count
            - filter_label
          example:
            asset_id: '1323'
            name: 1 Bed 1 Bath
            bedroom_count: 1
            bathroom_count: 1
            filter_label: 1 Bed 1 Bath
        image:
          description: >-
            The primary image of the floor plan. Must be a .gif, .jpg, .jpeg, or
            .png file.
          type: string
          format: binary
        secondary_image:
          description: >-
            The secondary image of floor plan. Must be a .gif, .jpg, .jpeg, or
            .png file.
          type: string
          format: binary
      required:
        - data
    AssetsfloorplansUpdateFloorPlanRequest:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the floor plan belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        bedroom_count:
          description: The number of bedrooms.
          type: integer
          format: int32
          minimum: 0
        bathroom_count:
          description: >-
            The number of bathrooms. Fractional values represent partial baths
            (e.g. `1.5` is 1 1/2 baths).
          type: number
          format: float
          minimum: 0
        image:
          description: Delete the primary image of the floor plan.
          type: string
          enum:
            - delete
        secondary_image:
          description: Delete the secondary image of the floor plan.
          type: string
          enum:
            - delete
        filter_label:
          type: string
          maxLength: 65
      required:
        - id
        - asset_id
      example:
        id: 14641X
        asset_id: '1323'
        name: 1 Bed 1 Bath
        bedroom_count: 1
        bathroom_count: 1
        filter_label: 1 Bed 1 Bath
    AssetsfloorplansUpdateFloorPlanRequest1:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the floor plan belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            bedroom_count:
              description: The number of bedrooms.
              type: integer
              format: int32
              minimum: 0
            bathroom_count:
              description: >-
                The number of bathrooms. Fractional values represent partial
                baths (e.g. `1.5` is 1 1/2 baths).
              type: number
              format: float
              minimum: 0
            filter_label:
              type: string
              maxLength: 65
          required:
            - id
            - asset_id
          example:
            asset_id: '1323'
            name: 1 Bed 1 Bath
            bedroom_count: 1
            bathroom_count: 1
            filter_label: 1 Bed 1 Bath
        image:
          description: >-
            The primary image of the floor plan. Must be a .gif, .jpg, .jpeg, or
            .png file.
          type: string
          format: binary
        secondary_image:
          description: >-
            The secondary image of the floor plan. Must be a .gif, .jpg, .jpeg,
            or .png file.
          type: string
          format: binary
      required:
        - data
    AssetsoutboundlinksCreateAssetOutboundLinkRequest:
      type: object
      properties:
        asset_id:
          description: The asset the outbound link belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        template:
          description: Outbound link template.
          type: string
        label:
          description: The text label on the outbound link.
          type: string
          maxLength: 95
        icon_type:
          $ref: '#/components/schemas/AssetOutboundLinkIconType'
        open_new_window:
          description: >-
            Determines if the outbound link will open in a new browser window or
            not.
          type: boolean
      required:
        - asset_id
        - name
        - label
        - template
        - open_new_window
      example:
        asset_id: '1323'
        name: Contact
        template: mailto:nobody@example.com
        label: Contact Us
        icon_type: email
        open_new_window: true
    AssetsoutboundlinksUpdateLinkRequest:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the outbound link belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        template:
          description: Outbound link template.
          type: string
        label:
          description: The text label on the outbound link.
          type: string
          maxLength: 95
        icon_type:
          $ref: '#/components/schemas/AssetOutboundLinkIconType'
        open_new_window:
          description: >-
            Determines if the outbound link will open in a new browser window or
            not.
          type: boolean
      required:
        - id
        - asset_id
      example:
        id: 6011X
        asset_id: '1323'
        name: Contact
        template: mailto:nobody@example.com
        label: Contact Us
        icon_type: email
        open_new_window: true
    AssetsunitsoutboundlinksCreateUnitOutboundLinkRequest:
      oneOf:
        - title: IFrame API
          type: object
          properties:
            asset_id:
              description: The asset the outbound link belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              description: The text label on the outbound link.
              type: string
              maxLength: 95
              nullable: true
            type:
              $ref: '#/components/schemas/UnitOutboundLinkType'
            icon_type:
              $ref: '#/components/schemas/UnitOutboundLinkIconType'
            event_key:
              description: >-
                A value used in all IFrame event names for the outbound link.
                For example when `event_key` is `foo`, the event name for when
                the user clicks on the outbound link will be
                `outbound.foo.click`.
              type: string
              maxLength: 63
              pattern: '[a-z0-9-]'
          required:
            - asset_id
            - type
            - name
            - event_key
          example:
            asset_id: '1323'
            name: Chat
            label: Chat With Us
            type: iframe_api
            icon_type: person
            event_key: chatbot
        - title: URLs Per Unit
          type: object
          properties:
            asset_id:
              description: The asset the outbound link belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              description: The text label on the outbound link.
              type: string
              maxLength: 95
              nullable: true
            type:
              $ref: '#/components/schemas/UnitOutboundLinkType'
            icon_type:
              $ref: '#/components/schemas/UnitOutboundLinkIconType'
            open_in_new_window:
              description: >-
                Determines if the outbound link will open in a new browser
                window or not.
              type: boolean
            show_icon_in_list:
              description: >
                Determines if the icon will be displayed in the unit list or
                not.


                This field is only considered when `icon_type` is either

                `360_tour` ,`photo` ,`photo_and_tour` ,`video_camera`
                ,`video_play` or `virtual_tour`.
              type: boolean
          required:
            - asset_id
            - type
            - name
            - open_in_new_window
          example:
            asset_id: '1323'
            name: 360 Tour
            label: View 360 Tour
            type: urls_per_unit
            icon_type: 360_tour
            open_in_new_window: true
            show_icon_in_list: true
        - title: URL Template
          type: object
          properties:
            asset_id:
              description: The asset the outbound link belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              description: The text label on the outbound link.
              type: string
              maxLength: 95
              nullable: true
            type:
              $ref: '#/components/schemas/UnitOutboundLinkType'
            icon_type:
              $ref: '#/components/schemas/UnitOutboundLinkIconType'
            open_in_new_window:
              description: >-
                Determines if the outbound link will open in a new browser
                window or not.
              type: boolean
            template:
              description: The URL template.
              maxLength: 2047
              type: string
          required:
            - asset_id
            - type
            - name
            - open_in_new_window
            - template
          example:
            asset_id: '1323'
            name: Apply
            label: Apply Now
            type: url_template
            icon_type: email
            open_in_new_window: true
            template: >
              {{leasing_fields.apply_url}}&MoveInDate={{move_in_date|date('m/d/Y')}}&sLeaseTerm={{lease_term}}
    AssetsunitsoutboundlinksUpdateUnitOutboundLinkRequest:
      oneOf:
        - title: IFrame API
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the outbound link belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              description: The text label on the outbound link.
              type: string
              maxLength: 95
              nullable: true
            type:
              $ref: '#/components/schemas/UnitOutboundLinkType'
            icon_type:
              $ref: '#/components/schemas/UnitOutboundLinkIconType'
            event_key:
              description: >-
                A value used in all IFrame event names for the outbound link.
                For example when `event_key` is `foo`, the event name for when
                the user clicks on the outbound link will be
                `outbound.foo.click`.
              type: string
              maxLength: 63
              pattern: '[a-z0-9-]'
          required:
            - id
            - asset_id
            - type
          example:
            id: 6011X
            asset_id: '1323'
            name: Chat
            label: Chat With Us
            type: iframe_api
            icon_type: person
            event_key: chatbot
        - title: URLs Per Unit
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the outbound link belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              description: The text label on the outbound link.
              type: string
              maxLength: 95
              nullable: true
            type:
              $ref: '#/components/schemas/UnitOutboundLinkType'
            icon_type:
              $ref: '#/components/schemas/UnitOutboundLinkIconType'
            open_in_new_window:
              description: >-
                Determines if the outbound link will open in a new browser
                window or not.
              type: boolean
            show_icon_in_list:
              description: >
                Determines if the icon will be displayed in the unit list or
                not.


                This field is only considered when `icon_type` is either

                `360_tour` ,`photo` ,`photo_and_tour` ,`video_camera`
                ,`video_play` or `virtual_tour`.
              type: boolean
          required:
            - id
            - asset_id
            - type
          example:
            id: 6011X
            asset_id: '1323'
            name: 360 Tour
            label: View 360 Tour
            type: urls_per_unit
            icon_type: 360_tour
            open_in_new_window: true
            show_icon_in_list: true
        - title: URL Template
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the outbound link belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            label:
              description: The text label on the outbound link.
              type: string
              maxLength: 95
              nullable: true
            type:
              $ref: '#/components/schemas/UnitOutboundLinkType'
            icon_type:
              $ref: '#/components/schemas/UnitOutboundLinkIconType'
            open_in_new_window:
              description: >-
                Determines if the outbound link will open in a new browser
                window or not.
              type: boolean
            template:
              description: The URL template.
              maxLength: 2047
              type: string
          required:
            - id
            - asset_id
            - type
          example:
            id: 6011X
            asset_id: '1323'
            name: Apply
            label: Apply Now
            type: url_template
            icon_type: email
            open_in_new_window: true
            template: >
              {{leasing_fields.apply_url}}&MoveInDate={{move_in_date|date('m/d/Y')}}&sLeaseTerm={{lease_term}}
    AssetsunitsoutboundlinksUpdateUrlsRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              unit_id:
                type: string
                format: id
                maxLength: 255
              url:
                description: A fully qualified URL assigned to the unit.
                type: string
                nullable: true
            required:
              - unit_id
              - url
          example:
            - unit_id: '258670'
              url: https://example.com/unit/258670
            - unit_id: '258671'
              url: https://example.com/unit/258671
    AssetsunitsdescriptionsCreateUnitDescriptionGroupRequest:
      type: object
      properties:
        asset_id:
          description: The asset the unit description group belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
      required:
        - asset_id
        - name
    AssetsunitsdescriptionsUpdateGroupRequest:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit description group belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
      required:
        - id
        - asset_id
        - name
      example:
        id: 7X
        asset_id: '1323'
        name: Amenities
    AssetsunitsdescriptionsCreateUnitDescriptionsRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              group_id:
                description: The unit description group the description belongs to.
                type: string
                format: id
                maxLength: 255
              name:
                type: string
                maxLength: 255
              label:
                description: The tab label displayed in the application.
                type: string
                maxLength: 15
              body:
                description: >-
                  The text content displayed in the application, which is
                  expected to be plain text or [basic syntax
                  Markdown](https://www.markdownguide.org/basic-syntax/).
                type: string
                maxLength: 2000
              is_enabled:
                description: >-
                  Determines whether or not the description should be displayed
                  in the application.
                type: boolean
            required:
              - group_id
              - name
              - label
              - body
              - is_enabled
          example:
            - group_id: '7'
              name: Amenity 1
              label: Amenities
              body: |
                * Quartz countertops
                * Mountain views
                * Stainless steel appliances
              is_enabled: true
            - group_id: '7'
              name: Amenity 2
              label: Amenities
              body: |
                * Granite countertops
                * Ocean views
                * Black steel appliances
              is_enabled: true
    AssetsunitsdescriptionsUpdateDescriptionsRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: id
                maxLength: 255
              group_id:
                description: The unit description group the description belongs to.
                type: string
                format: id
                maxLength: 255
              name:
                type: string
                maxLength: 255
              label:
                description: The tab label displayed in the application.
                type: string
                maxLength: 15
              body:
                description: >-
                  The text content displayed in the application, which is
                  expected to be plain text or [basic syntax
                  Markdown](https://www.markdownguide.org/basic-syntax/).
                type: string
                maxLength: 2000
              is_enabled:
                description: >-
                  Determines whether or not the description should be displayed
                  in the application.
                type: boolean
            required:
              - id
              - group_id
          example:
            - id: 1000X
              group_id: '7'
              name: Amenity 1
              label: Amenities
              body: |
                * Quartz countertops
                * Mountain views
                * Stainless steel appliances
              is_enabled: true
            - id: '1001'
              group_id: '7'
              name: Amenity 2
              label: Amenities
              body: |
                * Granite countertops
                * Ocean views
                * Black steel appliances
              is_enabled: true
    AssetsunitsdescriptionsAssignUnitsToDescriptionGroupsRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              group_id:
                description: The unit description group the relation belongs to.
                type: string
                format: id
                maxLength: 255
              unit_id:
                type: string
                format: id
                maxLength: 255
              description_id:
                description: The description the units are assigned to.
                type: string
                maxLength: 255
            required:
              - group_id
              - unit_id
              - description_id
          example:
            - group_id: '7'
              unit_id: '258670'
              description_id: '1000'
            - group_id: '7'
              unit_id: '258671'
              description_id: '1001'
    AssetsmapsCreateUnitMapRequest:
      type: object
      properties:
        data:
          type: object
          properties:
            tags:
              description: The tags assigned to the unit map.
              type: array
              maxItems: 3
              maxLength: 255
              pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
              items:
                type: string
            asset_id:
              description: The asset the unit map belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            style:
              description: |
                The defined style of the unit map.

                This field is required when `file` or `source` is provided.
              type: string
              enum:
                - a
                - a.1
                - a.2
                - b
                - c
                - d
                - e
                - f.1
                - f.2
                - f.3
                - g.1
                - g.2
                - h
                - x
          required:
            - asset_id
            - name
            - style
          example:
            id: 575X
            asset_id: '1323'
            name: The Lofts at New Main
            style: b
        file:
          description: |
            The unit map file. Must be a .umap file.
          type: string
          format: binary
        source:
          description: |
            The unit map source file. Must be either an .svg, .ai, or .pdf
            file.
          type: string
          format: binary
      required:
        - data
        - source
        - file
    AssetsmapsUpdateUnitMapRequest:
      type: object
      properties:
        tags:
          description: The tags assigned to the unit map.
          type: array
          maxItems: 3
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          items:
            type: string
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit map belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        is_dimension_locked:
          type: boolean
          default: false
        style:
          description: The defined style of the unit map.
          type: string
          enum:
            - a
            - a.1
            - a.2
            - b
            - c
            - d
            - e
            - f.1
            - f.2
            - f.3
            - g.1
            - g.2
            - h
            - x
      required:
        - id
        - asset_id
      example:
        tags:
          - ils
          - mls
        id: 575X
        asset_id: '1323'
        name: The Lofts at New Main
        style: b
    AssetsmapsUpdateUnitMapRequest1:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
              format: id
              maxLength: 255
            asset_id:
              description: The asset the unit map belongs to.
              type: string
              format: id
              maxLength: 255
            name:
              type: string
              maxLength: 255
            style:
              description: |
                The defined style of the unit map.

                This field is required when `file` or `source` is provided.
              type: string
              enum:
                - a
                - a.1
                - a.2
                - b
                - c
                - d
                - e
                - f.1
                - f.2
                - f.3
                - g.1
                - g.2
                - h
                - x
          required:
            - id
            - asset_id
          example:
            tags:
              - ils
              - mls
            id: 575X
            asset_id: '1323'
            name: The Lofts at New Main
            style: b
        file:
          description: |
            The unit map file. Must be a .umap file.

            This field is required when `source` is provided.
          type: string
          format: binary
        source:
          description: |
            The unit map source file. Must be either an .svg, .ai, or .pdf
            file.

            This field is required when `file` is provided.
          type: string
          format: binary
      required:
        - data
    AssetsreferencesCreateAssetReferenceRequest:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        asset_id:
          description: The asset the reference belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        key:
          description: |
            A string used across resources to indicate the third-party
            system the reference value is part of.

            The key cannot be used more than once per asset, which ensures
            only a single reference may exist per asset for each key.
          type: string
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          nullable: true
        value:
          description: The matched reference value to the asset.
          type: string
          maxLength: 255
      required:
        - asset_id
        - name
        - value
      example:
        asset_id: '4715'
        name: Google Places
        key: google-places
        value: ChIJuw4JzfOGbIcR1PPArQtuTcQ
    AssetsreferencesUpdateReferenceRequest:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the reference belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        key:
          description: |
            A string used across resources to indicate the third-party
            system the reference value is part of.

            The key cannot be used more than once per asset, which ensures
            only a single reference may exist per asset for each key.
          type: string
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          nullable: true
        value:
          description: The matched reference value to the asset.
          type: string
          maxLength: 255
      required:
        - id
        - asset_id
        - value
      example:
        description: null
        id: 2630X
        asset_id: '4715'
        name: Google Places
        key: google-places
        value: ChIJuw4JzfOGbIcR1PPArQtuTcQ
    AssetsunitsreferencesCreateUnitReferenceGroupRequest:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        asset_id:
          description: The asset the unit reference group belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        key:
          description: |
            A string used across resources to indicate the third-party
            system the references are part of.

            The key cannot be used more than once per asset, which ensures
            only a single reference group may exist per asset for each key.
          type: string
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          nullable: true
      required:
        - asset_id
        - name
    AssetsunitsreferencesUpdateUnitReferenceGroupRequest:
      type: object
      properties:
        description:
          type: string
          maxLength: 255
          nullable: true
        id:
          type: string
          format: id
          maxLength: 255
        asset_id:
          description: The asset the unit reference group belongs to.
          type: string
          format: id
          maxLength: 255
        name:
          type: string
          maxLength: 255
        key:
          description: |
            A string used across resources to indicate the third-party
            system the references are part of.

            The key cannot be used more than once per asset, which ensures
            only a single reference group may exist per asset for each key.
          type: string
          maxLength: 255
          pattern: ^[a-z]{1}[a-z0-9-]{1,254}$
          nullable: true
      required:
        - id
        - asset_id
      example:
        id: 2630X
        asset_id: '1323'
        name: Yardi Voyager
        key: yardi-voyager
    AssetsunitsreferencesUpdateUnitReferencesRequest:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              group_id:
                description: The group the reference belongs to.
                type: string
                format: id
                maxLength: 255
              unit_id:
                description: >-
                  The unit the reference belongs to. A unit can only have one
                  reference per group.
                type: string
                format: id
                maxLength: 255
              value:
                description: >-
                  The matched reference value to the unit. Must be unique
                  amongst the group when non-null.
                type: string
                maxLength: 255
                nullable: true
            required:
              - group_id
              - unit_id
              - value
          example:
            - group_id: '2630'
              unit_id: '258670'
              value: '123456'
            - group_id: '2630'
              unit_id: '258671'
              value: '123457'
    AssetspricingUpdatePricingUnitRequest:
      type: object
      properties:
        id:
          type: string
          format: id
          maxLength: 255
        provider_id:
          description: A third-party ID matched on the unit.
          type: string
          format: id
          maxLength: 255
          nullable: true
        status:
          description: The status value on the unit.
          type: string
          nullable: true
          maxLength: 255
        full_price:
          description: >-
            The full price of the unit. When this value is provided, the `price`
            attribute then represents a discounted price.
          type: integer
          minimum: 0
          nullable: true
        show_pricing:
          description: >-
            Determines whether prices are shown or hidden in the application for
            this unit.
          type: boolean
          nullable: false
        show_online_leasing:
          description: >-
            Determines whether online leasing UI is shown or hidden in the
            application for this unit.
          type: boolean
          nullable: false
        specials_description:
          type: string
          minLength: 512
          nullable: true
      required:
        - id
      example:
        id: 258722X
        provider_id: 40B
        status: pending
    AccountsListAccountsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    AccountsListAccounts401Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AccountsListAccounts403Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AccountsListAccounts404Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AccountsListAccounts429Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AccountsListAccounts500Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AccountsembedsListResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Embed'
    AccountsassetsListAllowedAssetsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    AccountsassetsAssignAssetsToAccountResponse:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AccountsassetsAssignAssetsToAccount422Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
        fields:
          description: The fields which failed validation.
          type: object
          additionalProperties:
            description: The error message or messages for the field.
            type: array
            items:
              type: string
    AccountsassetsUnassignAssetsResponse:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetsGetAllowedListResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    AssetsCreateAssetPermissionResponse:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetsUpdateAssetResponse:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetsunitsListUnitsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
    AssetsunitsDeleteUnitResponse:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetsbuildingsListBuildingsForAssetResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Building'
    AssetsfiltersListFiltersResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/FilterCustom'
              - $ref: '#/components/schemas/FilterFloor'
              - $ref: '#/components/schemas/FilterFloorPlan'
              - $ref: '#/components/schemas/FilterRange'
    AssetsfiltersCreateNewFilterResponse:
      oneOf:
        - $ref: '#/components/schemas/FilterCustomWithOptions'
        - $ref: '#/components/schemas/FilterFloorWithOptions'
        - $ref: '#/components/schemas/FilterFloorPlanWithOptions'
        - $ref: '#/components/schemas/FilterRangeWithOptions'
    AssetsfiltersGetSpecificFilterResponse:
      oneOf:
        - $ref: '#/components/schemas/FilterCustomWithOptions'
        - $ref: '#/components/schemas/FilterFloorWithOptions'
        - $ref: '#/components/schemas/FilterFloorPlanWithOptions'
        - $ref: '#/components/schemas/FilterRangeWithOptions'
    AssetsfiltersUpdateFilterResponse:
      oneOf:
        - $ref: '#/components/schemas/FilterCustomWithOptions'
        - $ref: '#/components/schemas/FilterFloorWithOptions'
        - $ref: '#/components/schemas/FilterFloorPlanWithOptions'
        - $ref: '#/components/schemas/FilterRangeWithOptions'
    AssetsfiltersListOptionsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Custom'
              - $ref: '#/components/schemas/Floor'
              - $ref: '#/components/schemas/FloorPlan'
              - $ref: '#/components/schemas/Range'
    AssetsfiltersCreateOptionResponse:
      oneOf:
        - $ref: '#/components/schemas/Custom'
        - $ref: '#/components/schemas/Floor'
        - $ref: '#/components/schemas/FloorPlan'
        - $ref: '#/components/schemas/Range'
    AssetsfiltersViewOptionResponse:
      oneOf:
        - $ref: '#/components/schemas/Custom'
        - $ref: '#/components/schemas/FloorPlan'
        - $ref: '#/components/schemas/Floor'
        - $ref: '#/components/schemas/Range'
    AssetsfiltersUpdateOptionResponse:
      oneOf:
        - $ref: '#/components/schemas/Custom'
        - $ref: '#/components/schemas/FloorPlan'
        - $ref: '#/components/schemas/Floor'
        - $ref: '#/components/schemas/Range'
    AssetsfiltersListUnitsForOptionResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitFilterCustomOptionRelation'
    AssetsfiltersAssignUnitsToOptionResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              asset_id:
                description: The asset the option belongs to.
                type: string
                format: id
                maxLength: 255
              filter_id:
                description: The filter the option belongs to.
                type: string
                format: id
                maxLength: 255
              unit_id:
                description: The unit the option belongs to.
                type: string
                format: id
                maxLength: 255
              option_id:
                type: string
                format: id
                maxLength: 255
          example:
            - asset_id: '1'
              filter_id: '1323'
              option_id: '7'
              unit_id: '258670'
            - asset_id: '1'
              filter_id: '1323'
              option_id: '8'
              unit_id: '258671'
    AssetsfiltersAssignUnitsToOption409Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetsfloorsGetListResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Floor-2'
    AssetsfloorplansListFloorPlansResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/FloorPlan-2'
    AssetsmarkerdescriptionsListMarkerDescriptionsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/MarkerDescription'
    AssetsgalleriesListGalleriesResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Gallery'
    AssetsoutboundlinksListOutboundLinksResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/AssetOutboundLink'
    AssetsunitsoutboundlinksListOutboundLinksResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/UnitOutboundLinkIframeApi'
              - $ref: '#/components/schemas/UnitOutboundLinkUrlsPerUnit'
              - $ref: '#/components/schemas/UnitOutboundLinkUrlTemplate'
    AssetsunitsoutboundlinksCreateUnitOutboundLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/UnitOutboundLinkIframeApi'
        - $ref: '#/components/schemas/UnitOutboundLinkUrlsPerUnit'
        - $ref: '#/components/schemas/UnitOutboundLinkUrlTemplate'
    AssetsunitsoutboundlinksViewSpecificLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/UnitOutboundLinkIframeApi'
        - $ref: '#/components/schemas/UnitOutboundLinkUrlsPerUnit'
        - $ref: '#/components/schemas/UnitOutboundLinkUrlTemplate'
    AssetsunitsoutboundlinksUpdateUnitOutboundLinkResponse:
      oneOf:
        - $ref: '#/components/schemas/UnitOutboundLinkIframeApi'
        - $ref: '#/components/schemas/UnitOutboundLinkUrlsPerUnit'
        - $ref: '#/components/schemas/UnitOutboundLinkUrlTemplate'
    AssetsunitsoutboundlinksListUnitOutboundLinkUrlsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitOutboundLinkUrl'
    AssetsunitsoutboundlinksListUnitOutboundLinkUrls409Response:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetsunitsoutboundlinksUpdateUrlsResponse:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetslandingpagesListLandingPagesResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/LandingPage'
    AssetsunitsdescriptionsListGroupsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitDescriptionGroup'
    AssetsunitsdescriptionsListUnitDescriptionGroupsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitDescription'
    AssetsunitsdescriptionsCreateUnitDescriptionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: id
                maxLength: 255
              asset_id:
                description: The asset the unit description belongs to.
                type: string
                format: id
                maxLength: 255
              group_id:
                description: The unit description group the description belongs to.
                type: string
                format: id
                maxLength: 255
              name:
                type: string
                maxLength: 255
              label:
                description: The tab label displayed in the application.
                type: string
                maxLength: 15
              body:
                description: >-
                  The text content displayed in the application, which is
                  expected to be plain text or [basic syntax
                  Markdown](https://www.markdownguide.org/basic-syntax/).
                type: string
                maxLength: 2000
              is_enabled:
                description: >-
                  Determines whether or not the description should be displayed
                  in the application.
                type: boolean
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
          example:
            - id: 1000X
              asset_id: '1323'
              group_id: '7'
              name: Amenity 1
              label: Amenities
              body: |
                * Quartz countertops
                * Mountain views
                * Stainless steel appliances
              is_enabled: true
              created_at: '2017-09-11T17:09:17+00:00'
              updated_at: '2019-01-02T22:01:09+00:00'
            - id: 1001X
              asset_id: '1323'
              group_id: '7'
              name: Amenity 2
              label: Amenities
              body: |
                * Granite countertops
                * Ocean views
                * Black steel appliances
              is_enabled: true
              created_at: '2017-09-11T17:09:17+00:00'
              updated_at: '2019-01-02T22:01:09+00:00'
    AssetsunitsdescriptionsUpdateDescriptionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: id
                maxLength: 255
              asset_id:
                description: The asset the unit description belongs to.
                type: string
                format: id
                maxLength: 255
              group_id:
                description: The unit description group the description belongs to.
                type: string
                format: id
                maxLength: 255
              name:
                type: string
                maxLength: 255
              label:
                description: The tab label displayed in the application.
                type: string
                maxLength: 15
              body:
                description: >-
                  The text content displayed in the application, which is
                  expected to be plain text or [basic syntax
                  Markdown](https://www.markdownguide.org/basic-syntax/).
                type: string
                maxLength: 2000
              is_enabled:
                description: >-
                  Determines whether or not the description should be displayed
                  in the application.
                type: boolean
              created_at:
                type: string
                format: date-time
              updated_at:
                type: string
                format: date-time
          example:
            - id: 1000X
              asset_id: '1323'
              group_id: '7'
              name: Amenity 1
              label: Amenities
              body: |
                * Quartz countertops
                * Mountain views
                * Stainless steel appliances
              is_enabled: true
              created_at: '2017-09-11T17:09:17+00:00'
              updated_at: '2019-01-02T22:01:09+00:00'
            - id: 1001X
              asset_id: '1323'
              group_id: '7'
              name: Amenity 2
              label: Amenities
              body: |
                * Granite countertops
                * Ocean views
                * Black steel appliances
              is_enabled: true
              created_at: '2017-09-11T17:09:17+00:00'
              updated_at: '2019-01-02T22:01:09+00:00'
    AssetsunitsdescriptionsListAssignedUnitsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitDescriptionRelation'
    AssetsunitsdescriptionsAssignUnitsToDescriptionGroupsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              asset_id:
                description: The asset the unit belongs to.
                type: string
                format: id
                maxLength: 255
              group_id:
                description: The unit description group the relation belongs to.
                type: string
                format: id
                maxLength: 255
              unit_id:
                type: string
                format: id
                maxLength: 255
              description_id:
                description: The description the units are assigned to.
                type: string
                maxLength: 255
          example:
            - asset_id: '1323'
              group_id: '7'
              unit_id: '258670'
              description_id: '1000'
            - asset_id: '1323'
              group_id: '7'
              unit_id: '258671'
              description_id: '1001'
    AssetsmapsListUnitMapsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitMap'
    AssetsmapsCreateUnitMapResponse:
      type: object
      properties:
        message:
          description: Unsupported media type
          type: string
    AssetsmapsListBackgroundsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitMapBackground'
    AssetsreferencesListReferencesForAssetResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/AssetReference'
    AssetsunitsreferencesListGroupsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitReferenceGroup'
    AssetsunitsreferencesCreateUnitReferenceGroupResponse:
      type: object
      properties:
        message:
          description: The error message.
          type: string
    AssetsunitsreferencesListUnitReferencesResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnitReference'
    AssetspricingListPricingProcessesResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PricingProcess'
    AssetspricingListPricingEntriesResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PricingEntry'
    AssetspricingListPricingUnitsResponse:
      type: object
      properties:
        paging:
          $ref: '#/components/schemas/Paging'
        data:
          type: array
          items:
            $ref: '#/components/schemas/PricingUnit'
x-tagGroups:
  - tags:
      - accounts
      - accounts/embeds
      - accounts/assets
    name: Accounts
  - tags:
      - assets
      - assets/units
      - assets/units/outbound-links
      - assets/outbound-links
      - assets/landing-pages
      - assets/units/descriptions
      - assets/filters
      - assets/floors
      - assets/floor-plans
      - assets/buildings
      - assets/marker-descriptions
      - assets/galleries
      - assets/maps
      - assets/caches
      - assets/references
      - assets/units/references
      - assets/pricing
    name: Assets
