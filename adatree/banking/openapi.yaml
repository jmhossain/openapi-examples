openapi: 3.0.1
info:
  title: Adatree ADR Platform Open Banking API
  description: >-
    Adatree's Accredited Data Recipient (ADR) Platform Open Banking API
    definition. API payloads conform to the Consumer Data Right Data Standard
    1.5.1.

    Payloads are sample payloads to represent the types of data to which the CDR
    regime gives access. Adatree's simplified API makes it easier for you to
    access the CDR ecosystem, while maintaining the high security standards
    implemented by the regime. It also keeps the data in the original, open
    source, CDR format to avoid lock-in to a proprietary format.
  version: 2.0.1
  contact:
    name: Adatree Pty Ltd
    url: https://adatree.com.au
    email: engineering@adatree.com.au
  x-konfig-ignore:
    potential-incorrect-type: true
servers:
  - url: https://cdr-insights-prod.api.adatree.com.au
tags:
  - name: Accounts
  - name: AccountTransactions
  - name: Payees
  - name: Customers
  - name: DataHolderDiscovery
  - name: AccountsBalances
  - name: AccountsBalance
  - name: AccountDirectDebits
  - name: AccountsDirectDebits
  - name: AccountPaymentsScheduled
  - name: PaymentsScheduled
  - name: User Info
paths:
  /adr/banking/arrangements/{cdrArrangementId}/accounts:
    get:
      tags:
        - Accounts
      summary: Get Accounts under cdr arrangement id
      operationId: Accounts_getCdrArrangementAccounts
      description: Obtain a list of accounts
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: A list of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountList'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/balances:
    get:
      tags:
        - AccountsBalances
      summary: Get Bulk Balances
      operationId: AccountsBalances_getFilteredBalances
      description: Obtain balances for multiple, filtered accounts
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamAccountIds'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: A list of account balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountsBalanceList'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          description: >-
            The request was well formed but was unable to be processed due to
            business logic specific to the request.  For this API a 422 response
            must be given if any of the account IDs provided are invalid for the
            consent context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorList_errors'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/balance:
    get:
      tags:
        - AccountsBalance
      summary: Get Account Balance
      operationId: AccountsBalance_obtainSingleAccountBalance
      description: Obtain the balance for a single specified account
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountsBalanceById'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: Get Account Detail
      operationId: Accounts_obtainDetail
      description: Obtain detailed information on a single account
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingAccountById'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/transactions:
    get:
      tags:
        - AccountTransactions
      summary: Get Transactions For Account
      operationId: AccountTransactions_getByAccountIdAndCdrArrangementId
      description: >-
        Obtain transactions for a specific account.

        Some general notes that apply to all end points that retrieve
        transactions:

        - Where multiple transactions are returned, transactions should be
        ordered according to effective date in descending order

        - As the date and time for a transaction can alter depending on status
        and transaction type two separate date/times are included in the
        payload. There are still some scenarios where neither of these time
        stamps is available. For the purpose of filtering and ordering it is
        expected that the data holder will use the effective date/time which
        will be defined as:
          - Posted date/time if available, then
          - Execution date/time if available, then
          - A reasonable date/time nominated by the data holder using internal data structures
        - For transaction amounts it should be assumed that a negative value
        indicates a reduction of the available balance on the account while a
        positive value indicates an increase in the available balance on the
        account

        - For aggregated transactions (ie. groups of sub transactions reported
        as a single entry for the account) only the aggregated information, with
        as much consistent information accross the subsidiary transactions as
        possible, is required to be shared
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountIdPreviouslyListed'
        - $ref: '#/components/parameters/ParamTransactionOldestTime'
        - $ref: '#/components/parameters/ParamTransactionNewestTime'
        - $ref: '#/components/parameters/ParamTransactionMinAmount'
        - $ref: '#/components/parameters/ParamTransactionMaxAmount'
        - $ref: '#/components/parameters/ParamTransactionText'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingTransactionList'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/transactions/{transactionId}:
    get:
      tags:
        - AccountTransactions
      summary: Get Transaction Detail
      operationId: AccountTransactions_obtainDetail
      description: Obtain detailed information on a transaction for a specific account
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestPathAccountIdPreviouslyListed'
        - description: >-
            ID of the transaction obtained from a previous call to one of the
            other transaction end points
          name: transactionId
          in: path
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: e27f7698-814f-467f-8c65-ca9d59832ffd
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingTransactionById'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/direct-debits:
    get:
      tags:
        - AccountDirectDebits
      summary: Get Direct Debits For Account
      operationId: AccountDirectDebits_obtainForAccount
      description: Obtain direct debit authorisations for a specific account
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - description: >-
            ID of the account to get direct debit authorisations for.  Must have
            previously been returned by one of the account list end points.
          name: accountId
          in: path
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseBankingDirectDebitAuthorisationList
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/direct-debits:
    get:
      tags:
        - AccountsDirectDebits
      summary: Get Bulk Direct Debits
      operationId: AccountsDirectDebits_getBulkDirectDebits
      description: Obtain direct debit authorisations for multiple, filtered accounts
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamAccountIds'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ResponseBankingDirectDebitAuthorisationList
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          description: >-
            The request was well formed but was unable to be processed due to
            business logic specific to the request.  For this API a 422 response
            must be given if any of the account IDs provided are invalid for the
            consent context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorList'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/accounts/{accountId}/payments/scheduled:
    get:
      tags:
        - AccountPaymentsScheduled
      summary: Get Scheduled Payments for Account
      operationId: AccountPaymentsScheduled_getScheduledPayments
      description: Obtain scheduled, outgoing payments for a specific account
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - description: >-
            ID of the account to get scheduled payments for. Must have
            previously been returned by one of the account list end points. The
            account specified is the source account for the payment
          name: accountId
          in: path
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingScheduledPaymentsList'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/payments/scheduled:
    get:
      tags:
        - PaymentsScheduled
      summary: Get Scheduled Payments Bulk
      operationId: PaymentsScheduled_bulkGet
      description: >-
        Obtain scheduled payments for multiple, filtered accounts that are the
        source of funds for the payments
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/ParamAccountIds'
        - $ref: '#/components/parameters/ParamProductCategory'
        - $ref: '#/components/parameters/ParamAccountOpenStatus'
        - $ref: '#/components/parameters/ParamAccountIsOwned'
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingScheduledPaymentsList'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '422':
          description: >-
            The request was well formed but was unable to be processed due to
            business logic specific to the request.  For this API a 422 response
            must be given if any of the account IDs provided are invalid for the
            consent context
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseErrorList'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/payees:
    get:
      tags:
        - Payees
      summary: Get Payees
      operationId: Payees_getList
      description: Obtain a list of pre-registered payees
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - description: >-
            Filter on the payee type field.  In addition to normal type field
            values, ALL can be specified to retrieve all payees.  If absent the
            assumed value is ALL
          name: type
          in: query
          schema:
            type: string
            default: ALL
            example: BILLER
            enum:
              - BILLER
              - DOMESTIC
              - INTERNATIONAL
              - ALL
        - $ref: '#/components/parameters/ParamPage'
        - $ref: '#/components/parameters/ParamPageSize'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingPayeeList'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/banking/arrangements/{cdrArrangementId}/payees/{payeeId}:
    get:
      tags:
        - Payees
      summary: Get Payee Detail
      operationId: Payees_getDetail
      description: >-
        Obtain detailed information on a single payee.


        Note that the payee sub-structure should be selected to represent the
        payment destination only rather than any known characteristics of the
        payment recipient
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - description: The ID used to locate the details of a particular payee
          name: payeeId
          in: path
          required: true
          schema:
            type: string
            x-cds-type: ASCIIString
            example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBankingPayeeById'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/common/arrangements/{cdrArrangementId}/userinfo:
    get:
      tags:
        - User Info
      summary: Get user info under cdr arrangement id
      operationId: UserInfo_getByArrangementId
      description: Obtain the user info exposed by the data holder's identify provider
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoByArrangementId'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '424':
          $ref: '#/components/responses/424FailedDependency'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/common/arrangements/{cdrArrangementId}/customer:
    get:
      tags:
        - Customers
      summary: Get Customer
      operationId: Customers_getCustomerInfo
      description: >-
        Obtain basic information on the customer that has authorised the current
        session
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCommonCustomer'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/common/arrangements/{cdrArrangementId}/customer/detail:
    get:
      tags:
        - Customers
      summary: Get Customer Detail
      operationId: Customers_obtainDetailedInfo
      description: >-
        Obtain detailed information on the authorised customer within the
        current session.
      parameters:
        - $ref: '#/components/parameters/RequestPathCdrArrangementId'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-auth-date'
        - $ref: '#/components/parameters/RequestHeader_x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/RequestHeader_x-cds-client-headers'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCommonCustomerDetail'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/discovery/status:
    get:
      tags:
        - DataHolderDiscovery
      summary: Get Status
      operationId: DataHolderDiscovery_getStatus
      description: Obtain a health check status for the implementation
      parameters:
        - $ref: '#/components/parameters/ParamDataHolderIds'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCommonDiscoveryStatus'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
  /adr/discovery/outages:
    get:
      tags:
        - DataHolderDiscovery
      summary: Get Outages
      operationId: DataHolderDiscovery_getOutages
      description: Obtain a list of scheduled outages for the implementation
      parameters:
        - $ref: '#/components/parameters/ParamDataHolderIds'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDiscoveryOutagesList'
        '400':
          $ref: '#/components/responses/400BadRequest'
        '401':
          $ref: '#/components/responses/401Unauthorised'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429RateLimited'
components:
  parameters:
    RequestPathCdrArrangementId:
      description: >-
        Used to identify the consent arrangement from which to identify the bank
        and consumer information required to fetch the data.
      name: cdrArrangementId
      in: path
      required: true
      schema:
        type: string
        example: 998621c8-1e1d-44ca-826e-754b910e5697
    RequestPathAccountId:
      description: A tokenised identifier for the account which is unique but not shareable
      name: accountId
      in: path
      required: true
      schema:
        type: string
        x-cds-type: ASCIIString
        example: d9e75179-104f-47cf-9d29-18284222bab0
      x-cds-type: ASCIIString
    RequestPathDataHolderBrandId:
      description: Used to identify the data holder from which to fetch the product data.
      name: dataHolderBrandId
      in: path
      required: true
      schema:
        type: string
        example: 55b3299a-3e50-48a2-a190-cca263ccaba5
    RequestPathAccountIdPreviouslyListed:
      description: >-
        ID of the account to get transactions for. Must have previously been
        returned by one of the account list end points.
      name: accountId
      in: path
      required: true
      schema:
        type: string
        x-cds-type: ASCIIString
        example: d9e75179-104f-47cf-9d29-18284222bab0
      x-cds-type: ASCIIString
    ParamAccountIds:
      description: Adatree's extension to support account ids for GET /accounts/balances
      name: accountIds
      in: query
      required: false
      schema:
        type: array
        items:
          description: Array of specific accountIds to obtain authorisations for
          type: string
          example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
    ParamProductCategory:
      description: >-
        Used to filter results on the productCategory field applicable to
        accounts. Any one of the valid values for this field can be supplied. If
        absent then all accounts returned.
      name: product-category
      in: query
      required: false
      schema:
        type: string
        example: BUSINESS_LOANS
        enum:
          - BUSINESS_LOANS
          - CRED_AND_CHRG_CARDS
          - LEASES
          - MARGIN_LOANS
          - OVERDRAFTS
          - PERS_LOANS
          - REGULATED_TRUST_ACCOUNTS
          - RESIDENTIAL_MORTGAGES
          - TERM_DEPOSITS
          - TRADE_FINANCE
          - TRAVEL_CARDS
          - TRANS_AND_SAVINGS_ACCOUNTS
    ParamAccountIsOwned:
      description: >-
        Filters accounts based on whether they are owned by the authorised
        customer. True for owned accounts, false for unowned accounts and absent
        for all accounts
      name: is-owned
      in: query
      schema:
        type: boolean
        example: true
        x-cds-type: Boolean
    ParamDataHolderIds:
      description: >-
        Array of strings used to identify the data holder from which to fetch
        the product/outage/status data.
      name: data-holder-ids
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          example: 55b3299a-3e50-48a2-a190-cca263ccaba5
    ParamPage:
      description: Page of results to request (standard pagination)
      name: page
      in: query
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
        example: 1
        x-cds-type: PositiveInteger
    ParamPageSize:
      description: Page size to request. Default is 25 (standard pagination)
      name: page-size
      in: query
      schema:
        type: integer
        default: 25
        minimum: 1
        maximum: 1000
        example: 25
        x-cds-type: PositiveInteger
    ParamAccountOpenStatus:
      description: >-
        Used to filter results according to open/closed status. Values can be
        OPEN, CLOSED or ALL. If absent then ALL is assumed
      name: open-status
      in: query
      required: false
      schema:
        type: string
        example: OPEN
        default: ALL
        enum:
          - OPEN
          - CLOSED
          - ALL
    RequestHeader_x-v:
      description: >-
        Version of the API end point requested by the client. Must be set to a
        positive integer. The data holder should respond with the highest
        supported version between [x-min-v](https://raw.githubusercontent.com)
        and [x-v](https://raw.githubusercontent.com). If the value of
        [x-min-v](https://raw.githubusercontent.com) is equal to or higher than
        the value of [x-v](https://raw.githubusercontent.com) then the
        [x-min-v](https://raw.githubusercontent.com) header should be treated as
        absent. If all versions requested are not supported then the data holder
        must respond with a 406 Not Acceptable. See [HTTP
        Headers](https://raw.githubusercontent.com)
      name: x-v
      in: header
      required: true
      schema:
        type: string
    RequestHeader_x-min-v:
      description: >-
        Minimum version of the API end point requested by the client. Must be
        set to a positive integer if provided. The data holder should respond
        with the highest supported version between
        [x-min-v](https://raw.githubusercontent.com) and
        [x-v](https://raw.githubusercontent.com). If all versions requested are
        not supported then the data holder must respond with a 406 Not
        Acceptable.
      name: x-min-v
      in: header
      schema:
        type: string
    RequestHeader_x-fapi-interaction-id:
      description: >-
        An [RFC4122](https://tools.ietf.org/html/rfc4122) UUID used as a
        correlation id. If provided, the data holder must play back this value
        in the x-fapi-interaction-id response header. If not provided a
        [RFC4122] UUID value is required to be provided in the response header
        to track the interaction.
      name: x-fapi-interaction-id
      in: header
      schema:
        type: string
    RequestHeader_x-fapi-auth-date:
      description: >-
        The time when the customer last logged in to the data recipient.
        Required for all resource calls from a machine client. Format is
        "HTTP-date" as in section "7.1.1.1" of RFC7231, e.g., "Tue, 11 Sep 2012
        19:43:31 GMT"
      name: x-fapi-auth-date
      in: header
      schema:
        type: string
        example: Tue, 11 Sep 2012 19:43:31 GMT
    RequestHeader_x-fapi-customer-ip-address:
      description: >-
        The customer's original IP address if the customer is currently logged
        in to the data recipient. The presence of this header indicates that the
        API is being called in a customer present context. Not to be included
        for unauthenticated calls.
      name: x-fapi-customer-ip-address
      in: header
      schema:
        type: string
        example: 127.0.0.1
    RequestHeader_x-cds-client-headers:
      description: >-
        The customer's original standard http headers
        [Base64](https://raw.githubusercontent.com) encoded, including the
        original User Agent header, if the customer is currently logged in to
        the data recipient. Mandatory for customer present calls.  Not required
        for unattended or unauthenticated calls. Format of this field is unclear
        and might be defined in future as discussed in
        https://github.com/ConsumerDataStandardsAustralia/standards-maintenance/issues/104
      name: x-cds-client-headers
      in: header
      schema:
        type: string
        x-cds-type: Base64
      x-cds-type: Base64
    ParamTransactionNewestTime:
      description: >-
        Constrain the transaction history request to transactions with effective
        time at or before this date/time.  If absent defaults to today.  Format
        is aligned to DateTimeString common type
      name: newest-time
      in: query
      schema:
        type: string
        x-cds-type: DateTimeString
      x-cds-type: DateTimeString
    ParamTransactionOldestTime:
      description: >-
        Constrain the transaction history request to transactions with effective
        time at or after this date/time. If absent defaults to newest-time minus
        90 days.  Format is aligned to DateTimeString common type
      name: oldest-time
      in: query
      schema:
        type: string
        x-cds-type: DateTimeString
      x-cds-type: DateTimeString
    ParamTransactionMinAmount:
      description: >-
        Filter transactions to only transactions with amounts higher or equal to
        than this amount
      name: min-amount
      in: query
      schema:
        type: string
        x-cds-type: AmountString
      x-cds-type: AmountString
    ParamTransactionMaxAmount:
      description: >-
        Filter transactions to only transactions with amounts less than or equal
        to than this amount
      name: max-amount
      in: query
      schema:
        type: string
        example: '10.00'
        x-cds-type: AmountString
      x-cds-type: AmountString
    ParamTransactionText:
      description: >-
        Filter transactions to only transactions where this string value is
        found as a substring of either the reference or description fields.
        Format is arbitrary ASCII string. This parameter is optionally
        implemented by data holders. If it is not implemented then a response
        should be provided as normal without text filtering applied and an
        additional boolean field named isQueryParamUnsupported should be
        included in the meta object and set to true (whether the text parameter
        is supplied or not)
      name: text
      in: query
      schema:
        type: string
        example: milk
  responses:
    401Unauthorised:
      description: Unauthorised
    403Forbidden:
      description: Forbidden
    404NotFound:
      description: The specified resource was not found.
    400BadRequest:
      description: Request is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseErrorList'
    424FailedDependency:
      description: A downstream call to the ADH failed
    429RateLimited:
      description: Ratelimit reached
    GenericError:
      description: An error occurred.
      content:
        application/json:
          schema:
            type: string
            example: something went wrong
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserInfoByArrangementId:
      type: object
      required:
        - acr
        - cdrArrangementId
        - refreshTokenExpiresAt
        - sharingExpiresAt
        - sub
        - name
        - givenName
        - familyName
        - updatedAt
      properties:
        acr:
          description: >-
            Authentication Context Class Reference. Contain an ordinal LoA
            value.
          type: string
          example: urn:cds.au:cdr:2
          x-cds-type: ASCIIString
        cdrArrangementId:
          description: >-
            A unique string representing a consent arrangement between a Data
            Recipient Software Product and Data Holder for a given consumer.
          type: string
          example: 979444dc-b692-4974-a194-bde1fc0505ff
          x-cds-type: ASCIIString
        refreshTokenExpiresAt:
          description: >-
            Indicates the date-time at which the most recently provided refresh
            token will expire.
          type: number
          example: 1654669122
        sharingExpiresAt:
          description: >-
            Indicates the date-time at which the current sharing arrangement
            will expire.
          type: number
          example: 1657261122
        sub:
          description: >-
            Pairwise Pseudonymous Identifier (PPID) for the End-User at the Data
            Holder.
          type: string
          example: leVC9WDe0yOj31UyOoTr
          x-cds-type: ASCIIString
        name:
          description: End-User's full name in displayable form including all name parts.
          type: string
          example: Jane Doe
          x-cds-type: ASCIIString
        givenName:
          description: Given name(s) or first name(s) of the End-User.
          type: string
          example: Jane
          x-cds-type: ASCIIString
        familyName:
          description: Surname(s) or last name(s) of the End-User.
          type: string
          example: Doe
          x-cds-type: ASCIIString
        updatedAt:
          description: >-
            Time the End-User's information was last updated. Its value is a
            JSON number representing the number of seconds from
            1970-01-01T00:00:00Z to the UTC updatedAt time.
          type: number
          example: 1654153174
        email:
          description: >-
            End-User's preferred e-mail address. Its value MUST conform to the
            [RFC5322] addr-spec syntax. The Data Recipient MUST NOT rely upon
            this value being unique, as discussed in Section 5.7 of [OIDC]
          type: string
          example: janedoe@example.com
        emailVerified:
          description: >-
            True if the End-User's e-mail address has been verified; otherwise
            false. When this Claim Value is true, this means that the Data
            Holder took affirmative steps to ensure that this e-mail address was
            controlled by the End-User at the time the verification was
            performed. The means by which an e-mail address is verified is
            context-specific, and dependent upon the trust framework or
            contractual agreements within which the parties are operating.
          type: boolean
          example: true
          x-cds-type: Boolean
        phoneNumber:
          description: >-
            End-User's preferred telephone number. [E.164] is RECOMMENDED as the
            format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687
            2400. If the phone number contains an extension, it is RECOMMENDED
            that the extension be represented using the [RFC3966] extension
            syntax, for example, +1 (604) 555-1234;ext=5678.
          type: string
          example: '+61449555123'
          x-cds-type: String
        phoneNumberVerified:
          description: >-
            True if the End-User's phone number has been verified; otherwise
            false. When this Claim Value is true, this means that the Data
            Holder took affirmative steps to ensure that this phone number was
            controlled by the End-User at the time the verification was
            performed. The means by which a phone number is verified is context-
            specific, and dependent upon the trust framework or contractual
            agreements within which the parties are operating. When true, the
            phone_number Claim MUST be in [E.164] format and any extensions MUST
            be represented in [RFC3966] format.
          type: boolean
          example: true
          x-cds-type: Boolean
        address:
          $ref: '#/components/schemas/OidcAddress'
        meta:
          $ref: '#/components/schemas/Meta'
    OidcAddress:
      type: object
      properties:
        formatted:
          description: "The full mailing address, with multiple lines if necessary. Newlines can be represented either as a \r\n or as a \n."
          type: string
          example: 2067 Armbrester Drive Sydney NSW 2000 AU
          x-cds-type: String
        streetAddress:
          description: "The street address component, which may include house number, stree name, post office box, and other multi-line information. Newlines can be represented either as a \r\n or as a \n."
          type: string
          example: 2067 Armbrester Drive
          x-cds-type: String
        locality:
          description: City or locality component.
          type: string
          example: Sydney
          x-cds-type: String
        region:
          description: State, province, prefecture or region component.
          type: string
          example: NSW
          x-cds-type: String
        postalCode:
          description: Zip code or postal code component.
          type: string
          example: '2000'
          x-cds-type: String
        country:
          description: Country name component.
          type: string
          example: AU
          x-cds-type: String
    BankingProductFeature:
      type: object
      required:
        - featureType
      properties:
        featureType:
          description: The type of feature described
          type: string
          example: BONUS_REWARDS
          enum:
            - ADDITIONAL_CARDS
            - BALANCE_TRANSFERS
            - BILL_PAYMENT
            - BONUS_REWARDS
            - CARD_ACCESS
            - CASHBACK_OFFER
            - COMPLEMENTARY_PRODUCT_DISCOUNTS
            - DIGITAL_BANKING
            - DIGITAL_WALLET
            - DONATE_INTEREST
            - EXTRA_REPAYMENTS
            - FRAUD_PROTECTION
            - FREE_TXNS
            - FREE_TXNS_ALLOWANCE
            - GUARANTOR
            - INSURANCE
            - INSTALMENT_PLAN
            - INTEREST_FREE
            - INTEREST_FREE_TRANSFERS
            - LOYALTY_PROGRAM
            - NOTIFICATIONS
            - NPP_ENABLED
            - NPP_PAYID
            - OFFSET
            - OTHER
            - OVERDRAFT
            - REDRAW
            - RELATIONSHIP_MANAGEMENT
            - UNLIMITED_TXNS
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [featureType](https://raw.githubusercontent.com) specified. Whether
            mandatory or not is dependent on the value of the
            [featureType.](https://raw.githubusercontent.com)
          type: string
          example: free mobile device screen smash insurance
        additionalInfo:
          description: >-
            Display text providing more information on the feature. Mandatory if
            the [feature type](https://raw.githubusercontent.com) is set to
            OTHER
          type: string
          example: the best of a kind
        additionalInfoUri:
          description: Link to a web page with more information on this feature
          type: string
          example: https://productfeature.example.com.au
          x-cds-type: URIString
      x-conditional:
        - additionalValue
        - additionalInfo
    BankingProductFee:
      type: object
      required:
        - feeType
        - name
      properties:
        name:
          description: Name of the fee
          type: string
          example: account fee
        feeType:
          description: The type of fee
          type: string
          example: PERIODIC
          enum:
            - DEPOSIT
            - EVENT
            - EXIT
            - PAYMENT
            - PERIODIC
            - PURCHASE
            - TRANSACTION
            - UPFRONT
            - VARIABLE
            - WITHDRAWAL
        amount:
          description: >-
            The amount charged for the fee. One of amount, balanceRate,
            transactionRate and accruedRate is mandatory unless the *feeType*
            "VARIABLE" is supplied
          type: string
          x-cds-type: AmountString
          example: 4
        balanceRate:
          description: >-
            A fee rate calculated based on a proportion of the balance. One of
            amount, balanceRate, transactionRate and accruedRate is mandatory
            unless the *feeType* "VARIABLE" is supplied.
          type: string
          example: 3.99
          x-cds-type: RateString
        transactionRate:
          description: >-
            A fee rate calculated based on a proportion of a transaction. One of
            amount, balanceRate, transactionRate and accruedRate is mandatory
            unless the *feeType* "VARIABLE" is supplied
          type: string
          example: 0.02
          x-cds-type: RateString
        accruedRate:
          description: >-
            A fee rate calculated based on a proportion of the calculated
            interest accrued on the account. One of amount, balanceRate,
            transactionRate and accruedRate is mandatory unless the *feeType*
            "VARIABLE" is supplied
          type: string
          example: 0
          x-cds-type: RateString
        accrualFrequency:
          description: >-
            The indicative frequency with which the fee is calculated on the
            account. Only applies if balanceRate or accruedRate is also present.
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          x-cds-type: ExternalRef
          example: P1M
        currency:
          description: The currency the fee will be charged in. Assumes AUD if absent
          type: string
          example: AUD
          x-cds-type: CurrencyString
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [feeType](https://raw.githubusercontent.com) specified. Whether
            mandatory or not is dependent on the value of
            [feeType](https://raw.githubusercontent.com)
          type: string
          example: additional info for bank account fee
        additionalInfo:
          description: Display text providing more information on the fee
          type: string
          example: additional info on the fee
        additionalInfoUri:
          description: Link to a web page with more information on this fee
          type: string
          example: https://bankfee.example.com.au
          x-cds-type: URIString
        discounts:
          description: An optional list of discounts to this fee that may be available
          type: array
          items:
            $ref: '#/components/schemas/BankingProductDiscount'
      x-conditional:
        - additionalValue
        - amount
        - balanceRate
        - transactionRate
        - accruedRate
    BankingProductDiscount:
      type: object
      required:
        - description
        - discountType
      properties:
        description:
          description: Description of the discount
          type: string
          example: loyalty discount
        discountType:
          description: >-
            The type of discount. See the next section for an overview of valid
            values and their meaning
          type: string
          example: ELIGIBILITY_ONLY
          enum:
            - BALANCE
            - DEPOSITS
            - ELIGIBILITY_ONLY
            - FEE_CAP
            - PAYMENTS
        amount:
          description: >-
            Dollar value of the discount. One of amount, balanceRate,
            transactionRate, accruedRate and feeRate is mandatory.
          type: string
          example: 10
          x-cds-type: AmountString
        balanceRate:
          description: >-
            A discount rate calculated based on a proportion of the balance.
            Note that the currency of the fee discount is expected to be the
            same as the currency of the fee itself. One of amount, balanceRate,
            transactionRate, accruedRate and feeRate is mandatory. Unless noted
            in additionalInfo, assumes the application and calculation frequency
            are the same as the corresponding fee
          type: string
          example: 0.05
          x-cds-type: RateString
        transactionRate:
          description: >-
            A discount rate calculated based on a proportion of a transaction.
            Note that the currency of the fee discount is expected to be the
            same as the currency of the fee itself. One of amount, balanceRate,
            transactionRate, accruedRate and feeRate is mandatory
          type: string
          example: 0.05
          x-cds-type: RateString
        accruedRate:
          description: >-
            A discount rate calculated based on a proportion of the calculated
            interest accrued on the account. Note that the currency of the fee
            discount is expected to be the same as the currency of the fee
            itself. One of amount, balanceRate, transactionRate, accruedRate and
            feeRate is mandatory. Unless noted in additionalInfo, assumes the
            application and calculation frequency are the same as the
            corresponding fee
          type: string
          example: 0.05
          x-cds-type: RateString
        feeRate:
          description: >-
            A discount rate calculated based on a proportion of the fee to which
            this discount is attached. Note that the currency of the fee
            discount is expected to be the same as the currency of the fee
            itself. One of amount, balanceRate, transactionRate, accruedRate and
            feeRate is mandatory. Unless noted in additionalInfo, assumes the
            application and calculation frequency are the same as the
            corresponding fee
          type: string
          example: 0.05
          x-cds-type: RateString
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [discountType](https://raw.githubusercontent.com) specified. Whether
            mandatory or not is dependent on the value of
            [discountType](https://raw.githubusercontent.com)
          type: string
          example: extra discount
        additionalInfo:
          description: Display text providing more information on the discount
          type: string
          example: addition info for discount
        additionalInfoUri:
          description: Link to a web page with more information on this discount
          type: string
          example: https://productdiscount.example.com.au
          x-cds-type: URIString
        eligibility:
          description: >-
            Eligibility constraints that apply to this discount. Mandatory if
            ``discountType`` is ``ELIGIBILITY_ONLY``.
          type: array
          items:
            $ref: '#/components/schemas/BankingProductDiscountEligibility'
      x-conditional:
        - accruedRate
        - additionalValue
        - amount
        - balanceRate
        - eligibility
        - feeRate
        - transactionRate
    BankingProductDiscountEligibility:
      type: object
      required:
        - discountEligibilityType
      properties:
        discountEligibilityType:
          description: The type of the specific eligibility constraint for a discount
          type: string
          example: STAFF
          enum:
            - BUSINESS
            - EMPLOYMENT_STATUS
            - INTRODUCTORY
            - MAX_AGE
            - MIN_AGE
            - MIN_INCOME
            - MIN_TURNOVER
            - NATURAL_PERSON
            - PENSION_RECIPIENT
            - RESIDENCY_STATUS
            - STAFF
            - STUDENT
            - OTHER
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [discountEligibilityType](https://raw.githubusercontent.com)
            specified. Whether mandatory or not is dependent on the value of
            [discountEligibilityType](https://raw.githubusercontent.com)
          type: string
          example: additional value for discount eligibility
        additionalInfo:
          description: >-
            Display text providing more information on this eligibility
            constraint. Whether mandatory or not is dependent on the value of
            [discountEligibilityType](https://raw.githubusercontent.com)
          type: string
          example: additional info for discount eligibility
        additionalInfoUri:
          description: >-
            Link to a web page with more information on this eligibility
            constraint
          type: string
          example: https://discounteligibility.example.com.au
          x-cds-type: URIString
      x-conditional:
        - additionalInfo
        - additionalValue
    BankingProductDepositRate:
      type: object
      required:
        - depositRateType
        - rate
      properties:
        depositRateType:
          description: >-
            The type of rate (base, bonus, etc). See the next section for an
            overview of valid values and their meaning
          type: string
          example: FIXED
          enum:
            - BONUS
            - BUNDLE_BONUS
            - FIXED
            - FLOATING
            - INTRODUCTORY
            - MARKET_LINKED
            - VARIABLE
        rate:
          description: The rate to be applied
          type: string
          example: 2.5
          x-cds-type: RateString
        calculationFrequency:
          description: >-
            The period after which the rate is applied to the balance to
            calculate the amount due for the period. Calculation of the amount
            is often daily (as balances may change) but accumulated until the
            total amount is 'applied' to the account (see applicationFrequency).
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          example: P1M
          x-cds-type: ExternalRef
        applicationFrequency:
          description: >-
            The period after which the calculated amount(s) (see
            calculationFrequency) are 'applied' (i.e. debited or credited) to
            the account. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          example: P1M
          x-cds-type: ExternalRef
        tiers:
          description: Rate tiers applicable for this rate
          type: array
          items:
            $ref: '#/components/schemas/BankingProductRateTierV3'
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [depositRateType](https://raw.githubusercontent.com) specified.
            Whether mandatory or not is dependent on the value of
            [depositRateType](https://raw.githubusercontent.com)
          type: string
          example: additional value for deposit rate
        additionalInfo:
          description: Display text providing more information on the rate
          type: string
          example: additional info for deposit rate
        additionalInfoUri:
          description: Link to a web page with more information on this rate
          type: string
          example: https://depositrate.example.com.au
          x-cds-type: URIString
      x-conditional:
        - additionalValue
    BankingProductLendingRateV2:
      type: object
      required:
        - lendingRateType
        - rate
      properties:
        lendingRateType:
          description: >-
            The type of rate (fixed, variable, etc). See the next section for an
            overview of valid values and their meaning
          type: string
          example: CASH_ADVANCE
          enum:
            - BUNDLE_DISCOUNT_FIXED
            - BUNDLE_DISCOUNT_VARIABLE
            - CASH_ADVANCE
            - DISCOUNT
            - FLOATING
            - INTRODUCTORY
            - MARKET_LINKED
            - PENALTY
            - PURCHASE
            - VARIABLE
            - FIXED
        rate:
          description: The rate to be applied
          type: string
          example: 3.99
          x-cds-type: RateString
        comparisonRate:
          description: A comparison rate equivalent for this rate
          type: string
          example: 4.99
          x-cds-type: RateString
        calculationFrequency:
          description: >-
            The period after which the rate is applied to the balance to
            calculate the amount due for the period. Calculation of the amount
            is often daily (as balances may change) but accumulated until the
            total amount is 'applied' to the account (see applicationFrequency).
            Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          example: P1M
          x-cds-type: ExternalRef
        applicationFrequency:
          description: >-
            The period after which the calculated amount(s) (see
            calculationFrequency) are 'applied' (i.e. debited or credited) to
            the account. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          example: P1M
          x-cds-type: ExternalRef
        interestPaymentDue:
          description: >-
            When loan payments are due to be paid within each period. The
            investment benefit of earlier payments affect the rate that can be
            offered
          type: string
          example: IN_ARREARS
          enum:
            - IN_ADVANCE
            - IN_ARREARS
        repaymentType:
          description: >-
            Options in place for repayments. If absent, the lending rate is
            applicable to all repayment types
          type: string
          example: INTEREST_ONLY
          enum:
            - INTEREST_ONLY
            - PRINCIPAL_AND_INTEREST
        loanPurpose:
          description: >-
            The reason for taking out the loan. If absent, the lending rate is
            applicable to all loan purposes
          type: string
          example: OWNER_OCCUPIED
          enum:
            - OWNER_OCCUPIED
            - INVESTMENT
        tiers:
          description: Rate tiers applicable for this rate
          type: array
          items:
            $ref: '#/components/schemas/BankingProductRateTierV3'
        additionalValue:
          description: >-
            Generic field containing additional information relevant to the
            [lendingRateType](https://raw.githubusercontent.com) specified.
            Whether mandatory or not is dependent on the value of
            [lendingRateType](https://raw.githubusercontent.com)
          type: string
          example: additional value for lending
        additionalInfo:
          description: Display text providing more information on the rate.
          type: string
          example: additional info for lending
        additionalInfoUri:
          description: Link to a web page with more information on this rate
          type: string
          example: https://lendingrate.example.com.au
          x-cds-type: URIString
      x-conditional:
        - additionalValue
    BankingProductRateTierV3:
      description: Defines the criteria and conditions for which a rate applies
      type: object
      required:
        - minimumValue
        - name
        - unitOfMeasure
      properties:
        name:
          description: A display name for the tier
          type: string
          example: basic
        unitOfMeasure:
          description: >-
            The unit of measure that applies to the tierValueMinimum and
            tierValueMaximum values e.g. a **DOLLAR** amount. **PERCENT** (in
            the case of loan-to-value ratio or LVR). Tier term period
            representing a discrete number of **MONTH**'s or **DAY**'s (in the
            case of term deposit tiers)
          type: string
          example: MONTH
          enum:
            - DOLLAR
            - PERCENT
            - DAY
            - MONTH
        minimumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the lower bound of
            the tier. The tier should be inclusive of this value
          type: number
          example: 1
          x-cds-type: Number
        maximumValue:
          description: >-
            The number of tierUnitOfMeasure units that form the upper bound of
            the tier or band. For a tier with a discrete value (as opposed to a
            range of values e.g. 1 month) this must be the same as
            tierValueMinimum. Where this is the same as the tierValueMinimum
            value of the next-higher tier the referenced tier should be
            exclusive of this value. For example a term deposit of 2 months
            falls into the upper tier of the following tiers: (1 â€“ 2 months, 2
            â€“ 3 months). If absent the tier's range has no upper bound.
          type: number
          example: 3
          x-cds-type: Number
        rateApplicationMethod:
          description: >-
            The method used to calculate the amount to be applied using one or
            more tiers. A single rate may be applied to the entire balance or
            each applicable tier rate is applied to the portion of the balance
            that falls into that tier (referred to as 'bands' or 'steps')
          type: string
          example: PER_TIER
          enum:
            - PER_TIER
            - WHOLE_BALANCE
        applicabilityConditions:
          $ref: '#/components/schemas/BankingProductRateCondition'
        additionalInfo:
          description: Display text providing more information on the rate tier.
          type: string
          example: additional info for tier
        additionalInfoUri:
          description: Link to a web page with more information on this rate tier
          type: string
          example: https://tier.example.com.au
          x-cds-type: URIString
    BankingProductRateCondition:
      description: Defines a condition for the applicability of a tiered rate
      type: object
      properties:
        additionalInfo:
          description: Display text providing more information on the condition
          type: string
          example: additional info for rate condition
        additionalInfoUri:
          description: Link to a web page with more information on this condition
          type: string
          example: https://ratecondition.example.com.au
          x-cds-type: URIString
    ResponseBankingAccountList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingAccountList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingAccount:
      type: object
      required:
        - accountId
        - displayName
        - maskedNumber
        - productCategory
        - productName
      properties:
        accountId:
          description: >-
            A unique ID of the account adhering to the standards for ID
            permanence
          type: string
          example: d9e75179-104f-47cf-9d29-18284222bab0
          x-cds-type: ASCIIString
        creationDate:
          description: Date that the account was created (if known)
          type: string
          example: '2012-12-25'
          x-cds-type: DateString
        displayName:
          description: >-
            The display name of the account as defined by the bank. This should
            not incorporate account numbers or PANs. If it does the values
            should be masked according to the rules of the MaskedAccountString
            common type.
          type: string
          example: savings
        nickname:
          description: A customer supplied nick name for the account
          type: string
          example: sav
        openStatus:
          description: >-
            Open or closed status for the account. If not present then OPEN is
            assumed
          type: string
          example: OPEN
          default: OPEN
          enum:
            - OPEN
            - CLOSED
        isOwned:
          description: >-
            Flag indicating that the customer associated with the authorisation
            is an owner of the account. Does not indicate sole ownership,
            however. If not present then 'true' is assumed
          type: boolean
          example: true
          default: true
          x-cds-type: Boolean
        accountOwnership:
          description: >-
            Value indicating the number of customers that have ownership of the
            account, according to the data holder's definition of account
            ownership. Does not indicate that all account owners are eligible
            consumers
          type: string
          enum:
            - UNKNOWN
            - ONE_PARTY
            - TWO_PARTY
            - MANY_PARTY
            - OTHER
        maskedNumber:
          description: >-
            A masked version of the account. Whether BSB/Account Number, Credit
            Card PAN or another number
          type: string
          example: xxx-xxx xxxxx1234
          x-cds-type: MaskedAccountString
        productCategory:
          $ref: '#/components/schemas/BankingProductCategory'
        productName:
          description: >-
            The unique identifier of the account as defined by the data holder
            (akin to model number for the account)
          type: string
          example: Savings
    ResponseBankingAccountById:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingAccountDetail'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingAccountDetail:
      allOf:
        - $ref: '#/components/schemas/BankingAccount'
        - type: object
          properties:
            bsb:
              description: >-
                The unmasked BSB for the account. Is expected to be formatted as
                digits only with leading zeros included and no punctuation or
                spaces
              type: string
              example: 62000
            accountNumber:
              description: >-
                The unmasked account number for the account. Should not be
                supplied if the account number is a PAN requiring PCI
                compliance. Is expected to be formatted as digits only with
                leading zeros included and no punctuation or spaces
              example: 12345678
              type: string
            bundleName:
              description: >-
                Optional field to indicate if this account is part of a bundle
                that is providing additional benefit for to the customer
              type: string
              example: ''
            specificAccountUType:
              description: The type of structure to present account specific fields.
              type: string
              example: termDeposit
              enum:
                - termDeposit
                - creditCard
                - loan
            termDeposit:
              type: array
              items:
                $ref: '#/components/schemas/BankingTermDepositAccount'
            creditCard:
              $ref: '#/components/schemas/BankingCreditCardAccount'
            loan:
              $ref: '#/components/schemas/BankingLoanAccount'
            depositRate:
              description: >-
                current rate to calculate interest earned being applied to
                deposit balances as it stands at the time of the API call
              type: string
              example: 2.2
              x-cds-type: RateString
            lendingRate:
              description: >-
                The current rate to calculate interest payable being applied to
                lending balances as it stands at the time of the API call
              type: string
              example: 3.19
              x-cds-type: RateString
            depositRates:
              description: >-
                Fully described deposit rates for this account based on the
                equivalent structure in Product Reference
              type: array
              items:
                $ref: '#/components/schemas/BankingProductDepositRate'
            lendingRates:
              description: >-
                Fully described deposit rates for this account based on the
                equivalent structure in Product Reference
              type: array
              items:
                $ref: '#/components/schemas/BankingProductLendingRateV2'
            features:
              description: >-
                Array of features of the account based on the equivalent
                structure in Product Reference with the following additional
                field
              type: array
              items:
                $ref: '#/components/schemas/BankingAccountProductFeature'
            fees:
              description: >-
                Fees and charges applicable to the account based on the
                equivalent structure in Product Reference
              type: array
              items:
                $ref: '#/components/schemas/BankingProductFee'
            addresses:
              description: The addresses for the account to be used for correspondence
              type: array
              items:
                $ref: '#/components/schemas/CommonPhysicalAddress'
          x-conditional:
            - termDeposit
            - creditCard
            - loan
    BankingAccountProductFeature:
      description: >-
        Array of features of the account based on the equivalent structure in
        Product Reference with the following additional field
      type: object
      allOf:
        - $ref: '#/components/schemas/BankingProductFeature'
        - type: object
          properties:
            isActivated:
              description: >-
                True if the feature is already activated and false if the
                feature is available for activation. Defaults to true if absent.
                (note this is an additional field appended to the feature object
                defined in the Product Reference payload)
              type: boolean
              default: true
              example: true
              x-cds-type: Boolean
    BankingTermDepositAccount:
      type: object
      required:
        - lodgementDate
        - maturityDate
        - maturityInstructions
      properties:
        lodgementDate:
          description: The lodgement date of the original deposit
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
        maturityDate:
          description: Maturity date for the term deposit
          type: string
          example: '2018-12-30'
          x-cds-type: DateString
        maturityAmount:
          description: >-
            Amount to be paid upon maturity. If absent it implies the amount to
            paid is variable and cannot currently be calculated
          type: string
          example: '10000.00'
          x-cds-type: AmountString
        maturityCurrency:
          description: If absent assumes AUD
          type: string
          example: AUD
          x-cds-type: CurrencyString
        maturityInstructions:
          description: >-
            Current instructions on action to be taken at maturity. This
            includes default actions that may be specified in the terms and
            conditions for the product e.g. roll-over to the same term and
            frequency of interest payments
          type: string
          example: ROLLED_OVER
          enum:
            - ROLLED_OVER
            - PAID_OUT_AT_MATURITY
            - HOLD_ON_MATURITY
    BankingCreditCardAccount:
      type: object
      required:
        - minPaymentAmount
        - paymentDueAmount
        - paymentDueDate
      properties:
        minPaymentAmount:
          description: The minimum payment amount due for the next card payment
          type: string
          example: 99.99
          x-cds-type: AmountString
        paymentDueAmount:
          description: The amount due for the next card payment
          type: string
          example: 2999.99
          x-cds-type: AmountString
        paymentCurrency:
          description: If absent assumes AUD
          type: string
          example: AUD
          x-cds-type: CurrencyString
        paymentDueDate:
          description: Date that the next payment for the card is due
          type: string
          example: '2021-01-01'
          x-cds-type: DateString
    BankingLoanAccount:
      type: object
      required:
        - loanEndDate
        - nextInstalmentDate
        - repaymentFrequency
      properties:
        originalStartDate:
          description: Optional original start date for the loan
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
        originalLoanAmount:
          description: Optional original loan value
          type: string
          example: 300000
          x-cds-type: AmountString
        originalLoanCurrency:
          description: If absent assumes AUD
          type: string
          example: AUD
          x-cds-type: CurrencyString
        loanEndDate:
          description: Date that the loan is due to be repaid in full
          type: string
          example: '2047-12-30'
          x-cds-type: DateString
        nextInstalmentDate:
          description: Next date that an instalment is required
          type: string
          example: '2021-02-28'
          x-cds-type: DateString
        minInstalmentAmount:
          description: Minimum amount of next instalment
          type: string
          example: 999.99
          x-cds-type: AmountString
        minInstalmentCurrency:
          description: If absent assumes AUD
          type: string
          example: AUD
          x-cds-type: CurrencyString
        maxRedraw:
          description: >-
            Maximum amount of funds that can be redrawn. If not present redraw
            is not available even if the feature exists for the account
          type: string
          example: 9999.99
          x-cds-type: AmountString
        maxRedrawCurrency:
          description: If absent assumes AUD
          type: string
          example: AUD
          x-cds-type: CurrencyString
        minRedraw:
          description: Minimum redraw amount
          type: string
          example: 1000
          x-cds-type: AmountString
        minRedrawCurrency:
          description: If absent assumes AUD
          type: string
          example: AUD
          x-cds-type: CurrencyString
        offsetAccountEnabled:
          description: >-
            Set to true if one or more offset accounts are configured for this
            loan account
          type: boolean
          example: true
          x-cds-type: Boolean
        offsetAccountIds:
          description: >-
            The accountIDs of the configured offset accounts attached to this
            loan. Only offset accounts that can be accessed under the current
            authorisation should be included. It is expected behaviour that
            offsetAccountEnabled is set to true but the offsetAccountIds field
            is absent or empty. This represents a situation where an offset
            account exists but details can not be accessed under the current
            authorisation
          type: array
          items:
            example:
              - f632041c-d7c8-4679-a165-aa406cd62b13
            type: string
            x-cds-type: ASCIIString
        repaymentType:
          description: >-
            Options in place for repayments. If absent defaults to
            PRINCIPAL_AND_INTEREST
          type: string
          example: INTEREST_ONLY
          default: PRINCIPAL_AND_INTEREST
          enum:
            - INTEREST_ONLY
            - PRINCIPAL_AND_INTEREST
        repaymentFrequency:
          description: >-
            The expected or required repayment frequency. Formatted according to
            [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          example: P1M
          x-cds-type: ExternalRef
    ResponseBankingTransactionList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingTransactionList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingTransaction:
      type: object
      required:
        - accountId
        - amount
        - description
        - isDetailAvailable
        - reference
        - status
        - type
      properties:
        description:
          description: The transaction description as applied by the financial institution
          example: banking fee
          type: string
        accountId:
          description: ID of the account for which transactions are provided
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        transactionId:
          description: >-
            A unique ID of the transaction adhering to the standards for ID
            permanence.  This is mandatory (through hashing if necessary) unless
            there are specific and justifiable technical reasons why a
            transaction cannot be uniquely identified for a particular account
            type
          type: string
          example: f111111-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        isDetailAvailable:
          description: >-
            True if extended information is available using the transaction
            detail end point. False if extended data is not available
          type: boolean
          example: true
          x-cds-type: Boolean
        type:
          description: The type of the transaction
          type: string
          example: FEE
          enum:
            - DIRECT_DEBIT
            - FEE
            - INTEREST_CHARGED
            - INTEREST_PAID
            - PAYMENT
            - TRANSFER_OUTGOING
            - TRANSFER_INCOMING
            - OTHER
        status:
          description: >-
            Status of the transaction whether pending or posted. Note that there
            is currently no provision in the standards to guarantee the ability
            to correlate a pending transaction with an associated posted
            transaction
          type: string
          example: POSTED
          enum:
            - PENDING
            - POSTED
        postingDateTime:
          description: >-
            The time the transaction was posted. This field is Mandatory if the
            transaction has status POSTED.  This is the time that appears on a
            standard statement. DateTimeString can be found at
            https://consumerdatastandardsaustralia.github.io/standards/#common-field-types
          type: string
          example: '2021-01-12T15:43:00.121Z'
          x-cds-type: DateTimeString
        valueDateTime:
          description: >-
            Date and time at which assets become available to the account owner
            in case of a credit entry, or cease to be available to the account
            owner in case of a debit transaction entry
          type: string
          example: '2021-01-12T15:43:00.121Z'
          x-cds-type: DateTimeString
        executionDateTime:
          description: >-
            The time the transaction was executed by the originating customer,
            if available
          type: string
          example: '2021-01-12T15:43:00.121Z'
          x-cds-type: DateTimeString
        amount:
          description: >-
            The value of the transaction. Negative values mean money was
            outgoing from the account
          type: string
          example: 100
          x-cds-type: AmountString
        currency:
          description: The currency for the transaction amount. AUD assumed if not present
          type: string
          example: AUD
          x-cds-type: CurrencyString
        reference:
          description: >-
            The reference for the transaction provided by the originating
            institution. Empty string if no data provided
          type: string
          example: overdraw
        merchantName:
          description: Name of the merchant for an outgoing payment to a merchant
          type: string
          example: McDonald
        merchantCategoryCode:
          description: >-
            The merchant category code (or MCC) for an outgoing payment to a
            merchant
          type: string
          example: RANDOM
        billerCode:
          description: BPAY Biller Code for the transaction (if available)
          type: string
          example: 234213427384923
        billerName:
          description: Name of the BPAY biller for the transaction (if available)
          type: string
          example: test biller
        crn:
          description: BPAY CRN for the transaction (if available)
          type: string
          example: 1234asdf1
        apcaNumber:
          description: >-
            6 Digit APCA number for the initiating institution. The field is
            fixed-width and padded with leading zeros if applicable.
          type: string
          example: 111111
      x-conditional:
        - transactionId
        - postingDateTime
    ResponseBankingTransactionById:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingTransactionDetail'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingTransactionDetail:
      allOf:
        - $ref: '#/components/schemas/BankingTransaction'
        - type: object
          required:
            - extendedData
          properties:
            extendedData:
              $ref: '#/components/schemas/BankingTransactionDetail_extendedData'
    ResponseBankingAccountsBalanceList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingAccountsBalanceList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    ResponseBankingAccountsBalanceById:
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingBalance'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingBalance:
      type: object
      required:
        - accountId
        - availableBalance
        - currentBalance
      properties:
        accountId:
          description: >-
            A unique ID of the account adhering to the standards for ID
            permanence
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        currentBalance:
          description: >-
            The balance of the account at this time. Should align to the balance
            available via other channels such as Internet Banking. Assumed to be
            negative if the customer has money owing
          type: string
          example: '10000.00'
          x-cds-type: AmountString
        availableBalance:
          description: >-
            Balance representing the amount of funds available for transfer.
            Assumed to be zero or positive
          type: string
          example: '10000.00'
          x-cds-type: AmountString
        creditLimit:
          description: >-
            Object representing the maximum amount of credit that is available
            for this account. Assumed to be zero if absent
          type: string
          example: '10000.00'
          x-cds-type: AmountString
        amortisedLimit:
          description: >-
            Object representing the available limit amortised according to
            payment schedule. Assumed to be zero if absent
          type: string
          example: '0.00'
          x-cds-type: AmountString
        currency:
          description: The currency for the balance amounts. If absent assumed to be AUD
          type: string
          example: AUD
          x-cds-type: CurrencyString
        purses:
          description: >-
            Optional array of balances for the account in other currencies.
            Included to support accounts that support multi-currency purses such
            as Travel Cards
          type: array
          items:
            $ref: '#/components/schemas/BankingBalancePurse'
    BankingBalancePurse:
      type: object
      required:
        - amount
      properties:
        amount:
          description: The balance available for this additional currency purse
          type: string
          example: '1000.00'
          x-cds-type: AmountString
        currency:
          description: The currency for the purse
          type: string
          example: AUD
          x-cds-type: CurrencyString
    ResponseBankingPayeeList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingPayeeList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    ResponseBankingPayeeById:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/BankingPayeeDetail'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    BankingPayee:
      type: object
      required:
        - nickname
        - payeeId
        - type
      properties:
        description:
          description: A description of the payee provided by the customer
          type: string
          example: share riding
        payeeId:
          description: ID of the payee adhering to the rules of ID permanence
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        nickname:
          description: >-
            The short display name of the payee as provided by the customer.
            Where a customer has not provided a nickname, a display name derived
            by the bank for the payee consistent with existing digital banking
            channels
          type: string
          example: friend A
        type:
          description: >-
            The type of payee. DOMESTIC means a registered payee for domestic
            payments including NPP. INTERNATIONAL means a registered payee for
            international payments. BILLER means a registered payee for BPAY
          type: string
          example: DOMESTIC
          enum:
            - BILLER
            - DIGITAL_WALLET
            - DOMESTIC
            - INTERNATIONAL
        creationDate:
          description: The date the payee was created by the customer
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
    BankingPayeeDetail:
      allOf:
        - $ref: '#/components/schemas/BankingPayee'
        - type: object
          required:
            - payeeUType
          properties:
            payeeUType:
              description: Type of object included that describes the payee in detail
              type: string
              example: biller
              enum:
                - biller
                - digitalWallet
                - domestic
                - international
            biller:
              $ref: '#/components/schemas/BankingBillerPayee'
            digitalWallet:
              $ref: '#/components/schemas/BankingDigitalWalletPayee'
            domestic:
              $ref: '#/components/schemas/BankingDomesticPayee'
            international:
              $ref: '#/components/schemas/BankingInternationalPayee'
          x-conditional:
            - biller
            - digitalWallet
            - domestic
            - international
    BankingDigitalWalletPayee:
      required:
        - identifier
        - name
        - provider
        - type
      type: object
      properties:
        name:
          description: >-
            The name assigned to the digital wallet by the owner of the wallet,
            else the display name provided by the digital wallet provider
          type: string
        identifier:
          description: The identifier of the digital wallet (dependent on type)
          type: string
        type:
          description: The type of the digital wallet identifier
          type: string
          enum:
            - EMAIL
            - CONTACT_NAME
            - TELEPHONE
        provider:
          description: The provider of the digital wallet
          type: string
          enum:
            - PAYPAL_AU
            - OTHER
    BankingDomesticPayee:
      type: object
      required:
        - payeeAccountUType
      properties:
        payeeAccountUType:
          description: >-
            Type of account object included. Valid values are: **account** A
            standard Australian account defined by BSB/Account Number. **card**
            A credit or charge card to pay to (note that PANs are masked).
            **payId** A PayID recognised by NPP
          type: string
          example: card
          enum:
            - account
            - card
            - payId
        account:
          $ref: '#/components/schemas/BankingDomesticPayeeAccount'
        card:
          $ref: '#/components/schemas/BankingDomesticPayeeCard'
        payId:
          $ref: '#/components/schemas/BankingDomesticPayeePayId'
      x-conditional:
        - account
        - card
        - payId
    BankingDomesticPayeeAccount:
      type: object
      required:
        - accountNumber
        - bsb
      properties:
        accountName:
          description: Name of the account to pay to
          type: string
          example: friendA
        bsb:
          description: BSB of the account to pay to
          type: string
          example: 60000
        accountNumber:
          description: Number of the account to pay to
          example: 12345678
          type: string
    BankingDomesticPayeeCard:
      type: object
      required:
        - cardNumber
      properties:
        cardNumber:
          description: Name of the account to pay to
          type: string
          example: xxxx xxxx xxxx 1234
          x-cds-type: MaskedPANString
    BankingDomesticPayeePayId:
      type: object
      required:
        - identifier
        - type
      properties:
        name:
          description: The name assigned to the PayID by the owner of the PayID
          type: string
          example: friend B
        identifier:
          description: The identifier of the PayID (dependent on type)
          type: string
          example: 400000000
        type:
          description: The type of the PayID
          type: string
          example: TELEPHONE
          enum:
            - ABN
            - EMAIL
            - ORG_IDENTIFIER
            - TELEPHONE
    BankingBillerPayee:
      type: object
      required:
        - billerCode
        - billerName
      properties:
        billerCode:
          description: BPAY Biller Code of the Biller
          type: string
          example: 1231412141
        crn:
          description: >-
            BPAY CRN of the Biller. If the contents of the CRN match the format
            of a Credit Card PAN then it should be masked using the rules
            applicable for the MaskedPANString common type
          type: string
          example: MaskedPANString
        billerName:
          description: Name of the Biller
          type: string
          example: BillerA
      x-conditional:
        - crn
    BankingInternationalPayee:
      type: object
      required:
        - bankDetails
        - beneficiaryDetails
      properties:
        beneficiaryDetails:
          $ref: '#/components/schemas/BankingInternationalPayee_beneficiaryDetails'
        bankDetails:
          $ref: '#/components/schemas/BankingInternationalPayee_bankDetails'
    ResponseBankingDirectDebitAuthorisationList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: >-
            #/components/schemas/ResponseBankingDirectDebitAuthorisationList_data
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingDirectDebit:
      type: object
      required:
        - accountId
        - authorisedEntity
      properties:
        accountId:
          description: >-
            A unique ID of the account adhering to the standards for ID
            permanence.
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        authorisedEntity:
          $ref: '#/components/schemas/BankingAuthorisedEntity'
        lastDebitDateTime:
          description: >-
            The date and time of the last debit executed under this
            authorisation
          type: string
          example: '1997-01-12T15:43:00.121Z'
          x-cds-type: DateTimeString
        lastDebitAmount:
          description: The amount of the last debit executed under this authorisation
          type: string
          example: 100
          x-cds-type: AmountString
    BankingAuthorisedEntity:
      type: object
      properties:
        description:
          description: >-
            Description of the authorised entity derived from previously
            executed direct debits
          type: string
          example: broadband fee
        financialInstitution:
          description: >-
            Name of the financial institution through which the direct debit
            will be executed. Is required unless the payment is made via a
            credit card scheme
          type: string
          example: CBA
        abn:
          description: Australian Business Number for the authorised entity
          type: string
          example: 12341256
        acn:
          description: Australian Company Number for the authorised entity
          type: string
          example: 234123512521
        arbn:
          description: Australian Registered Body Number for the authorised entity
          type: string
          example: 241234213424
    ResponseBankingScheduledPaymentsList:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/ResponseBankingScheduledPaymentsList_data'
        links:
          $ref: '#/components/schemas/LinksPaginated'
        meta:
          $ref: '#/components/schemas/MetaPaginated'
    BankingScheduledPayment:
      type: object
      required:
        - from
        - payeeReference
        - payerReference
        - paymentSet
        - recurrence
        - scheduledPaymentId
        - status
      properties:
        scheduledPaymentId:
          description: >-
            A unique ID of the scheduled payment adhering to the standards for
            ID permanence
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        nickname:
          description: The short display name of the payee as provided by the customer
          type: string
          example: council
        payerReference:
          description: >-
            The reference for the transaction that will be used by the
            originating institution for the purposes of constructing a statement
            narrative on the payer's account. Empty string if no data provided
          type: string
          example: 1231234142
        payeeReference:
          description: >-
            The reference for the transaction that will be provided by the
            originating institution. Empty string if no data provided
          type: string
          example: 234134241234
        status:
          description: >-
            Indicates whether the schedule is currently active. The value SKIP
            is equivalent to ACTIVE except that the customer has requested the
            next normal occurrence to be skipped.
          type: string
          example: ACTIVE
          enum:
            - ACTIVE
            - INACTIVE
            - SKIP
        from:
          $ref: '#/components/schemas/BankingScheduledPaymentFrom'
        paymentSet:
          type: array
          items:
            $ref: '#/components/schemas/BankingScheduledPaymentSet'
        recurrence:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrence'
    BankingScheduledPaymentSet:
      description: >-
        The set of payment amounts and destination accounts for this payment
        accommodating multi-part payments. A single entry indicates a simple
        payment with one destination account. Must have at least one entry
      required:
        - to
      properties:
        to:
          $ref: '#/components/schemas/BankingScheduledPaymentTo'
        isAmountCalculated:
          description: >-
            Flag indicating whether the amount of the payment is calculated
            based on the context of the event. For instance a payment to reduce
            the balance of a credit card to zero. If absent then false is
            assumed
          type: boolean
          example: true
          x-cds-type: Boolean
        amount:
          description: >-
            The amount of the next payment if known. Mandatory unless the
            isAmountCalculated field is set to true. Must be zero or positive if
            present
          type: string
          example: 123
          x-cds-type: AmountString
        currency:
          description: The currency for the payment. AUD assumed if not present
          type: string
          example: AUD
          x-cds-type: CurrencyString
      x-conditional:
        - amount
    BankingScheduledPaymentTo:
      description: >-
        Object containing details of the destination of the payment. Used to
        specify a variety of payment destination types
      type: object
      required:
        - toUType
      properties:
        toUType:
          description: >-
            The type of object provided that specifies the destination of the
            funds for the payment.
          type: string
          example: payeeId
          enum:
            - accountId
            - payeeId
            - domestic
            - biller
            - international
        accountId:
          description: >-
            Present if toUType is set to accountId. Indicates that the payment
            is to another account that is accessible under the current consent
          type: string
          example: ''
          x-cds-type: ASCIIString
        payeeId:
          description: >-
            Present if toUType is set to payeeId. Indicates that the payment is
            to registered payee that can be accessed using the payee end point.
            If the Bank Payees scope has not been consented to then a payeeId
            should not be provided and the full payee details should be provided
            instead
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
        domestic:
          $ref: '#/components/schemas/BankingDomesticPayee'
        biller:
          $ref: '#/components/schemas/BankingBillerPayee'
        international:
          $ref: '#/components/schemas/BankingInternationalPayee'
      x-conditional:
        - accountId
        - payeeId
        - domestic
        - biller
        - international
    BankingScheduledPaymentFrom:
      description: >-
        Object containing details of the source of the payment. Currently only
        specifies an account ID but provided as an object to facilitate future
        extensibility and consistency with the to object
      type: object
      required:
        - accountId
      properties:
        accountId:
          description: ID of the account that is the source of funds for the payment
          type: string
          example: f632041c-d7c8-4679-a165-aa406cd62b13
          x-cds-type: ASCIIString
    BankingScheduledPaymentRecurrence:
      description: Object containing the detail of the schedule for the payment
      type: object
      required:
        - recurrenceUType
      properties:
        nextPaymentDate:
          description: The date of the next payment under the recurrence schedule
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
        recurrenceUType:
          description: The type of recurrence used to define the schedule
          type: string
          example: onceOff
          enum:
            - onceOff
            - intervalSchedule
            - lastWeekDay
            - eventBased
        onceOff:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceOnceOff'
        intervalSchedule:
          $ref: >-
            #/components/schemas/BankingScheduledPaymentRecurrenceIntervalSchedule
        lastWeekDay:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceLastWeekday'
        eventBased:
          $ref: '#/components/schemas/BankingScheduledPaymentRecurrenceEventBased'
      x-conditional:
        - onceOff
        - intervalSchedule
        - lastWeekDay
        - eventBased
    BankingScheduledPaymentRecurrenceOnceOff:
      description: >-
        Indicates that the payment is a once off payment on a specific future
        date. Mandatory if recurrenceUType is set to onceOff
      type: object
      required:
        - paymentDate
      properties:
        paymentDate:
          description: The scheduled date for the once off payment
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
    BankingScheduledPaymentRecurrenceIntervalSchedule:
      description: >-
        Indicates that the schedule of payments is defined by a series of
        intervals. Mandatory if recurrenceUType is set to intervalSchedule
      type: object
      required:
        - intervals
      properties:
        finalPaymentDate:
          description: >-
            The limit date after which no more payments should be made using
            this schedule. If both finalPaymentDate and paymentsRemaining are
            present then payments will stop according to the most constraining
            value. If neither field is present the payments will continue
            indefinitely
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
        paymentsRemaining:
          description: >-
            Indicates the number of payments remaining in the schedule. If both
            finalPaymentDate and paymentsRemaining are present then payments
            will stop according to the most constraining value, If neither field
            is present the payments will continue indefinitely
          type: integer
          example: 12
          x-cds-type: PositiveInteger
        nonBusinessDayTreatment:
          description: >-
            Enumerated field giving the treatment where a scheduled payment date
            is not a business day. If absent assumed to be ON.<br/>**AFTER** -
            If a scheduled payment date is a non-business day the payment will
            be made on the first business day after the scheduled payment
            date.<br/>**BEFORE** - If a scheduled payment date is a non-business
            day the payment will be made on the first business day before the
            scheduled payment date.<br/>**ON** - If a scheduled payment date is
            a non-business day the payment will be made on that day
            regardless.<br/>**ONLY** - Payments only occur on business days. If
            a scheduled payment date is a non-business day the payment will be
            ignored
          type: string
          example: AFTER
          default: 'ON'
          enum:
            - AFTER
            - BEFORE
            - 'ON'
            - ONLY
        intervals:
          description: >-
            An array of interval objects defining the payment schedule.  Each
            entry in the array is additive, in that it adds payments to the
            overall payment schedule.  If multiple intervals result in a payment
            on the same day then only one payment will be made. Must have at
            least one entry
          type: array
          items:
            $ref: '#/components/schemas/BankingScheduledPaymentInterval'
    BankingScheduledPaymentInterval:
      type: object
      required:
        - interval
      properties:
        interval:
          description: >-
            An interval for the payment. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) 
            (excludes recurrence syntax) with components less than a day in
            length ignored. This duration defines the period between payments
            starting with nextPaymentDate
          type: string
          example: P1D
          x-cds-type: ExternalRef
        dayInInterval:
          description: >-
            Uses an interval to define the ordinal day within the interval
            defined by the interval field on which the payment occurs. If the
            resulting duration is 0 days in length or larger than the number of
            days in the interval then the payment will occur on the last day of
            the interval. A duration of 1 day indicates the first day of the
            interval. If absent the assumed value is P1D. Formatted according to
            [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax) with components less than a day in
            length ignored. The first day of a week is considered to be Monday.
          type: string
          example: ''
          x-cds-type: ExternalRef
    BankingScheduledPaymentRecurrenceLastWeekday:
      description: >-
        Indicates that the schedule of payments is defined according to the last
        occurrence of a specific weekday in an interval. Mandatory if
        recurrenceUType is set to lastWeekDay
      type: object
      required:
        - interval
        - lastWeekDay
      properties:
        finalPaymentDate:
          description: >-
            The limit date after which no more payments should be made using
            this schedule. If both finalPaymentDate and paymentsRemaining are
            present then payments will stop according to the most constraining
            value. If neither field is present the payments will continue
            indefinitely
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
        paymentsRemaining:
          description: >-
            Indicates the number of payments remaining in the schedule. If both
            finalPaymentDate and paymentsRemaining are present then payments
            will stop according to the most constraining value. If neither field
            is present the payments will continue indefinitely
          type: integer
          example: 12
          x-cds-type: PositiveInteger
        interval:
          description: >-
            The interval for the payment. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax) with components less than a day in
            length ignored. This duration defines the period between payments
            starting with nextPaymentDate
          type: string
          example: P1D
          x-cds-type: ExternalRef
        lastWeekDay:
          description: >-
            The weekDay specified. The payment will occur on the last occurrence
            of this weekday in the interval.
          type: string
          example: MON
          enum:
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
            - SUN
        nonBusinessDayTreatment:
          description: >-
            Enumerated field giving the treatment where a scheduled payment date
            is not a business day. If absent assumed to be ON.<br/>**AFTER** -
            If a scheduled payment date is a non-business day the payment will
            be made on the first business day after the scheduled payment
            date.<br/>**BEFORE** - If a scheduled payment date is a non-business
            day the payment will be made on the first business day before the
            scheduled payment date.<br/>**ON** - If a scheduled payment date is
            a non-business day the payment will be made on that day
            regardless.<br/>**ONLY** - Payments only occur on business days. If
            a scheduled payment date is a non-business day the payment will be
            ignored
          type: string
          example: AFTER
          default: 'ON'
          enum:
            - AFTER
            - BEFORE
            - 'ON'
            - ONLY
    BankingScheduledPaymentRecurrenceEventBased:
      description: >-
        Indicates that the schedule of payments is defined according to an
        external event that cannot be predetermined. Mandatory if
        recurrenceUType is set to eventBased
      type: object
      required:
        - description
      properties:
        description:
          description: >-
            Description of the event and conditions that will result in the
            payment. Expected to be formatted for display to a customer
          type: string
          example: pay every Thursday
    ResponseCommonDiscoveryStatus:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseCommonDiscoveryStatus_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    ResponseDiscoveryOutagesList:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseDiscoveryOutagesList_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
    DiscoveryOutage:
      type: object
      required:
        - duration
        - explanation
        - outageTime
      properties:
        dataHolderBrandId:
          type: string
          example: 55b3299a-3e50-48a2-a190-cca263ccaba5
        outageTime:
          description: Date and time that the outage is scheduled to begin
          type: string
          example: '1997-01-12T15:43:00.121Z'
          x-cds-type: DateTimeString
        duration:
          description: >-
            Planned duration of the outage. Formatted according to [ISO 8601
            Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations)
            (excludes recurrence syntax)
          type: string
          example: P1D
          x-cds-type: ExternalRef
        isPartial:
          description: >-
            Flag that indicates, if present and set to true, that the outage is
            only partial meaning that only a subset of normally available end
            points will be affected by the outage
          type: boolean
          example: true
          x-cds-type: Boolean
        explanation:
          description: >-
            Provides an explanation of the current outage that can be displayed
            to an end customer
          type: string
          example: power outage
    ResponseCommonCustomer:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseCommonCustomer_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      x-conditional:
        - person
        - organisation
    ResponseCommonCustomerDetail:
      type: object
      required:
        - data
        - links
      properties:
        data:
          $ref: '#/components/schemas/ResponseCommonCustomerDetail_data'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      x-conditional:
        - person
        - organisation
    CommonPerson:
      type: object
      required:
        - lastName
        - middleNames
      properties:
        lastUpdateTime:
          description: >-
            The date and time that this record was last updated by the
            customer.  If no update has occurred then this date should reflect
            the initial creation date for the data
          type: string
          example: '1997-01-12T15:43:00.121Z'
          x-cds-type: DateTimeString
        firstName:
          description: >-
            For people with single names this field need not be present.  The
            single name should be in the lastName field
          type: string
          example: John
        lastName:
          description: For people with single names the single name should be in this field
          type: string
          example: Doe
        middleNames:
          description: Field is mandatory but array may be empty
          type: array
          example: []
          items:
            type: string
        prefix:
          description: >-
            Also known as title or salutation.  The prefix to the name (e.g. Mr,
            Mrs, Ms, Miss, Sir, etc)
          type: string
          example: Mr
        suffix:
          description: Used for a trailing suffix to the name (e.g. Jr)
          type: string
          example: Jr
        occupationCode:
          description: >-
            Value is a valid [ANZSCO](http://www.abs.gov.au/ANZSCO) Standard
            Occupation classification code. If the occupation code held by the
            data holder is not one of the supported
            [ANZSCO](http://www.abs.gov.au/ANZSCO) versions, then it must not be
            supplied.
          type: string
          example: 233211
          x-cds-type: ExternalRef
        occupationCodeVersion:
          description: >-
            The applicable **[[ANZSCO]](https://raw.githubusercontent.com)**
            release version of the occupation code provided. Mandatory if an
            ``occupationCode`` is supplied. If ``occupationCode`` is supplied
            but ``occupationCodeVersion`` is absent, default is
            ``ANZSCO_1220.0_2013_V1.2``
          type: string
          default: ANZSCO_1220.0_2013_V1.2
          enum:
            - ANZSCO_1220.0_2006_V1.0
            - ANZSCO_1220.0_2006_V1.1
            - ANZSCO_1220.0_2013_V1.2
            - ANZSCO_1220.0_2013_V1.3
    CommonPersonDetail:
      allOf:
        - $ref: '#/components/schemas/CommonPerson'
        - type: object
          required:
            - emailAddresses
            - phoneNumbers
            - physicalAddresses
          properties:
            phoneNumbers:
              description: Array is mandatory but may be empty if no phone numbers are held
              type: array
              items:
                $ref: '#/components/schemas/CommonPhoneNumber'
            emailAddresses:
              description: May be empty
              type: array
              items:
                $ref: '#/components/schemas/CommonEmailAddress'
            physicalAddresses:
              description: >-
                Must contain at least one address. One and only one address may
                have the purpose of REGISTERED. Zero or one, and no more than
                one, record may have the purpose of MAIL. If zero then the
                REGISTERED address is to be used for mail
              type: array
              items:
                $ref: '#/components/schemas/CommonPhysicalAddressWithPurpose'
    CommonOrganisation:
      type: object
      required:
        - agentLastName
        - agentRole
        - businessName
        - organisationType
      properties:
        lastUpdateTime:
          description: >-
            The date and time that this record was last updated by the customer.
            If no update has occurred then this date should reflect the initial
            creation date for the data
          type: string
          example: '1997-01-12T15:43:00.121Z'
          x-cds-type: DateTimeString
        agentFirstName:
          description: >-
            The first name of the individual providing access on behalf of the
            organisation. For people with single names this field need not be
            present.  The single name should be in the lastName field
          type: string
          example: Jane
        agentLastName:
          description: >-
            The last name of the individual providing access on behalf of the
            organisation. For people with single names the single name should be
            in this field
          type: string
          example: Doe
        agentRole:
          description: >-
            The role of the individual identified as the agent who is providing
            authorisation.  Expected to be used for display. Default to
            Unspecified if the role is not known
          type: string
          example: manager
        businessName:
          description: Name of the organisation
          type: string
          example: bumpty
        legalName:
          description: Legal name, if different to the business name
          type: string
          example: dumpty
        shortName:
          description: Short name used for communication, if different to the business name
          type: string
          example: bdumpty
        abn:
          description: Australian Business Number for the organisation
          type: string
          example: 2342342342
        acn:
          description: >-
            Australian Company Number for the organisation. Required only if an
            ACN is applicable for the organisation type
          type: string
          example: 13241234234
        isACNCRegistered:
          description: >-
            True if registered with the ACNC.  False if not. Absent or null if
            not confirmed.
          type: boolean
          example: true
          x-cds-type: Boolean
        industryCode:
          description: >-
            A valid [ANZSIC](http://www.abs.gov.au/ANZSIC) code for the
            organisation. If the industry code held by the data holder is not
            one of the supported [ANZSIC](http://www.abs.gov.au/ANZSIC)
            versions, then it must not be supplied.
          type: string
          example: MINING
          x-cds-type: ExternalRef
        industryCodeVersion:
          description: >-
            The applicable [ANZSIC](http://www.abs.gov.au/ANZSIC) release
            version of the industry code provided. Should only be supplied if
            ``industryCode`` is also supplied. If ``industryCode`` is supplied
            but ``industryCodeVersion`` is absent, default is
            ``ANZSIC_1292.0_2006_V2.0``
          type: string
          default: ANZSIC_1292.0_2006_V2.0
          enum:
            - ANZSIC_1292.0_2006_V1.0
            - ANZSIC_1292.0_2006_V2.0
        organisationType:
          description: Legal organisation type
          type: string
          example: COMPANY
          enum:
            - COMPANY
            - GOVERNMENT_ENTITY
            - PARTNERSHIP
            - SOLE_TRADER
            - TRUST
            - OTHER
        registeredCountry:
          description: >-
            Enumeration with values from [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            codes.  Assumed to be AUS if absent
          type: string
          example: AUS
          x-cds-type: ExternalRef
        establishmentDate:
          description: The date the organisation described was established
          type: string
          example: '2017-12-31'
          x-cds-type: DateString
    CommonOrganisationDetail:
      allOf:
        - $ref: '#/components/schemas/CommonOrganisation'
        - type: object
          required:
            - physicalAddresses
          properties:
            physicalAddresses:
              description: >-
                Must contain at least one address. One and only one address may
                have the purpose of REGISTERED. Zero or one, and no more than
                one, record may have the purpose of MAIL. If zero then the
                REGISTERED address is to be used for mail
              type: array
              items:
                $ref: '#/components/schemas/CommonPhysicalAddressWithPurpose'
    CommonPhoneNumber:
      type: object
      required:
        - fullNumber
        - number
        - purpose
      properties:
        isPreferred:
          description: >-
            May be true for one and only one entry to indicate the preferred
            phone number. Assumed to be 'false' if not present
          type: boolean
          example: true
          x-cds-type: Boolean
        purpose:
          description: The purpose of the number as specified by the customer
          type: string
          example: HOME
          enum:
            - MOBILE
            - HOME
            - INTERNATIONAL
            - WORK
            - OTHER
            - UNSPECIFIED
        countryCode:
          description: If absent, assumed to be Australia (+61). The + should be included
          type: string
          example: 61
        areaCode:
          description: >-
            Required for non Mobile Phones, if field is present and refers to
            Australian code - the leading 0 should be omitted.
          type: string
          example: ''
        number:
          description: The actual phone number, with leading zeros as appropriate
          type: string
          example: 400000000
        extension:
          description: An extension number (if applicable)
          type: string
          example: ''
        fullNumber:
          description: >-
            Fully formatted phone number with country code, area code, number
            and extension incorporated. Formatted according to section 5.1.4. of
            [RFC 3966](https://www.ietf.org/rfc/rfc3966.txt)
          type: string
          example: 61400000000
          x-cds-type: ExternalRef
      x-conditional:
        - areaCode
    CommonEmailAddress:
      type: object
      required:
        - address
        - purpose
      properties:
        isPreferred:
          description: >-
            May be true for one and only one email record in the collection.
            Denotes the default email address
          type: boolean
          example: true
          x-cds-type: Boolean
        purpose:
          description: >-
            The purpose for the email, as specified by the customer
            (Enumeration)
          type: string
          example: WORK
          enum:
            - WORK
            - HOME
            - OTHER
            - UNSPECIFIED
        address:
          description: >-
            A correctly formatted email address, as defined by the addr_spec
            format in [RFC 5322](https://www.ietf.org/rfc/rfc5322.txt)
          type: string
          example: 1 Pitt ST SYDNEY NSW 2000
          x-cds-type: ExternalRef
    CommonPhysicalAddressWithPurpose:
      allOf:
        - $ref: '#/components/schemas/CommonPhysicalAddress'
        - type: object
          required:
            - purpose
          properties:
            purpose:
              description: >-
                Enumeration of values indicating the purpose of the physical
                address
              type: string
              example: WORK
              enum:
                - MAIL
                - PHYSICAL
                - REGISTERED
                - WORK
                - OTHER
    CommonPhysicalAddress:
      type: object
      required:
        - addressUType
      properties:
        addressUType:
          description: The type of address object present
          type: string
          example: simple
          enum:
            - simple
            - paf
        simple:
          $ref: '#/components/schemas/CommonSimpleAddress'
        paf:
          $ref: '#/components/schemas/CommonPAFAddress'
      x-conditional:
        - simple
        - paf
    CommonSimpleAddress:
      type: object
      required:
        - addressLine1
        - city
        - state
      properties:
        mailingName:
          description: >-
            Name of the individual or business formatted for inclusion in an
            address used for physical mail
          type: string
          example: John Doe
        addressLine1:
          description: First line of the standard address object
          type: string
          example: 1 Pitt ST
        addressLine2:
          description: Second line of the standard address object
          type: string
          example: ''
        addressLine3:
          description: Third line of the standard address object
          type: string
          example: ''
        postcode:
          description: Mandatory for Australian addresses
          type: string
          example: 2000
        city:
          description: Name of the city or locality
          type: string
          example: SYDNEY
        state:
          description: >-
            Free text if the country is not Australia. If country is Australia
            then must be one of the values defined by the [State Type
            Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
            in the PAF file format. NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
          type: string
          example: NSW
        country:
          description: >-
            A valid [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            code. Australia (AUS) is assumed if country is not present.
          type: string
          example: AUS
          default: AUS
          x-cds-type: ExternalRef
      x-conditional:
        - postcode
    CommonPAFAddress:
      description: >-
        Australian address formatted according to the file format defined by the
        [PAF file
        format](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf)
      type: object
      required:
        - localityName
        - postcode
        - state
      properties:
        dpid:
          description: >-
            Unique identifier for an address as defined by Australia Post.  Also
            known as Delivery Point Identifier
          type: string
          example: 17160
        thoroughfareNumber1:
          description: >-
            Thoroughfare number for a property (first number in a property
            ranged address)
          type: integer
          example: 16
          x-cds-type: PositiveInteger
        thoroughfareNumber1Suffix:
          description: >-
            Suffix for the thoroughfare number. Only relevant is
            thoroughfareNumber1 is populated
          type: string
          example: ''
        thoroughfareNumber2:
          description: >-
            Second thoroughfare number (only used if the property has a ranged
            address eg 23-25)
          type: integer
          example: 19
          x-cds-type: PositiveInteger
        thoroughfareNumber2Suffix:
          description: >-
            Suffix for the second thoroughfare number. Only relevant is
            thoroughfareNumber2 is populated
          type: string
          example: ''
        flatUnitType:
          description: Type of flat or unit for the address
          type: string
          example: unit
        flatUnitNumber:
          description: Unit number (including suffix, if applicable)
          type: string
          example: 10
        floorLevelType:
          description: Type of floor or level for the address
          type: string
          example: level
        floorLevelNumber:
          description: Floor or level number (including alpha characters)
          type: string
          example: 3
        lotNumber:
          description: Allotment number for the address
          type: string
          example: 10
        buildingName1:
          description: Building/Property name 1
          type: string
          example: summer
        buildingName2:
          description: Building/Property name 2
          type: string
          example: ''
        streetName:
          description: The name of the street
          type: string
          example: Long
        streetType:
          description: >-
            The street type. Valid enumeration defined by Australia Post PAF
            code file
          type: string
          example: ST
        streetSuffix:
          description: >-
            The street type suffix. Valid enumeration defined by Australia Post
            PAF code file
          type: string
        postalDeliveryType:
          description: >-
            Postal delivery type. (eg. PO BOX). Valid enumeration defined by
            Australia Post PAF code file
          type: string
          example: PO BOX
        postalDeliveryNumber:
          description: Postal delivery number if the address is a postal delivery type
          type: integer
          example: 15
          x-cds-type: PositiveInteger
        postalDeliveryNumberPrefix:
          description: Postal delivery number prefix related to the postal delivery number
          type: string
          example: ''
        postalDeliveryNumberSuffix:
          description: Postal delivery number suffix related to the postal delivery number
          type: string
          example: ''
        localityName:
          description: Full name of locality
          type: string
          example: Sydney
        postcode:
          description: Postcode for the locality
          type: string
          example: 2000
        state:
          description: >-
            State in which the address belongs. Valid enumeration defined by
            Australia Post PAF code file [State Type
            Abbreviation](https://auspost.com.au/content/dam/auspost_corp/media/documents/australia-post-data-guide.pdf).
            NSW, QLD, VIC, NT, WA, SA, TAS, ACT, AAT
          type: string
          example: NSW
    Links:
      type: object
      required:
        - self
      properties:
        self:
          description: Fully qualified link that generated the current response document
          type: string
          example: https://self.example.com.au
          x-cds-type: URIString
    Meta:
      type: object
      required:
        - cdr_arrangement_id
      properties:
        cdr_arrangement_id:
          description: Used to identify the consent arrangement for returned customer data
          type: string
          example: 998621c8-1e1d-44ca-826e-754b910e5697
        fapiInteractionId:
          description: Used to identify and verify the data-holder request
          type: string
          example: 2144eaaa-0b5b-4a97-a131-f42f2084ee45
        debug:
          description: troubleshooting infor for CTS testing
          type: object
          example: {}
    LinksPaginated:
      type: object
      required:
        - self
      properties:
        self:
          description: >-
            Fully qualified link that generated the current response document.
            https://self.example.com.au will be converted to
            https://self.example.com.au?page=1&page-size=25
          type: string
          example: https://self.example.com.au?page=3&page-size=25
          x-cds-type: URIString
        first:
          description: >-
            URI to the first page of this set. Mandatory if this response is not
            the first page
          type: string
          example: https://self.example.com.au?page=1&page-size=25
          x-cds-type: URIString
        prev:
          description: >-
            URI to the previous page of this set. Mandatory if this response is
            not the first page
          type: string
          example: https://self.example.com.au?page=2&page-size=25
          x-cds-type: URIString
        next:
          description: >-
            URI to the next page of this set. Mandatory if this response is not
            the last page
          type: string
          example: https://self.example.com.au?page=4&page-size=25
          x-cds-type: URIString
        last:
          description: >-
            URI to the last page of this set. Mandatory if this response is not
            the last page
          type: string
          example: https://self.example.com.au?page=15&page-size=25
          x-cds-type: URIString
      x-conditional:
        - prev
        - next
        - first
        - last
    MetaPaginated:
      type: object
      required:
        - totalPages
        - totalRecords
        - cdr_arrangement_id
      properties:
        totalRecords:
          description: >-
            The total number of records in the full set. See
            [pagination](https://raw.githubusercontent.com).
          type: integer
          example: 581
          x-cds-type: NaturalNumber
        totalPages:
          description: >-
            The total number of pages in the full set. See
            [pagination](https://raw.githubusercontent.com).
          type: integer
          example: 24
          x-cds-type: NaturalNumber
        isQueryParamUnsupported:
          description: indicates whether text parameter is supported or not
          type: boolean
          example: true
        cdr_arrangement_id:
          description: Used to identify the consent arrangement for returned customer data
          type: string
          example: 998621c8-1e1d-44ca-826e-754b910e5697
        fapiInteractionId:
          description: Used to identify and verify the data-holder request
          type: string
          example: 2144eaaa-0b5b-4a97-a131-f42f2084ee45
        debug:
          description: troubleshooting info
          type: object
          example: {}
    ResponseErrorList:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseErrorList_errors'
    BankingProductCategory:
      description: >-
        The category to which a product or account belongs. See
        [here](https://raw.githubusercontent.com) for more details
      type: string
      example: LEASES
      enum:
        - BUSINESS_LOANS
        - CRED_AND_CHRG_CARDS
        - LEASES
        - MARGIN_LOANS
        - OVERDRAFTS
        - PERS_LOANS
        - REGULATED_TRUST_ACCOUNTS
        - RESIDENTIAL_MORTGAGES
        - TERM_DEPOSITS
        - TRADE_FINANCE
        - TRAVEL_CARDS
        - TRANS_AND_SAVINGS_ACCOUNTS
    ResponseBankingAccountList_data:
      required:
        - accounts
      properties:
        accounts:
          description: >-
            The list of accounts returned. If the filter results in an empty set
            then this array may have no records
          type: array
          items:
            $ref: '#/components/schemas/BankingAccount'
    ResponseBankingTransactionList_data:
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/BankingTransaction'
    BankingTransactionDetail_extendedData_x2p101Payload:
      required:
        - extendedDescription
      properties:
        extendedDescription:
          description: >-
            An extended string description. Only present if specified by the
            extensionUType field
          type: string
          example: extended descirption of a transaction
        endToEndId:
          description: An end to end ID for the payment created at initiation
          type: string
          example: end-to-endid-for-payment
        purposeCode:
          description: >-
            Purpose of the payment.  Format is defined by NPP standards for the
            x2p1.01 overlay service
          type: string
          example: payment-purpose-npp
    BankingTransactionDetail_extendedData:
      required:
        - service
      properties:
        payer:
          description: Label of the originating payer. Mandatory for inbound payment
          type: string
          example: Jane Doe
        payee:
          description: >-
            Label of the target PayID.  Mandatory for an outbound payment. The
            name assigned to the BSB/Account Number or PayID (by the owner of
            the PayID)
          type: string
          example: John Doe
        extensionUType:
          description: >-
            Optional extended data provided specific to transaction originated
            via NPP
          type: string
          example: x2p101Payload
          enum:
            - x2p101Payload
        x2p101Payload:
          $ref: >-
            #/components/schemas/BankingTransactionDetail_extendedData_x2p101Payload
        service:
          description: >-
            Identifier of the applicable overlay service. Valid values are:
            X2P1.01
          type: string
          example: X2P1.01
          enum:
            - X2P1.01
    ResponseBankingAccountsBalanceList_data:
      required:
        - balances
      properties:
        balances:
          description: The list of balances returned
          type: array
          items:
            $ref: '#/components/schemas/BankingBalance'
    ResponseBankingPayeeList_data:
      required:
        - payees
      properties:
        payees:
          description: The list of payees returned
          type: array
          items:
            $ref: '#/components/schemas/BankingPayee'
    BankingInternationalPayee_beneficiaryDetails:
      required:
        - country
      properties:
        name:
          description: Name of the beneficiary
          type: string
          example: John Doe
        country:
          description: >-
            Country where the beneficiary resides. A valid [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            code
          type: string
          example: AUS
          x-cds-type: ExternalRef
        message:
          description: Response message for the payment
          type: string
          example: Stay safe 2020
    BankingInternationalPayee_bankDetails_bankAddress:
      required:
        - address
        - name
      properties:
        name:
          description: Name of the recipient Bank
          type: string
          example: Jane Doe
        address:
          description: Address of the recipient Bank
          type: string
          example: 1 Pitt ST Sydney NSW 2000
    BankingInternationalPayee_bankDetails:
      required:
        - accountNumber
        - country
      properties:
        country:
          description: >-
            Country of the recipient institution. A valid [ISO 3166
            Alpha-3](https://www.iso.org/iso-3166-country-codes.html) country
            code
          type: string
          example: AUS
          x-cds-type: ExternalRef
        accountNumber:
          description: Account Targeted for payment
          type: string
          example: 12345678
        bankAddress:
          $ref: >-
            #/components/schemas/BankingInternationalPayee_bankDetails_bankAddress
        beneficiaryBankBIC:
          description: >-
            Swift bank code.  Aligns with standard [ISO
            9362](https://www.iso.org/standard/60390.html)
          type: string
          example: CTBAAU2S
          x-cds-type: ExternalRef
        fedWireNumber:
          description: Number for Fedwire payment (Federal Reserve Wire Network)
          type: string
          example: fed-wire-number
        sortCode:
          description: Sort code used for account identification in some jurisdictions
          type: string
          example: sort-code
        chipNumber:
          description: Number for the Clearing House Interbank Payments System
          type: string
          example: clearing-house-interbank-number
        routingNumber:
          description: International bank routing number
          type: string
          example: international-bank-routing-number
        legalEntityIdentifier:
          description: >-
            The legal entity identifier (LEI) for the beneficiary.  Aligns with
            [ISO 17442](https://www.iso.org/standard/59771.html)
          type: string
          example: legal-entity-id
          x-cds-type: ExternalRef
    ResponseBankingDirectDebitAuthorisationList_data:
      required:
        - directDebitAuthorisations
      properties:
        directDebitAuthorisations:
          description: The list of authorisations returned
          type: array
          items:
            $ref: '#/components/schemas/BankingDirectDebit'
    ResponseBankingScheduledPaymentsList_data:
      required:
        - scheduledPayments
      properties:
        scheduledPayments:
          description: The list of scheduled payments to return
          type: array
          items:
            $ref: '#/components/schemas/BankingScheduledPayment'
    ResponseCommonDiscoveryStatus_data:
      required:
        - status
        - updateTime
      properties:
        status:
          description: >-
            Enumeration with values. OK (implementation is fully functional).
            PARTIAL_FAILURE (one or more end points are unexpectedly
            unavailable). UNAVAILABLE (the full implementation is unexpectedly
            unavailable). SCHEDULED_OUTAGE (an advertised outage is in effect)
          type: string
          example: SCHEDULED_OUTAGE
          enum:
            - OK
            - PARTIAL_FAILURE
            - SCHEDULED_OUTAGE
            - UNAVAILABLE
        explanation:
          description: >-
            Provides an explanation of the current outage that can be displayed
            to an end customer. Mandatory if the status property is any value
            other than OK
          type: string
          example: maintenance
        detectionTime:
          description: >-
            The date and time that the current outage was detected. Should only
            be present if the status property is PARTIAL_FAILURE or UNAVAILABLE
          type: string
          example: '2020-01-12T03:00:00.121Z'
          x-cds-type: DateTimeString
        expectedResolutionTime:
          description: >-
            The date and time that full service is expected to resume (if
            known). Should not be present if the status property has a value of
            OK.
          type: string
          example: '2020-01-12T06:00:00.121Z'
          x-cds-type: DateTimeString
        updateTime:
          description: >-
            The date and time that this status was last updated by the Data
            Holder.
          type: string
          example: '2020-01-12T04:00:00.121Z'
          x-cds-type: DateTimeString
    ResponseDiscoveryOutagesList_data:
      required:
        - outages
      properties:
        outages:
          description: >-
            List of scheduled outages. Property is mandatory but may contain and
            empty list if no outages are scheduled
          type: array
          items:
            $ref: '#/components/schemas/DiscoveryOutage'
    ResponseCommonCustomer_data:
      required:
        - customerUType
      properties:
        customerUType:
          description: The type of customer object that is present
          type: string
          example: person
          enum:
            - person
            - organisation
        person:
          $ref: '#/components/schemas/CommonPerson'
        organisation:
          $ref: '#/components/schemas/CommonOrganisation'
    ResponseCommonCustomerDetail_data:
      required:
        - customerUType
      properties:
        customerUType:
          description: The type of customer object that is present
          type: string
          example: person
          enum:
            - person
            - organisation
        person:
          $ref: '#/components/schemas/CommonPersonDetail'
        organisation:
          $ref: '#/components/schemas/CommonOrganisationDetail'
    ResponseErrorList_errors:
      required:
        - code
        - detail
        - title
      properties:
        title:
          description: 'Title of invalid parameter or payload property '
          type: string
          example: Invalid account id
        code:
          description: Error code
          type: string
          example: '0001'
        detail:
          description: ID of the account not found
          type: string
          example: invalid format for account id
        meta:
          description: Optional additional data for specific error types
          type: object
          properties: {}
security:
  - bearerAuth:
      - adr:banking:read
